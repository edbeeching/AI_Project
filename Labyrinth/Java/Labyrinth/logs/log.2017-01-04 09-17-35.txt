2017-01-04 09:17:35 GameBoard.<init>()	Hello World!
2017-01-04 09:17:35 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-04 09:17:35 QueryProlog.initialise()	setup(h3/h3). suceeded
2017-01-04 09:17:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:35 GameBoard.setupBoardFromString()	Board created
2017-01-04 09:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:35 GameBoard.initialise()	[chest, keys, helmet, gold, candle]
2017-01-04 09:17:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:35 GameBoard.initialise()	[sword, ring, book, gem, fairy]
2017-01-04 09:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:35 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-04 09:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	null
2017-01-04 09:17:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:36 AI_Player.update()	update
2017-01-04 09:17:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:36 AI_Player.update()	Search took661ms
2017-01-04 09:17:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:36 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-04 09:17:36 AI_Player.update()		111,	1010,	1010,	101,	1100,	11,	1101
2017-01-04 09:17:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 09:17:36 AI_Player.update()		1100,	1010,	101,	1100,	1010,	101,	101
2017-01-04 09:17:36 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	110,	1011
2017-01-04 09:17:36 AI_Player.update()		101,	1001,	1110,	1010,	1110,	1110,	1010
2017-01-04 09:17:36 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1101,	1001
2017-01-04 09:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:36 AI_Player.update()	update
2017-01-04 09:17:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:17:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:37 AI_Player.update()	update
2017-01-04 09:17:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:37 AI_Player.update()	Search took226ms
2017-01-04 09:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:37 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-04 09:17:37 AI_Player.update()		111,	1010,	1010,	101,	1100,	11,	1101
2017-01-04 09:17:37 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-04 09:17:37 AI_Player.update()		1100,	1010,	101,	1110,	1010,	101,	101
2017-01-04 09:17:37 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-04 09:17:37 AI_Player.update()		101,	1001,	1110,	101,	1110,	1110,	1010
2017-01-04 09:17:37 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1101,	1001
2017-01-04 09:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:37 AI_Player.update()	update
2017-01-04 09:17:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:17:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:37 AI_Player.update()	update
2017-01-04 09:17:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:37 AI_Player.update()	Search took530ms
2017-01-04 09:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:37 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-04 09:17:38 AI_Player.update()		111,	1010,	1010,	101,	1100,	11,	1101
2017-01-04 09:17:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 09:17:38 AI_Player.update()		1100,	1010,	101,	1100,	1010,	101,	101
2017-01-04 09:17:38 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	110,	1011
2017-01-04 09:17:38 AI_Player.update()		101,	1001,	1110,	1010,	1110,	1110,	1010
2017-01-04 09:17:38 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1101,	1001
2017-01-04 09:17:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:17:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:38 AI_Player.update()	update
2017-01-04 09:17:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:17:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:38 AI_Player.update()	update
2017-01-04 09:17:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:39 AI_Player.update()	Search took1207ms
2017-01-04 09:17:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:39 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-04 09:17:39 AI_Player.update()		111,	1010,	1010,	101,	1100,	11,	1101
2017-01-04 09:17:39 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-04 09:17:39 AI_Player.update()		1100,	1010,	101,	1110,	1010,	101,	101
2017-01-04 09:17:39 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-04 09:17:39 AI_Player.update()		101,	1001,	1110,	101,	1110,	1110,	1010
2017-01-04 09:17:39 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1101,	1001
2017-01-04 09:17:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:17:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:39 AI_Player.update()	update
2017-01-04 09:17:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:17:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:39 AI_Player.update()	update
2017-01-04 09:17:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:40 AI_Player.update()	Search took406ms
2017-01-04 09:17:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:40 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-04 09:17:40 AI_Player.update()		111,	1010,	1010,	101,	1100,	11,	1101
2017-01-04 09:17:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 09:17:40 AI_Player.update()		1100,	1010,	101,	1100,	1010,	101,	101
2017-01-04 09:17:40 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	110,	1011
2017-01-04 09:17:40 AI_Player.update()		101,	1001,	1110,	1010,	1110,	1110,	1010
2017-01-04 09:17:40 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1101,	1001
2017-01-04 09:17:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:17:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:40 AI_Player.update()	update
2017-01-04 09:17:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:17:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:40 AI_Player.update()	update
2017-01-04 09:17:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:40 AI_Player.update()	Search took231ms
2017-01-04 09:17:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:40 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-04 09:17:40 AI_Player.update()		111,	1010,	1010,	101,	1100,	11,	1101
2017-01-04 09:17:40 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-04 09:17:40 AI_Player.update()		1100,	1010,	101,	1110,	1010,	101,	101
2017-01-04 09:17:40 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-04 09:17:40 AI_Player.update()		101,	1001,	1110,	101,	1110,	1110,	1010
2017-01-04 09:17:40 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1101,	1001
2017-01-04 09:17:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:17:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:40 AI_Player.update()	update
2017-01-04 09:17:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:40 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:17:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:40 AI_Player.update()	update
2017-01-04 09:17:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:41 AI_Player.update()	Search took472ms
2017-01-04 09:17:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:41 AI_Player.update()		110,	1101,	111,	101,	111,	11,	11
2017-01-04 09:17:41 AI_Player.update()		111,	1010,	1010,	101,	1100,	1010,	1101
2017-01-04 09:17:41 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-04 09:17:41 AI_Player.update()		1100,	1010,	101,	1110,	1010,	110,	101
2017-01-04 09:17:41 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1110,	1011
2017-01-04 09:17:41 AI_Player.update()		101,	1001,	1110,	101,	1110,	1101,	1010
2017-01-04 09:17:41 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-04 09:17:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:17:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:41 AI_Player.update()	update
2017-01-04 09:17:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:17:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:41 AI_Player.update()	update
2017-01-04 09:17:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:42 AI_Player.update()	Search took440ms
2017-01-04 09:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:42 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 09:17:42 AI_Player.update()		111,	1010,	1010,	101,	1100,	1010,	1101
2017-01-04 09:17:42 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-04 09:17:42 AI_Player.update()		1100,	1011,	101,	1110,	1010,	110,	101
2017-01-04 09:17:42 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-04 09:17:42 AI_Player.update()		101,	1101,	1110,	101,	1110,	1101,	1010
2017-01-04 09:17:42 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-04 09:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:42 AI_Player.update()	update
2017-01-04 09:17:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:17:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:42 AI_Player.update()	update
2017-01-04 09:17:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:42 AI_Player.update()	Search took606ms
2017-01-04 09:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:42 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 09:17:42 AI_Player.update()		111,	1010,	1010,	101,	1100,	1010,	1101
2017-01-04 09:17:42 AI_Player.update()		1110,	1011,	1110,	1100,	111,	101,	1011
2017-01-04 09:17:42 AI_Player.update()		1100,	1001,	101,	1110,	1010,	110,	101
2017-01-04 09:17:42 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1110,	1011
2017-01-04 09:17:42 AI_Player.update()		101,	1101,	1110,	101,	1110,	1101,	1010
2017-01-04 09:17:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 09:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:42 AI_Player.update()	update
2017-01-04 09:17:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:17:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:43 AI_Player.update()	update
2017-01-04 09:17:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:43 AI_Player.update()	Search took285ms
2017-01-04 09:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:43 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 09:17:43 AI_Player.update()		111,	1010,	1010,	1100,	1100,	1010,	1101
2017-01-04 09:17:43 AI_Player.update()		1110,	1011,	1110,	1110,	111,	101,	1011
2017-01-04 09:17:43 AI_Player.update()		1100,	1001,	101,	1010,	1010,	110,	101
2017-01-04 09:17:43 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:17:43 AI_Player.update()		101,	1101,	1110,	11,	1110,	1101,	1010
2017-01-04 09:17:43 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:43 AI_Player.update()	update
2017-01-04 09:17:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:43 AI_Player.update()	update
2017-01-04 09:17:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:44 AI_Player.update()	Search took926ms
2017-01-04 09:17:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:44 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 09:17:44 AI_Player.update()		111,	1010,	1010,	1100,	1100,	1010,	1101
2017-01-04 09:17:44 AI_Player.update()		1110,	1011,	1110,	1110,	111,	101,	1011
2017-01-04 09:17:44 AI_Player.update()		1001,	101,	1010,	1010,	110,	101,	1100
2017-01-04 09:17:44 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:17:44 AI_Player.update()		101,	1101,	1110,	11,	1110,	1101,	1010
2017-01-04 09:17:44 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:17:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:44 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:44 AI_Player.update()	update
2017-01-04 09:17:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:44 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:44 AI_Player.update()	update
2017-01-04 09:17:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:45 AI_Player.update()	Search took1075ms
2017-01-04 09:17:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:45 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 09:17:45 AI_Player.update()		111,	1011,	1010,	1100,	1100,	1010,	1101
2017-01-04 09:17:45 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-04 09:17:45 AI_Player.update()		1001,	1101,	1010,	1010,	110,	101,	1100
2017-01-04 09:17:45 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:17:45 AI_Player.update()		101,	1010,	1110,	11,	1110,	1101,	1010
2017-01-04 09:17:45 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:17:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:45 AI_Player.update()	update
2017-01-04 09:17:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:17:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:46 AI_Player.update()	update
2017-01-04 09:17:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:46 AI_Player.update()	Search took735ms
2017-01-04 09:17:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:46 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 09:17:46 AI_Player.update()		1011,	1010,	1100,	1100,	1010,	1101,	111
2017-01-04 09:17:46 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-04 09:17:46 AI_Player.update()		1001,	1101,	1010,	1010,	110,	101,	1100
2017-01-04 09:17:46 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:17:46 AI_Player.update()		101,	1010,	1110,	11,	1110,	1101,	1010
2017-01-04 09:17:46 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:17:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:46 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:17:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:46 AI_Player.update()	update
2017-01-04 09:17:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:46 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:17:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:46 AI_Player.update()	update
2017-01-04 09:17:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:47 AI_Player.update()	Search took720ms
2017-01-04 09:17:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:47 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 09:17:47 AI_Player.update()		1011,	1010,	1100,	1100,	1010,	1101,	111
2017-01-04 09:17:47 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-04 09:17:47 AI_Player.update()		1100,	1001,	1101,	1010,	1010,	110,	101
2017-01-04 09:17:47 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:17:47 AI_Player.update()		101,	1010,	1110,	11,	1110,	1101,	1010
2017-01-04 09:17:47 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:47 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:17:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:47 AI_Player.update()	update
2017-01-04 09:17:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:47 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:17:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:47 AI_Player.update()	update
2017-01-04 09:17:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:47 AI_Player.update()	Search took69ms
2017-01-04 09:17:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:47 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 09:17:47 AI_Player.update()		1010,	1100,	1100,	1010,	1101,	111,	1011
2017-01-04 09:17:47 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-04 09:17:47 AI_Player.update()		1100,	1001,	1101,	1010,	1010,	110,	101
2017-01-04 09:17:47 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:17:47 AI_Player.update()		101,	1010,	1110,	11,	1110,	1101,	1010
2017-01-04 09:17:47 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:47 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:17:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:48 AI_Player.update()	update
2017-01-04 09:17:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:48 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:17:48 AI_Player.update()	Player a has won!
2017-01-04 09:17:48 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:17:48 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:17:48 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:17:48 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:17:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:48 AI_Player.update()	update
2017-01-04 09:17:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:48 AI_Player.update()	Search took118ms
2017-01-04 09:17:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:48 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:17:48 AI_Player.update()		1010,	110,	11,	101,	11,	1110,	1101
2017-01-04 09:17:48 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-04 09:17:48 AI_Player.update()		1001,	110,	1100,	1100,	1010,	110,	1101
2017-01-04 09:17:48 AI_Player.update()		1110,	1011,	1101,	11,	1011,	110,	1011
2017-01-04 09:17:48 AI_Player.update()		101,	111,	1010,	1100,	101,	111,	11
2017-01-04 09:17:48 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1101,	1001
2017-01-04 09:17:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:48 AI_Player.update()	update
2017-01-04 09:17:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:17:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:48 AI_Player.update()	update
2017-01-04 09:17:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:48 AI_Player.update()	Search took200ms
2017-01-04 09:17:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:48 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:17:48 AI_Player.update()		1010,	110,	11,	11,	11,	1110,	1101
2017-01-04 09:17:48 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:17:48 AI_Player.update()		1001,	110,	1100,	11,	1010,	110,	1101
2017-01-04 09:17:48 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	110,	1011
2017-01-04 09:17:48 AI_Player.update()		101,	111,	1010,	110,	101,	111,	11
2017-01-04 09:17:48 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1101,	1001
2017-01-04 09:17:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:17:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:48 AI_Player.update()	update
2017-01-04 09:17:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:17:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:48 AI_Player.update()	update
2017-01-04 09:17:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:49 AI_Player.update()	Search took334ms
2017-01-04 09:17:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:49 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:17:49 AI_Player.update()		1010,	110,	11,	11,	11,	1110,	1101
2017-01-04 09:17:49 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:17:49 AI_Player.update()		110,	1100,	11,	1010,	110,	1101,	1001
2017-01-04 09:17:49 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	110,	1011
2017-01-04 09:17:49 AI_Player.update()		101,	111,	1010,	110,	101,	111,	11
2017-01-04 09:17:49 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1101,	1001
2017-01-04 09:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:49 AI_Player.update()	update
2017-01-04 09:17:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:49 AI_Player.update()	update
2017-01-04 09:17:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:49 AI_Player.update()	Search took344ms
2017-01-04 09:17:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:49 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 09:17:49 AI_Player.update()		1010,	11,	11,	11,	11,	1110,	1101
2017-01-04 09:17:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-04 09:17:49 AI_Player.update()		110,	1011,	11,	1010,	110,	1101,	1001
2017-01-04 09:17:49 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-04 09:17:49 AI_Player.update()		101,	1100,	1010,	110,	101,	111,	11
2017-01-04 09:17:49 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-04 09:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:49 AI_Player.update()	update
2017-01-04 09:17:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:17:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:50 AI_Player.update()	update
2017-01-04 09:17:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:50 AI_Player.update()	Search took91ms
2017-01-04 09:17:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:50 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:17:50 AI_Player.update()		1010,	110,	11,	11,	11,	1110,	1101
2017-01-04 09:17:50 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:17:50 AI_Player.update()		110,	1100,	11,	1010,	110,	1101,	1001
2017-01-04 09:17:50 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	110,	1011
2017-01-04 09:17:50 AI_Player.update()		101,	111,	1010,	110,	101,	111,	11
2017-01-04 09:17:50 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1101,	1001
2017-01-04 09:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:50 AI_Player.update()	update
2017-01-04 09:17:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:50 AI_Player.update()	update
2017-01-04 09:17:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:50 AI_Player.update()	Search took167ms
2017-01-04 09:17:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:50 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:17:50 AI_Player.update()		1010,	110,	11,	1100,	11,	1110,	1101
2017-01-04 09:17:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:50 AI_Player.update()		110,	1100,	11,	1100,	110,	1101,	1001
2017-01-04 09:17:50 AI_Player.update()		1110,	1011,	1101,	110,	1011,	110,	1011
2017-01-04 09:17:50 AI_Player.update()		101,	111,	1010,	110,	101,	111,	11
2017-01-04 09:17:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-04 09:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:50 AI_Player.update()	update
2017-01-04 09:17:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:17:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:50 AI_Player.update()	update
2017-01-04 09:17:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:50 AI_Player.update()	Search took168ms
2017-01-04 09:17:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:50 AI_Player.update()		110,	101,	111,	11,	111,	1101,	11
2017-01-04 09:17:50 AI_Player.update()		1010,	110,	11,	1100,	11,	101,	1101
2017-01-04 09:17:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-04 09:17:50 AI_Player.update()		110,	1100,	11,	1100,	110,	101,	1001
2017-01-04 09:17:50 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1101,	1011
2017-01-04 09:17:50 AI_Player.update()		101,	111,	1010,	110,	101,	110,	11
2017-01-04 09:17:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-04 09:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:50 AI_Player.update()	update
2017-01-04 09:17:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:17:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:51 AI_Player.update()	update
2017-01-04 09:17:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:51 AI_Player.update()	Search took281ms
2017-01-04 09:17:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:51 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:17:51 AI_Player.update()		1010,	110,	11,	1100,	11,	1110,	1101
2017-01-04 09:17:51 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:51 AI_Player.update()		110,	1100,	11,	1100,	110,	1101,	1001
2017-01-04 09:17:51 AI_Player.update()		1110,	1011,	1101,	110,	1011,	110,	1011
2017-01-04 09:17:51 AI_Player.update()		101,	111,	1010,	110,	101,	111,	11
2017-01-04 09:17:51 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-04 09:17:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:51 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:17:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:51 AI_Player.update()	update
2017-01-04 09:17:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:51 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:17:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:51 AI_Player.update()	update
2017-01-04 09:17:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:51 AI_Player.update()	Search took212ms
2017-01-04 09:17:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:51 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:17:51 AI_Player.update()		1010,	110,	11,	1010,	11,	1110,	1101
2017-01-04 09:17:51 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:17:51 AI_Player.update()		110,	1100,	11,	110,	110,	1101,	1001
2017-01-04 09:17:51 AI_Player.update()		1110,	1011,	1101,	110,	1011,	110,	1011
2017-01-04 09:17:51 AI_Player.update()		101,	111,	1010,	101,	101,	111,	11
2017-01-04 09:17:51 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1101,	1001
2017-01-04 09:17:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:51 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:17:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:51 AI_Player.update()	update
2017-01-04 09:17:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:51 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:52 AI_Player.update()	update
2017-01-04 09:17:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:52 AI_Player.update()	Search took290ms
2017-01-04 09:17:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:52 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:17:52 AI_Player.update()		1010,	110,	11,	1010,	11,	1110,	1101
2017-01-04 09:17:52 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:17:52 AI_Player.update()		1100,	11,	110,	110,	1101,	1001,	110
2017-01-04 09:17:52 AI_Player.update()		1110,	1011,	1101,	110,	1011,	110,	1011
2017-01-04 09:17:52 AI_Player.update()		101,	111,	1010,	101,	101,	111,	11
2017-01-04 09:17:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1101,	1001
2017-01-04 09:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:52 AI_Player.update()	update
2017-01-04 09:17:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:17:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:52 AI_Player.update()	update
2017-01-04 09:17:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:52 AI_Player.update()	Search took59ms
2017-01-04 09:17:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:52 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:17:52 AI_Player.update()		1010,	110,	11,	1100,	11,	1110,	1101
2017-01-04 09:17:52 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 09:17:52 AI_Player.update()		1100,	11,	110,	110,	1101,	1001,	110
2017-01-04 09:17:52 AI_Player.update()		1110,	1011,	1101,	101,	1011,	110,	1011
2017-01-04 09:17:52 AI_Player.update()		101,	111,	1010,	11,	101,	111,	11
2017-01-04 09:17:52 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:52 AI_Player.update()	update
2017-01-04 09:17:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:17:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:52 AI_Player.update()	update
2017-01-04 09:17:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:52 AI_Player.update()	Search took149ms
2017-01-04 09:17:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:52 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:17:52 AI_Player.update()		1010,	110,	11,	1100,	11,	1110,	1101
2017-01-04 09:17:52 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 09:17:52 AI_Player.update()		11,	110,	110,	1101,	1001,	110,	1100
2017-01-04 09:17:52 AI_Player.update()		1110,	1011,	1101,	101,	1011,	110,	1011
2017-01-04 09:17:52 AI_Player.update()		101,	111,	1010,	11,	101,	111,	11
2017-01-04 09:17:52 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:52 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:53 AI_Player.update()	update
2017-01-04 09:17:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:53 AI_Player.update()	update
2017-01-04 09:17:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:53 AI_Player.update()	Search took360ms
2017-01-04 09:17:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:53 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:17:53 AI_Player.update()		110,	11,	1100,	11,	1110,	1101,	1010
2017-01-04 09:17:53 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 09:17:53 AI_Player.update()		11,	110,	110,	1101,	1001,	110,	1100
2017-01-04 09:17:53 AI_Player.update()		1110,	1011,	1101,	101,	1011,	110,	1011
2017-01-04 09:17:53 AI_Player.update()		101,	111,	1010,	11,	101,	111,	11
2017-01-04 09:17:53 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:53 AI_Player.update()	update
2017-01-04 09:17:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:17:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:53 AI_Player.update()	update
2017-01-04 09:17:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:54 AI_Player.update()	Search took617ms
2017-01-04 09:17:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:54 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:17:54 AI_Player.update()		110,	11,	1100,	11,	1110,	1101,	1010
2017-01-04 09:17:54 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 09:17:54 AI_Player.update()		110,	110,	1101,	1001,	110,	1100,	11
2017-01-04 09:17:54 AI_Player.update()		1110,	1011,	1101,	101,	1011,	110,	1011
2017-01-04 09:17:54 AI_Player.update()		101,	111,	1010,	11,	101,	111,	11
2017-01-04 09:17:54 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:54 AI_Player.update()	update
2017-01-04 09:17:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:54 AI_Player.update()	update
2017-01-04 09:17:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:54 AI_Player.update()	Search took328ms
2017-01-04 09:17:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:54 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:17:54 AI_Player.update()		110,	11,	1100,	1010,	1110,	1101,	1010
2017-01-04 09:17:54 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-04 09:17:54 AI_Player.update()		110,	110,	1101,	110,	110,	1100,	11
2017-01-04 09:17:54 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-04 09:17:54 AI_Player.update()		101,	111,	1010,	101,	101,	111,	11
2017-01-04 09:17:54 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1101,	1001
2017-01-04 09:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:54 AI_Player.update()	update
2017-01-04 09:17:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:54 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:55 AI_Player.update()	update
2017-01-04 09:17:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:55 AI_Player.update()	Search took81ms
2017-01-04 09:17:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:55 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-04 09:17:55 AI_Player.update()		110,	11,	1100,	1010,	1110,	1101,	1010
2017-01-04 09:17:55 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-04 09:17:55 AI_Player.update()		110,	1011,	1101,	110,	110,	1100,	11
2017-01-04 09:17:55 AI_Player.update()		1110,	111,	1101,	1001,	1011,	110,	1011
2017-01-04 09:17:55 AI_Player.update()		101,	1100,	1010,	101,	101,	111,	11
2017-01-04 09:17:55 AI_Player.update()		1100,	101,	1101,	11,	1101,	1101,	1001
2017-01-04 09:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:55 AI_Player.update()	update
2017-01-04 09:17:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:55 AI_Player.update()	update
2017-01-04 09:17:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:55 AI_Player.update()	Search took189ms
2017-01-04 09:17:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:55 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:17:55 AI_Player.update()		110,	11,	1100,	1010,	1110,	1101,	1010
2017-01-04 09:17:55 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-04 09:17:55 AI_Player.update()		110,	110,	1101,	110,	110,	1100,	11
2017-01-04 09:17:55 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-04 09:17:55 AI_Player.update()		101,	111,	1010,	101,	101,	111,	11
2017-01-04 09:17:55 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1101,	1001
2017-01-04 09:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:55 AI_Player.update()	update
2017-01-04 09:17:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:55 AI_Player.update()	update
2017-01-04 09:17:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:55 AI_Player.update()	Search took124ms
2017-01-04 09:17:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:55 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:17:55 AI_Player.update()		110,	11,	1100,	1010,	1110,	1101,	1010
2017-01-04 09:17:55 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-04 09:17:55 AI_Player.update()		110,	1101,	110,	110,	1100,	11,	110
2017-01-04 09:17:55 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-04 09:17:55 AI_Player.update()		101,	111,	1010,	101,	101,	111,	11
2017-01-04 09:17:55 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1101,	1001
2017-01-04 09:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:55 AI_Player.update()	update
2017-01-04 09:17:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:56 AI_Player.update()	update
2017-01-04 09:17:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:56 AI_Player.update()	Search took210ms
2017-01-04 09:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:56 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:17:56 AI_Player.update()		110,	11,	1100,	1100,	1110,	1101,	1010
2017-01-04 09:17:56 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:56 AI_Player.update()		110,	1101,	110,	11,	1100,	11,	110
2017-01-04 09:17:56 AI_Player.update()		1110,	1011,	1101,	110,	1011,	110,	1011
2017-01-04 09:17:56 AI_Player.update()		101,	111,	1010,	1001,	101,	111,	11
2017-01-04 09:17:56 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-04 09:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:56 AI_Player.update()	update
2017-01-04 09:17:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:56 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:17:56 AI_Player.update()	Player a has won!
2017-01-04 09:17:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:17:56 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:17:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:17:56 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:56 AI_Player.update()	update
2017-01-04 09:17:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:56 AI_Player.update()	Search took44ms
2017-01-04 09:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:56 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:17:56 AI_Player.update()		1010,	1101,	11,	101,	1101,	1100,	101
2017-01-04 09:17:56 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-04 09:17:56 AI_Player.update()		101,	1100,	1100,	101,	1101,	11,	1100
2017-01-04 09:17:56 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:17:56 AI_Player.update()		1001,	1010,	1010,	1010,	1010,	11,	101
2017-01-04 09:17:56 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-04 09:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:56 AI_Player.update()	update
2017-01-04 09:17:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:17:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:56 AI_Player.update()	update
2017-01-04 09:17:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:56 AI_Player.update()	Search took145ms
2017-01-04 09:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:56 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:17:56 AI_Player.update()		1010,	1101,	11,	1011,	1101,	1100,	101
2017-01-04 09:17:56 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-04 09:17:56 AI_Player.update()		101,	1100,	1100,	1010,	1101,	11,	1100
2017-01-04 09:17:56 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:17:56 AI_Player.update()		1001,	1010,	1010,	11,	1010,	11,	101
2017-01-04 09:17:56 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-04 09:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:57 AI_Player.update()	update
2017-01-04 09:17:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:57 AI_Player.update()	update
2017-01-04 09:17:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:57 AI_Player.update()	Search took276ms
2017-01-04 09:17:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:57 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-04 09:17:57 AI_Player.update()		1010,	1101,	11,	101,	1101,	1100,	101
2017-01-04 09:17:57 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:17:57 AI_Player.update()		101,	1100,	1100,	1010,	1101,	11,	1100
2017-01-04 09:17:57 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 09:17:57 AI_Player.update()		1001,	1010,	1010,	11,	1010,	11,	101
2017-01-04 09:17:57 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-04 09:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:57 AI_Player.update()	update
2017-01-04 09:17:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:57 AI_Player.update()	update
2017-01-04 09:17:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:57 AI_Player.update()	Search took102ms
2017-01-04 09:17:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:57 AI_Player.update()		110,	1100,	111,	1011,	111,	101,	11
2017-01-04 09:17:57 AI_Player.update()		1010,	101,	11,	101,	1101,	1100,	101
2017-01-04 09:17:57 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:17:57 AI_Player.update()		101,	101,	1100,	1010,	1101,	11,	1100
2017-01-04 09:17:57 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 09:17:57 AI_Player.update()		1001,	1010,	1010,	11,	1010,	11,	101
2017-01-04 09:17:57 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-04 09:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:57 AI_Player.update()	update
2017-01-04 09:17:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:57 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:57 AI_Player.update()	update
2017-01-04 09:17:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:58 AI_Player.update()	Search took51ms
2017-01-04 09:17:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:58 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-04 09:17:58 AI_Player.update()		1010,	1101,	11,	101,	1101,	1100,	101
2017-01-04 09:17:58 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:17:58 AI_Player.update()		101,	1100,	1100,	1010,	1101,	11,	1100
2017-01-04 09:17:58 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 09:17:58 AI_Player.update()		1001,	1010,	1010,	11,	1010,	11,	101
2017-01-04 09:17:58 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-04 09:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:58 AI_Player.update()	update
2017-01-04 09:17:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:58 AI_Player.update()	update
2017-01-04 09:17:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:58 AI_Player.update()	Search took119ms
2017-01-04 09:17:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:58 AI_Player.update()		110,	1100,	111,	1011,	111,	101,	11
2017-01-04 09:17:58 AI_Player.update()		1010,	101,	11,	101,	1101,	1100,	101
2017-01-04 09:17:58 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:17:58 AI_Player.update()		101,	101,	1100,	1010,	1101,	11,	1100
2017-01-04 09:17:58 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 09:17:58 AI_Player.update()		1001,	1010,	1010,	11,	1010,	11,	101
2017-01-04 09:17:58 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-04 09:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:58 AI_Player.update()	update
2017-01-04 09:17:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:58 AI_Player.update()	update
2017-01-04 09:17:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:58 AI_Player.update()	Search took114ms
2017-01-04 09:17:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:58 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:17:58 AI_Player.update()		1010,	101,	11,	1010,	1101,	1100,	101
2017-01-04 09:17:58 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:17:58 AI_Player.update()		101,	101,	1100,	11,	1101,	11,	1100
2017-01-04 09:17:58 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 09:17:58 AI_Player.update()		1001,	1010,	1010,	101,	1010,	11,	101
2017-01-04 09:17:58 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:58 AI_Player.update()	update
2017-01-04 09:17:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:58 AI_Player.update()	update
2017-01-04 09:17:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:59 AI_Player.update()	Search took127ms
2017-01-04 09:17:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:59 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 09:17:59 AI_Player.update()		1010,	1100,	11,	1010,	1101,	1100,	101
2017-01-04 09:17:59 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:17:59 AI_Player.update()		101,	1101,	1100,	11,	1101,	11,	1100
2017-01-04 09:17:59 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:17:59 AI_Player.update()		1001,	1100,	1010,	101,	1010,	11,	101
2017-01-04 09:17:59 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:59 AI_Player.update()	update
2017-01-04 09:17:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:17:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:59 AI_Player.update()	update
2017-01-04 09:17:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:17:59 AI_Player.update()	Search took237ms
2017-01-04 09:17:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:59 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 09:17:59 AI_Player.update()		1010,	1100,	11,	1010,	1101,	1100,	101
2017-01-04 09:17:59 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:17:59 AI_Player.update()		1100,	101,	1101,	1100,	11,	1101,	11
2017-01-04 09:17:59 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:17:59 AI_Player.update()		1001,	1100,	1010,	101,	1010,	11,	101
2017-01-04 09:17:59 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:59 AI_Player.update()	update
2017-01-04 09:17:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:17:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:17:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:59 AI_Player.update()	update
2017-01-04 09:17:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:59 AI_Player.update()	Search took170ms
2017-01-04 09:17:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:59 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 09:17:59 AI_Player.update()		1100,	11,	1010,	1101,	1100,	101,	1010
2017-01-04 09:17:59 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:17:59 AI_Player.update()		1100,	101,	1101,	1100,	11,	1101,	11
2017-01-04 09:17:59 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:17:59 AI_Player.update()		1001,	1100,	1010,	101,	1010,	11,	101
2017-01-04 09:17:59 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:59 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:00 AI_Player.update()	update
2017-01-04 09:18:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:00 AI_Player.update()	update
2017-01-04 09:18:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:00 AI_Player.update()	Search took136ms
2017-01-04 09:18:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:00 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 09:18:00 AI_Player.update()		1010,	1100,	11,	1010,	1101,	1100,	101
2017-01-04 09:18:00 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:18:00 AI_Player.update()		1100,	101,	1101,	1100,	11,	1101,	11
2017-01-04 09:18:00 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:00 AI_Player.update()		1001,	1100,	1010,	101,	1010,	11,	101
2017-01-04 09:18:00 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:00 AI_Player.update()	update
2017-01-04 09:18:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:00 AI_Player.update()	update
2017-01-04 09:18:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:00 AI_Player.update()	Search took111ms
2017-01-04 09:18:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:00 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:18:00 AI_Player.update()		1010,	101,	11,	1010,	1101,	1100,	101
2017-01-04 09:18:00 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:18:00 AI_Player.update()		1100,	101,	1101,	1100,	11,	1101,	11
2017-01-04 09:18:00 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:00 AI_Player.update()		1001,	1010,	1010,	101,	1010,	11,	101
2017-01-04 09:18:00 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:00 AI_Player.update()	update
2017-01-04 09:18:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:00 AI_Player.update()	update
2017-01-04 09:18:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:00 AI_Player.update()	Search took151ms
2017-01-04 09:18:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:00 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:18:00 AI_Player.update()		101,	1010,	101,	11,	1010,	1101,	1100
2017-01-04 09:18:00 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:18:00 AI_Player.update()		1100,	101,	1101,	1100,	11,	1101,	11
2017-01-04 09:18:00 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:00 AI_Player.update()		1001,	1010,	1010,	101,	1010,	11,	101
2017-01-04 09:18:00 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:01 AI_Player.update()	update
2017-01-04 09:18:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	5 2
2017-01-04 09:18:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:01 AI_Player.update()	update
2017-01-04 09:18:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:01 AI_Player.update()	Search took206ms
2017-01-04 09:18:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:01 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:18:01 AI_Player.update()		1100,	101,	1010,	101,	11,	1010,	1101
2017-01-04 09:18:01 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:18:01 AI_Player.update()		1100,	101,	1101,	1100,	11,	1101,	11
2017-01-04 09:18:01 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:01 AI_Player.update()		1001,	1010,	1010,	101,	1010,	11,	101
2017-01-04 09:18:01 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	5 2
2017-01-04 09:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:01 AI_Player.update()	update
2017-01-04 09:18:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	5 2
2017-01-04 09:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:01 AI_Player.update()	update
2017-01-04 09:18:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:01 AI_Player.update()	Search took253ms
2017-01-04 09:18:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:01 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:18:01 AI_Player.update()		1100,	101,	1010,	101,	11,	1010,	1101
2017-01-04 09:18:01 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:18:01 AI_Player.update()		11,	1100,	101,	1101,	1100,	11,	1101
2017-01-04 09:18:01 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:01 AI_Player.update()		1001,	1010,	1010,	101,	1010,	11,	101
2017-01-04 09:18:01 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	5 2
2017-01-04 09:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:01 AI_Player.update()	update
2017-01-04 09:18:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	6 2
2017-01-04 09:18:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:02 AI_Player.update()	update
2017-01-04 09:18:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:02 AI_Player.update()	Search took654ms
2017-01-04 09:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:02 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:18:02 AI_Player.update()		1101,	1100,	101,	1010,	101,	11,	1010
2017-01-04 09:18:02 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:18:02 AI_Player.update()		11,	1100,	101,	1101,	1100,	11,	1101
2017-01-04 09:18:02 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:02 AI_Player.update()		1001,	1010,	1010,	101,	1010,	11,	101
2017-01-04 09:18:02 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	6 2
2017-01-04 09:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:02 AI_Player.update()	update
2017-01-04 09:18:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:18:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:02 AI_Player.update()	update
2017-01-04 09:18:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:03 AI_Player.update()	Search took202ms
2017-01-04 09:18:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:03 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:18:03 AI_Player.update()		1101,	1100,	101,	1010,	101,	11,	1010
2017-01-04 09:18:03 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:18:03 AI_Player.update()		1100,	101,	1101,	1100,	11,	1101,	11
2017-01-04 09:18:03 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:03 AI_Player.update()		1001,	1010,	1010,	101,	1010,	11,	101
2017-01-04 09:18:03 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:03 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:18:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:03 AI_Player.update()	update
2017-01-04 09:18:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:03 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:18:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:03 AI_Player.update()	update
2017-01-04 09:18:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:03 AI_Player.update()	Search took485ms
2017-01-04 09:18:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:03 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:18:03 AI_Player.update()		1101,	1100,	101,	1010,	101,	1001,	1010
2017-01-04 09:18:03 AI_Player.update()		1110,	101,	1110,	1010,	111,	1101,	1011
2017-01-04 09:18:03 AI_Player.update()		1100,	101,	1101,	1100,	11,	1010,	11
2017-01-04 09:18:03 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-04 09:18:03 AI_Player.update()		1001,	1010,	1010,	101,	1010,	1100,	101
2017-01-04 09:18:03 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-04 09:18:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:03 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:18:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:03 AI_Player.update()	update
2017-01-04 09:18:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:03 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:04 AI_Player.update()	update
2017-01-04 09:18:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:04 AI_Player.update()	Search took153ms
2017-01-04 09:18:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:04 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:18:04 AI_Player.update()		1101,	101,	101,	1010,	101,	1001,	1010
2017-01-04 09:18:04 AI_Player.update()		1110,	101,	1110,	1010,	111,	1101,	1011
2017-01-04 09:18:04 AI_Player.update()		1100,	1100,	1101,	1100,	11,	1010,	11
2017-01-04 09:18:04 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-04 09:18:04 AI_Player.update()		1001,	1010,	1010,	101,	1010,	1100,	101
2017-01-04 09:18:04 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-04 09:18:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:04 AI_Player.update()	update
2017-01-04 09:18:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:04 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:18:04 AI_Player.update()	Player a has won!
2017-01-04 09:18:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:04 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:18:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:04 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:18:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:04 AI_Player.update()	update
2017-01-04 09:18:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:04 AI_Player.update()	Search took60ms
2017-01-04 09:18:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:04 AI_Player.update()		110,	1011,	111,	1001,	111,	11,	11
2017-01-04 09:18:04 AI_Player.update()		1010,	101,	1010,	101,	11,	1010,	1001
2017-01-04 09:18:04 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:18:04 AI_Player.update()		1001,	1011,	11,	1001,	1010,	110,	101
2017-01-04 09:18:04 AI_Player.update()		1110,	111,	1101,	1001,	1011,	111,	1011
2017-01-04 09:18:04 AI_Player.update()		1001,	1001,	1100,	1010,	1010,	11,	1010
2017-01-04 09:18:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-04 09:18:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:04 AI_Player.update()	update
2017-01-04 09:18:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:04 AI_Player.update()	update
2017-01-04 09:18:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:04 AI_Player.update()	Search took46ms
2017-01-04 09:18:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:04 AI_Player.update()		110,	1011,	111,	1001,	111,	11,	11
2017-01-04 09:18:04 AI_Player.update()		101,	1010,	101,	11,	1010,	1001,	1010
2017-01-04 09:18:04 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:18:04 AI_Player.update()		1001,	1011,	11,	1001,	1010,	110,	101
2017-01-04 09:18:04 AI_Player.update()		1110,	111,	1101,	1001,	1011,	111,	1011
2017-01-04 09:18:04 AI_Player.update()		1001,	1001,	1100,	1010,	1010,	11,	1010
2017-01-04 09:18:04 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-04 09:18:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:04 AI_Player.update()	update
2017-01-04 09:18:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:04 AI_Player.update()	update
2017-01-04 09:18:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:05 AI_Player.update()	Search took95ms
2017-01-04 09:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:05 AI_Player.update()		110,	1011,	111,	1001,	111,	11,	11
2017-01-04 09:18:05 AI_Player.update()		101,	1010,	101,	11,	1010,	1001,	1010
2017-01-04 09:18:05 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:18:05 AI_Player.update()		1011,	11,	1001,	1010,	110,	101,	1001
2017-01-04 09:18:05 AI_Player.update()		1110,	111,	1101,	1001,	1011,	111,	1011
2017-01-04 09:18:05 AI_Player.update()		1001,	1001,	1100,	1010,	1010,	11,	1010
2017-01-04 09:18:05 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-04 09:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:05 AI_Player.update()	update
2017-01-04 09:18:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:18:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:05 AI_Player.update()	update
2017-01-04 09:18:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:05 AI_Player.update()	Search took440ms
2017-01-04 09:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:05 AI_Player.update()		110,	1011,	111,	1001,	111,	11,	11
2017-01-04 09:18:05 AI_Player.update()		1010,	101,	1010,	101,	11,	1010,	1001
2017-01-04 09:18:05 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:18:05 AI_Player.update()		1011,	11,	1001,	1010,	110,	101,	1001
2017-01-04 09:18:05 AI_Player.update()		1110,	111,	1101,	1001,	1011,	111,	1011
2017-01-04 09:18:05 AI_Player.update()		1001,	1001,	1100,	1010,	1010,	11,	1010
2017-01-04 09:18:05 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-04 09:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:05 AI_Player.update()	update
2017-01-04 09:18:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:05 AI_Player.update()	update
2017-01-04 09:18:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:06 AI_Player.update()	Search took430ms
2017-01-04 09:18:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:06 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-04 09:18:06 AI_Player.update()		1010,	101,	1010,	1001,	11,	1010,	1001
2017-01-04 09:18:06 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-04 09:18:06 AI_Player.update()		1011,	11,	1001,	1001,	110,	101,	1001
2017-01-04 09:18:06 AI_Player.update()		1110,	111,	1101,	1010,	1011,	111,	1011
2017-01-04 09:18:06 AI_Player.update()		1001,	1001,	1100,	11,	1010,	11,	1010
2017-01-04 09:18:06 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:06 AI_Player.update()	update
2017-01-04 09:18:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:18:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:06 AI_Player.update()	update
2017-01-04 09:18:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:06 AI_Player.update()	Search took295ms
2017-01-04 09:18:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:06 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-04 09:18:06 AI_Player.update()		1010,	110,	1010,	1001,	11,	1010,	1001
2017-01-04 09:18:06 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 09:18:06 AI_Player.update()		1011,	111,	1001,	1001,	110,	101,	1001
2017-01-04 09:18:06 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	111,	1011
2017-01-04 09:18:06 AI_Player.update()		1001,	1001,	1100,	11,	1010,	11,	1010
2017-01-04 09:18:06 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:06 AI_Player.update()	update
2017-01-04 09:18:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:07 AI_Player.update()	update
2017-01-04 09:18:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:07 AI_Player.update()	Search took621ms
2017-01-04 09:18:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:07 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 09:18:07 AI_Player.update()		1010,	11,	1010,	1001,	11,	1010,	1001
2017-01-04 09:18:07 AI_Player.update()		1110,	111,	1110,	1010,	111,	1100,	1011
2017-01-04 09:18:07 AI_Player.update()		1011,	1001,	1001,	1001,	110,	101,	1001
2017-01-04 09:18:07 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	111,	1011
2017-01-04 09:18:07 AI_Player.update()		1001,	1011,	1100,	11,	1010,	11,	1010
2017-01-04 09:18:07 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:07 AI_Player.update()	update
2017-01-04 09:18:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:18:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:07 AI_Player.update()	update
2017-01-04 09:18:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:08 AI_Player.update()	Search took451ms
2017-01-04 09:18:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:08 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-04 09:18:08 AI_Player.update()		1010,	110,	1010,	1001,	11,	1010,	1001
2017-01-04 09:18:08 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 09:18:08 AI_Player.update()		1011,	111,	1001,	1001,	110,	101,	1001
2017-01-04 09:18:08 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	111,	1011
2017-01-04 09:18:08 AI_Player.update()		1001,	1001,	1100,	11,	1010,	11,	1010
2017-01-04 09:18:08 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:08 AI_Player.update()	update
2017-01-04 09:18:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:08 AI_Player.update()	update
2017-01-04 09:18:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:09 AI_Player.update()	Search took477ms
2017-01-04 09:18:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:09 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 09:18:09 AI_Player.update()		1010,	11,	1010,	1001,	11,	1010,	1001
2017-01-04 09:18:09 AI_Player.update()		1110,	111,	1110,	1010,	111,	1100,	1011
2017-01-04 09:18:09 AI_Player.update()		1011,	1001,	1001,	1001,	110,	101,	1001
2017-01-04 09:18:09 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	111,	1011
2017-01-04 09:18:09 AI_Player.update()		1001,	1011,	1100,	11,	1010,	11,	1010
2017-01-04 09:18:09 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:09 AI_Player.update()	update
2017-01-04 09:18:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:09 AI_Player.update()	update
2017-01-04 09:18:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:09 AI_Player.update()	Search took294ms
2017-01-04 09:18:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:09 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 09:18:09 AI_Player.update()		1010,	11,	1010,	1001,	11,	1010,	1001
2017-01-04 09:18:09 AI_Player.update()		1110,	111,	1110,	1010,	111,	1100,	1011
2017-01-04 09:18:09 AI_Player.update()		1001,	1011,	1001,	1001,	1001,	110,	101
2017-01-04 09:18:09 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	111,	1011
2017-01-04 09:18:09 AI_Player.update()		1001,	1011,	1100,	11,	1010,	11,	1010
2017-01-04 09:18:09 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:09 AI_Player.update()	update
2017-01-04 09:18:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:09 AI_Player.update()	update
2017-01-04 09:18:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:09 AI_Player.update()	Search took253ms
2017-01-04 09:18:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:09 AI_Player.update()		110,	110,	111,	1001,	111,	11,	11
2017-01-04 09:18:09 AI_Player.update()		1010,	11,	1010,	101,	11,	1010,	1001
2017-01-04 09:18:09 AI_Player.update()		1110,	111,	1110,	1001,	111,	1100,	1011
2017-01-04 09:18:09 AI_Player.update()		1001,	1011,	1001,	1010,	1001,	110,	101
2017-01-04 09:18:09 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	111,	1011
2017-01-04 09:18:09 AI_Player.update()		1001,	1011,	1100,	1010,	1010,	11,	1010
2017-01-04 09:18:09 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 09:18:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:10 AI_Player.update()	update
2017-01-04 09:18:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:10 AI_Player.update()	update
2017-01-04 09:18:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:10 AI_Player.update()	Search took264ms
2017-01-04 09:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:10 AI_Player.update()		110,	110,	111,	1001,	111,	11,	11
2017-01-04 09:18:10 AI_Player.update()		1010,	11,	1010,	101,	11,	1010,	1001
2017-01-04 09:18:10 AI_Player.update()		1110,	111,	1110,	1001,	111,	1100,	1011
2017-01-04 09:18:10 AI_Player.update()		101,	1001,	1011,	1001,	1010,	1001,	110
2017-01-04 09:18:10 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	111,	1011
2017-01-04 09:18:10 AI_Player.update()		1001,	1011,	1100,	1010,	1010,	11,	1010
2017-01-04 09:18:10 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 09:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:10 AI_Player.update()	update
2017-01-04 09:18:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:10 AI_Player.update()	update
2017-01-04 09:18:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:10 AI_Player.update()	Search took217ms
2017-01-04 09:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:10 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 09:18:10 AI_Player.update()		1010,	11,	1010,	1001,	11,	1010,	1001
2017-01-04 09:18:10 AI_Player.update()		1110,	111,	1110,	101,	111,	1100,	1011
2017-01-04 09:18:10 AI_Player.update()		101,	1001,	1011,	1001,	1010,	1001,	110
2017-01-04 09:18:10 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	111,	1011
2017-01-04 09:18:10 AI_Player.update()		1001,	1011,	1100,	1001,	1010,	11,	1010
2017-01-04 09:18:10 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:10 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:11 AI_Player.update()	update
2017-01-04 09:18:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:18:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:11 AI_Player.update()	update
2017-01-04 09:18:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:11 AI_Player.update()	Search took419ms
2017-01-04 09:18:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:11 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 09:18:11 AI_Player.update()		1010,	11,	1010,	1001,	11,	1010,	1001
2017-01-04 09:18:11 AI_Player.update()		1110,	111,	1110,	101,	111,	1100,	1011
2017-01-04 09:18:11 AI_Player.update()		110,	101,	1001,	1011,	1001,	1010,	1001
2017-01-04 09:18:11 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	111,	1011
2017-01-04 09:18:11 AI_Player.update()		1001,	1011,	1100,	1001,	1010,	11,	1010
2017-01-04 09:18:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:11 AI_Player.update()	update
2017-01-04 09:18:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:11 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:11 AI_Player.update()	update
2017-01-04 09:18:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:12 AI_Player.update()	Search took430ms
2017-01-04 09:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:12 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-04 09:18:12 AI_Player.update()		1010,	110,	1010,	1001,	11,	1010,	1001
2017-01-04 09:18:12 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 09:18:12 AI_Player.update()		110,	111,	1001,	1011,	1001,	1010,	1001
2017-01-04 09:18:12 AI_Player.update()		1110,	101,	1101,	1001,	1011,	111,	1011
2017-01-04 09:18:12 AI_Player.update()		1001,	1001,	1100,	1001,	1010,	11,	1010
2017-01-04 09:18:12 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	101,	1001
2017-01-04 09:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:12 AI_Player.update()	update
2017-01-04 09:18:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:12 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:18:12 AI_Player.update()	Player a has won!
2017-01-04 09:18:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:18:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:12 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:12 AI_Player.update()	update
2017-01-04 09:18:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:12 AI_Player.update()	Search took19ms
2017-01-04 09:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:12 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 09:18:12 AI_Player.update()		1011,	1101,	11,	1010,	101,	1001,	11
2017-01-04 09:18:12 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:18:12 AI_Player.update()		1100,	110,	101,	1100,	1001,	1001,	101
2017-01-04 09:18:12 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1101,	1011
2017-01-04 09:18:12 AI_Player.update()		1010,	11,	1010,	101,	1010,	1110,	1001
2017-01-04 09:18:12 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 09:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:12 AI_Player.update()	update
2017-01-04 09:18:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:18:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:12 AI_Player.update()	update
2017-01-04 09:18:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:12 AI_Player.update()	Search took138ms
2017-01-04 09:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:12 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 09:18:12 AI_Player.update()		1101,	11,	1010,	101,	1001,	11,	1011
2017-01-04 09:18:12 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:18:12 AI_Player.update()		1100,	110,	101,	1100,	1001,	1001,	101
2017-01-04 09:18:12 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1101,	1011
2017-01-04 09:18:12 AI_Player.update()		1010,	11,	1010,	101,	1010,	1110,	1001
2017-01-04 09:18:12 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 09:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:12 AI_Player.update()	update
2017-01-04 09:18:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:12 AI_Player.update()	update
2017-01-04 09:18:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:13 AI_Player.update()	Search took38ms
2017-01-04 09:18:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:13 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:18:13 AI_Player.update()		1101,	110,	1010,	101,	1001,	11,	1011
2017-01-04 09:18:13 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:18:13 AI_Player.update()		1100,	1100,	101,	1100,	1001,	1001,	101
2017-01-04 09:18:13 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1101,	1011
2017-01-04 09:18:13 AI_Player.update()		1010,	110,	1010,	101,	1010,	1110,	1001
2017-01-04 09:18:13 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 09:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:13 AI_Player.update()	update
2017-01-04 09:18:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:13 AI_Player.update()	update
2017-01-04 09:18:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:13 AI_Player.update()	Search took179ms
2017-01-04 09:18:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:13 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 09:18:13 AI_Player.update()		1101,	110,	1010,	110,	1001,	11,	1011
2017-01-04 09:18:13 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-04 09:18:13 AI_Player.update()		1100,	1100,	101,	1001,	1001,	1001,	101
2017-01-04 09:18:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-04 09:18:13 AI_Player.update()		1010,	110,	1010,	1001,	1010,	1110,	1001
2017-01-04 09:18:13 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 09:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:13 AI_Player.update()	update
2017-01-04 09:18:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:13 AI_Player.update()	update
2017-01-04 09:18:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:13 AI_Player.update()	Search took41ms
2017-01-04 09:18:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:13 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 09:18:13 AI_Player.update()		1101,	110,	1010,	110,	1001,	11,	1011
2017-01-04 09:18:13 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-04 09:18:13 AI_Player.update()		1100,	101,	1001,	1001,	1001,	101,	1100
2017-01-04 09:18:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-04 09:18:13 AI_Player.update()		1010,	110,	1010,	1001,	1010,	1110,	1001
2017-01-04 09:18:13 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 09:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:13 AI_Player.update()	update
2017-01-04 09:18:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:13 AI_Player.update()	update
2017-01-04 09:18:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:14 AI_Player.update()	Search took222ms
2017-01-04 09:18:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:14 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 09:18:14 AI_Player.update()		110,	1010,	110,	1001,	11,	1011,	1101
2017-01-04 09:18:14 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-04 09:18:14 AI_Player.update()		1100,	101,	1001,	1001,	1001,	101,	1100
2017-01-04 09:18:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-04 09:18:14 AI_Player.update()		1010,	110,	1010,	1001,	1010,	1110,	1001
2017-01-04 09:18:14 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 09:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:14 AI_Player.update()	update
2017-01-04 09:18:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:14 AI_Player.update()	update
2017-01-04 09:18:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:14 AI_Player.update()	Search took86ms
2017-01-04 09:18:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:14 AI_Player.update()		110,	11,	111,	11,	111,	1011,	11
2017-01-04 09:18:14 AI_Player.update()		110,	1010,	110,	1001,	11,	1100,	1101
2017-01-04 09:18:14 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 09:18:14 AI_Player.update()		1100,	101,	1001,	1001,	1001,	1101,	1100
2017-01-04 09:18:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1110,	1011
2017-01-04 09:18:14 AI_Player.update()		1010,	110,	1010,	1001,	1010,	1010,	1001
2017-01-04 09:18:14 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 09:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:14 AI_Player.update()	update
2017-01-04 09:18:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:14 AI_Player.update()	update
2017-01-04 09:18:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:14 AI_Player.update()	Search took253ms
2017-01-04 09:18:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:14 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-04 09:18:14 AI_Player.update()		110,	1010,	110,	11,	11,	1100,	1101
2017-01-04 09:18:14 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 09:18:14 AI_Player.update()		1100,	101,	1001,	101,	1001,	1101,	1100
2017-01-04 09:18:14 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1110,	1011
2017-01-04 09:18:14 AI_Player.update()		1010,	110,	1010,	1100,	1010,	1010,	1001
2017-01-04 09:18:14 AI_Player.update()		1100,	110,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:14 AI_Player.update()	update
2017-01-04 09:18:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:15 AI_Player.update()	update
2017-01-04 09:18:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:15 AI_Player.update()	Search took106ms
2017-01-04 09:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:15 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-04 09:18:15 AI_Player.update()		110,	1010,	110,	11,	11,	1100,	1101
2017-01-04 09:18:15 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 09:18:15 AI_Player.update()		1100,	101,	1001,	101,	1001,	1101,	1100
2017-01-04 09:18:15 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1110,	1011
2017-01-04 09:18:15 AI_Player.update()		110,	1010,	1100,	1010,	1010,	1001,	1010
2017-01-04 09:18:15 AI_Player.update()		1100,	110,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:15 AI_Player.update()	update
2017-01-04 09:18:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:15 AI_Player.update()	update
2017-01-04 09:18:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:15 AI_Player.update()	Search took105ms
2017-01-04 09:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:15 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-04 09:18:15 AI_Player.update()		110,	110,	110,	11,	11,	1100,	1101
2017-01-04 09:18:15 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 09:18:15 AI_Player.update()		1100,	11,	1001,	101,	1001,	1101,	1100
2017-01-04 09:18:15 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1110,	1011
2017-01-04 09:18:15 AI_Player.update()		110,	110,	1100,	1010,	1010,	1001,	1010
2017-01-04 09:18:15 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:15 AI_Player.update()	update
2017-01-04 09:18:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:15 AI_Player.update()	update
2017-01-04 09:18:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:15 AI_Player.update()	Search took167ms
2017-01-04 09:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:15 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-04 09:18:15 AI_Player.update()		110,	110,	110,	1001,	11,	1100,	1101
2017-01-04 09:18:15 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 09:18:15 AI_Player.update()		1100,	11,	1001,	1001,	1001,	1101,	1100
2017-01-04 09:18:15 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-04 09:18:15 AI_Player.update()		110,	110,	1100,	1001,	1010,	1001,	1010
2017-01-04 09:18:15 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-04 09:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:15 AI_Player.update()	update
2017-01-04 09:18:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:16 AI_Player.update()	update
2017-01-04 09:18:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:16 AI_Player.update()	Search took189ms
2017-01-04 09:18:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:16 AI_Player.update()		110,	110,	111,	11,	111,	1011,	11
2017-01-04 09:18:16 AI_Player.update()		110,	101,	110,	1001,	11,	1100,	1101
2017-01-04 09:18:16 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:18:16 AI_Player.update()		1100,	1010,	1001,	1001,	1001,	1101,	1100
2017-01-04 09:18:16 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-04 09:18:16 AI_Player.update()		110,	11,	1100,	1001,	1010,	1001,	1010
2017-01-04 09:18:16 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:16 AI_Player.update()	update
2017-01-04 09:18:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:16 AI_Player.update()	update
2017-01-04 09:18:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:16 AI_Player.update()	Search took196ms
2017-01-04 09:18:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:16 AI_Player.update()		110,	110,	111,	11,	111,	1011,	11
2017-01-04 09:18:16 AI_Player.update()		110,	101,	110,	1001,	11,	1100,	1101
2017-01-04 09:18:16 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:18:16 AI_Player.update()		1100,	1010,	1001,	1001,	1001,	1101,	1100
2017-01-04 09:18:16 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-04 09:18:16 AI_Player.update()		1010,	110,	11,	1100,	1001,	1010,	1001
2017-01-04 09:18:16 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:16 AI_Player.update()	update
2017-01-04 09:18:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:16 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:16 AI_Player.update()	update
2017-01-04 09:18:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:17 AI_Player.update()	Search took188ms
2017-01-04 09:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:17 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-04 09:18:17 AI_Player.update()		110,	11,	110,	1001,	11,	1100,	1101
2017-01-04 09:18:17 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 09:18:17 AI_Player.update()		1100,	110,	1001,	1001,	1001,	1101,	1100
2017-01-04 09:18:17 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-04 09:18:17 AI_Player.update()		1010,	1010,	11,	1100,	1001,	1010,	1001
2017-01-04 09:18:17 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 09:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:17 AI_Player.update()	update
2017-01-04 09:18:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:17 AI_Player.update()	update
2017-01-04 09:18:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:17 AI_Player.update()	Search took112ms
2017-01-04 09:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:17 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-04 09:18:17 AI_Player.update()		110,	11,	110,	101,	11,	1100,	1101
2017-01-04 09:18:17 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 09:18:17 AI_Player.update()		1100,	110,	1001,	1010,	1001,	1101,	1100
2017-01-04 09:18:17 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1110,	1011
2017-01-04 09:18:17 AI_Player.update()		1010,	1010,	11,	101,	1001,	1010,	1001
2017-01-04 09:18:17 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 09:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:17 AI_Player.update()	update
2017-01-04 09:18:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:18:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:17 AI_Player.update()	update
2017-01-04 09:18:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:17 AI_Player.update()	Search took67ms
2017-01-04 09:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:17 AI_Player.update()		110,	11,	111,	1001,	111,	1011,	11
2017-01-04 09:18:17 AI_Player.update()		110,	1010,	110,	101,	11,	1100,	1101
2017-01-04 09:18:17 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 09:18:17 AI_Player.update()		1100,	110,	1001,	1010,	1001,	1101,	1100
2017-01-04 09:18:17 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1110,	1011
2017-01-04 09:18:17 AI_Player.update()		1010,	110,	11,	101,	1001,	1010,	1001
2017-01-04 09:18:17 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 09:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:17 AI_Player.update()	update
2017-01-04 09:18:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:18:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:17 AI_Player.update()	update
2017-01-04 09:18:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:17 AI_Player.update()	Search took63ms
2017-01-04 09:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:17 AI_Player.update()		110,	11,	111,	1001,	111,	1011,	11
2017-01-04 09:18:17 AI_Player.update()		110,	1010,	110,	101,	11,	1100,	1101
2017-01-04 09:18:17 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 09:18:17 AI_Player.update()		110,	1001,	1010,	1001,	1101,	1100,	1100
2017-01-04 09:18:17 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1110,	1011
2017-01-04 09:18:17 AI_Player.update()		1010,	110,	11,	101,	1001,	1010,	1001
2017-01-04 09:18:17 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 09:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:17 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:18 AI_Player.update()	update
2017-01-04 09:18:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:18 AI_Player.update()	update
2017-01-04 09:18:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:18 AI_Player.update()	Search took192ms
2017-01-04 09:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:18 AI_Player.update()		110,	11,	111,	11,	111,	1011,	11
2017-01-04 09:18:18 AI_Player.update()		110,	1010,	110,	1001,	11,	1100,	1101
2017-01-04 09:18:18 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 09:18:18 AI_Player.update()		110,	1001,	1010,	1001,	1101,	1100,	1100
2017-01-04 09:18:18 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1110,	1011
2017-01-04 09:18:18 AI_Player.update()		1010,	110,	11,	1100,	1001,	1010,	1001
2017-01-04 09:18:18 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 09:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:18 AI_Player.update()	update
2017-01-04 09:18:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:18 AI_Player.update()	update
2017-01-04 09:18:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:18 AI_Player.update()	Search took280ms
2017-01-04 09:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:18 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-04 09:18:18 AI_Player.update()		110,	11,	110,	1001,	11,	1100,	1101
2017-01-04 09:18:18 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 09:18:18 AI_Player.update()		110,	110,	1010,	1001,	1101,	1100,	1100
2017-01-04 09:18:18 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-04 09:18:18 AI_Player.update()		1010,	1010,	11,	1100,	1001,	1010,	1001
2017-01-04 09:18:18 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 09:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:18 AI_Player.update()	update
2017-01-04 09:18:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:18 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:18:18 AI_Player.update()	Player a has won!
2017-01-04 09:18:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:18 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:18:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:18 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:19 AI_Player.update()	update
2017-01-04 09:18:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:19 AI_Player.update()	Search took202ms
2017-01-04 09:18:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:19 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-04 09:18:19 AI_Player.update()		101,	101,	1100,	101,	1001,	1010,	101
2017-01-04 09:18:19 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 09:18:19 AI_Player.update()		111,	11,	110,	110,	1100,	1010,	11
2017-01-04 09:18:19 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:19 AI_Player.update()		1010,	1010,	1001,	11,	11,	1100,	110
2017-01-04 09:18:19 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:19 AI_Player.update()	update
2017-01-04 09:18:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:19 AI_Player.update()	update
2017-01-04 09:18:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:19 AI_Player.update()	Search took189ms
2017-01-04 09:18:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:19 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-04 09:18:19 AI_Player.update()		101,	1010,	1100,	101,	1001,	1010,	101
2017-01-04 09:18:19 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:18:19 AI_Player.update()		111,	1010,	110,	110,	1100,	1010,	11
2017-01-04 09:18:19 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:19 AI_Player.update()		1010,	1010,	1001,	11,	11,	1100,	110
2017-01-04 09:18:19 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:19 AI_Player.update()	update
2017-01-04 09:18:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:19 AI_Player.update()	update
2017-01-04 09:18:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:20 AI_Player.update()	Search took246ms
2017-01-04 09:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:20 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 09:18:20 AI_Player.update()		101,	1010,	1100,	101,	1001,	1010,	101
2017-01-04 09:18:20 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 09:18:20 AI_Player.update()		111,	1010,	110,	11,	1100,	1010,	11
2017-01-04 09:18:20 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:20 AI_Player.update()		1010,	1010,	1001,	1101,	11,	1100,	110
2017-01-04 09:18:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-04 09:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:20 AI_Player.update()	update
2017-01-04 09:18:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:20 AI_Player.update()	update
2017-01-04 09:18:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:20 AI_Player.update()	Search took265ms
2017-01-04 09:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:20 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 09:18:20 AI_Player.update()		101,	101,	1010,	1100,	101,	1001,	1010
2017-01-04 09:18:20 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 09:18:20 AI_Player.update()		111,	1010,	110,	11,	1100,	1010,	11
2017-01-04 09:18:20 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:20 AI_Player.update()		1010,	1010,	1001,	1101,	11,	1100,	110
2017-01-04 09:18:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-04 09:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:20 AI_Player.update()	update
2017-01-04 09:18:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:20 AI_Player.update()	update
2017-01-04 09:18:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:20 AI_Player.update()	Search took143ms
2017-01-04 09:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:20 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 09:18:20 AI_Player.update()		101,	101,	1010,	110,	101,	1001,	1010
2017-01-04 09:18:20 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-04 09:18:20 AI_Player.update()		111,	1010,	110,	11,	1100,	1010,	11
2017-01-04 09:18:20 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-04 09:18:20 AI_Player.update()		1010,	1010,	1001,	11,	11,	1100,	110
2017-01-04 09:18:20 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:20 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:21 AI_Player.update()	update
2017-01-04 09:18:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:21 AI_Player.update()	update
2017-01-04 09:18:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:21 AI_Player.update()	Search took160ms
2017-01-04 09:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:21 AI_Player.update()		110,	101,	111,	1100,	111,	111,	11
2017-01-04 09:18:21 AI_Player.update()		101,	11,	1010,	110,	101,	1001,	1010
2017-01-04 09:18:21 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 09:18:21 AI_Player.update()		111,	1010,	110,	11,	1100,	1010,	11
2017-01-04 09:18:21 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1010,	1011
2017-01-04 09:18:21 AI_Player.update()		1010,	101,	1001,	11,	11,	1100,	110
2017-01-04 09:18:21 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:21 AI_Player.update()	update
2017-01-04 09:18:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:21 AI_Player.update()	update
2017-01-04 09:18:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:21 AI_Player.update()	Search took285ms
2017-01-04 09:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:21 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 09:18:21 AI_Player.update()		101,	11,	1010,	1100,	101,	1001,	1010
2017-01-04 09:18:21 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 09:18:21 AI_Player.update()		111,	1010,	110,	11,	1100,	1010,	11
2017-01-04 09:18:21 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:21 AI_Player.update()		1010,	101,	1001,	1101,	11,	1100,	110
2017-01-04 09:18:21 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-04 09:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:21 AI_Player.update()	update
2017-01-04 09:18:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:22 AI_Player.update()	update
2017-01-04 09:18:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:22 AI_Player.update()	Search took349ms
2017-01-04 09:18:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:22 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 09:18:22 AI_Player.update()		1010,	101,	11,	1010,	1100,	101,	1001
2017-01-04 09:18:22 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 09:18:22 AI_Player.update()		111,	1010,	110,	11,	1100,	1010,	11
2017-01-04 09:18:22 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:22 AI_Player.update()		1010,	101,	1001,	1101,	11,	1100,	110
2017-01-04 09:18:22 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-04 09:18:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:22 AI_Player.update()	update
2017-01-04 09:18:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:22 AI_Player.update()	update
2017-01-04 09:18:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:22 AI_Player.update()	Search took292ms
2017-01-04 09:18:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:22 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 09:18:22 AI_Player.update()		1010,	101,	11,	1010,	1100,	101,	1001
2017-01-04 09:18:22 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 09:18:22 AI_Player.update()		1010,	110,	11,	1100,	1010,	11,	111
2017-01-04 09:18:22 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:22 AI_Player.update()		1010,	101,	1001,	1101,	11,	1100,	110
2017-01-04 09:18:22 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-04 09:18:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:22 AI_Player.update()	update
2017-01-04 09:18:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:22 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:23 AI_Player.update()	update
2017-01-04 09:18:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:23 AI_Player.update()	Search took435ms
2017-01-04 09:18:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:23 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 09:18:23 AI_Player.update()		1010,	1010,	11,	1010,	1100,	101,	1001
2017-01-04 09:18:23 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-04 09:18:23 AI_Player.update()		1010,	1010,	11,	1100,	1010,	11,	111
2017-01-04 09:18:23 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:18:23 AI_Player.update()		1010,	101,	1001,	1101,	11,	1100,	110
2017-01-04 09:18:23 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-04 09:18:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:23 AI_Player.update()	update
2017-01-04 09:18:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:18:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:23 AI_Player.update()	update
2017-01-04 09:18:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:24 AI_Player.update()	Search took719ms
2017-01-04 09:18:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:24 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-04 09:18:24 AI_Player.update()		1010,	1010,	11,	1010,	1100,	111,	1001
2017-01-04 09:18:24 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-04 09:18:24 AI_Player.update()		1010,	1010,	11,	1100,	1010,	101,	111
2017-01-04 09:18:24 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 09:18:24 AI_Player.update()		1010,	101,	1001,	1101,	11,	1010,	110
2017-01-04 09:18:24 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-04 09:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:24 AI_Player.update()	update
2017-01-04 09:18:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:18:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:24 AI_Player.update()	update
2017-01-04 09:18:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:25 AI_Player.update()	Search took648ms
2017-01-04 09:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:25 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-04 09:18:25 AI_Player.update()		1010,	110,	11,	1010,	1100,	111,	1001
2017-01-04 09:18:25 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 09:18:25 AI_Player.update()		1010,	101,	11,	1100,	1010,	101,	111
2017-01-04 09:18:25 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 09:18:25 AI_Player.update()		1010,	101,	1001,	1101,	11,	1010,	110
2017-01-04 09:18:25 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-04 09:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:25 AI_Player.update()	update
2017-01-04 09:18:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:25 AI_Player.update()	update
2017-01-04 09:18:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:26 AI_Player.update()	Search took553ms
2017-01-04 09:18:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:26 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-04 09:18:26 AI_Player.update()		1010,	110,	11,	110,	1100,	111,	1001
2017-01-04 09:18:26 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-04 09:18:26 AI_Player.update()		1010,	101,	11,	11,	1010,	101,	111
2017-01-04 09:18:26 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-04 09:18:26 AI_Player.update()		1010,	101,	1001,	11,	11,	1010,	110
2017-01-04 09:18:26 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-04 09:18:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:26 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:18:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:26 AI_Player.update()	update
2017-01-04 09:18:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:26 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:18:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:26 AI_Player.update()	update
2017-01-04 09:18:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:27 AI_Player.update()	Search took724ms
2017-01-04 09:18:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:27 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-04 09:18:27 AI_Player.update()		110,	11,	110,	1100,	111,	1001,	1010
2017-01-04 09:18:27 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-04 09:18:27 AI_Player.update()		1010,	101,	11,	11,	1010,	101,	111
2017-01-04 09:18:27 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-04 09:18:27 AI_Player.update()		1010,	101,	1001,	11,	11,	1010,	110
2017-01-04 09:18:27 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-04 09:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:27 AI_Player.update()	update
2017-01-04 09:18:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:18:27 AI_Player.update()	Player b has won!
2017-01-04 09:18:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:27 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:18:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:27 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:18:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:27 AI_Player.update()	update
2017-01-04 09:18:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:27 AI_Player.update()	Search took166ms
2017-01-04 09:18:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:27 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-04 09:18:27 AI_Player.update()		1010,	1010,	1100,	11,	1010,	11,	1010
2017-01-04 09:18:27 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-04 09:18:27 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1001,	110
2017-01-04 09:18:27 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 09:18:27 AI_Player.update()		1011,	1010,	111,	1001,	101,	1001,	101
2017-01-04 09:18:27 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1101,	1001
2017-01-04 09:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:27 AI_Player.update()	update
2017-01-04 09:18:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:27 AI_Player.update()	update
2017-01-04 09:18:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:27 AI_Player.update()	Search took120ms
2017-01-04 09:18:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:27 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-04 09:18:27 AI_Player.update()		1010,	1010,	1100,	11,	1010,	110,	1010
2017-01-04 09:18:27 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-04 09:18:27 AI_Player.update()		11,	1010,	1010,	1010,	1100,	11,	110
2017-01-04 09:18:27 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:18:27 AI_Player.update()		1011,	1010,	111,	1001,	101,	1101,	101
2017-01-04 09:18:27 AI_Player.update()		1100,	110,	1101,	1110,	1101,	110,	1001
2017-01-04 09:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:27 AI_Player.update()	update
2017-01-04 09:18:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:27 AI_Player.update()	update
2017-01-04 09:18:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:28 AI_Player.update()	Search took101ms
2017-01-04 09:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:28 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-04 09:18:28 AI_Player.update()		1010,	1100,	11,	1010,	110,	1010,	1010
2017-01-04 09:18:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-04 09:18:28 AI_Player.update()		11,	1010,	1010,	1010,	1100,	11,	110
2017-01-04 09:18:28 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:18:28 AI_Player.update()		1011,	1010,	111,	1001,	101,	1101,	101
2017-01-04 09:18:28 AI_Player.update()		1100,	110,	1101,	1110,	1101,	110,	1001
2017-01-04 09:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:28 AI_Player.update()	update
2017-01-04 09:18:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:28 AI_Player.update()	update
2017-01-04 09:18:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:28 AI_Player.update()	Search took56ms
2017-01-04 09:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:28 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-04 09:18:28 AI_Player.update()		1010,	1100,	11,	1010,	110,	11,	1010
2017-01-04 09:18:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-04 09:18:28 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1001,	110
2017-01-04 09:18:28 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 09:18:28 AI_Player.update()		1011,	1010,	111,	1001,	101,	1001,	101
2017-01-04 09:18:28 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1101,	1001
2017-01-04 09:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:28 AI_Player.update()	update
2017-01-04 09:18:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:28 AI_Player.update()	update
2017-01-04 09:18:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:28 AI_Player.update()	Search took80ms
2017-01-04 09:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:28 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-04 09:18:28 AI_Player.update()		1100,	11,	1010,	110,	11,	1010,	1010
2017-01-04 09:18:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-04 09:18:28 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1001,	110
2017-01-04 09:18:28 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 09:18:28 AI_Player.update()		1011,	1010,	111,	1001,	101,	1001,	101
2017-01-04 09:18:28 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1101,	1001
2017-01-04 09:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:28 AI_Player.update()	update
2017-01-04 09:18:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:28 AI_Player.update()	update
2017-01-04 09:18:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:28 AI_Player.update()	Search took153ms
2017-01-04 09:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:28 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-04 09:18:28 AI_Player.update()		1100,	11,	1010,	110,	11,	1010,	1010
2017-01-04 09:18:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-04 09:18:28 AI_Player.update()		11,	1010,	1010,	1010,	1100,	11,	110
2017-01-04 09:18:28 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:18:28 AI_Player.update()		1011,	1010,	111,	1001,	101,	1101,	101
2017-01-04 09:18:28 AI_Player.update()		1100,	110,	1101,	1110,	1101,	110,	1001
2017-01-04 09:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:28 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:29 AI_Player.update()	update
2017-01-04 09:18:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:29 AI_Player.update()	update
2017-01-04 09:18:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:29 AI_Player.update()	Search took119ms
2017-01-04 09:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:29 AI_Player.update()		110,	11,	111,	1110,	111,	1010,	11
2017-01-04 09:18:29 AI_Player.update()		1100,	11,	1010,	1001,	11,	1010,	1010
2017-01-04 09:18:29 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-04 09:18:29 AI_Player.update()		11,	1010,	1010,	1001,	1100,	11,	110
2017-01-04 09:18:29 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:18:29 AI_Player.update()		1011,	1010,	111,	1010,	101,	1101,	101
2017-01-04 09:18:29 AI_Player.update()		1100,	110,	1101,	1001,	1101,	110,	1001
2017-01-04 09:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:29 AI_Player.update()	update
2017-01-04 09:18:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:29 AI_Player.update()	update
2017-01-04 09:18:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:29 AI_Player.update()	Search took55ms
2017-01-04 09:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:29 AI_Player.update()		110,	11,	111,	1110,	111,	110,	11
2017-01-04 09:18:29 AI_Player.update()		1100,	11,	1010,	1001,	11,	1010,	1010
2017-01-04 09:18:29 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-04 09:18:29 AI_Player.update()		11,	1010,	1010,	1001,	1100,	1001,	110
2017-01-04 09:18:29 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 09:18:29 AI_Player.update()		1011,	1010,	111,	1010,	101,	1001,	101
2017-01-04 09:18:29 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:29 AI_Player.update()	update
2017-01-04 09:18:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:29 AI_Player.update()	update
2017-01-04 09:18:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:29 AI_Player.update()	Search took193ms
2017-01-04 09:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:29 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-04 09:18:29 AI_Player.update()		1100,	11,	1010,	110,	11,	1010,	1010
2017-01-04 09:18:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-04 09:18:29 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1001,	110
2017-01-04 09:18:29 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 09:18:29 AI_Player.update()		1011,	1010,	111,	1001,	101,	1001,	101
2017-01-04 09:18:29 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1101,	1001
2017-01-04 09:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:29 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:30 AI_Player.update()	update
2017-01-04 09:18:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:30 AI_Player.update()	update
2017-01-04 09:18:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:30 AI_Player.update()	Search took81ms
2017-01-04 09:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:30 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-04 09:18:30 AI_Player.update()		1100,	11,	1010,	110,	11,	1010,	1010
2017-01-04 09:18:30 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-04 09:18:30 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1001,	110
2017-01-04 09:18:30 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 09:18:30 AI_Player.update()		101,	1011,	1010,	111,	1001,	101,	1001
2017-01-04 09:18:30 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1101,	1001
2017-01-04 09:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:30 AI_Player.update()	update
2017-01-04 09:18:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:18:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:30 AI_Player.update()	update
2017-01-04 09:18:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:30 AI_Player.update()	Search took150ms
2017-01-04 09:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:30 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 09:18:30 AI_Player.update()		1100,	11,	1010,	1001,	11,	1010,	1010
2017-01-04 09:18:30 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 09:18:30 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1001,	110
2017-01-04 09:18:30 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-04 09:18:30 AI_Player.update()		101,	1011,	1010,	1110,	1001,	101,	1001
2017-01-04 09:18:30 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:30 AI_Player.update()	update
2017-01-04 09:18:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:30 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:30 AI_Player.update()	update
2017-01-04 09:18:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:31 AI_Player.update()	Search took451ms
2017-01-04 09:18:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:31 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 09:18:31 AI_Player.update()		1010,	1100,	11,	1010,	1001,	11,	1010
2017-01-04 09:18:31 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 09:18:31 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1001,	110
2017-01-04 09:18:31 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-04 09:18:31 AI_Player.update()		101,	1011,	1010,	1110,	1001,	101,	1001
2017-01-04 09:18:31 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:18:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:18:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:31 AI_Player.update()	update
2017-01-04 09:18:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	2 5
2017-01-04 09:18:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:31 AI_Player.update()	update
2017-01-04 09:18:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:31 AI_Player.update()	Search took506ms
2017-01-04 09:18:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:31 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 09:18:31 AI_Player.update()		1010,	1100,	11,	1010,	1001,	11,	1010
2017-01-04 09:18:31 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 09:18:31 AI_Player.update()		1010,	1010,	1010,	1100,	1001,	110,	11
2017-01-04 09:18:32 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-04 09:18:32 AI_Player.update()		101,	1011,	1010,	1110,	1001,	101,	1001
2017-01-04 09:18:32 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:18:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	2 5
2017-01-04 09:18:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:32 AI_Player.update()	update
2017-01-04 09:18:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:18:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:32 AI_Player.update()	update
2017-01-04 09:18:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:33 AI_Player.update()	Search took798ms
2017-01-04 09:18:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:33 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 09:18:33 AI_Player.update()		1010,	101,	11,	1010,	1001,	11,	1010
2017-01-04 09:18:33 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 09:18:33 AI_Player.update()		1010,	110,	1010,	1100,	1001,	110,	11
2017-01-04 09:18:33 AI_Player.update()		1110,	1011,	1101,	111,	1011,	11,	1011
2017-01-04 09:18:33 AI_Player.update()		101,	110,	1010,	1110,	1001,	101,	1001
2017-01-04 09:18:33 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:18:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:18:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:33 AI_Player.update()	update
2017-01-04 09:18:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	3 6
2017-01-04 09:18:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:33 AI_Player.update()	update
2017-01-04 09:18:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:33 AI_Player.update()	Search took171ms
2017-01-04 09:18:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:33 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 09:18:33 AI_Player.update()		1010,	1100,	11,	1010,	1001,	11,	1010
2017-01-04 09:18:33 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 09:18:33 AI_Player.update()		1010,	1010,	1010,	1100,	1001,	110,	11
2017-01-04 09:18:33 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-04 09:18:33 AI_Player.update()		101,	1011,	1010,	1110,	1001,	101,	1001
2017-01-04 09:18:33 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:18:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	3 6
2017-01-04 09:18:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:33 AI_Player.update()	update
2017-01-04 09:18:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:18:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:33 AI_Player.update()	update
2017-01-04 09:18:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:34 AI_Player.update()	Search took593ms
2017-01-04 09:18:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:34 AI_Player.update()		110,	11,	111,	110,	111,	1101,	11
2017-01-04 09:18:34 AI_Player.update()		1010,	1100,	11,	1010,	1001,	110,	1010
2017-01-04 09:18:34 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-04 09:18:34 AI_Player.update()		1010,	1010,	1010,	1100,	1001,	1010,	11
2017-01-04 09:18:34 AI_Player.update()		1110,	110,	1101,	111,	1011,	110,	1011
2017-01-04 09:18:34 AI_Player.update()		101,	1011,	1010,	1110,	1001,	11,	1001
2017-01-04 09:18:34 AI_Player.update()		1100,	110,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:34 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:18:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:34 AI_Player.update()	update
2017-01-04 09:18:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:34 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:18:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:34 AI_Player.update()	update
2017-01-04 09:18:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:35 AI_Player.update()	Search took626ms
2017-01-04 09:18:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:35 AI_Player.update()		110,	11,	111,	110,	111,	1101,	11
2017-01-04 09:18:35 AI_Player.update()		1010,	1100,	11,	1010,	1001,	110,	1010
2017-01-04 09:18:35 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-04 09:18:35 AI_Player.update()		11,	1010,	1010,	1010,	1100,	1001,	1010
2017-01-04 09:18:35 AI_Player.update()		1110,	110,	1101,	111,	1011,	110,	1011
2017-01-04 09:18:35 AI_Player.update()		101,	1011,	1010,	1110,	1001,	11,	1001
2017-01-04 09:18:35 AI_Player.update()		1100,	110,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:18:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:35 AI_Player.update()	update
2017-01-04 09:18:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:18:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:35 AI_Player.update()	update
2017-01-04 09:18:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:35 AI_Player.update()	Search took746ms
2017-01-04 09:18:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:35 AI_Player.update()		110,	11,	111,	110,	111,	1101,	11
2017-01-04 09:18:35 AI_Player.update()		1010,	1100,	11,	1010,	1001,	110,	1010
2017-01-04 09:18:35 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-04 09:18:35 AI_Player.update()		1010,	11,	1010,	1010,	1010,	1100,	1001
2017-01-04 09:18:35 AI_Player.update()		1110,	110,	1101,	111,	1011,	110,	1011
2017-01-04 09:18:35 AI_Player.update()		101,	1011,	1010,	1110,	1001,	11,	1001
2017-01-04 09:18:35 AI_Player.update()		1100,	110,	1101,	1001,	1101,	101,	1001
2017-01-04 09:18:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:35 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:36 AI_Player.update()	update
2017-01-04 09:18:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:36 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:18:36 AI_Player.update()	Player b has won!
2017-01-04 09:18:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:36 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:18:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:36 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:18:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:36 AI_Player.update()	update
2017-01-04 09:18:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:36 AI_Player.update()	Search took445ms
2017-01-04 09:18:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:36 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:18:36 AI_Player.update()		1110,	101,	11,	1101,	1101,	1100,	11
2017-01-04 09:18:36 AI_Player.update()		1110,	1011,	1110,	1010,	111,	110,	1011
2017-01-04 09:18:36 AI_Player.update()		1010,	1001,	1011,	1010,	101,	11,	1001
2017-01-04 09:18:36 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 09:18:36 AI_Player.update()		1100,	110,	1010,	1010,	1001,	1010,	101
2017-01-04 09:18:36 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:36 AI_Player.update()	update
2017-01-04 09:18:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:36 AI_Player.update()	update
2017-01-04 09:18:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:37 AI_Player.update()	Search took467ms
2017-01-04 09:18:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:37 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:18:37 AI_Player.update()		1110,	1011,	11,	1101,	1101,	1100,	11
2017-01-04 09:18:37 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 09:18:37 AI_Player.update()		1010,	110,	1011,	1010,	101,	11,	1001
2017-01-04 09:18:37 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 09:18:37 AI_Player.update()		1100,	110,	1010,	1010,	1001,	1010,	101
2017-01-04 09:18:37 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:37 AI_Player.update()	update
2017-01-04 09:18:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:37 AI_Player.update()	update
2017-01-04 09:18:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:37 AI_Player.update()	Search took372ms
2017-01-04 09:18:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:37 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:18:37 AI_Player.update()		1110,	1011,	11,	1101,	1101,	1100,	11
2017-01-04 09:18:37 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 09:18:37 AI_Player.update()		1010,	110,	1011,	1010,	101,	11,	1001
2017-01-04 09:18:37 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 09:18:37 AI_Player.update()		101,	1100,	110,	1010,	1010,	1001,	1010
2017-01-04 09:18:37 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:37 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:38 AI_Player.update()	update
2017-01-04 09:18:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:38 AI_Player.update()	update
2017-01-04 09:18:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:38 AI_Player.update()	Search took512ms
2017-01-04 09:18:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:38 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:18:38 AI_Player.update()		1011,	11,	1101,	1101,	1100,	11,	1110
2017-01-04 09:18:38 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 09:18:38 AI_Player.update()		1010,	110,	1011,	1010,	101,	11,	1001
2017-01-04 09:18:38 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 09:18:38 AI_Player.update()		101,	1100,	110,	1010,	1010,	1001,	1010
2017-01-04 09:18:38 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:38 AI_Player.update()	update
2017-01-04 09:18:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:38 AI_Player.update()	update
2017-01-04 09:18:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:38 AI_Player.update()	Search took92ms
2017-01-04 09:18:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:38 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-04 09:18:38 AI_Player.update()		1011,	11,	1101,	1101,	1100,	110,	1110
2017-01-04 09:18:38 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-04 09:18:38 AI_Player.update()		1010,	110,	1011,	1010,	101,	110,	1001
2017-01-04 09:18:38 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 09:18:38 AI_Player.update()		101,	1100,	110,	1010,	1010,	1100,	1010
2017-01-04 09:18:38 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-04 09:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:38 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:39 AI_Player.update()	update
2017-01-04 09:18:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:39 AI_Player.update()	update
2017-01-04 09:18:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:39 AI_Player.update()	Search took219ms
2017-01-04 09:18:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:39 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:18:39 AI_Player.update()		1011,	11,	1101,	1101,	1100,	11,	1110
2017-01-04 09:18:39 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 09:18:39 AI_Player.update()		1010,	110,	1011,	1010,	101,	11,	1001
2017-01-04 09:18:39 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 09:18:39 AI_Player.update()		101,	1100,	110,	1010,	1010,	1001,	1010
2017-01-04 09:18:39 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:39 AI_Player.update()	update
2017-01-04 09:18:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:39 AI_Player.update()	update
2017-01-04 09:18:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:39 AI_Player.update()	Search took200ms
2017-01-04 09:18:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:39 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:18:39 AI_Player.update()		1011,	11,	1101,	1101,	1100,	11,	1110
2017-01-04 09:18:39 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 09:18:39 AI_Player.update()		110,	1011,	1010,	101,	11,	1001,	1010
2017-01-04 09:18:39 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 09:18:39 AI_Player.update()		101,	1100,	110,	1010,	1010,	1001,	1010
2017-01-04 09:18:39 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:39 AI_Player.update()	update
2017-01-04 09:18:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:40 AI_Player.update()	update
2017-01-04 09:18:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:40 AI_Player.update()	Search took741ms
2017-01-04 09:18:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:40 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 09:18:40 AI_Player.update()		1011,	1001,	1101,	1101,	1100,	11,	1110
2017-01-04 09:18:40 AI_Player.update()		1110,	1011,	1110,	1010,	111,	110,	1011
2017-01-04 09:18:40 AI_Player.update()		110,	110,	1010,	101,	11,	1001,	1010
2017-01-04 09:18:40 AI_Player.update()		1110,	1100,	1101,	11,	1011,	110,	1011
2017-01-04 09:18:40 AI_Player.update()		101,	101,	110,	1010,	1010,	1001,	1010
2017-01-04 09:18:40 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:40 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:40 AI_Player.update()	update
2017-01-04 09:18:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:40 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:40 AI_Player.update()	update
2017-01-04 09:18:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:41 AI_Player.update()	Search took479ms
2017-01-04 09:18:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:41 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 09:18:41 AI_Player.update()		1011,	1011,	1101,	1101,	1100,	11,	1110
2017-01-04 09:18:41 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-04 09:18:41 AI_Player.update()		110,	1100,	1010,	101,	11,	1001,	1010
2017-01-04 09:18:41 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 09:18:41 AI_Player.update()		101,	101,	110,	1010,	1010,	1001,	1010
2017-01-04 09:18:41 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:41 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:41 AI_Player.update()	update
2017-01-04 09:18:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:41 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:41 AI_Player.update()	update
2017-01-04 09:18:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:42 AI_Player.update()	Search took601ms
2017-01-04 09:18:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:42 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 09:18:42 AI_Player.update()		1110,	1011,	1011,	1101,	1101,	1100,	11
2017-01-04 09:18:42 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-04 09:18:42 AI_Player.update()		110,	1100,	1010,	101,	11,	1001,	1010
2017-01-04 09:18:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 09:18:42 AI_Player.update()		101,	101,	110,	1010,	1010,	1001,	1010
2017-01-04 09:18:42 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:42 AI_Player.update()	update
2017-01-04 09:18:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:18:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:42 AI_Player.update()	update
2017-01-04 09:18:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:42 AI_Player.update()	Search took525ms
2017-01-04 09:18:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:42 AI_Player.update()		110,	1001,	111,	1101,	111,	101,	11
2017-01-04 09:18:42 AI_Player.update()		1110,	1011,	1011,	1010,	1101,	1100,	11
2017-01-04 09:18:42 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-04 09:18:42 AI_Player.update()		110,	1100,	1010,	11,	11,	1001,	1010
2017-01-04 09:18:42 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 09:18:42 AI_Player.update()		101,	101,	110,	1011,	1010,	1001,	1010
2017-01-04 09:18:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 09:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:42 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:18:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:43 AI_Player.update()	update
2017-01-04 09:18:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:43 AI_Player.update()	update
2017-01-04 09:18:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:43 AI_Player.update()	Search took608ms
2017-01-04 09:18:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:43 AI_Player.update()		110,	1001,	111,	1101,	111,	1100,	11
2017-01-04 09:18:43 AI_Player.update()		1110,	1011,	1011,	1010,	1101,	110,	11
2017-01-04 09:18:43 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:43 AI_Player.update()		110,	1100,	1010,	11,	11,	110,	1010
2017-01-04 09:18:43 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:18:43 AI_Player.update()		101,	101,	110,	1011,	1010,	1100,	1010
2017-01-04 09:18:43 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-04 09:18:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:43 AI_Player.update()	update
2017-01-04 09:18:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:18:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:44 AI_Player.update()	update
2017-01-04 09:18:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:44 AI_Player.update()	Search took626ms
2017-01-04 09:18:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:44 AI_Player.update()		110,	1011,	111,	1101,	111,	1100,	11
2017-01-04 09:18:44 AI_Player.update()		1110,	110,	1011,	1010,	1101,	110,	11
2017-01-04 09:18:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:44 AI_Player.update()		110,	101,	1010,	11,	11,	110,	1010
2017-01-04 09:18:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:18:44 AI_Player.update()		101,	11,	110,	1011,	1010,	1100,	1010
2017-01-04 09:18:44 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:44 AI_Player.update()	update
2017-01-04 09:18:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:18:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:44 AI_Player.update()	update
2017-01-04 09:18:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:45 AI_Player.update()	Search took744ms
2017-01-04 09:18:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:45 AI_Player.update()		110,	1011,	111,	1101,	111,	110,	11
2017-01-04 09:18:45 AI_Player.update()		1110,	110,	1011,	1010,	1101,	1001,	11
2017-01-04 09:18:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-04 09:18:45 AI_Player.update()		110,	101,	1010,	11,	11,	1001,	1010
2017-01-04 09:18:45 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:18:45 AI_Player.update()		101,	11,	110,	1011,	1010,	101,	1010
2017-01-04 09:18:45 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-04 09:18:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:18:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:45 AI_Player.update()	update
2017-01-04 09:18:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:45 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:18:45 AI_Player.update()	Player b has won!
2017-01-04 09:18:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:45 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:18:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:45 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:18:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:45 AI_Player.update()	update
2017-01-04 09:18:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:45 AI_Player.update()	Search took30ms
2017-01-04 09:18:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:45 AI_Player.update()		110,	1100,	111,	1110,	111,	1100,	11
2017-01-04 09:18:45 AI_Player.update()		1100,	1010,	1010,	1010,	1001,	111,	101
2017-01-04 09:18:45 AI_Player.update()		1110,	110,	1110,	1011,	111,	1001,	1011
2017-01-04 09:18:45 AI_Player.update()		1100,	111,	1100,	101,	11,	1100,	1010
2017-01-04 09:18:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:18:45 AI_Player.update()		1110,	1100,	1010,	101,	110,	11,	1110
2017-01-04 09:18:45 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	11,	1001
2017-01-04 09:18:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:45 AI_Player.update()	update
2017-01-04 09:18:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:46 AI_Player.update()	update
2017-01-04 09:18:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:46 AI_Player.update()	Search took60ms
2017-01-04 09:18:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:46 AI_Player.update()		110,	1010,	111,	1110,	111,	1100,	11
2017-01-04 09:18:46 AI_Player.update()		1100,	110,	1010,	1010,	1001,	111,	101
2017-01-04 09:18:46 AI_Player.update()		1110,	111,	1110,	1011,	111,	1001,	1011
2017-01-04 09:18:46 AI_Player.update()		1100,	1010,	1100,	101,	11,	1100,	1010
2017-01-04 09:18:46 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:18:46 AI_Player.update()		1110,	1101,	1010,	101,	110,	11,	1110
2017-01-04 09:18:46 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-04 09:18:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:46 AI_Player.update()	update
2017-01-04 09:18:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:46 AI_Player.update()	update
2017-01-04 09:18:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:46 AI_Player.update()	Search took28ms
2017-01-04 09:18:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:46 AI_Player.update()		110,	110,	111,	1110,	111,	1100,	11
2017-01-04 09:18:46 AI_Player.update()		1100,	111,	1010,	1010,	1001,	111,	101
2017-01-04 09:18:46 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 09:18:46 AI_Player.update()		1100,	1100,	1100,	101,	11,	1100,	1010
2017-01-04 09:18:46 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:18:46 AI_Player.update()		1110,	1100,	1010,	101,	110,	11,	1110
2017-01-04 09:18:46 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-04 09:18:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:46 AI_Player.update()	update
2017-01-04 09:18:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:46 AI_Player.update()	update
2017-01-04 09:18:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:46 AI_Player.update()	Search took127ms
2017-01-04 09:18:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:46 AI_Player.update()		110,	110,	111,	1110,	111,	111,	11
2017-01-04 09:18:46 AI_Player.update()		1100,	111,	1010,	1010,	1001,	1001,	101
2017-01-04 09:18:46 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1100,	1011
2017-01-04 09:18:46 AI_Player.update()		1100,	1100,	1100,	101,	11,	1001,	1010
2017-01-04 09:18:46 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	11,	1011
2017-01-04 09:18:46 AI_Player.update()		1110,	1100,	1010,	101,	110,	11,	1110
2017-01-04 09:18:46 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1100,	1001
2017-01-04 09:18:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:46 AI_Player.update()	update
2017-01-04 09:18:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:46 AI_Player.update()	update
2017-01-04 09:18:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:47 AI_Player.update()	Search took165ms
2017-01-04 09:18:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:47 AI_Player.update()		110,	110,	111,	1110,	111,	111,	11
2017-01-04 09:18:47 AI_Player.update()		111,	1010,	1010,	1001,	1001,	101,	1100
2017-01-04 09:18:47 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1100,	1011
2017-01-04 09:18:47 AI_Player.update()		1100,	1100,	1100,	101,	11,	1001,	1010
2017-01-04 09:18:47 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	11,	1011
2017-01-04 09:18:47 AI_Player.update()		1110,	1100,	1010,	101,	110,	11,	1110
2017-01-04 09:18:47 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1100,	1001
2017-01-04 09:18:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:47 AI_Player.update()	update
2017-01-04 09:18:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:47 AI_Player.update()	update
2017-01-04 09:18:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:47 AI_Player.update()	Search took319ms
2017-01-04 09:18:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:47 AI_Player.update()		110,	1010,	111,	1110,	111,	111,	11
2017-01-04 09:18:47 AI_Player.update()		111,	1010,	1010,	1001,	1001,	101,	1100
2017-01-04 09:18:47 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1100,	1011
2017-01-04 09:18:47 AI_Player.update()		1100,	1101,	1100,	101,	11,	1001,	1010
2017-01-04 09:18:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-04 09:18:47 AI_Player.update()		1110,	1010,	1010,	101,	110,	11,	1110
2017-01-04 09:18:47 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1100,	1001
2017-01-04 09:18:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:47 AI_Player.update()	update
2017-01-04 09:18:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:47 AI_Player.update()	update
2017-01-04 09:18:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:47 AI_Player.update()	Search took139ms
2017-01-04 09:18:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:47 AI_Player.update()		110,	1010,	111,	1110,	111,	111,	11
2017-01-04 09:18:47 AI_Player.update()		111,	1010,	1010,	1001,	1001,	101,	1100
2017-01-04 09:18:47 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1100,	1011
2017-01-04 09:18:47 AI_Player.update()		1100,	1101,	1100,	101,	11,	1001,	1010
2017-01-04 09:18:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-04 09:18:47 AI_Player.update()		1010,	1010,	101,	110,	11,	1110,	1110
2017-01-04 09:18:47 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1100,	1001
2017-01-04 09:18:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:47 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:48 AI_Player.update()	update
2017-01-04 09:18:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:48 AI_Player.update()	update
2017-01-04 09:18:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:48 AI_Player.update()	Search took208ms
2017-01-04 09:18:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:48 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 09:18:48 AI_Player.update()		111,	1010,	1010,	1001,	1001,	1100,	1100
2017-01-04 09:18:48 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1001,	1011
2017-01-04 09:18:48 AI_Player.update()		1100,	1101,	1100,	101,	11,	11,	1010
2017-01-04 09:18:48 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-04 09:18:48 AI_Player.update()		1010,	1010,	101,	110,	11,	1100,	1110
2017-01-04 09:18:48 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-04 09:18:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:48 AI_Player.update()	update
2017-01-04 09:18:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:48 AI_Player.update()	update
2017-01-04 09:18:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:48 AI_Player.update()	Search took288ms
2017-01-04 09:18:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:48 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:18:48 AI_Player.update()		111,	1010,	1010,	1011,	1001,	1100,	1100
2017-01-04 09:18:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:48 AI_Player.update()		1100,	1101,	1100,	1010,	11,	11,	1010
2017-01-04 09:18:48 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 09:18:48 AI_Player.update()		1010,	1010,	101,	1101,	11,	1100,	1110
2017-01-04 09:18:48 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-04 09:18:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:48 AI_Player.update()	update
2017-01-04 09:18:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:49 AI_Player.update()	update
2017-01-04 09:18:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:49 AI_Player.update()	Search took628ms
2017-01-04 09:18:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:49 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:18:49 AI_Player.update()		111,	1010,	1010,	1011,	1001,	1100,	1100
2017-01-04 09:18:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:49 AI_Player.update()		1010,	1100,	1101,	1100,	1010,	11,	11
2017-01-04 09:18:49 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 09:18:49 AI_Player.update()		1010,	1010,	101,	1101,	11,	1100,	1110
2017-01-04 09:18:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-04 09:18:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:49 AI_Player.update()	update
2017-01-04 09:18:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:49 AI_Player.update()	update
2017-01-04 09:18:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:50 AI_Player.update()	Search took764ms
2017-01-04 09:18:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:50 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 09:18:50 AI_Player.update()		111,	1010,	1010,	1011,	1001,	1100,	1100
2017-01-04 09:18:50 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:50 AI_Player.update()		1010,	1100,	1101,	1100,	1010,	11,	11
2017-01-04 09:18:50 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 09:18:50 AI_Player.update()		1010,	1100,	101,	1101,	11,	1100,	1110
2017-01-04 09:18:50 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	111,	1001
2017-01-04 09:18:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:50 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:50 AI_Player.update()	update
2017-01-04 09:18:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:50 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:50 AI_Player.update()	update
2017-01-04 09:18:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:51 AI_Player.update()	Search took158ms
2017-01-04 09:18:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:51 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 09:18:51 AI_Player.update()		111,	1010,	1010,	1011,	1001,	1100,	1100
2017-01-04 09:18:51 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:51 AI_Player.update()		1100,	1101,	1100,	1010,	11,	11,	1010
2017-01-04 09:18:51 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 09:18:51 AI_Player.update()		1010,	1100,	101,	1101,	11,	1100,	1110
2017-01-04 09:18:51 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	111,	1001
2017-01-04 09:18:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:18:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:51 AI_Player.update()	update
2017-01-04 09:18:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:18:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:51 AI_Player.update()	update
2017-01-04 09:18:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:51 AI_Player.update()	Search took522ms
2017-01-04 09:18:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:51 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:18:51 AI_Player.update()		111,	1010,	1010,	1011,	1001,	1100,	1100
2017-01-04 09:18:51 AI_Player.update()		1110,	1101,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:51 AI_Player.update()		1100,	1100,	1100,	1010,	11,	11,	1010
2017-01-04 09:18:51 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 09:18:51 AI_Player.update()		1010,	1010,	101,	1101,	11,	1100,	1110
2017-01-04 09:18:51 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-04 09:18:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:18:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:51 AI_Player.update()	update
2017-01-04 09:18:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:18:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:51 AI_Player.update()	update
2017-01-04 09:18:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:52 AI_Player.update()	Search took339ms
2017-01-04 09:18:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:52 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:18:52 AI_Player.update()		1010,	1010,	1011,	1001,	1100,	1100,	111
2017-01-04 09:18:52 AI_Player.update()		1110,	1101,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:52 AI_Player.update()		1100,	1100,	1100,	1010,	11,	11,	1010
2017-01-04 09:18:52 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 09:18:52 AI_Player.update()		1010,	1010,	101,	1101,	11,	1100,	1110
2017-01-04 09:18:52 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-04 09:18:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:18:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:52 AI_Player.update()	update
2017-01-04 09:18:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:18:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:52 AI_Player.update()	update
2017-01-04 09:18:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:52 AI_Player.update()	Search took75ms
2017-01-04 09:18:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:52 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:18:52 AI_Player.update()		1010,	1010,	1011,	1001,	1100,	1100,	111
2017-01-04 09:18:52 AI_Player.update()		1110,	1101,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:52 AI_Player.update()		1100,	1100,	1010,	11,	11,	1010,	1100
2017-01-04 09:18:52 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 09:18:52 AI_Player.update()		1010,	1010,	101,	1101,	11,	1100,	1110
2017-01-04 09:18:52 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-04 09:18:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:18:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:52 AI_Player.update()	update
2017-01-04 09:18:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:52 AI_Player.update()	update
2017-01-04 09:18:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:53 AI_Player.update()	Search took297ms
2017-01-04 09:18:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:53 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 09:18:53 AI_Player.update()		1010,	1010,	1011,	1001,	1100,	1100,	111
2017-01-04 09:18:53 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1001,	1011
2017-01-04 09:18:53 AI_Player.update()		1100,	1100,	1010,	101,	11,	1010,	1100
2017-01-04 09:18:53 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1110,	1011
2017-01-04 09:18:53 AI_Player.update()		1010,	1010,	101,	110,	11,	1100,	1110
2017-01-04 09:18:53 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-04 09:18:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:18:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:53 AI_Player.update()	update
2017-01-04 09:18:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:18:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:53 AI_Player.update()	update
2017-01-04 09:18:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:53 AI_Player.update()	Search took100ms
2017-01-04 09:18:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:53 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:18:53 AI_Player.update()		1010,	1010,	1011,	1001,	1100,	1100,	111
2017-01-04 09:18:53 AI_Player.update()		1110,	1101,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:53 AI_Player.update()		1100,	1100,	1010,	11,	11,	1010,	1100
2017-01-04 09:18:53 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 09:18:53 AI_Player.update()		1010,	1010,	101,	1101,	11,	1100,	1110
2017-01-04 09:18:53 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-04 09:18:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:18:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:53 AI_Player.update()	update
2017-01-04 09:18:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:18:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:53 AI_Player.update()	update
2017-01-04 09:18:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:53 AI_Player.update()	Search took133ms
2017-01-04 09:18:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:53 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:18:53 AI_Player.update()		1010,	1101,	1011,	1001,	1100,	1100,	111
2017-01-04 09:18:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-04 09:18:53 AI_Player.update()		1100,	1100,	1010,	11,	11,	1010,	1100
2017-01-04 09:18:53 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1110,	1011
2017-01-04 09:18:53 AI_Player.update()		1010,	110,	101,	1101,	11,	1100,	1110
2017-01-04 09:18:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	111,	1001
2017-01-04 09:18:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:18:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:53 AI_Player.update()	update
2017-01-04 09:18:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:18:53 AI_Player.update()	Player b has won!
2017-01-04 09:18:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:53 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:18:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:18:53 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:18:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:53 AI_Player.update()	update
2017-01-04 09:18:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:53 AI_Player.update()	Search took17ms
2017-01-04 09:18:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:53 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-04 09:18:53 AI_Player.update()		101,	110,	1101,	1010,	110,	1100,	1010
2017-01-04 09:18:53 AI_Player.update()		1110,	1001,	1110,	11,	111,	1110,	1011
2017-01-04 09:18:53 AI_Player.update()		1001,	1001,	1101,	111,	1110,	11,	1101
2017-01-04 09:18:53 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-04 09:18:53 AI_Player.update()		1001,	1010,	11,	1110,	1100,	1110,	1011
2017-01-04 09:18:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 09:18:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:54 AI_Player.update()	update
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:54 AI_Player.update()	update
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:54 AI_Player.update()	Search took111ms
2017-01-04 09:18:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:54 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-04 09:18:54 AI_Player.update()		101,	110,	1101,	1010,	110,	1010,	1010
2017-01-04 09:18:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-04 09:18:54 AI_Player.update()		1001,	1001,	1101,	111,	1110,	1110,	1101
2017-01-04 09:18:54 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-04 09:18:54 AI_Player.update()		1001,	1010,	11,	1110,	1100,	1011,	1011
2017-01-04 09:18:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1110,	1001
2017-01-04 09:18:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:54 AI_Player.update()	update
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:54 AI_Player.update()	update
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:54 AI_Player.update()	Search took41ms
2017-01-04 09:18:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:54 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-04 09:18:54 AI_Player.update()		110,	1101,	1010,	110,	1010,	1010,	101
2017-01-04 09:18:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-04 09:18:54 AI_Player.update()		1001,	1001,	1101,	111,	1110,	1110,	1101
2017-01-04 09:18:54 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-04 09:18:54 AI_Player.update()		1001,	1010,	11,	1110,	1100,	1011,	1011
2017-01-04 09:18:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1110,	1001
2017-01-04 09:18:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:54 AI_Player.update()	update
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:54 AI_Player.update()	update
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:54 AI_Player.update()	Search took37ms
2017-01-04 09:18:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:54 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 09:18:54 AI_Player.update()		110,	1001,	1010,	110,	1010,	1010,	101
2017-01-04 09:18:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-04 09:18:54 AI_Player.update()		1001,	11,	1101,	111,	1110,	1110,	1101
2017-01-04 09:18:54 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-04 09:18:54 AI_Player.update()		1001,	1010,	11,	1110,	1100,	1011,	1011
2017-01-04 09:18:54 AI_Player.update()		1100,	11,	1101,	11,	1101,	1110,	1001
2017-01-04 09:18:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:18:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:54 AI_Player.update()	update
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:55 AI_Player.update()	update
2017-01-04 09:18:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:55 AI_Player.update()	Search took122ms
2017-01-04 09:18:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:55 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 09:18:55 AI_Player.update()		110,	1001,	1010,	110,	1010,	1010,	101
2017-01-04 09:18:55 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-04 09:18:55 AI_Player.update()		11,	1101,	111,	1110,	1110,	1101,	1001
2017-01-04 09:18:55 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-04 09:18:55 AI_Player.update()		1001,	1010,	11,	1110,	1100,	1011,	1011
2017-01-04 09:18:55 AI_Player.update()		1100,	11,	1101,	11,	1101,	1110,	1001
2017-01-04 09:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:55 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:55 AI_Player.update()	update
2017-01-04 09:18:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:55 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:55 AI_Player.update()	update
2017-01-04 09:18:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:55 AI_Player.update()	Search took21ms
2017-01-04 09:18:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:55 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 09:18:55 AI_Player.update()		1001,	1010,	110,	1010,	1010,	101,	110
2017-01-04 09:18:55 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-04 09:18:55 AI_Player.update()		11,	1101,	111,	1110,	1110,	1101,	1001
2017-01-04 09:18:55 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-04 09:18:55 AI_Player.update()		1001,	1010,	11,	1110,	1100,	1011,	1011
2017-01-04 09:18:55 AI_Player.update()		1100,	11,	1101,	11,	1101,	1110,	1001
2017-01-04 09:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:55 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:55 AI_Player.update()	update
2017-01-04 09:18:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:55 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:55 AI_Player.update()	update
2017-01-04 09:18:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:56 AI_Player.update()	Search took513ms
2017-01-04 09:18:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:56 AI_Player.update()		110,	1101,	111,	11,	111,	1110,	11
2017-01-04 09:18:56 AI_Player.update()		1001,	1010,	110,	1010,	1010,	1010,	110
2017-01-04 09:18:56 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 09:18:56 AI_Player.update()		11,	1101,	111,	1110,	1110,	1100,	1001
2017-01-04 09:18:56 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1101,	1011
2017-01-04 09:18:56 AI_Player.update()		1001,	1010,	11,	1110,	1100,	11,	1011
2017-01-04 09:18:56 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 09:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:56 AI_Player.update()	update
2017-01-04 09:18:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:56 AI_Player.update()	update
2017-01-04 09:18:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:56 AI_Player.update()	Search took127ms
2017-01-04 09:18:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:56 AI_Player.update()		110,	1101,	111,	11,	111,	1110,	11
2017-01-04 09:18:56 AI_Player.update()		1010,	110,	1010,	1010,	1010,	110,	1001
2017-01-04 09:18:56 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 09:18:56 AI_Player.update()		11,	1101,	111,	1110,	1110,	1100,	1001
2017-01-04 09:18:56 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1101,	1011
2017-01-04 09:18:56 AI_Player.update()		1001,	1010,	11,	1110,	1100,	11,	1011
2017-01-04 09:18:56 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 09:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:56 AI_Player.update()	update
2017-01-04 09:18:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:56 AI_Player.update()	update
2017-01-04 09:18:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:56 AI_Player.update()	Search took341ms
2017-01-04 09:18:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:56 AI_Player.update()		110,	1101,	111,	11,	111,	1110,	11
2017-01-04 09:18:56 AI_Player.update()		110,	1010,	1010,	1010,	110,	1001,	1010
2017-01-04 09:18:56 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 09:18:56 AI_Player.update()		11,	1101,	111,	1110,	1110,	1100,	1001
2017-01-04 09:18:56 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1101,	1011
2017-01-04 09:18:56 AI_Player.update()		1001,	1010,	11,	1110,	1100,	11,	1011
2017-01-04 09:18:56 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 09:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:56 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:18:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:57 AI_Player.update()	update
2017-01-04 09:18:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:57 AI_Player.update()	update
2017-01-04 09:18:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:57 AI_Player.update()	Search took184ms
2017-01-04 09:18:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:57 AI_Player.update()		110,	1010,	111,	11,	111,	1110,	11
2017-01-04 09:18:57 AI_Player.update()		110,	1001,	1010,	1010,	110,	1001,	1010
2017-01-04 09:18:57 AI_Player.update()		1110,	1101,	1110,	11,	111,	101,	1011
2017-01-04 09:18:57 AI_Player.update()		11,	1010,	111,	1110,	1110,	1100,	1001
2017-01-04 09:18:57 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1101,	1011
2017-01-04 09:18:57 AI_Player.update()		1001,	11,	11,	1110,	1100,	11,	1011
2017-01-04 09:18:57 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1011,	1001
2017-01-04 09:18:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:57 AI_Player.update()	update
2017-01-04 09:18:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:57 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:57 AI_Player.update()	update
2017-01-04 09:18:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:58 AI_Player.update()	Search took542ms
2017-01-04 09:18:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:58 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-04 09:18:58 AI_Player.update()		110,	1001,	1010,	1010,	110,	101,	1010
2017-01-04 09:18:58 AI_Player.update()		1110,	1101,	1110,	11,	111,	1100,	1011
2017-01-04 09:18:58 AI_Player.update()		11,	1010,	111,	1110,	1110,	1101,	1001
2017-01-04 09:18:58 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-04 09:18:58 AI_Player.update()		1001,	11,	11,	1110,	1100,	1011,	1011
2017-01-04 09:18:58 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1110,	1001
2017-01-04 09:18:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:18:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:58 AI_Player.update()	update
2017-01-04 09:18:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:18:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:58 AI_Player.update()	update
2017-01-04 09:18:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:58 AI_Player.update()	Search took158ms
2017-01-04 09:18:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:58 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-04 09:18:58 AI_Player.update()		110,	1001,	1010,	11,	110,	101,	1010
2017-01-04 09:18:58 AI_Player.update()		1110,	1101,	1110,	1110,	111,	1100,	1011
2017-01-04 09:18:58 AI_Player.update()		11,	1010,	111,	11,	1110,	1101,	1001
2017-01-04 09:18:58 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	11,	1011
2017-01-04 09:18:58 AI_Player.update()		1001,	11,	11,	11,	1100,	1011,	1011
2017-01-04 09:18:58 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1110,	1001
2017-01-04 09:18:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:18:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:58 AI_Player.update()	update
2017-01-04 09:18:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:58 AI_Player.update()	update
2017-01-04 09:18:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:18:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:18:59 AI_Player.update()	Search took698ms
2017-01-04 09:18:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:59 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-04 09:18:59 AI_Player.update()		110,	1101,	1010,	11,	110,	101,	1010
2017-01-04 09:18:59 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-04 09:18:59 AI_Player.update()		11,	1010,	111,	11,	1110,	1101,	1001
2017-01-04 09:18:59 AI_Player.update()		1110,	11,	1101,	1110,	1011,	11,	1011
2017-01-04 09:18:59 AI_Player.update()		1001,	1101,	11,	11,	1100,	1011,	1011
2017-01-04 09:18:59 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1110,	1001
2017-01-04 09:18:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:18:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:59 AI_Player.update()	update
2017-01-04 09:18:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:18:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:18:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:18:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:18:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:18:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:18:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:18:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:59 AI_Player.update()	update
2017-01-04 09:18:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:18:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:18:59 AI_Player.update()	Search took142ms
2017-01-04 09:18:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:18:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:59 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-04 09:18:59 AI_Player.update()		110,	1010,	1010,	11,	110,	101,	1010
2017-01-04 09:18:59 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-04 09:18:59 AI_Player.update()		11,	11,	111,	11,	1110,	1101,	1001
2017-01-04 09:18:59 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-04 09:18:59 AI_Player.update()		1001,	1010,	11,	11,	1100,	1011,	1011
2017-01-04 09:18:59 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1110,	1001
2017-01-04 09:18:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:18:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:18:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:59 AI_Player.update()	update
2017-01-04 09:18:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:18:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:18:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:18:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:18:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:18:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:18:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:18:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:18:59 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:18:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:18:59 AI_Player.update()	update
2017-01-04 09:18:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:00 AI_Player.update()	Search took970ms
2017-01-04 09:19:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:00 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-04 09:19:00 AI_Player.update()		110,	1010,	1010,	11,	110,	101,	1010
2017-01-04 09:19:00 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-04 09:19:00 AI_Player.update()		11,	1101,	111,	11,	1110,	1101,	1001
2017-01-04 09:19:00 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	11,	1011
2017-01-04 09:19:00 AI_Player.update()		1001,	1001,	11,	11,	1100,	1011,	1011
2017-01-04 09:19:00 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1110,	1001
2017-01-04 09:19:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:00 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:19:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:00 AI_Player.update()	update
2017-01-04 09:19:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:01 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:19:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:01 AI_Player.update()	update
2017-01-04 09:19:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:01 AI_Player.update()	Search took86ms
2017-01-04 09:19:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:01 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-04 09:19:01 AI_Player.update()		110,	1010,	1010,	11,	110,	101,	1010
2017-01-04 09:19:01 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-04 09:19:01 AI_Player.update()		11,	11,	111,	11,	1110,	1101,	1001
2017-01-04 09:19:01 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-04 09:19:01 AI_Player.update()		1001,	1010,	11,	11,	1100,	1011,	1011
2017-01-04 09:19:01 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1110,	1001
2017-01-04 09:19:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:01 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:19:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:01 AI_Player.update()	update
2017-01-04 09:19:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:01 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:19:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:01 AI_Player.update()	update
2017-01-04 09:19:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:02 AI_Player.update()	Search took653ms
2017-01-04 09:19:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:02 AI_Player.update()		110,	1101,	111,	11,	111,	1001,	11
2017-01-04 09:19:02 AI_Player.update()		110,	1010,	1010,	1010,	110,	101,	1010
2017-01-04 09:19:02 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-04 09:19:02 AI_Player.update()		11,	11,	111,	1110,	1110,	1101,	1001
2017-01-04 09:19:02 AI_Player.update()		1110,	1101,	1101,	11,	1011,	11,	1011
2017-01-04 09:19:02 AI_Player.update()		1001,	1010,	11,	1110,	1100,	1011,	1011
2017-01-04 09:19:02 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1110,	1001
2017-01-04 09:19:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:19:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:02 AI_Player.update()	update
2017-01-04 09:19:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:02 AI_Player.update()	update
2017-01-04 09:19:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:02 AI_Player.update()	Search took159ms
2017-01-04 09:19:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:02 AI_Player.update()		110,	1101,	111,	11,	111,	1001,	11
2017-01-04 09:19:02 AI_Player.update()		110,	1010,	1010,	1010,	110,	101,	1010
2017-01-04 09:19:02 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-04 09:19:02 AI_Player.update()		11,	11,	111,	1110,	1110,	1101,	1001
2017-01-04 09:19:02 AI_Player.update()		1110,	1101,	1101,	11,	1011,	11,	1011
2017-01-04 09:19:02 AI_Player.update()		1010,	11,	1110,	1100,	1011,	1011,	1001
2017-01-04 09:19:02 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1110,	1001
2017-01-04 09:19:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:02 AI_Player.update()	update
2017-01-04 09:19:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:19:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:02 AI_Player.update()	update
2017-01-04 09:19:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:02 AI_Player.update()	Search took283ms
2017-01-04 09:19:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:02 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-04 09:19:02 AI_Player.update()		110,	1010,	1010,	11,	110,	101,	1010
2017-01-04 09:19:02 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-04 09:19:02 AI_Player.update()		11,	11,	111,	11,	1110,	1101,	1001
2017-01-04 09:19:02 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-04 09:19:02 AI_Player.update()		1010,	11,	1110,	11,	1011,	1011,	1001
2017-01-04 09:19:02 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1110,	1001
2017-01-04 09:19:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:02 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:19:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:03 AI_Player.update()	update
2017-01-04 09:19:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:03 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:19:03 AI_Player.update()	Player a has won!
2017-01-04 09:19:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:03 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:19:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:03 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:19:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:03 AI_Player.update()	update
2017-01-04 09:19:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:03 AI_Player.update()	Search took92ms
2017-01-04 09:19:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:03 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 09:19:03 AI_Player.update()		1010,	1010,	1010,	1100,	1010,	110,	1100
2017-01-04 09:19:03 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-04 09:19:03 AI_Player.update()		1100,	11,	1110,	1100,	1101,	101,	101
2017-01-04 09:19:03 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:19:03 AI_Player.update()		1101,	101,	1001,	101,	1011,	11,	1010
2017-01-04 09:19:03 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:03 AI_Player.update()	update
2017-01-04 09:19:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:03 AI_Player.update()	update
2017-01-04 09:19:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:03 AI_Player.update()	Search took55ms
2017-01-04 09:19:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:03 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 09:19:03 AI_Player.update()		1010,	1010,	1100,	1010,	110,	1100,	1010
2017-01-04 09:19:03 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-04 09:19:03 AI_Player.update()		1100,	11,	1110,	1100,	1101,	101,	101
2017-01-04 09:19:03 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:19:03 AI_Player.update()		1101,	101,	1001,	101,	1011,	11,	1010
2017-01-04 09:19:03 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:03 AI_Player.update()	update
2017-01-04 09:19:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:03 AI_Player.update()	update
2017-01-04 09:19:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:03 AI_Player.update()	Search took208ms
2017-01-04 09:19:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:03 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 09:19:03 AI_Player.update()		1010,	1001,	1100,	1010,	110,	1100,	1010
2017-01-04 09:19:03 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-04 09:19:03 AI_Player.update()		1100,	1001,	1110,	1100,	1101,	101,	101
2017-01-04 09:19:03 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:19:03 AI_Player.update()		1101,	1001,	1001,	101,	1011,	11,	1010
2017-01-04 09:19:03 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:04 AI_Player.update()	update
2017-01-04 09:19:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:04 AI_Player.update()	update
2017-01-04 09:19:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:04 AI_Player.update()	Search took109ms
2017-01-04 09:19:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:04 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 09:19:04 AI_Player.update()		1010,	1010,	1001,	1100,	1010,	110,	1100
2017-01-04 09:19:04 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-04 09:19:04 AI_Player.update()		1100,	1001,	1110,	1100,	1101,	101,	101
2017-01-04 09:19:04 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:19:04 AI_Player.update()		1101,	1001,	1001,	101,	1011,	11,	1010
2017-01-04 09:19:04 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:04 AI_Player.update()	update
2017-01-04 09:19:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:04 AI_Player.update()	update
2017-01-04 09:19:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:04 AI_Player.update()	Search took282ms
2017-01-04 09:19:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:04 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 09:19:04 AI_Player.update()		1010,	1010,	1001,	1100,	1010,	110,	1100
2017-01-04 09:19:04 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-04 09:19:04 AI_Player.update()		1100,	11,	1110,	1100,	1101,	101,	101
2017-01-04 09:19:04 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:19:04 AI_Player.update()		1101,	101,	1001,	101,	1011,	11,	1010
2017-01-04 09:19:04 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:04 AI_Player.update()	update
2017-01-04 09:19:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:19:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:04 AI_Player.update()	update
2017-01-04 09:19:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:05 AI_Player.update()	Search took185ms
2017-01-04 09:19:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:05 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 09:19:05 AI_Player.update()		1010,	1010,	1001,	1100,	1010,	110,	1100
2017-01-04 09:19:05 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-04 09:19:05 AI_Player.update()		1100,	11,	1110,	1100,	1101,	101,	101
2017-01-04 09:19:05 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:19:05 AI_Player.update()		101,	1001,	101,	1011,	11,	1010,	1101
2017-01-04 09:19:05 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:19:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:05 AI_Player.update()	update
2017-01-04 09:19:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:05 AI_Player.update()	update
2017-01-04 09:19:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:05 AI_Player.update()	Search took67ms
2017-01-04 09:19:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:05 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 09:19:05 AI_Player.update()		1010,	1010,	1001,	1100,	1010,	110,	1100
2017-01-04 09:19:05 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-04 09:19:05 AI_Player.update()		1100,	11,	1110,	1100,	1101,	101,	101
2017-01-04 09:19:05 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:19:05 AI_Player.update()		1101,	101,	1001,	101,	1011,	11,	1010
2017-01-04 09:19:05 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:05 AI_Player.update()	update
2017-01-04 09:19:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:05 AI_Player.update()	update
2017-01-04 09:19:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:05 AI_Player.update()	Search took236ms
2017-01-04 09:19:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:05 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 09:19:05 AI_Player.update()		1010,	1001,	1001,	1100,	1010,	110,	1100
2017-01-04 09:19:05 AI_Player.update()		1110,	11,	1110,	11,	111,	1100,	1011
2017-01-04 09:19:05 AI_Player.update()		1100,	1001,	1110,	1100,	1101,	101,	101
2017-01-04 09:19:05 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:19:05 AI_Player.update()		1101,	1001,	1001,	101,	1011,	11,	1010
2017-01-04 09:19:05 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:05 AI_Player.update()	update
2017-01-04 09:19:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:05 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:06 AI_Player.update()	update
2017-01-04 09:19:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:06 AI_Player.update()	Search took235ms
2017-01-04 09:19:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:06 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-04 09:19:06 AI_Player.update()		1010,	1001,	1001,	110,	1010,	110,	1100
2017-01-04 09:19:06 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-04 09:19:06 AI_Player.update()		1100,	1001,	1110,	11,	1101,	101,	101
2017-01-04 09:19:06 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:19:06 AI_Player.update()		1101,	1001,	1001,	1001,	1011,	11,	1010
2017-01-04 09:19:06 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:06 AI_Player.update()	update
2017-01-04 09:19:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:19:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:06 AI_Player.update()	update
2017-01-04 09:19:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:06 AI_Player.update()	Search took107ms
2017-01-04 09:19:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:06 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-04 09:19:06 AI_Player.update()		1010,	1001,	1001,	110,	1010,	1100,	1100
2017-01-04 09:19:06 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:06 AI_Player.update()		1100,	1001,	1110,	11,	1101,	1010,	101
2017-01-04 09:19:06 AI_Player.update()		1110,	101,	1101,	1100,	1011,	11,	1011
2017-01-04 09:19:06 AI_Player.update()		1101,	1001,	1001,	1001,	1011,	101,	1010
2017-01-04 09:19:06 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:19:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:06 AI_Player.update()	update
2017-01-04 09:19:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:19:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:06 AI_Player.update()	update
2017-01-04 09:19:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:06 AI_Player.update()	Search took55ms
2017-01-04 09:19:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:06 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 09:19:06 AI_Player.update()		1010,	11,	1001,	110,	1010,	1100,	1100
2017-01-04 09:19:06 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:06 AI_Player.update()		1100,	101,	1110,	11,	1101,	1010,	101
2017-01-04 09:19:06 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	11,	1011
2017-01-04 09:19:06 AI_Player.update()		1101,	1010,	1001,	1001,	1011,	101,	1010
2017-01-04 09:19:06 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:19:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:06 AI_Player.update()	update
2017-01-04 09:19:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:06 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:19:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:07 AI_Player.update()	update
2017-01-04 09:19:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:07 AI_Player.update()	Search took160ms
2017-01-04 09:19:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:07 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-04 09:19:07 AI_Player.update()		1010,	1001,	1001,	110,	1010,	1100,	1100
2017-01-04 09:19:07 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:07 AI_Player.update()		1100,	1001,	1110,	11,	1101,	1010,	101
2017-01-04 09:19:07 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-04 09:19:07 AI_Player.update()		1101,	1010,	1001,	1001,	1011,	101,	1010
2017-01-04 09:19:07 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:19:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:07 AI_Player.update()	update
2017-01-04 09:19:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:19:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:07 AI_Player.update()	update
2017-01-04 09:19:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:07 AI_Player.update()	Search took72ms
2017-01-04 09:19:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:07 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 09:19:07 AI_Player.update()		1010,	1001,	1001,	1100,	1010,	1100,	1100
2017-01-04 09:19:07 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 09:19:07 AI_Player.update()		1100,	1001,	1110,	1100,	1101,	1010,	101
2017-01-04 09:19:07 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-04 09:19:07 AI_Player.update()		1101,	1010,	1001,	101,	1011,	101,	1010
2017-01-04 09:19:07 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:19:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:07 AI_Player.update()	update
2017-01-04 09:19:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:19:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:07 AI_Player.update()	update
2017-01-04 09:19:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:07 AI_Player.update()	Search took73ms
2017-01-04 09:19:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:07 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 09:19:07 AI_Player.update()		1010,	101,	1001,	1100,	1010,	1100,	1100
2017-01-04 09:19:07 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 09:19:07 AI_Player.update()		1100,	1010,	1110,	1100,	1101,	1010,	101
2017-01-04 09:19:07 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-04 09:19:07 AI_Player.update()		1101,	1001,	1001,	101,	1011,	101,	1010
2017-01-04 09:19:07 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:19:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:07 AI_Player.update()	update
2017-01-04 09:19:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:19:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:07 AI_Player.update()	update
2017-01-04 09:19:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:08 AI_Player.update()	Search took193ms
2017-01-04 09:19:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:08 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 09:19:08 AI_Player.update()		1010,	101,	1001,	110,	1010,	1100,	1100
2017-01-04 09:19:08 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:08 AI_Player.update()		1100,	1010,	1110,	11,	1101,	1010,	101
2017-01-04 09:19:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-04 09:19:08 AI_Player.update()		1101,	1001,	1001,	1001,	1011,	101,	1010
2017-01-04 09:19:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:19:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:08 AI_Player.update()	update
2017-01-04 09:19:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:08 AI_Player.update()	update
2017-01-04 09:19:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:08 AI_Player.update()	Search took78ms
2017-01-04 09:19:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:08 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 09:19:08 AI_Player.update()		1100,	1010,	101,	1001,	110,	1010,	1100
2017-01-04 09:19:08 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:08 AI_Player.update()		1100,	1010,	1110,	11,	1101,	1010,	101
2017-01-04 09:19:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-04 09:19:08 AI_Player.update()		1101,	1001,	1001,	1001,	1011,	101,	1010
2017-01-04 09:19:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:08 AI_Player.update()	update
2017-01-04 09:19:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:08 AI_Player.update()	update
2017-01-04 09:19:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:08 AI_Player.update()	Search took250ms
2017-01-04 09:19:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:08 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 09:19:08 AI_Player.update()		1100,	1010,	101,	1001,	110,	1010,	1100
2017-01-04 09:19:08 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:08 AI_Player.update()		1010,	1110,	11,	1101,	1010,	101,	1100
2017-01-04 09:19:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-04 09:19:08 AI_Player.update()		1101,	1001,	1001,	1001,	1011,	101,	1010
2017-01-04 09:19:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:08 AI_Player.update()	update
2017-01-04 09:19:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:08 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:09 AI_Player.update()	update
2017-01-04 09:19:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:09 AI_Player.update()	Search took50ms
2017-01-04 09:19:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:09 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 09:19:09 AI_Player.update()		1100,	1100,	1010,	101,	1001,	110,	1010
2017-01-04 09:19:09 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:09 AI_Player.update()		1010,	1110,	11,	1101,	1010,	101,	1100
2017-01-04 09:19:09 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-04 09:19:09 AI_Player.update()		1101,	1001,	1001,	1001,	1011,	101,	1010
2017-01-04 09:19:09 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:09 AI_Player.update()	update
2017-01-04 09:19:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:19:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:09 AI_Player.update()	update
2017-01-04 09:19:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:09 AI_Player.update()	Search took398ms
2017-01-04 09:19:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:09 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-04 09:19:09 AI_Player.update()		1100,	1001,	1010,	101,	1001,	110,	1010
2017-01-04 09:19:09 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:09 AI_Player.update()		1010,	1001,	11,	1101,	1010,	101,	1100
2017-01-04 09:19:09 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	11,	1011
2017-01-04 09:19:09 AI_Player.update()		1101,	1010,	1001,	1001,	1011,	101,	1010
2017-01-04 09:19:09 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:19:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:09 AI_Player.update()	update
2017-01-04 09:19:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:19:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:09 AI_Player.update()	update
2017-01-04 09:19:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:10 AI_Player.update()	Search took287ms
2017-01-04 09:19:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:10 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-04 09:19:10 AI_Player.update()		1100,	1001,	1010,	1100,	1001,	110,	1010
2017-01-04 09:19:10 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:10 AI_Player.update()		1010,	1001,	11,	1100,	1010,	101,	1100
2017-01-04 09:19:10 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-04 09:19:10 AI_Player.update()		1101,	1010,	1001,	101,	1011,	101,	1010
2017-01-04 09:19:10 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:19:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:10 AI_Player.update()	update
2017-01-04 09:19:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:19:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:10 AI_Player.update()	update
2017-01-04 09:19:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:11 AI_Player.update()	Search took677ms
2017-01-04 09:19:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:11 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-04 09:19:11 AI_Player.update()		1001,	1010,	1100,	1001,	110,	1010,	1100
2017-01-04 09:19:11 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:11 AI_Player.update()		1010,	1001,	11,	1100,	1010,	101,	1100
2017-01-04 09:19:11 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-04 09:19:11 AI_Player.update()		1101,	1010,	1001,	101,	1011,	101,	1010
2017-01-04 09:19:11 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:19:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:19:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:11 AI_Player.update()	update
2017-01-04 09:19:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:11 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:19:11 AI_Player.update()	Player a has won!
2017-01-04 09:19:11 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:11 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:19:11 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:11 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:19:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:11 AI_Player.update()	update
2017-01-04 09:19:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:11 AI_Player.update()	Search took219ms
2017-01-04 09:19:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:11 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 09:19:11 AI_Player.update()		11,	1010,	1010,	1110,	1100,	1001,	110
2017-01-04 09:19:11 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:11 AI_Player.update()		101,	11,	1110,	1010,	11,	110,	1010
2017-01-04 09:19:11 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:19:11 AI_Player.update()		101,	1011,	1001,	1001,	110,	1100,	1001
2017-01-04 09:19:11 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:19:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:11 AI_Player.update()	update
2017-01-04 09:19:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:11 AI_Player.update()	update
2017-01-04 09:19:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:11 AI_Player.update()	Search took13ms
2017-01-04 09:19:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:11 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 09:19:11 AI_Player.update()		110,	11,	1010,	1010,	1110,	1100,	1001
2017-01-04 09:19:11 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:11 AI_Player.update()		101,	11,	1110,	1010,	11,	110,	1010
2017-01-04 09:19:11 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:19:11 AI_Player.update()		101,	1011,	1001,	1001,	110,	1100,	1001
2017-01-04 09:19:11 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:19:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:11 AI_Player.update()	update
2017-01-04 09:19:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:11 AI_Player.update()	update
2017-01-04 09:19:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:12 AI_Player.update()	Search took106ms
2017-01-04 09:19:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:12 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 09:19:12 AI_Player.update()		1001,	110,	11,	1010,	1010,	1110,	1100
2017-01-04 09:19:12 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-04 09:19:12 AI_Player.update()		101,	11,	1110,	1010,	11,	110,	1010
2017-01-04 09:19:12 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:19:12 AI_Player.update()		101,	1011,	1001,	1001,	110,	1100,	1001
2017-01-04 09:19:12 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:19:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:12 AI_Player.update()	update
2017-01-04 09:19:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:19:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:12 AI_Player.update()	update
2017-01-04 09:19:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:12 AI_Player.update()	Search took49ms
2017-01-04 09:19:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:12 AI_Player.update()		110,	101,	111,	110,	111,	1110,	11
2017-01-04 09:19:12 AI_Player.update()		1001,	110,	11,	1010,	1010,	101,	1100
2017-01-04 09:19:12 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:19:12 AI_Player.update()		101,	11,	1110,	1010,	11,	1010,	1010
2017-01-04 09:19:12 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:19:12 AI_Player.update()		101,	1011,	1001,	1001,	110,	1010,	1001
2017-01-04 09:19:12 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:19:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:19:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:12 AI_Player.update()	update
2017-01-04 09:19:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:19:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:12 AI_Player.update()	update
2017-01-04 09:19:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:12 AI_Player.update()	Search took124ms
2017-01-04 09:19:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:12 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 09:19:12 AI_Player.update()		1001,	110,	11,	110,	1010,	101,	1100
2017-01-04 09:19:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 09:19:12 AI_Player.update()		101,	11,	1110,	1100,	11,	1010,	1010
2017-01-04 09:19:12 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:19:12 AI_Player.update()		101,	1011,	1001,	1010,	110,	1010,	1001
2017-01-04 09:19:12 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 09:19:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:19:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:12 AI_Player.update()	update
2017-01-04 09:19:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:19:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:12 AI_Player.update()	update
2017-01-04 09:19:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:12 AI_Player.update()	Search took63ms
2017-01-04 09:19:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:12 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 09:19:12 AI_Player.update()		1001,	110,	11,	110,	1010,	101,	1100
2017-01-04 09:19:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 09:19:12 AI_Player.update()		101,	11,	1110,	1100,	11,	1010,	1010
2017-01-04 09:19:12 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:19:12 AI_Player.update()		1011,	1001,	1010,	110,	1010,	1001,	101
2017-01-04 09:19:12 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 09:19:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:12 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:19:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:13 AI_Player.update()	update
2017-01-04 09:19:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:13 AI_Player.update()	update
2017-01-04 09:19:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:13 AI_Player.update()	Search took126ms
2017-01-04 09:19:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:13 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 09:19:13 AI_Player.update()		1001,	110,	11,	110,	1010,	101,	1100
2017-01-04 09:19:13 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 09:19:13 AI_Player.update()		1010,	101,	11,	1110,	1100,	11,	1010
2017-01-04 09:19:13 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:19:13 AI_Player.update()		1011,	1001,	1010,	110,	1010,	1001,	101
2017-01-04 09:19:13 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 09:19:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:13 AI_Player.update()	update
2017-01-04 09:19:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:13 AI_Player.update()	update
2017-01-04 09:19:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:13 AI_Player.update()	Search took126ms
2017-01-04 09:19:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:13 AI_Player.update()		110,	101,	111,	1001,	111,	1110,	11
2017-01-04 09:19:13 AI_Player.update()		1001,	110,	11,	1100,	1010,	101,	1100
2017-01-04 09:19:13 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 09:19:13 AI_Player.update()		1010,	101,	11,	1010,	1100,	11,	1010
2017-01-04 09:19:13 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1100,	1011
2017-01-04 09:19:13 AI_Player.update()		1011,	1001,	1010,	1010,	1010,	1001,	101
2017-01-04 09:19:13 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 09:19:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:13 AI_Player.update()	update
2017-01-04 09:19:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:19:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:13 AI_Player.update()	update
2017-01-04 09:19:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:14 AI_Player.update()	Search took376ms
2017-01-04 09:19:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:14 AI_Player.update()		110,	101,	111,	1001,	111,	1110,	11
2017-01-04 09:19:14 AI_Player.update()		1001,	110,	11,	1100,	1010,	101,	1100
2017-01-04 09:19:14 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 09:19:14 AI_Player.update()		1010,	101,	11,	1010,	1100,	11,	1010
2017-01-04 09:19:14 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1100,	1011
2017-01-04 09:19:14 AI_Player.update()		1001,	1010,	1010,	1010,	1001,	101,	1011
2017-01-04 09:19:14 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 09:19:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:19:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:14 AI_Player.update()	update
2017-01-04 09:19:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:19:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:14 AI_Player.update()	update
2017-01-04 09:19:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:14 AI_Player.update()	Search took534ms
2017-01-04 09:19:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:14 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 09:19:14 AI_Player.update()		1001,	110,	11,	110,	1010,	101,	1100
2017-01-04 09:19:14 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 09:19:14 AI_Player.update()		1010,	101,	11,	1110,	1100,	11,	1010
2017-01-04 09:19:14 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:19:14 AI_Player.update()		1001,	1010,	1010,	110,	1001,	101,	1011
2017-01-04 09:19:14 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 09:19:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:19:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:15 AI_Player.update()	update
2017-01-04 09:19:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:19:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:15 AI_Player.update()	update
2017-01-04 09:19:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:15 AI_Player.update()	Search took65ms
2017-01-04 09:19:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:15 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:19:15 AI_Player.update()		1001,	110,	11,	110,	1010,	1110,	1100
2017-01-04 09:19:15 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:19:15 AI_Player.update()		1010,	101,	11,	1110,	1100,	110,	1010
2017-01-04 09:19:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-04 09:19:15 AI_Player.update()		1001,	1010,	1010,	110,	1001,	1100,	1011
2017-01-04 09:19:15 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:19:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:19:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:15 AI_Player.update()	update
2017-01-04 09:19:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:19:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:15 AI_Player.update()	update
2017-01-04 09:19:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:15 AI_Player.update()	Search took437ms
2017-01-04 09:19:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:15 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 09:19:15 AI_Player.update()		1001,	110,	11,	1010,	1010,	1110,	1100
2017-01-04 09:19:15 AI_Player.update()		1110,	1001,	1110,	1110,	111,	101,	1011
2017-01-04 09:19:15 AI_Player.update()		1010,	101,	11,	1010,	1100,	110,	1010
2017-01-04 09:19:15 AI_Player.update()		1110,	11,	1101,	110,	1011,	11,	1011
2017-01-04 09:19:15 AI_Player.update()		1001,	1010,	1010,	1001,	1001,	1100,	1011
2017-01-04 09:19:15 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 09:19:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:19:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:15 AI_Player.update()	update
2017-01-04 09:19:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:19:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:16 AI_Player.update()	update
2017-01-04 09:19:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:16 AI_Player.update()	Search took562ms
2017-01-04 09:19:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:16 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 09:19:16 AI_Player.update()		1001,	1001,	11,	1010,	1010,	1110,	1100
2017-01-04 09:19:16 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-04 09:19:16 AI_Player.update()		1010,	11,	11,	1010,	1100,	110,	1010
2017-01-04 09:19:16 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-04 09:19:16 AI_Player.update()		1001,	101,	1010,	1001,	1001,	1100,	1011
2017-01-04 09:19:16 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 09:19:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:16 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:19:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:16 AI_Player.update()	update
2017-01-04 09:19:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:16 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:19:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:16 AI_Player.update()	update
2017-01-04 09:19:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:17 AI_Player.update()	Search took387ms
2017-01-04 09:19:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:17 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 09:19:17 AI_Player.update()		1001,	1001,	11,	1010,	1010,	1110,	1100
2017-01-04 09:19:17 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-04 09:19:17 AI_Player.update()		1010,	1010,	11,	11,	1010,	1100,	110
2017-01-04 09:19:17 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-04 09:19:17 AI_Player.update()		1001,	101,	1010,	1001,	1001,	1100,	1011
2017-01-04 09:19:17 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 09:19:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:19:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:17 AI_Player.update()	update
2017-01-04 09:19:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:19:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:17 AI_Player.update()	update
2017-01-04 09:19:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:17 AI_Player.update()	Search took266ms
2017-01-04 09:19:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:17 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 09:19:17 AI_Player.update()		1001,	11,	1010,	1010,	1110,	1100,	1001
2017-01-04 09:19:17 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-04 09:19:17 AI_Player.update()		1010,	1010,	11,	11,	1010,	1100,	110
2017-01-04 09:19:17 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-04 09:19:17 AI_Player.update()		1001,	101,	1010,	1001,	1001,	1100,	1011
2017-01-04 09:19:17 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 09:19:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:19:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:17 AI_Player.update()	update
2017-01-04 09:19:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:19:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:17 AI_Player.update()	update
2017-01-04 09:19:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:18 AI_Player.update()	Search took285ms
2017-01-04 09:19:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:18 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 09:19:18 AI_Player.update()		1001,	11,	1010,	110,	1110,	1100,	1001
2017-01-04 09:19:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 09:19:18 AI_Player.update()		1010,	1010,	11,	1110,	1010,	1100,	110
2017-01-04 09:19:18 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-04 09:19:18 AI_Player.update()		1001,	101,	1010,	110,	1001,	1100,	1011
2017-01-04 09:19:18 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:19:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:19:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:18 AI_Player.update()	update
2017-01-04 09:19:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:18 AI_Player.update()	update
2017-01-04 09:19:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:18 AI_Player.update()	Search took58ms
2017-01-04 09:19:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:18 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 09:19:18 AI_Player.update()		1001,	11,	1010,	1010,	1110,	1100,	1001
2017-01-04 09:19:18 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-04 09:19:18 AI_Player.update()		1010,	1010,	11,	11,	1010,	1100,	110
2017-01-04 09:19:18 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-04 09:19:18 AI_Player.update()		1001,	101,	1010,	1001,	1001,	1100,	1011
2017-01-04 09:19:18 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 09:19:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:18 AI_Player.update()	update
2017-01-04 09:19:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:18 AI_Player.update()	update
2017-01-04 09:19:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:18 AI_Player.update()	Search took82ms
2017-01-04 09:19:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:18 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 09:19:18 AI_Player.update()		1001,	11,	1010,	110,	1110,	1100,	1001
2017-01-04 09:19:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 09:19:18 AI_Player.update()		1010,	1010,	11,	1110,	1010,	1100,	110
2017-01-04 09:19:18 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-04 09:19:18 AI_Player.update()		1001,	101,	1010,	110,	1001,	1100,	1011
2017-01-04 09:19:18 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:19:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:18 AI_Player.update()	update
2017-01-04 09:19:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:18 AI_Player.update()	update
2017-01-04 09:19:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:18 AI_Player.update()	Search took59ms
2017-01-04 09:19:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:18 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 09:19:18 AI_Player.update()		1001,	1001,	11,	1010,	110,	1110,	1100
2017-01-04 09:19:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 09:19:18 AI_Player.update()		1010,	1010,	11,	1110,	1010,	1100,	110
2017-01-04 09:19:18 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-04 09:19:18 AI_Player.update()		1001,	101,	1010,	110,	1001,	1100,	1011
2017-01-04 09:19:18 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:19:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:18 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:19 AI_Player.update()	update
2017-01-04 09:19:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:19 AI_Player.update()	update
2017-01-04 09:19:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:19 AI_Player.update()	Search took227ms
2017-01-04 09:19:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:19 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 09:19:19 AI_Player.update()		1100,	1001,	1001,	11,	1010,	110,	1110
2017-01-04 09:19:19 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 09:19:19 AI_Player.update()		1010,	1010,	11,	1110,	1010,	1100,	110
2017-01-04 09:19:19 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-04 09:19:19 AI_Player.update()		1001,	101,	1010,	110,	1001,	1100,	1011
2017-01-04 09:19:19 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:19:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:19 AI_Player.update()	update
2017-01-04 09:19:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:19:19 AI_Player.update()	Player b has won!
2017-01-04 09:19:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:19 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:19:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:19 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:19:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:19 AI_Player.update()	update
2017-01-04 09:19:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:19 AI_Player.update()	Search took42ms
2017-01-04 09:19:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:19 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 09:19:19 AI_Player.update()		11,	1001,	1001,	1100,	1101,	110,	11
2017-01-04 09:19:19 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 09:19:19 AI_Player.update()		1100,	1100,	1100,	101,	1010,	1011,	1011
2017-01-04 09:19:19 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:19 AI_Player.update()		1010,	1010,	110,	1010,	1100,	1100,	1110
2017-01-04 09:19:19 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:19 AI_Player.update()	update
2017-01-04 09:19:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:19 AI_Player.update()	update
2017-01-04 09:19:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:19 AI_Player.update()	Search took124ms
2017-01-04 09:19:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:19 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 09:19:19 AI_Player.update()		11,	1001,	1001,	1100,	1101,	1100,	11
2017-01-04 09:19:19 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 09:19:19 AI_Player.update()		1100,	1100,	1100,	101,	1010,	1100,	1011
2017-01-04 09:19:19 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:19 AI_Player.update()		1010,	1010,	110,	1010,	1100,	101,	1110
2017-01-04 09:19:19 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 09:19:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:20 AI_Player.update()	update
2017-01-04 09:19:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:19:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:20 AI_Player.update()	update
2017-01-04 09:19:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:20 AI_Player.update()	Search took160ms
2017-01-04 09:19:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:20 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-04 09:19:20 AI_Player.update()		11,	1001,	1001,	110,	1101,	1100,	11
2017-01-04 09:19:20 AI_Player.update()		1110,	11,	1110,	1100,	111,	1011,	1011
2017-01-04 09:19:20 AI_Player.update()		1100,	1100,	1100,	101,	1010,	1100,	1011
2017-01-04 09:19:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-04 09:19:20 AI_Player.update()		1010,	1010,	110,	1100,	1100,	101,	1110
2017-01-04 09:19:20 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	110,	1001
2017-01-04 09:19:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:19:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:20 AI_Player.update()	update
2017-01-04 09:19:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:19:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:20 AI_Player.update()	update
2017-01-04 09:19:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:21 AI_Player.update()	Search took918ms
2017-01-04 09:19:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:21 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 09:19:21 AI_Player.update()		11,	1001,	1001,	110,	1101,	1011,	11
2017-01-04 09:19:21 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-04 09:19:21 AI_Player.update()		1100,	1100,	1100,	101,	1010,	1100,	1011
2017-01-04 09:19:21 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 09:19:21 AI_Player.update()		1010,	1010,	110,	1100,	1100,	110,	1110
2017-01-04 09:19:21 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	110,	1001
2017-01-04 09:19:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:19:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:21 AI_Player.update()	update
2017-01-04 09:19:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:21 AI_Player.update()	update
2017-01-04 09:19:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:22 AI_Player.update()	Search took621ms
2017-01-04 09:19:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:22 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-04 09:19:22 AI_Player.update()		11,	11,	1001,	110,	1101,	1011,	11
2017-01-04 09:19:22 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-04 09:19:22 AI_Player.update()		1100,	1001,	1100,	101,	1010,	1100,	1011
2017-01-04 09:19:22 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 09:19:22 AI_Player.update()		1010,	1011,	110,	1100,	1100,	110,	1110
2017-01-04 09:19:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-04 09:19:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:22 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:22 AI_Player.update()	update
2017-01-04 09:19:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:22 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:22 AI_Player.update()	update
2017-01-04 09:19:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:23 AI_Player.update()	Search took689ms
2017-01-04 09:19:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:23 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 09:19:23 AI_Player.update()		11,	11,	1001,	110,	1101,	1100,	11
2017-01-04 09:19:23 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1011,	1011
2017-01-04 09:19:23 AI_Player.update()		1100,	1001,	1100,	101,	1010,	1100,	1011
2017-01-04 09:19:23 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:19:23 AI_Player.update()		1010,	1011,	110,	1100,	1100,	101,	1110
2017-01-04 09:19:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-04 09:19:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:23 AI_Player.update()	update
2017-01-04 09:19:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:19:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:23 AI_Player.update()	update
2017-01-04 09:19:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:24 AI_Player.update()	Search took856ms
2017-01-04 09:19:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:24 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 09:19:24 AI_Player.update()		11,	11,	1001,	1100,	1101,	1100,	11
2017-01-04 09:19:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	1011,	1011
2017-01-04 09:19:24 AI_Player.update()		1100,	1001,	1100,	101,	1010,	1100,	1011
2017-01-04 09:19:24 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:24 AI_Player.update()		1010,	1011,	110,	1010,	1100,	101,	1110
2017-01-04 09:19:24 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 09:19:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:19:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:24 AI_Player.update()	update
2017-01-04 09:19:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:19:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:24 AI_Player.update()	update
2017-01-04 09:19:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:25 AI_Player.update()	Search took795ms
2017-01-04 09:19:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:25 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 09:19:25 AI_Player.update()		11,	11,	1001,	110,	1101,	1100,	11
2017-01-04 09:19:25 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1011,	1011
2017-01-04 09:19:25 AI_Player.update()		1100,	1001,	1100,	101,	1010,	1100,	1011
2017-01-04 09:19:25 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:19:25 AI_Player.update()		1010,	1011,	110,	1100,	1100,	101,	1110
2017-01-04 09:19:25 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-04 09:19:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:19:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:25 AI_Player.update()	update
2017-01-04 09:19:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:19:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:25 AI_Player.update()	update
2017-01-04 09:19:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:25 AI_Player.update()	Search took122ms
2017-01-04 09:19:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:25 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 09:19:25 AI_Player.update()		11,	11,	1001,	1100,	1101,	1100,	11
2017-01-04 09:19:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	1011,	1011
2017-01-04 09:19:25 AI_Player.update()		1100,	1001,	1100,	101,	1010,	1100,	1011
2017-01-04 09:19:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:25 AI_Player.update()		1010,	1011,	110,	1010,	1100,	101,	1110
2017-01-04 09:19:25 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 09:19:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:19:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:25 AI_Player.update()	update
2017-01-04 09:19:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:25 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:19:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:25 AI_Player.update()	update
2017-01-04 09:19:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:26 AI_Player.update()	Search took339ms
2017-01-04 09:19:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:26 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 09:19:26 AI_Player.update()		11,	1001,	1100,	1101,	1100,	11,	11
2017-01-04 09:19:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1011,	1011
2017-01-04 09:19:26 AI_Player.update()		1100,	1001,	1100,	101,	1010,	1100,	1011
2017-01-04 09:19:26 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:26 AI_Player.update()		1010,	1011,	110,	1010,	1100,	101,	1110
2017-01-04 09:19:26 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 09:19:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:19:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:26 AI_Player.update()	update
2017-01-04 09:19:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:19:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:26 AI_Player.update()	update
2017-01-04 09:19:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:26 AI_Player.update()	Search took279ms
2017-01-04 09:19:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:26 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 09:19:26 AI_Player.update()		11,	1001,	1100,	1101,	1100,	110,	11
2017-01-04 09:19:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-04 09:19:26 AI_Player.update()		1100,	1001,	1100,	101,	1010,	1011,	1011
2017-01-04 09:19:26 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:26 AI_Player.update()		1010,	1011,	110,	1010,	1100,	1100,	1110
2017-01-04 09:19:26 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:19:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:26 AI_Player.update()	update
2017-01-04 09:19:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:19:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:26 AI_Player.update()	update
2017-01-04 09:19:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:27 AI_Player.update()	Search took981ms
2017-01-04 09:19:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:27 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 09:19:27 AI_Player.update()		11,	1100,	1100,	1101,	1100,	110,	11
2017-01-04 09:19:27 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-04 09:19:27 AI_Player.update()		1100,	1010,	1100,	101,	1010,	1011,	1011
2017-01-04 09:19:27 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:27 AI_Player.update()		1010,	101,	110,	1010,	1100,	1100,	1110
2017-01-04 09:19:27 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:19:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:27 AI_Player.update()	update
2017-01-04 09:19:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:19:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:28 AI_Player.update()	update
2017-01-04 09:19:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:29 AI_Player.update()	Search took1143ms
2017-01-04 09:19:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:29 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 09:19:29 AI_Player.update()		11,	1100,	1100,	110,	1100,	110,	11
2017-01-04 09:19:29 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-04 09:19:29 AI_Player.update()		1100,	1010,	1100,	101,	1010,	1011,	1011
2017-01-04 09:19:29 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1100,	1011
2017-01-04 09:19:29 AI_Player.update()		1010,	101,	110,	1100,	1100,	1100,	1110
2017-01-04 09:19:29 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-04 09:19:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:29 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:19:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:29 AI_Player.update()	update
2017-01-04 09:19:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:29 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:19:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:29 AI_Player.update()	update
2017-01-04 09:19:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:29 AI_Player.update()	Search took137ms
2017-01-04 09:19:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:29 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 09:19:29 AI_Player.update()		11,	1100,	1100,	1101,	1100,	110,	11
2017-01-04 09:19:29 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-04 09:19:29 AI_Player.update()		1100,	1010,	1100,	101,	1010,	1011,	1011
2017-01-04 09:19:29 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:29 AI_Player.update()		1010,	101,	110,	1010,	1100,	1100,	1110
2017-01-04 09:19:29 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:29 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:19:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:29 AI_Player.update()	update
2017-01-04 09:19:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:29 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:19:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:29 AI_Player.update()	update
2017-01-04 09:19:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:30 AI_Player.update()	Search took344ms
2017-01-04 09:19:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:30 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 09:19:30 AI_Player.update()		11,	1001,	1100,	1101,	1100,	110,	11
2017-01-04 09:19:30 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 09:19:30 AI_Player.update()		1100,	1011,	1100,	101,	1010,	1011,	1011
2017-01-04 09:19:30 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:30 AI_Player.update()		1010,	1001,	110,	1010,	1100,	1100,	1110
2017-01-04 09:19:30 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:19:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:19:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:30 AI_Player.update()	update
2017-01-04 09:19:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:30 AI_Player.update()	update
2017-01-04 09:19:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:31 AI_Player.update()	Search took838ms
2017-01-04 09:19:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:31 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 09:19:31 AI_Player.update()		11,	1001,	1100,	1101,	1100,	11,	11
2017-01-04 09:19:31 AI_Player.update()		1110,	1010,	1110,	101,	111,	1011,	1011
2017-01-04 09:19:31 AI_Player.update()		1100,	1011,	1100,	101,	1010,	1100,	1011
2017-01-04 09:19:31 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:31 AI_Player.update()		1010,	1001,	110,	1010,	1100,	101,	1110
2017-01-04 09:19:31 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-04 09:19:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:31 AI_Player.update()	update
2017-01-04 09:19:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:19:31 AI_Player.update()	Player b has won!
2017-01-04 09:19:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:31 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:19:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:31 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:19:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:31 AI_Player.update()	update
2017-01-04 09:19:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:31 AI_Player.update()	Search took231ms
2017-01-04 09:19:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:31 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-04 09:19:31 AI_Player.update()		1010,	1100,	1100,	1011,	1100,	111,	101
2017-01-04 09:19:31 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 09:19:31 AI_Player.update()		1010,	101,	110,	101,	101,	101,	101
2017-01-04 09:19:31 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 09:19:31 AI_Player.update()		1010,	11,	1010,	1010,	1100,	101,	101
2017-01-04 09:19:31 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 09:19:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:31 AI_Player.update()	update
2017-01-04 09:19:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:31 AI_Player.update()	update
2017-01-04 09:19:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:31 AI_Player.update()	Search took95ms
2017-01-04 09:19:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:31 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-04 09:19:31 AI_Player.update()		1010,	1100,	1100,	1011,	1100,	101,	101
2017-01-04 09:19:31 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 09:19:31 AI_Player.update()		1010,	101,	110,	101,	101,	101,	101
2017-01-04 09:19:31 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 09:19:31 AI_Player.update()		1010,	11,	1010,	1010,	1100,	1010,	101
2017-01-04 09:19:31 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:19:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:31 AI_Player.update()	update
2017-01-04 09:19:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:19:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:32 AI_Player.update()	update
2017-01-04 09:19:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:32 AI_Player.update()	Search took253ms
2017-01-04 09:19:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:32 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-04 09:19:32 AI_Player.update()		1010,	1100,	1100,	1011,	1100,	101,	101
2017-01-04 09:19:32 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 09:19:32 AI_Player.update()		1010,	1001,	110,	101,	101,	101,	101
2017-01-04 09:19:32 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 09:19:32 AI_Player.update()		1010,	110,	1010,	1010,	1100,	1010,	101
2017-01-04 09:19:32 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:19:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:19:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:32 AI_Player.update()	update
2017-01-04 09:19:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:19:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:32 AI_Player.update()	update
2017-01-04 09:19:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:32 AI_Player.update()	Search took386ms
2017-01-04 09:19:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:32 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-04 09:19:32 AI_Player.update()		1010,	1100,	1100,	1011,	1100,	101,	101
2017-01-04 09:19:32 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 09:19:32 AI_Player.update()		1010,	101,	110,	101,	101,	101,	101
2017-01-04 09:19:32 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 09:19:32 AI_Player.update()		1010,	11,	1010,	1010,	1100,	1010,	101
2017-01-04 09:19:32 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:19:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:32 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:19:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:33 AI_Player.update()	update
2017-01-04 09:19:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:33 AI_Player.update()	update
2017-01-04 09:19:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:33 AI_Player.update()	Search took179ms
2017-01-04 09:19:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:33 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-04 09:19:33 AI_Player.update()		1010,	1100,	1100,	1011,	1100,	101,	101
2017-01-04 09:19:33 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 09:19:33 AI_Player.update()		1010,	1001,	110,	101,	101,	101,	101
2017-01-04 09:19:33 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 09:19:33 AI_Player.update()		1010,	110,	1010,	1010,	1100,	1010,	101
2017-01-04 09:19:33 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:19:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:33 AI_Player.update()	update
2017-01-04 09:19:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:33 AI_Player.update()	update
2017-01-04 09:19:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:33 AI_Player.update()	Search took395ms
2017-01-04 09:19:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:33 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-04 09:19:33 AI_Player.update()		1010,	1100,	1100,	1011,	1100,	101,	101
2017-01-04 09:19:33 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 09:19:33 AI_Player.update()		1010,	101,	110,	101,	101,	101,	101
2017-01-04 09:19:33 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 09:19:33 AI_Player.update()		1010,	11,	1010,	1010,	1100,	1010,	101
2017-01-04 09:19:33 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:19:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:33 AI_Player.update()	update
2017-01-04 09:19:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:33 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:34 AI_Player.update()	update
2017-01-04 09:19:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:34 AI_Player.update()	Search took473ms
2017-01-04 09:19:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:34 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-04 09:19:34 AI_Player.update()		1010,	1100,	1100,	1101,	1100,	101,	101
2017-01-04 09:19:34 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 09:19:34 AI_Player.update()		1010,	101,	110,	1011,	101,	101,	101
2017-01-04 09:19:34 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 09:19:34 AI_Player.update()		1010,	11,	1010,	11,	1100,	1010,	101
2017-01-04 09:19:34 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:19:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:34 AI_Player.update()	update
2017-01-04 09:19:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:19:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:34 AI_Player.update()	update
2017-01-04 09:19:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:35 AI_Player.update()	Search took254ms
2017-01-04 09:19:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:35 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-04 09:19:35 AI_Player.update()		1010,	1100,	1100,	1010,	1100,	101,	101
2017-01-04 09:19:35 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:35 AI_Player.update()		1010,	101,	110,	1011,	101,	101,	101
2017-01-04 09:19:35 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	101,	1011
2017-01-04 09:19:35 AI_Player.update()		1010,	11,	1010,	101,	1100,	1010,	101
2017-01-04 09:19:35 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 09:19:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:19:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:35 AI_Player.update()	update
2017-01-04 09:19:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:19:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:35 AI_Player.update()	update
2017-01-04 09:19:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:35 AI_Player.update()	Search took228ms
2017-01-04 09:19:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:35 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-04 09:19:35 AI_Player.update()		1100,	1100,	1010,	1100,	101,	101,	1010
2017-01-04 09:19:35 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:35 AI_Player.update()		1010,	101,	110,	1011,	101,	101,	101
2017-01-04 09:19:35 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	101,	1011
2017-01-04 09:19:35 AI_Player.update()		1010,	11,	1010,	101,	1100,	1010,	101
2017-01-04 09:19:35 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 09:19:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:19:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:35 AI_Player.update()	update
2017-01-04 09:19:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:19:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:35 AI_Player.update()	update
2017-01-04 09:19:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:36 AI_Player.update()	Search took460ms
2017-01-04 09:19:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:36 AI_Player.update()		110,	1100,	111,	1010,	111,	111,	11
2017-01-04 09:19:36 AI_Player.update()		1100,	1100,	1010,	1100,	101,	101,	1010
2017-01-04 09:19:36 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:36 AI_Player.update()		1010,	1001,	110,	1011,	101,	101,	101
2017-01-04 09:19:36 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-04 09:19:36 AI_Player.update()		1010,	110,	1010,	101,	1100,	1010,	101
2017-01-04 09:19:36 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-04 09:19:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:36 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:19:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:36 AI_Player.update()	update
2017-01-04 09:19:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:36 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:19:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:36 AI_Player.update()	update
2017-01-04 09:19:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:36 AI_Player.update()	Search took436ms
2017-01-04 09:19:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:36 AI_Player.update()		110,	1100,	111,	1010,	111,	111,	11
2017-01-04 09:19:36 AI_Player.update()		1100,	1100,	1010,	1100,	101,	101,	1010
2017-01-04 09:19:36 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:36 AI_Player.update()		1001,	110,	1011,	101,	101,	101,	1010
2017-01-04 09:19:36 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-04 09:19:36 AI_Player.update()		1010,	110,	1010,	101,	1100,	1010,	101
2017-01-04 09:19:36 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-04 09:19:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:36 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:19:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:36 AI_Player.update()	update
2017-01-04 09:19:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:36 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:19:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:36 AI_Player.update()	update
2017-01-04 09:19:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:37 AI_Player.update()	Search took626ms
2017-01-04 09:19:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:37 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 09:19:37 AI_Player.update()		1100,	1100,	1010,	1100,	101,	101,	1010
2017-01-04 09:19:37 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:37 AI_Player.update()		1001,	110,	1011,	101,	101,	101,	1010
2017-01-04 09:19:37 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:19:37 AI_Player.update()		1010,	110,	1010,	101,	1100,	1100,	101
2017-01-04 09:19:37 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:19:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:19:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:37 AI_Player.update()	update
2017-01-04 09:19:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:19:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:37 AI_Player.update()	update
2017-01-04 09:19:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:38 AI_Player.update()	Search took637ms
2017-01-04 09:19:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:38 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 09:19:38 AI_Player.update()		1100,	1100,	1010,	1100,	101,	101,	1010
2017-01-04 09:19:38 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:38 AI_Player.update()		110,	1011,	101,	101,	101,	1010,	1001
2017-01-04 09:19:38 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:19:38 AI_Player.update()		1010,	110,	1010,	101,	1100,	1100,	101
2017-01-04 09:19:38 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:19:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:19:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:38 AI_Player.update()	update
2017-01-04 09:19:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:19:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:38 AI_Player.update()	update
2017-01-04 09:19:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:38 AI_Player.update()	Search took92ms
2017-01-04 09:19:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:38 AI_Player.update()		110,	1100,	111,	1010,	111,	111,	11
2017-01-04 09:19:38 AI_Player.update()		1100,	1100,	1010,	1100,	101,	101,	1010
2017-01-04 09:19:38 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:38 AI_Player.update()		110,	1011,	101,	101,	101,	101,	1001
2017-01-04 09:19:38 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:19:38 AI_Player.update()		1010,	110,	1010,	101,	1100,	1010,	101
2017-01-04 09:19:38 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-04 09:19:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:19:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:38 AI_Player.update()	update
2017-01-04 09:19:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:38 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:19:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:38 AI_Player.update()	update
2017-01-04 09:19:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:39 AI_Player.update()	Search took238ms
2017-01-04 09:19:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:39 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-04 09:19:39 AI_Player.update()		1100,	1100,	1010,	1100,	101,	101,	1010
2017-01-04 09:19:39 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:39 AI_Player.update()		110,	101,	101,	101,	101,	101,	1001
2017-01-04 09:19:39 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:19:39 AI_Player.update()		1010,	11,	1010,	101,	1100,	1010,	101
2017-01-04 09:19:39 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 09:19:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:19:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:39 AI_Player.update()	update
2017-01-04 09:19:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:19:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:39 AI_Player.update()	update
2017-01-04 09:19:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:39 AI_Player.update()	Search took54ms
2017-01-04 09:19:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:39 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-04 09:19:39 AI_Player.update()		1100,	1100,	1010,	1100,	101,	101,	1010
2017-01-04 09:19:39 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:39 AI_Player.update()		110,	101,	101,	101,	101,	101,	1001
2017-01-04 09:19:39 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:19:39 AI_Player.update()		11,	1010,	101,	1100,	1010,	101,	1010
2017-01-04 09:19:39 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 09:19:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:19:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:39 AI_Player.update()	update
2017-01-04 09:19:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:39 AI_Player.update()	update
2017-01-04 09:19:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:40 AI_Player.update()	Search took1061ms
2017-01-04 09:19:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:40 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 09:19:40 AI_Player.update()		1100,	1100,	1010,	1100,	101,	111,	1010
2017-01-04 09:19:40 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:40 AI_Player.update()		110,	101,	101,	101,	101,	101,	1001
2017-01-04 09:19:40 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	101,	1011
2017-01-04 09:19:40 AI_Player.update()		11,	1010,	101,	1100,	1010,	1010,	1010
2017-01-04 09:19:40 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 09:19:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:19:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:40 AI_Player.update()	update
2017-01-04 09:19:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:19:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:40 AI_Player.update()	update
2017-01-04 09:19:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:41 AI_Player.update()	Search took579ms
2017-01-04 09:19:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:41 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-04 09:19:41 AI_Player.update()		1100,	1100,	1010,	1100,	101,	111,	1010
2017-01-04 09:19:41 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:41 AI_Player.update()		110,	1011,	101,	101,	101,	101,	1001
2017-01-04 09:19:41 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	101,	1011
2017-01-04 09:19:41 AI_Player.update()		11,	110,	101,	1100,	1010,	1010,	1010
2017-01-04 09:19:41 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 09:19:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:41 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:19:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:41 AI_Player.update()	update
2017-01-04 09:19:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:41 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:19:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:41 AI_Player.update()	update
2017-01-04 09:19:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:42 AI_Player.update()	Search took419ms
2017-01-04 09:19:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:42 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 09:19:42 AI_Player.update()		1100,	1100,	1010,	1100,	101,	111,	1010
2017-01-04 09:19:42 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:42 AI_Player.update()		110,	101,	101,	101,	101,	101,	1001
2017-01-04 09:19:42 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	101,	1011
2017-01-04 09:19:42 AI_Player.update()		11,	1010,	101,	1100,	1010,	1010,	1010
2017-01-04 09:19:42 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 09:19:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:19:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:42 AI_Player.update()	update
2017-01-04 09:19:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:19:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:42 AI_Player.update()	update
2017-01-04 09:19:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:42 AI_Player.update()	Search took283ms
2017-01-04 09:19:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:42 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-04 09:19:42 AI_Player.update()		1100,	1100,	1010,	1100,	101,	101,	1010
2017-01-04 09:19:42 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 09:19:42 AI_Player.update()		110,	101,	101,	101,	101,	101,	1001
2017-01-04 09:19:42 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:19:42 AI_Player.update()		11,	1010,	101,	1100,	1010,	101,	1010
2017-01-04 09:19:42 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 09:19:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:19:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:42 AI_Player.update()	update
2017-01-04 09:19:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:42 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:19:42 AI_Player.update()	Player b has won!
2017-01-04 09:19:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:42 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:19:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:42 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:19:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:42 AI_Player.update()	update
2017-01-04 09:19:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:42 AI_Player.update()	Search took42ms
2017-01-04 09:19:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:42 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-04 09:19:42 AI_Player.update()		1110,	1010,	1100,	101,	11,	110,	1100
2017-01-04 09:19:42 AI_Player.update()		1110,	11,	1110,	1101,	111,	1101,	1011
2017-01-04 09:19:42 AI_Player.update()		11,	1100,	1100,	11,	101,	11,	110
2017-01-04 09:19:42 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1101,	1011
2017-01-04 09:19:42 AI_Player.update()		1010,	1110,	110,	1100,	1010,	1010,	1100
2017-01-04 09:19:42 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:19:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:43 AI_Player.update()	update
2017-01-04 09:19:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:43 AI_Player.update()	update
2017-01-04 09:19:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:43 AI_Player.update()	Search took88ms
2017-01-04 09:19:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:43 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-04 09:19:43 AI_Player.update()		1010,	1100,	101,	11,	110,	1100,	1110
2017-01-04 09:19:43 AI_Player.update()		1110,	11,	1110,	1101,	111,	1101,	1011
2017-01-04 09:19:43 AI_Player.update()		11,	1100,	1100,	11,	101,	11,	110
2017-01-04 09:19:43 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1101,	1011
2017-01-04 09:19:43 AI_Player.update()		1010,	1110,	110,	1100,	1010,	1010,	1100
2017-01-04 09:19:43 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:19:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:43 AI_Player.update()	update
2017-01-04 09:19:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:43 AI_Player.update()	update
2017-01-04 09:19:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:43 AI_Player.update()	Search took275ms
2017-01-04 09:19:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:43 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-04 09:19:43 AI_Player.update()		1010,	1100,	101,	11,	110,	1100,	1110
2017-01-04 09:19:43 AI_Player.update()		1110,	11,	1110,	1101,	111,	1101,	1011
2017-01-04 09:19:43 AI_Player.update()		1100,	1100,	11,	101,	11,	110,	11
2017-01-04 09:19:43 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1101,	1011
2017-01-04 09:19:43 AI_Player.update()		1010,	1110,	110,	1100,	1010,	1010,	1100
2017-01-04 09:19:43 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:19:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:43 AI_Player.update()	update
2017-01-04 09:19:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:43 AI_Player.update()	update
2017-01-04 09:19:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:44 AI_Player.update()	Search took189ms
2017-01-04 09:19:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:44 AI_Player.update()		110,	1100,	111,	11,	111,	1001,	11
2017-01-04 09:19:44 AI_Player.update()		1010,	11,	101,	11,	110,	1100,	1110
2017-01-04 09:19:44 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1101,	1011
2017-01-04 09:19:44 AI_Player.update()		1100,	1001,	11,	101,	11,	110,	11
2017-01-04 09:19:44 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1101,	1011
2017-01-04 09:19:44 AI_Player.update()		1010,	1110,	110,	1100,	1010,	1010,	1100
2017-01-04 09:19:44 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:19:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:44 AI_Player.update()	update
2017-01-04 09:19:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:44 AI_Player.update()	update
2017-01-04 09:19:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:44 AI_Player.update()	Search took279ms
2017-01-04 09:19:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:44 AI_Player.update()		110,	1100,	111,	11,	111,	1001,	11
2017-01-04 09:19:44 AI_Player.update()		1110,	1010,	11,	101,	11,	110,	1100
2017-01-04 09:19:44 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1101,	1011
2017-01-04 09:19:44 AI_Player.update()		1100,	1001,	11,	101,	11,	110,	11
2017-01-04 09:19:44 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1101,	1011
2017-01-04 09:19:44 AI_Player.update()		1010,	1110,	110,	1100,	1010,	1010,	1100
2017-01-04 09:19:44 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:19:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:19:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:44 AI_Player.update()	update
2017-01-04 09:19:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:19:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:44 AI_Player.update()	update
2017-01-04 09:19:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:44 AI_Player.update()	Search took133ms
2017-01-04 09:19:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:44 AI_Player.update()		110,	1100,	111,	11,	111,	1001,	11
2017-01-04 09:19:44 AI_Player.update()		1110,	1010,	11,	101,	11,	110,	1100
2017-01-04 09:19:44 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1101,	1011
2017-01-04 09:19:44 AI_Player.update()		1100,	1001,	11,	101,	11,	110,	11
2017-01-04 09:19:44 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1101,	1011
2017-01-04 09:19:44 AI_Player.update()		1110,	110,	1100,	1010,	1010,	1100,	1010
2017-01-04 09:19:44 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:19:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:44 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:19:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:45 AI_Player.update()	update
2017-01-04 09:19:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:45 AI_Player.update()	update
2017-01-04 09:19:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:45 AI_Player.update()	Search took193ms
2017-01-04 09:19:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:45 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-04 09:19:45 AI_Player.update()		1110,	1010,	11,	101,	11,	1001,	1100
2017-01-04 09:19:45 AI_Player.update()		1110,	1100,	1110,	1101,	111,	110,	1011
2017-01-04 09:19:45 AI_Player.update()		1100,	1001,	11,	101,	11,	1101,	11
2017-01-04 09:19:45 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-04 09:19:45 AI_Player.update()		1110,	110,	1100,	1010,	1010,	1101,	1010
2017-01-04 09:19:45 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:19:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:45 AI_Player.update()	update
2017-01-04 09:19:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:45 AI_Player.update()	update
2017-01-04 09:19:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:45 AI_Player.update()	Search took41ms
2017-01-04 09:19:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:45 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 09:19:45 AI_Player.update()		1110,	1100,	11,	101,	11,	1001,	1100
2017-01-04 09:19:45 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-04 09:19:45 AI_Player.update()		1100,	1110,	11,	101,	11,	1101,	11
2017-01-04 09:19:45 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-04 09:19:45 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	1101,	1010
2017-01-04 09:19:45 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1100,	1001
2017-01-04 09:19:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:45 AI_Player.update()	update
2017-01-04 09:19:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:45 AI_Player.update()	update
2017-01-04 09:19:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:46 AI_Player.update()	Search took296ms
2017-01-04 09:19:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:46 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-04 09:19:46 AI_Player.update()		1110,	1100,	11,	101,	11,	1010,	1100
2017-01-04 09:19:46 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-04 09:19:46 AI_Player.update()		1100,	1110,	11,	101,	11,	110,	11
2017-01-04 09:19:46 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-04 09:19:46 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	110,	1010
2017-01-04 09:19:46 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1101,	1001
2017-01-04 09:19:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:19:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:46 AI_Player.update()	update
2017-01-04 09:19:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:19:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:46 AI_Player.update()	update
2017-01-04 09:19:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:46 AI_Player.update()	Search took98ms
2017-01-04 09:19:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:46 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-04 09:19:46 AI_Player.update()		1110,	1100,	11,	101,	11,	1010,	1100
2017-01-04 09:19:46 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-04 09:19:46 AI_Player.update()		1100,	1110,	11,	101,	11,	110,	11
2017-01-04 09:19:46 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-04 09:19:46 AI_Player.update()		1010,	1110,	1010,	1100,	1010,	1010,	110
2017-01-04 09:19:46 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1101,	1001
2017-01-04 09:19:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:19:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:46 AI_Player.update()	update
2017-01-04 09:19:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:19:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:46 AI_Player.update()	update
2017-01-04 09:19:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:47 AI_Player.update()	Search took436ms
2017-01-04 09:19:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:47 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-04 09:19:47 AI_Player.update()		1110,	1001,	11,	101,	11,	1010,	1100
2017-01-04 09:19:47 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-04 09:19:47 AI_Player.update()		1100,	110,	11,	101,	11,	110,	11
2017-01-04 09:19:47 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1101,	1011
2017-01-04 09:19:47 AI_Player.update()		1010,	1100,	1010,	1100,	1010,	1010,	110
2017-01-04 09:19:47 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1101,	1001
2017-01-04 09:19:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:19:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:47 AI_Player.update()	update
2017-01-04 09:19:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:19:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:47 AI_Player.update()	update
2017-01-04 09:19:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:47 AI_Player.update()	Search took182ms
2017-01-04 09:19:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:47 AI_Player.update()		110,	1100,	111,	1011,	111,	1100,	11
2017-01-04 09:19:47 AI_Player.update()		1110,	1001,	11,	11,	11,	1010,	1100
2017-01-04 09:19:47 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 09:19:47 AI_Player.update()		1100,	110,	11,	1101,	11,	110,	11
2017-01-04 09:19:47 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-04 09:19:47 AI_Player.update()		1010,	1100,	1010,	110,	1010,	1010,	110
2017-01-04 09:19:47 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:19:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:19:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:47 AI_Player.update()	update
2017-01-04 09:19:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:47 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:19:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:47 AI_Player.update()	update
2017-01-04 09:19:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:48 AI_Player.update()	Search took610ms
2017-01-04 09:19:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:48 AI_Player.update()		110,	1100,	111,	1011,	111,	1100,	11
2017-01-04 09:19:48 AI_Player.update()		1110,	1001,	11,	11,	11,	1010,	1100
2017-01-04 09:19:48 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 09:19:48 AI_Player.update()		110,	11,	1101,	11,	110,	11,	1100
2017-01-04 09:19:48 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-04 09:19:48 AI_Player.update()		1010,	1100,	1010,	110,	1010,	1010,	110
2017-01-04 09:19:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:19:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:19:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:48 AI_Player.update()	update
2017-01-04 09:19:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:19:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:48 AI_Player.update()	update
2017-01-04 09:19:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:49 AI_Player.update()	Search took740ms
2017-01-04 09:19:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:49 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-04 09:19:49 AI_Player.update()		1110,	1001,	11,	1011,	11,	1010,	1100
2017-01-04 09:19:49 AI_Player.update()		1110,	1110,	1110,	11,	111,	1001,	1011
2017-01-04 09:19:49 AI_Player.update()		110,	11,	1101,	101,	110,	11,	1100
2017-01-04 09:19:49 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:19:49 AI_Player.update()		1010,	1100,	1010,	101,	1010,	1010,	110
2017-01-04 09:19:49 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1101,	1001
2017-01-04 09:19:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:19:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:49 AI_Player.update()	update
2017-01-04 09:19:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:49 AI_Player.update()	update
2017-01-04 09:19:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:49 AI_Player.update()	Search took355ms
2017-01-04 09:19:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:49 AI_Player.update()		110,	1001,	111,	1100,	111,	1100,	11
2017-01-04 09:19:49 AI_Player.update()		1110,	1110,	11,	1011,	11,	1010,	1100
2017-01-04 09:19:49 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-04 09:19:49 AI_Player.update()		110,	1110,	1101,	101,	110,	11,	1100
2017-01-04 09:19:49 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1101,	1011
2017-01-04 09:19:49 AI_Player.update()		1010,	1010,	1010,	101,	1010,	1010,	110
2017-01-04 09:19:49 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1101,	1001
2017-01-04 09:19:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:49 AI_Player.update()	update
2017-01-04 09:19:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:49 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:49 AI_Player.update()	update
2017-01-04 09:19:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:50 AI_Player.update()	Search took57ms
2017-01-04 09:19:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:50 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-04 09:19:50 AI_Player.update()		1110,	1110,	11,	1100,	11,	1010,	1100
2017-01-04 09:19:50 AI_Player.update()		1110,	11,	1110,	1011,	111,	1001,	1011
2017-01-04 09:19:50 AI_Player.update()		110,	1110,	1101,	11,	110,	11,	1100
2017-01-04 09:19:50 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-04 09:19:50 AI_Player.update()		1010,	1010,	1010,	11,	1010,	1010,	110
2017-01-04 09:19:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-04 09:19:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:50 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:50 AI_Player.update()	update
2017-01-04 09:19:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:50 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:50 AI_Player.update()	update
2017-01-04 09:19:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:51 AI_Player.update()	Search took786ms
2017-01-04 09:19:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:51 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-04 09:19:51 AI_Player.update()		1110,	1110,	11,	1100,	11,	1010,	1100
2017-01-04 09:19:51 AI_Player.update()		1110,	11,	1110,	1011,	111,	1001,	1011
2017-01-04 09:19:51 AI_Player.update()		110,	1110,	1101,	11,	110,	11,	1100
2017-01-04 09:19:51 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-04 09:19:51 AI_Player.update()		1010,	1010,	11,	1010,	1010,	110,	1010
2017-01-04 09:19:51 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-04 09:19:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:19:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:51 AI_Player.update()	update
2017-01-04 09:19:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:51 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:19:51 AI_Player.update()	Player a has won!
2017-01-04 09:19:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:51 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:19:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:19:51 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:19:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:51 AI_Player.update()	update
2017-01-04 09:19:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:51 AI_Player.update()	Search took17ms
2017-01-04 09:19:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:51 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 09:19:51 AI_Player.update()		11,	1001,	1010,	110,	11,	110,	1001
2017-01-04 09:19:51 AI_Player.update()		1110,	110,	1110,	1110,	111,	1100,	1011
2017-01-04 09:19:51 AI_Player.update()		11,	11,	101,	101,	1010,	1100,	1001
2017-01-04 09:19:51 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-04 09:19:51 AI_Player.update()		101,	111,	1110,	1100,	101,	1010,	101
2017-01-04 09:19:51 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:19:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:51 AI_Player.update()	update
2017-01-04 09:19:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:51 AI_Player.update()	update
2017-01-04 09:19:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:51 AI_Player.update()	Search took168ms
2017-01-04 09:19:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:51 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 09:19:51 AI_Player.update()		1001,	11,	1001,	1010,	110,	11,	110
2017-01-04 09:19:51 AI_Player.update()		1110,	110,	1110,	1110,	111,	1100,	1011
2017-01-04 09:19:51 AI_Player.update()		11,	11,	101,	101,	1010,	1100,	1001
2017-01-04 09:19:51 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-04 09:19:51 AI_Player.update()		101,	111,	1110,	1100,	101,	1010,	101
2017-01-04 09:19:51 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:19:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:51 AI_Player.update()	update
2017-01-04 09:19:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:51 AI_Player.update()	update
2017-01-04 09:19:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:51 AI_Player.update()	Search took55ms
2017-01-04 09:19:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:51 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:19:51 AI_Player.update()		1001,	110,	1001,	1010,	110,	11,	110
2017-01-04 09:19:51 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-04 09:19:51 AI_Player.update()		11,	1100,	101,	101,	1010,	1100,	1001
2017-01-04 09:19:51 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1101,	1011
2017-01-04 09:19:51 AI_Player.update()		101,	1101,	1110,	1100,	101,	1010,	101
2017-01-04 09:19:51 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:19:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:52 AI_Player.update()	update
2017-01-04 09:19:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:52 AI_Player.update()	update
2017-01-04 09:19:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:52 AI_Player.update()	Search took221ms
2017-01-04 09:19:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:52 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 09:19:52 AI_Player.update()		1001,	110,	1001,	110,	110,	11,	110
2017-01-04 09:19:52 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 09:19:52 AI_Player.update()		11,	1100,	101,	1110,	1010,	1100,	1001
2017-01-04 09:19:52 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-04 09:19:52 AI_Player.update()		101,	1101,	1110,	1100,	101,	1010,	101
2017-01-04 09:19:52 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-04 09:19:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:19:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:52 AI_Player.update()	update
2017-01-04 09:19:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:19:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:52 AI_Player.update()	update
2017-01-04 09:19:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:52 AI_Player.update()	Search took66ms
2017-01-04 09:19:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:52 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 09:19:52 AI_Player.update()		1001,	11,	1001,	110,	110,	11,	110
2017-01-04 09:19:52 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-04 09:19:52 AI_Player.update()		11,	11,	101,	1110,	1010,	1100,	1001
2017-01-04 09:19:52 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-04 09:19:52 AI_Player.update()		101,	111,	1110,	1100,	101,	1010,	101
2017-01-04 09:19:52 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1100,	1001
2017-01-04 09:19:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:19:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:52 AI_Player.update()	update
2017-01-04 09:19:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:19:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:52 AI_Player.update()	update
2017-01-04 09:19:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:52 AI_Player.update()	Search took78ms
2017-01-04 09:19:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:52 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 09:19:52 AI_Player.update()		1001,	110,	1001,	110,	110,	11,	110
2017-01-04 09:19:52 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 09:19:52 AI_Player.update()		11,	1100,	101,	1110,	1010,	1100,	1001
2017-01-04 09:19:52 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-04 09:19:52 AI_Player.update()		101,	1101,	1110,	1100,	101,	1010,	101
2017-01-04 09:19:52 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-04 09:19:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:52 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:19:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:53 AI_Player.update()	update
2017-01-04 09:19:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:19:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:53 AI_Player.update()	update
2017-01-04 09:19:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:53 AI_Player.update()	Search took63ms
2017-01-04 09:19:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:53 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-04 09:19:53 AI_Player.update()		1001,	110,	1001,	110,	110,	101,	110
2017-01-04 09:19:53 AI_Player.update()		1110,	11,	1110,	1010,	111,	11,	1011
2017-01-04 09:19:53 AI_Player.update()		11,	1100,	101,	1110,	1010,	1100,	1001
2017-01-04 09:19:53 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-04 09:19:53 AI_Player.update()		101,	1101,	1110,	1100,	101,	1101,	101
2017-01-04 09:19:53 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:19:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:19:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:53 AI_Player.update()	update
2017-01-04 09:19:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:19:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:53 AI_Player.update()	update
2017-01-04 09:19:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:53 AI_Player.update()	Search took332ms
2017-01-04 09:19:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:53 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-04 09:19:53 AI_Player.update()		1001,	110,	1001,	110,	110,	101,	110
2017-01-04 09:19:53 AI_Player.update()		1110,	11,	1110,	1010,	111,	11,	1011
2017-01-04 09:19:53 AI_Player.update()		1100,	101,	1110,	1010,	1100,	1001,	11
2017-01-04 09:19:53 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-04 09:19:53 AI_Player.update()		101,	1101,	1110,	1100,	101,	1101,	101
2017-01-04 09:19:53 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:19:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:19:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:53 AI_Player.update()	update
2017-01-04 09:19:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:53 AI_Player.update()	update
2017-01-04 09:19:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:54 AI_Player.update()	Search took112ms
2017-01-04 09:19:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:54 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-04 09:19:54 AI_Player.update()		1001,	110,	1001,	110,	110,	101,	110
2017-01-04 09:19:54 AI_Player.update()		1110,	11,	1110,	1010,	111,	11,	1011
2017-01-04 09:19:54 AI_Player.update()		1100,	101,	1110,	1010,	1100,	1001,	11
2017-01-04 09:19:54 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-04 09:19:54 AI_Player.update()		1101,	1110,	1100,	101,	1101,	101,	101
2017-01-04 09:19:54 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:19:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:54 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:54 AI_Player.update()	update
2017-01-04 09:19:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:54 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:54 AI_Player.update()	update
2017-01-04 09:19:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:54 AI_Player.update()	Search took126ms
2017-01-04 09:19:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:54 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-04 09:19:54 AI_Player.update()		1001,	110,	1001,	110,	110,	101,	110
2017-01-04 09:19:54 AI_Player.update()		1110,	11,	1110,	1010,	111,	11,	1011
2017-01-04 09:19:54 AI_Player.update()		101,	1110,	1010,	1100,	1001,	11,	1100
2017-01-04 09:19:54 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-04 09:19:54 AI_Player.update()		1101,	1110,	1100,	101,	1101,	101,	101
2017-01-04 09:19:54 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:19:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:54 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:54 AI_Player.update()	update
2017-01-04 09:19:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:54 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:54 AI_Player.update()	update
2017-01-04 09:19:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:55 AI_Player.update()	Search took498ms
2017-01-04 09:19:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:55 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-04 09:19:55 AI_Player.update()		1001,	110,	1001,	1010,	110,	101,	110
2017-01-04 09:19:55 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-04 09:19:55 AI_Player.update()		101,	1110,	1010,	1010,	1001,	11,	1100
2017-01-04 09:19:55 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:19:55 AI_Player.update()		1101,	1110,	1100,	101,	1101,	101,	101
2017-01-04 09:19:55 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 09:19:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:55 AI_Player.update()	update
2017-01-04 09:19:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:55 AI_Player.update()	update
2017-01-04 09:19:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:55 AI_Player.update()	Search took129ms
2017-01-04 09:19:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:55 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-04 09:19:55 AI_Player.update()		1001,	110,	1001,	1010,	110,	11,	110
2017-01-04 09:19:55 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-04 09:19:55 AI_Player.update()		101,	1110,	1010,	1010,	1001,	1100,	1100
2017-01-04 09:19:55 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-04 09:19:55 AI_Player.update()		1101,	1110,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:55 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-04 09:19:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:19:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:55 AI_Player.update()	update
2017-01-04 09:19:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:19:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:55 AI_Player.update()	update
2017-01-04 09:19:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:55 AI_Player.update()	Search took307ms
2017-01-04 09:19:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:55 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:19:55 AI_Player.update()		1001,	11,	1001,	1010,	110,	11,	110
2017-01-04 09:19:55 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-04 09:19:55 AI_Player.update()		101,	111,	1010,	1010,	1001,	1100,	1100
2017-01-04 09:19:55 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	101,	1011
2017-01-04 09:19:55 AI_Player.update()		1101,	1001,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:55 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 09:19:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:55 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:19:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:56 AI_Player.update()	update
2017-01-04 09:19:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:19:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:56 AI_Player.update()	update
2017-01-04 09:19:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:56 AI_Player.update()	Search took252ms
2017-01-04 09:19:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:56 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:19:56 AI_Player.update()		11,	1001,	1010,	110,	11,	110,	1001
2017-01-04 09:19:56 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-04 09:19:56 AI_Player.update()		101,	111,	1010,	1010,	1001,	1100,	1100
2017-01-04 09:19:56 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	101,	1011
2017-01-04 09:19:56 AI_Player.update()		1101,	1001,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:56 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 09:19:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:19:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:56 AI_Player.update()	update
2017-01-04 09:19:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:19:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:56 AI_Player.update()	update
2017-01-04 09:19:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:56 AI_Player.update()	Search took212ms
2017-01-04 09:19:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:56 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:19:56 AI_Player.update()		11,	1001,	1010,	110,	11,	110,	1001
2017-01-04 09:19:56 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-04 09:19:56 AI_Player.update()		1100,	101,	111,	1010,	1010,	1001,	1100
2017-01-04 09:19:56 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	101,	1011
2017-01-04 09:19:56 AI_Player.update()		1101,	1001,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:56 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 09:19:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:19:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:56 AI_Player.update()	update
2017-01-04 09:19:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:19:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:57 AI_Player.update()	update
2017-01-04 09:19:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:57 AI_Player.update()	Search took288ms
2017-01-04 09:19:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:57 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-04 09:19:57 AI_Player.update()		11,	1110,	1010,	110,	11,	110,	1001
2017-01-04 09:19:57 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 09:19:57 AI_Player.update()		1100,	1110,	111,	1010,	1010,	1001,	1100
2017-01-04 09:19:57 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 09:19:57 AI_Player.update()		1101,	11,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:57 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-04 09:19:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:57 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:19:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:57 AI_Player.update()	update
2017-01-04 09:19:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:57 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:19:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:57 AI_Player.update()	update
2017-01-04 09:19:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:57 AI_Player.update()	Search took65ms
2017-01-04 09:19:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:57 AI_Player.update()		110,	1110,	111,	1100,	111,	101,	11
2017-01-04 09:19:57 AI_Player.update()		11,	101,	1010,	110,	11,	110,	1001
2017-01-04 09:19:57 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-04 09:19:57 AI_Player.update()		1100,	1001,	111,	1010,	1010,	1001,	1100
2017-01-04 09:19:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 09:19:57 AI_Player.update()		1101,	110,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:57 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-04 09:19:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:57 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:19:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:57 AI_Player.update()	update
2017-01-04 09:19:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:57 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:19:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:57 AI_Player.update()	update
2017-01-04 09:19:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:58 AI_Player.update()	Search took283ms
2017-01-04 09:19:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:58 AI_Player.update()		110,	1110,	111,	1100,	111,	101,	11
2017-01-04 09:19:58 AI_Player.update()		11,	101,	1010,	110,	11,	110,	1001
2017-01-04 09:19:58 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-04 09:19:58 AI_Player.update()		1001,	111,	1010,	1010,	1001,	1100,	1100
2017-01-04 09:19:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 09:19:58 AI_Player.update()		1101,	110,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:58 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-04 09:19:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:19:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:58 AI_Player.update()	update
2017-01-04 09:19:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:19:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:58 AI_Player.update()	update
2017-01-04 09:19:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:58 AI_Player.update()	Search took197ms
2017-01-04 09:19:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:58 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:19:58 AI_Player.update()		11,	1110,	1010,	110,	11,	110,	1001
2017-01-04 09:19:58 AI_Player.update()		1110,	111,	1110,	110,	111,	11,	1011
2017-01-04 09:19:58 AI_Player.update()		1001,	11,	1010,	1010,	1001,	1100,	1100
2017-01-04 09:19:58 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-04 09:19:58 AI_Player.update()		1101,	1001,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:58 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1100,	1001
2017-01-04 09:19:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:19:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:58 AI_Player.update()	update
2017-01-04 09:19:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:19:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:58 AI_Player.update()	update
2017-01-04 09:19:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:58 AI_Player.update()	Search took230ms
2017-01-04 09:19:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:58 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:19:58 AI_Player.update()		11,	1110,	1010,	110,	11,	110,	1001
2017-01-04 09:19:58 AI_Player.update()		1110,	111,	1110,	1010,	111,	11,	1011
2017-01-04 09:19:58 AI_Player.update()		1001,	11,	1010,	1100,	1001,	1100,	1100
2017-01-04 09:19:58 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 09:19:58 AI_Player.update()		1101,	1001,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:58 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1100,	1001
2017-01-04 09:19:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:58 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:19:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:59 AI_Player.update()	update
2017-01-04 09:19:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:19:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:19:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:19:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	3 6
2017-01-04 09:19:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:59 AI_Player.update()	update
2017-01-04 09:19:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:19:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:19:59 AI_Player.update()	Search took339ms
2017-01-04 09:19:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:59 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:19:59 AI_Player.update()		11,	1110,	1010,	110,	11,	110,	1001
2017-01-04 09:19:59 AI_Player.update()		1110,	111,	1110,	1010,	111,	11,	1011
2017-01-04 09:19:59 AI_Player.update()		11,	1010,	1100,	1001,	1100,	1100,	1001
2017-01-04 09:19:59 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 09:19:59 AI_Player.update()		1101,	1001,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:59 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1100,	1001
2017-01-04 09:19:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	3 6
2017-01-04 09:19:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:59 AI_Player.update()	update
2017-01-04 09:19:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:19:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:19:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:19:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:19:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:19:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:19:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:19:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:19:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:19:59 AI_Player.update()	update
2017-01-04 09:19:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:19:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:19:59 AI_Player.update()	Search took266ms
2017-01-04 09:19:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:19:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:59 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:19:59 AI_Player.update()		11,	1110,	1010,	110,	11,	110,	1001
2017-01-04 09:19:59 AI_Player.update()		1110,	111,	1110,	1010,	111,	11,	1011
2017-01-04 09:19:59 AI_Player.update()		1010,	1100,	1001,	1100,	1100,	1001,	11
2017-01-04 09:19:59 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 09:19:59 AI_Player.update()		1101,	1001,	1100,	101,	1101,	1010,	101
2017-01-04 09:19:59 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1100,	1001
2017-01-04 09:19:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:19:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:19:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:19:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:19:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:19:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:19:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:19:59 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:20:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:00 AI_Player.update()	update
2017-01-04 09:20:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:20:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:00 AI_Player.update()	update
2017-01-04 09:20:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:00 AI_Player.update()	Search took422ms
2017-01-04 09:20:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:00 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:20:00 AI_Player.update()		11,	1110,	1010,	1010,	11,	110,	1001
2017-01-04 09:20:00 AI_Player.update()		1110,	111,	1110,	1100,	111,	11,	1011
2017-01-04 09:20:00 AI_Player.update()		1010,	1100,	1001,	101,	1100,	1001,	11
2017-01-04 09:20:00 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 09:20:00 AI_Player.update()		1101,	1001,	1100,	1100,	1101,	1010,	101
2017-01-04 09:20:00 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1100,	1001
2017-01-04 09:20:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:20:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:00 AI_Player.update()	update
2017-01-04 09:20:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:00 AI_Player.update()	update
2017-01-04 09:20:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:01 AI_Player.update()	Search took369ms
2017-01-04 09:20:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:01 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:20:01 AI_Player.update()		1001,	11,	1110,	1010,	1010,	11,	110
2017-01-04 09:20:01 AI_Player.update()		1110,	111,	1110,	1100,	111,	11,	1011
2017-01-04 09:20:01 AI_Player.update()		1010,	1100,	1001,	101,	1100,	1001,	11
2017-01-04 09:20:01 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 09:20:01 AI_Player.update()		1101,	1001,	1100,	1100,	1101,	1010,	101
2017-01-04 09:20:01 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1100,	1001
2017-01-04 09:20:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:01 AI_Player.update()	update
2017-01-04 09:20:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:20:01 AI_Player.update()	Player b has won!
2017-01-04 09:20:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:01 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:20:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:01 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:20:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:01 AI_Player.update()	update
2017-01-04 09:20:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:01 AI_Player.update()	Search took29ms
2017-01-04 09:20:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 09:20:01 AI_Player.update()		101,	1010,	110,	1110,	101,	11,	11
2017-01-04 09:20:01 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:01 AI_Player.update()		101,	1001,	1100,	1010,	101,	110,	111
2017-01-04 09:20:01 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:01 AI_Player.update()		1001,	1001,	1001,	1010,	1101,	1001,	101
2017-01-04 09:20:01 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:01 AI_Player.update()	update
2017-01-04 09:20:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:01 AI_Player.update()	update
2017-01-04 09:20:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:01 AI_Player.update()	Search took175ms
2017-01-04 09:20:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 09:20:01 AI_Player.update()		11,	101,	1010,	110,	1110,	101,	11
2017-01-04 09:20:01 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:01 AI_Player.update()		101,	1001,	1100,	1010,	101,	110,	111
2017-01-04 09:20:01 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:01 AI_Player.update()		1001,	1001,	1001,	1010,	1101,	1001,	101
2017-01-04 09:20:01 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:01 AI_Player.update()	update
2017-01-04 09:20:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:02 AI_Player.update()	update
2017-01-04 09:20:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:02 AI_Player.update()	Search took486ms
2017-01-04 09:20:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:02 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:20:02 AI_Player.update()		11,	1100,	1010,	110,	1110,	101,	11
2017-01-04 09:20:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:02 AI_Player.update()		101,	11,	1100,	1010,	101,	110,	111
2017-01-04 09:20:02 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:02 AI_Player.update()		1001,	11,	1001,	1010,	1101,	1001,	101
2017-01-04 09:20:02 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:02 AI_Player.update()	update
2017-01-04 09:20:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:02 AI_Player.update()	update
2017-01-04 09:20:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:03 AI_Player.update()	Search took497ms
2017-01-04 09:20:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:03 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:20:03 AI_Player.update()		11,	11,	1100,	1010,	110,	1110,	101
2017-01-04 09:20:03 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:03 AI_Player.update()		101,	11,	1100,	1010,	101,	110,	111
2017-01-04 09:20:03 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:03 AI_Player.update()		1001,	11,	1001,	1010,	1101,	1001,	101
2017-01-04 09:20:03 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:03 AI_Player.update()	update
2017-01-04 09:20:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:03 AI_Player.update()	update
2017-01-04 09:20:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:03 AI_Player.update()	Search took146ms
2017-01-04 09:20:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:03 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 09:20:03 AI_Player.update()		11,	1001,	1100,	1010,	110,	1110,	101
2017-01-04 09:20:03 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:03 AI_Player.update()		101,	1001,	1100,	1010,	101,	110,	111
2017-01-04 09:20:03 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:03 AI_Player.update()		1001,	11,	1001,	1010,	1101,	1001,	101
2017-01-04 09:20:03 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:03 AI_Player.update()	update
2017-01-04 09:20:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:03 AI_Player.update()	update
2017-01-04 09:20:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:03 AI_Player.update()	Search took49ms
2017-01-04 09:20:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:03 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 09:20:03 AI_Player.update()		11,	11,	1100,	1010,	110,	1110,	101
2017-01-04 09:20:03 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:03 AI_Player.update()		101,	11,	1100,	1010,	101,	110,	111
2017-01-04 09:20:03 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:03 AI_Player.update()		1001,	101,	1001,	1010,	1101,	1001,	101
2017-01-04 09:20:03 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:03 AI_Player.update()	update
2017-01-04 09:20:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:03 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:04 AI_Player.update()	update
2017-01-04 09:20:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:04 AI_Player.update()	Search took123ms
2017-01-04 09:20:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:04 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 09:20:04 AI_Player.update()		11,	11,	1100,	1001,	110,	1110,	101
2017-01-04 09:20:04 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:20:04 AI_Player.update()		101,	11,	1100,	11,	101,	110,	111
2017-01-04 09:20:04 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 09:20:04 AI_Player.update()		1001,	101,	1001,	1100,	1101,	1001,	101
2017-01-04 09:20:04 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-04 09:20:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:04 AI_Player.update()	update
2017-01-04 09:20:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:04 AI_Player.update()	update
2017-01-04 09:20:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:04 AI_Player.update()	Search took75ms
2017-01-04 09:20:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:04 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 09:20:04 AI_Player.update()		11,	11,	1100,	1010,	110,	1110,	101
2017-01-04 09:20:04 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:04 AI_Player.update()		101,	11,	1100,	1010,	101,	110,	111
2017-01-04 09:20:04 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:04 AI_Player.update()		1001,	101,	1001,	1010,	1101,	1001,	101
2017-01-04 09:20:04 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:04 AI_Player.update()	update
2017-01-04 09:20:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:04 AI_Player.update()	update
2017-01-04 09:20:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:04 AI_Player.update()	Search took165ms
2017-01-04 09:20:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:04 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 09:20:04 AI_Player.update()		11,	11,	1100,	1010,	110,	1110,	101
2017-01-04 09:20:04 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:04 AI_Player.update()		11,	1100,	1010,	101,	110,	111,	101
2017-01-04 09:20:04 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:04 AI_Player.update()		1001,	101,	1001,	1010,	1101,	1001,	101
2017-01-04 09:20:04 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:04 AI_Player.update()	update
2017-01-04 09:20:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:04 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:05 AI_Player.update()	update
2017-01-04 09:20:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:05 AI_Player.update()	Search took136ms
2017-01-04 09:20:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:05 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 09:20:05 AI_Player.update()		11,	1100,	1010,	110,	1110,	101,	11
2017-01-04 09:20:05 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:05 AI_Player.update()		11,	1100,	1010,	101,	110,	111,	101
2017-01-04 09:20:05 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:05 AI_Player.update()		1001,	101,	1001,	1010,	1101,	1001,	101
2017-01-04 09:20:05 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:05 AI_Player.update()	update
2017-01-04 09:20:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:20:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:05 AI_Player.update()	update
2017-01-04 09:20:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:06 AI_Player.update()	Search took685ms
2017-01-04 09:20:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:06 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:20:06 AI_Player.update()		11,	1001,	1010,	110,	1110,	101,	11
2017-01-04 09:20:06 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:06 AI_Player.update()		11,	11,	1010,	101,	110,	111,	101
2017-01-04 09:20:06 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:06 AI_Player.update()		1001,	11,	1001,	1010,	1101,	1001,	101
2017-01-04 09:20:06 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:20:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:06 AI_Player.update()	update
2017-01-04 09:20:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:20:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:06 AI_Player.update()	update
2017-01-04 09:20:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:06 AI_Player.update()	Search took709ms
2017-01-04 09:20:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:06 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:20:06 AI_Player.update()		11,	1001,	1010,	110,	1110,	101,	11
2017-01-04 09:20:06 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:06 AI_Player.update()		11,	11,	1010,	101,	110,	111,	101
2017-01-04 09:20:06 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:06 AI_Player.update()		11,	1001,	1010,	1101,	1001,	101,	1001
2017-01-04 09:20:06 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:06 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:20:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:07 AI_Player.update()	update
2017-01-04 09:20:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:07 AI_Player.update()	update
2017-01-04 09:20:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:07 AI_Player.update()	Search took761ms
2017-01-04 09:20:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:07 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 09:20:07 AI_Player.update()		11,	1100,	1010,	110,	1110,	101,	11
2017-01-04 09:20:07 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:07 AI_Player.update()		11,	101,	1010,	101,	110,	111,	101
2017-01-04 09:20:07 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:07 AI_Player.update()		11,	1001,	1010,	1101,	1001,	101,	1001
2017-01-04 09:20:07 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:07 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:08 AI_Player.update()	update
2017-01-04 09:20:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:08 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:08 AI_Player.update()	update
2017-01-04 09:20:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:08 AI_Player.update()	Search took648ms
2017-01-04 09:20:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:08 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:20:08 AI_Player.update()		11,	11,	1010,	110,	1110,	101,	11
2017-01-04 09:20:08 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:08 AI_Player.update()		11,	1001,	1010,	101,	110,	111,	101
2017-01-04 09:20:08 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:08 AI_Player.update()		11,	1100,	1010,	1101,	1001,	101,	1001
2017-01-04 09:20:08 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-04 09:20:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:08 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:08 AI_Player.update()	update
2017-01-04 09:20:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:08 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:08 AI_Player.update()	update
2017-01-04 09:20:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:09 AI_Player.update()	Search took574ms
2017-01-04 09:20:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:09 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 09:20:09 AI_Player.update()		11,	11,	1010,	1001,	1110,	101,	11
2017-01-04 09:20:09 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 09:20:09 AI_Player.update()		11,	1001,	1010,	11,	110,	111,	101
2017-01-04 09:20:09 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	110,	1011
2017-01-04 09:20:09 AI_Player.update()		11,	1100,	1010,	1100,	1001,	101,	1001
2017-01-04 09:20:09 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:20:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:09 AI_Player.update()	update
2017-01-04 09:20:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:20:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:09 AI_Player.update()	update
2017-01-04 09:20:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:10 AI_Player.update()	Search took656ms
2017-01-04 09:20:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:10 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 09:20:10 AI_Player.update()		11,	11,	1010,	1001,	1110,	101,	11
2017-01-04 09:20:10 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 09:20:10 AI_Player.update()		11,	1001,	1010,	11,	110,	101,	101
2017-01-04 09:20:10 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	111,	1011
2017-01-04 09:20:10 AI_Player.update()		11,	1100,	1010,	1100,	1001,	110,	1001
2017-01-04 09:20:10 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 09:20:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:20:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:10 AI_Player.update()	update
2017-01-04 09:20:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:20:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:10 AI_Player.update()	update
2017-01-04 09:20:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:10 AI_Player.update()	Search took141ms
2017-01-04 09:20:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:10 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-04 09:20:10 AI_Player.update()		11,	11,	1010,	101,	1110,	101,	11
2017-01-04 09:20:10 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 09:20:10 AI_Player.update()		11,	1001,	1010,	1101,	110,	101,	101
2017-01-04 09:20:10 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	111,	1011
2017-01-04 09:20:10 AI_Player.update()		11,	1100,	1010,	101,	1001,	110,	1001
2017-01-04 09:20:10 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:20:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:10 AI_Player.update()	update
2017-01-04 09:20:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:10 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:20:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:10 AI_Player.update()	update
2017-01-04 09:20:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:11 AI_Player.update()	Search took127ms
2017-01-04 09:20:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:11 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-04 09:20:11 AI_Player.update()		11,	11,	1010,	101,	1110,	101,	11
2017-01-04 09:20:11 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 09:20:11 AI_Player.update()		1001,	1010,	1101,	110,	101,	101,	11
2017-01-04 09:20:11 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	111,	1011
2017-01-04 09:20:11 AI_Player.update()		11,	1100,	1010,	101,	1001,	110,	1001
2017-01-04 09:20:11 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:20:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:11 AI_Player.update()	update
2017-01-04 09:20:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:11 AI_Player.update()	update
2017-01-04 09:20:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:11 AI_Player.update()	Search took76ms
2017-01-04 09:20:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:11 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:20:11 AI_Player.update()		11,	11,	1010,	11,	1110,	101,	11
2017-01-04 09:20:11 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 09:20:11 AI_Player.update()		1001,	1010,	1101,	1100,	101,	101,	11
2017-01-04 09:20:11 AI_Player.update()		1110,	1001,	1101,	101,	1011,	111,	1011
2017-01-04 09:20:11 AI_Player.update()		11,	1100,	1010,	110,	1001,	110,	1001
2017-01-04 09:20:11 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-04 09:20:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:11 AI_Player.update()	update
2017-01-04 09:20:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:11 AI_Player.update()	update
2017-01-04 09:20:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:11 AI_Player.update()	Search took290ms
2017-01-04 09:20:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:11 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:20:11 AI_Player.update()		11,	11,	1010,	11,	1110,	101,	11
2017-01-04 09:20:11 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 09:20:11 AI_Player.update()		11,	1001,	1010,	1101,	1100,	101,	101
2017-01-04 09:20:11 AI_Player.update()		1110,	1001,	1101,	101,	1011,	111,	1011
2017-01-04 09:20:11 AI_Player.update()		11,	1100,	1010,	110,	1001,	110,	1001
2017-01-04 09:20:11 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-04 09:20:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()	update
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:20:12 AI_Player.update()	Player b has won!
2017-01-04 09:20:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:20:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:12 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:20:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()	update
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:12 AI_Player.update()	Search took47ms
2017-01-04 09:20:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-04 09:20:12 AI_Player.update()		1100,	11,	110,	110,	110,	110,	1001
2017-01-04 09:20:12 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-04 09:20:12 AI_Player.update()		1110,	11,	1100,	110,	1010,	101,	1110
2017-01-04 09:20:12 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1011,	1011
2017-01-04 09:20:12 AI_Player.update()		1110,	1100,	110,	1001,	1011,	110,	1100
2017-01-04 09:20:12 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:20:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()	update
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()	update
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:12 AI_Player.update()	Search took32ms
2017-01-04 09:20:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-04 09:20:12 AI_Player.update()		1100,	11,	110,	110,	110,	110,	1001
2017-01-04 09:20:12 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:20:12 AI_Player.update()		1110,	11,	1100,	110,	1010,	1011,	1110
2017-01-04 09:20:12 AI_Player.update()		1110,	1100,	1101,	111,	1011,	110,	1011
2017-01-04 09:20:12 AI_Player.update()		1110,	1100,	110,	1001,	1011,	1100,	1100
2017-01-04 09:20:12 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 09:20:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()	update
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()	update
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:12 AI_Player.update()	Search took80ms
2017-01-04 09:20:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-04 09:20:12 AI_Player.update()		1100,	11,	110,	110,	110,	110,	1001
2017-01-04 09:20:12 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:20:12 AI_Player.update()		1110,	1100,	1100,	110,	1010,	1011,	1110
2017-01-04 09:20:12 AI_Player.update()		1110,	1100,	1101,	111,	1011,	110,	1011
2017-01-04 09:20:12 AI_Player.update()		1110,	1010,	110,	1001,	1011,	1100,	1100
2017-01-04 09:20:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 09:20:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()	update
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:12 AI_Player.update()	update
2017-01-04 09:20:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:13 AI_Player.update()	Search took211ms
2017-01-04 09:20:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:13 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-04 09:20:13 AI_Player.update()		1001,	1100,	11,	110,	110,	110,	110
2017-01-04 09:20:13 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:20:13 AI_Player.update()		1110,	1100,	1100,	110,	1010,	1011,	1110
2017-01-04 09:20:13 AI_Player.update()		1110,	1100,	1101,	111,	1011,	110,	1011
2017-01-04 09:20:13 AI_Player.update()		1110,	1010,	110,	1001,	1011,	1100,	1100
2017-01-04 09:20:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 09:20:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:13 AI_Player.update()	update
2017-01-04 09:20:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:13 AI_Player.update()	update
2017-01-04 09:20:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:13 AI_Player.update()	Search took52ms
2017-01-04 09:20:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:13 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 09:20:13 AI_Player.update()		1001,	1100,	11,	101,	110,	110,	110
2017-01-04 09:20:13 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 09:20:13 AI_Player.update()		1110,	1100,	1100,	111,	1010,	1011,	1110
2017-01-04 09:20:13 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-04 09:20:13 AI_Player.update()		1110,	1010,	110,	1010,	1011,	1100,	1100
2017-01-04 09:20:13 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-04 09:20:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:13 AI_Player.update()	update
2017-01-04 09:20:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:13 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:13 AI_Player.update()	update
2017-01-04 09:20:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:14 AI_Player.update()	Search took466ms
2017-01-04 09:20:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:14 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-04 09:20:14 AI_Player.update()		1001,	1100,	11,	110,	110,	110,	110
2017-01-04 09:20:14 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:20:14 AI_Player.update()		1110,	1100,	1100,	110,	1010,	1011,	1110
2017-01-04 09:20:14 AI_Player.update()		1110,	1100,	1101,	111,	1011,	110,	1011
2017-01-04 09:20:14 AI_Player.update()		1110,	1010,	110,	1001,	1011,	1100,	1100
2017-01-04 09:20:14 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 09:20:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:14 AI_Player.update()	update
2017-01-04 09:20:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:14 AI_Player.update()	update
2017-01-04 09:20:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:14 AI_Player.update()	Search took28ms
2017-01-04 09:20:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:14 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 09:20:14 AI_Player.update()		1001,	1100,	11,	101,	110,	110,	110
2017-01-04 09:20:14 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 09:20:14 AI_Player.update()		1110,	1100,	1100,	111,	1010,	1011,	1110
2017-01-04 09:20:14 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-04 09:20:14 AI_Player.update()		1110,	1010,	110,	1010,	1011,	1100,	1100
2017-01-04 09:20:14 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-04 09:20:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:14 AI_Player.update()	update
2017-01-04 09:20:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:14 AI_Player.update()	update
2017-01-04 09:20:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:14 AI_Player.update()	Search took369ms
2017-01-04 09:20:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:14 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 09:20:14 AI_Player.update()		1001,	11,	11,	101,	110,	110,	110
2017-01-04 09:20:14 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-04 09:20:14 AI_Player.update()		1110,	1100,	1100,	111,	1010,	1011,	1110
2017-01-04 09:20:14 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-04 09:20:14 AI_Player.update()		1110,	101,	110,	1010,	1011,	1100,	1100
2017-01-04 09:20:14 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-04 09:20:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:14 AI_Player.update()	update
2017-01-04 09:20:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	1 3
2017-01-04 09:20:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()	update
2017-01-04 09:20:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:15 AI_Player.update()	Search took35ms
2017-01-04 09:20:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-04 09:20:15 AI_Player.update()		1001,	11,	11,	110,	110,	110,	110
2017-01-04 09:20:15 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-04 09:20:15 AI_Player.update()		1110,	1100,	1100,	1001,	1010,	1011,	1110
2017-01-04 09:20:15 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-04 09:20:15 AI_Player.update()		1110,	101,	110,	11,	1011,	1100,	1100
2017-01-04 09:20:15 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-04 09:20:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	1 3
2017-01-04 09:20:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()	update
2017-01-04 09:20:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()	update
2017-01-04 09:20:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:15 AI_Player.update()	Search took43ms
2017-01-04 09:20:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:20:15 AI_Player.update()		1001,	11,	11,	110,	110,	110,	110
2017-01-04 09:20:15 AI_Player.update()		1110,	1100,	1110,	111,	111,	110,	1011
2017-01-04 09:20:15 AI_Player.update()		1110,	1100,	1100,	1001,	1010,	101,	1110
2017-01-04 09:20:15 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-04 09:20:15 AI_Player.update()		1110,	101,	110,	11,	1011,	110,	1100
2017-01-04 09:20:15 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-04 09:20:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()	update
2017-01-04 09:20:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()	update
2017-01-04 09:20:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:15 AI_Player.update()	Search took43ms
2017-01-04 09:20:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 09:20:15 AI_Player.update()		1001,	1100,	11,	110,	110,	110,	110
2017-01-04 09:20:15 AI_Player.update()		1110,	1100,	1110,	111,	111,	110,	1011
2017-01-04 09:20:15 AI_Player.update()		1110,	1010,	1100,	1001,	1010,	101,	1110
2017-01-04 09:20:15 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-04 09:20:15 AI_Player.update()		1110,	11,	110,	11,	1011,	110,	1100
2017-01-04 09:20:15 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-04 09:20:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()	update
2017-01-04 09:20:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()	update
2017-01-04 09:20:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:15 AI_Player.update()	Search took138ms
2017-01-04 09:20:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:15 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-04 09:20:15 AI_Player.update()		1001,	1100,	11,	110,	110,	110,	110
2017-01-04 09:20:15 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-04 09:20:15 AI_Player.update()		1110,	1010,	1100,	1001,	1010,	1011,	1110
2017-01-04 09:20:15 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 09:20:15 AI_Player.update()		1110,	11,	110,	11,	1011,	1100,	1100
2017-01-04 09:20:15 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-04 09:20:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:15 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:16 AI_Player.update()	update
2017-01-04 09:20:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:20:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:16 AI_Player.update()	update
2017-01-04 09:20:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:16 AI_Player.update()	Search took157ms
2017-01-04 09:20:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:16 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 09:20:16 AI_Player.update()		1001,	1100,	11,	111,	110,	110,	110
2017-01-04 09:20:16 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:16 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	1011,	1110
2017-01-04 09:20:16 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:16 AI_Player.update()		1110,	11,	110,	110,	1011,	1100,	1100
2017-01-04 09:20:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-04 09:20:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:20:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:16 AI_Player.update()	update
2017-01-04 09:20:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:20:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:16 AI_Player.update()	update
2017-01-04 09:20:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:17 AI_Player.update()	Search took1050ms
2017-01-04 09:20:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:17 AI_Player.update()		110,	11,	111,	110,	111,	11,	11
2017-01-04 09:20:17 AI_Player.update()		1001,	1100,	11,	111,	110,	110,	110
2017-01-04 09:20:17 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-04 09:20:17 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	101,	1110
2017-01-04 09:20:17 AI_Player.update()		1110,	101,	1101,	11,	1011,	1011,	1011
2017-01-04 09:20:17 AI_Player.update()		1110,	11,	110,	110,	1011,	110,	1100
2017-01-04 09:20:17 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-04 09:20:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:20:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:17 AI_Player.update()	update
2017-01-04 09:20:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:20:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:17 AI_Player.update()	update
2017-01-04 09:20:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:18 AI_Player.update()	Search took698ms
2017-01-04 09:20:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:18 AI_Player.update()		110,	1100,	111,	110,	111,	11,	11
2017-01-04 09:20:18 AI_Player.update()		1001,	1100,	11,	111,	110,	110,	110
2017-01-04 09:20:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-04 09:20:18 AI_Player.update()		1110,	101,	1100,	1010,	1010,	101,	1110
2017-01-04 09:20:18 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-04 09:20:18 AI_Player.update()		1110,	1100,	110,	110,	1011,	110,	1100
2017-01-04 09:20:18 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 09:20:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:20:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:18 AI_Player.update()	update
2017-01-04 09:20:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:20:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:18 AI_Player.update()	update
2017-01-04 09:20:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:18 AI_Player.update()	Search took191ms
2017-01-04 09:20:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:18 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 09:20:18 AI_Player.update()		1001,	1100,	11,	111,	110,	110,	110
2017-01-04 09:20:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:18 AI_Player.update()		1110,	101,	1100,	1010,	1010,	1011,	1110
2017-01-04 09:20:18 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:18 AI_Player.update()		1110,	1100,	110,	110,	1011,	1100,	1100
2017-01-04 09:20:18 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-04 09:20:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:18 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:20:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:19 AI_Player.update()	update
2017-01-04 09:20:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:20:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:19 AI_Player.update()	update
2017-01-04 09:20:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:19 AI_Player.update()	Search took762ms
2017-01-04 09:20:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:19 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 09:20:19 AI_Player.update()		1001,	1100,	11,	111,	110,	110,	110
2017-01-04 09:20:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:19 AI_Player.update()		1110,	101,	1100,	1010,	1010,	1011,	1110
2017-01-04 09:20:19 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:19 AI_Player.update()		1100,	1110,	1100,	110,	110,	1011,	1100
2017-01-04 09:20:19 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-04 09:20:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:20:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:19 AI_Player.update()	update
2017-01-04 09:20:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:20 AI_Player.update()	update
2017-01-04 09:20:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:20 AI_Player.update()	Search took602ms
2017-01-04 09:20:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:20 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 09:20:20 AI_Player.update()		1001,	1010,	11,	111,	110,	110,	110
2017-01-04 09:20:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 09:20:20 AI_Player.update()		1110,	11,	1100,	1010,	1010,	1011,	1110
2017-01-04 09:20:20 AI_Player.update()		1110,	1110,	1101,	11,	1011,	110,	1011
2017-01-04 09:20:20 AI_Player.update()		1100,	11,	1100,	110,	110,	1011,	1100
2017-01-04 09:20:20 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-04 09:20:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:20 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:20 AI_Player.update()	update
2017-01-04 09:20:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:20 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:20 AI_Player.update()	update
2017-01-04 09:20:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:21 AI_Player.update()	Search took703ms
2017-01-04 09:20:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:21 AI_Player.update()		110,	1100,	111,	111,	111,	110,	11
2017-01-04 09:20:21 AI_Player.update()		1001,	1010,	11,	1001,	110,	110,	110
2017-01-04 09:20:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 09:20:21 AI_Player.update()		1110,	11,	1100,	11,	1010,	1011,	1110
2017-01-04 09:20:21 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-04 09:20:21 AI_Player.update()		1100,	11,	1100,	101,	110,	1011,	1100
2017-01-04 09:20:21 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-04 09:20:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:21 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:21 AI_Player.update()	update
2017-01-04 09:20:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:21 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:21 AI_Player.update()	update
2017-01-04 09:20:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:22 AI_Player.update()	Search took545ms
2017-01-04 09:20:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:22 AI_Player.update()		110,	1100,	111,	111,	111,	110,	11
2017-01-04 09:20:22 AI_Player.update()		1010,	11,	1001,	110,	110,	110,	1001
2017-01-04 09:20:22 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 09:20:22 AI_Player.update()		1110,	11,	1100,	11,	1010,	1011,	1110
2017-01-04 09:20:22 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-04 09:20:22 AI_Player.update()		1100,	11,	1100,	101,	110,	1011,	1100
2017-01-04 09:20:22 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-04 09:20:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:22 AI_Player.update()	update
2017-01-04 09:20:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:22 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:20:22 AI_Player.update()	Player b has won!
2017-01-04 09:20:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:20:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:22 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:20:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:22 AI_Player.update()	update
2017-01-04 09:20:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:22 AI_Player.update()	Search took183ms
2017-01-04 09:20:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:22 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 09:20:22 AI_Player.update()		11,	1100,	101,	110,	1100,	111,	110
2017-01-04 09:20:22 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-04 09:20:22 AI_Player.update()		11,	101,	101,	1100,	11,	1010,	101
2017-01-04 09:20:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-04 09:20:22 AI_Player.update()		1100,	1011,	110,	1101,	11,	1100,	101
2017-01-04 09:20:22 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 09:20:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:22 AI_Player.update()	update
2017-01-04 09:20:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:22 AI_Player.update()	update
2017-01-04 09:20:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:23 AI_Player.update()	Search took284ms
2017-01-04 09:20:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:23 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 09:20:23 AI_Player.update()		11,	1100,	101,	110,	1100,	111,	110
2017-01-04 09:20:23 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-04 09:20:23 AI_Player.update()		101,	11,	101,	101,	1100,	11,	1010
2017-01-04 09:20:23 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-04 09:20:23 AI_Player.update()		1100,	1011,	110,	1101,	11,	1100,	101
2017-01-04 09:20:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 09:20:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:23 AI_Player.update()	update
2017-01-04 09:20:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:23 AI_Player.update()	update
2017-01-04 09:20:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:23 AI_Player.update()	Search took86ms
2017-01-04 09:20:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:23 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 09:20:23 AI_Player.update()		11,	1100,	101,	110,	1100,	111,	110
2017-01-04 09:20:23 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-04 09:20:23 AI_Player.update()		101,	11,	101,	101,	1100,	11,	1010
2017-01-04 09:20:23 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-04 09:20:23 AI_Player.update()		101,	1100,	1011,	110,	1101,	11,	1100
2017-01-04 09:20:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 09:20:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:23 AI_Player.update()	update
2017-01-04 09:20:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:23 AI_Player.update()	update
2017-01-04 09:20:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:23 AI_Player.update()	Search took143ms
2017-01-04 09:20:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:23 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 09:20:23 AI_Player.update()		11,	1100,	101,	110,	1100,	111,	110
2017-01-04 09:20:23 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-04 09:20:23 AI_Player.update()		11,	101,	101,	1100,	11,	1010,	101
2017-01-04 09:20:23 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-04 09:20:23 AI_Player.update()		101,	1100,	1011,	110,	1101,	11,	1100
2017-01-04 09:20:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 09:20:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:23 AI_Player.update()	update
2017-01-04 09:20:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:24 AI_Player.update()	update
2017-01-04 09:20:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:24 AI_Player.update()	Search took269ms
2017-01-04 09:20:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:24 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:20:24 AI_Player.update()		11,	1100,	101,	110,	1100,	111,	110
2017-01-04 09:20:24 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:24 AI_Player.update()		11,	101,	101,	1010,	11,	1010,	101
2017-01-04 09:20:24 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1011,	1011
2017-01-04 09:20:24 AI_Player.update()		101,	1100,	1011,	1010,	1101,	11,	1100
2017-01-04 09:20:24 AI_Player.update()		1100,	11,	1101,	1101,	1101,	101,	1001
2017-01-04 09:20:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:24 AI_Player.update()	update
2017-01-04 09:20:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:24 AI_Player.update()	update
2017-01-04 09:20:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:24 AI_Player.update()	Search took61ms
2017-01-04 09:20:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:24 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 09:20:24 AI_Player.update()		11,	1010,	101,	110,	1100,	111,	110
2017-01-04 09:20:24 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:24 AI_Player.update()		11,	1010,	101,	1010,	11,	1010,	101
2017-01-04 09:20:24 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1011,	1011
2017-01-04 09:20:24 AI_Player.update()		101,	11,	1011,	1010,	1101,	11,	1100
2017-01-04 09:20:24 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:20:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:24 AI_Player.update()	update
2017-01-04 09:20:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:24 AI_Player.update()	update
2017-01-04 09:20:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:25 AI_Player.update()	Search took556ms
2017-01-04 09:20:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:25 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:20:25 AI_Player.update()		11,	1100,	101,	110,	1100,	111,	110
2017-01-04 09:20:25 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:25 AI_Player.update()		11,	101,	101,	1010,	11,	1010,	101
2017-01-04 09:20:25 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1011,	1011
2017-01-04 09:20:25 AI_Player.update()		101,	1100,	1011,	1010,	1101,	11,	1100
2017-01-04 09:20:25 AI_Player.update()		1100,	11,	1101,	1101,	1101,	101,	1001
2017-01-04 09:20:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:25 AI_Player.update()	update
2017-01-04 09:20:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:25 AI_Player.update()	update
2017-01-04 09:20:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:25 AI_Player.update()	Search took37ms
2017-01-04 09:20:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:25 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:20:25 AI_Player.update()		11,	1100,	101,	110,	1100,	111,	110
2017-01-04 09:20:25 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:25 AI_Player.update()		11,	101,	101,	1010,	11,	1010,	101
2017-01-04 09:20:25 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1011,	1011
2017-01-04 09:20:25 AI_Player.update()		1100,	101,	1100,	1011,	1010,	1101,	11
2017-01-04 09:20:25 AI_Player.update()		1100,	11,	1101,	1101,	1101,	101,	1001
2017-01-04 09:20:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:25 AI_Player.update()	update
2017-01-04 09:20:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:25 AI_Player.update()	update
2017-01-04 09:20:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:25 AI_Player.update()	Search took55ms
2017-01-04 09:20:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:25 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 09:20:25 AI_Player.update()		11,	1010,	101,	110,	1100,	111,	110
2017-01-04 09:20:25 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:25 AI_Player.update()		11,	1010,	101,	1010,	11,	1010,	101
2017-01-04 09:20:25 AI_Player.update()		1110,	101,	1101,	110,	1011,	1011,	1011
2017-01-04 09:20:25 AI_Player.update()		1100,	11,	1100,	1011,	1010,	1101,	11
2017-01-04 09:20:25 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:20:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:25 AI_Player.update()	update
2017-01-04 09:20:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:26 AI_Player.update()	update
2017-01-04 09:20:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:26 AI_Player.update()	Search took156ms
2017-01-04 09:20:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:26 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:20:26 AI_Player.update()		11,	1100,	101,	110,	1100,	111,	110
2017-01-04 09:20:26 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:26 AI_Player.update()		11,	101,	101,	1010,	11,	1010,	101
2017-01-04 09:20:26 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1011,	1011
2017-01-04 09:20:26 AI_Player.update()		1100,	101,	1100,	1011,	1010,	1101,	11
2017-01-04 09:20:26 AI_Player.update()		1100,	11,	1101,	1101,	1101,	101,	1001
2017-01-04 09:20:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:26 AI_Player.update()	update
2017-01-04 09:20:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:26 AI_Player.update()	update
2017-01-04 09:20:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:26 AI_Player.update()	Search took54ms
2017-01-04 09:20:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:26 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:20:26 AI_Player.update()		11,	101,	101,	110,	1100,	111,	110
2017-01-04 09:20:26 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:26 AI_Player.update()		11,	1010,	101,	1010,	11,	1010,	101
2017-01-04 09:20:26 AI_Player.update()		1110,	101,	1101,	110,	1011,	1011,	1011
2017-01-04 09:20:26 AI_Player.update()		1100,	1010,	1100,	1011,	1010,	1101,	11
2017-01-04 09:20:26 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:20:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:26 AI_Player.update()	update
2017-01-04 09:20:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:26 AI_Player.update()	update
2017-01-04 09:20:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:27 AI_Player.update()	Search took550ms
2017-01-04 09:20:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:27 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:20:27 AI_Player.update()		11,	101,	101,	1100,	1100,	111,	110
2017-01-04 09:20:27 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:27 AI_Player.update()		11,	1010,	101,	110,	11,	1010,	101
2017-01-04 09:20:27 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1011,	1011
2017-01-04 09:20:27 AI_Player.update()		1100,	1010,	1100,	1101,	1010,	1101,	11
2017-01-04 09:20:27 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:27 AI_Player.update()	update
2017-01-04 09:20:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:20:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:27 AI_Player.update()	update
2017-01-04 09:20:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:27 AI_Player.update()	Search took74ms
2017-01-04 09:20:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:27 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:20:27 AI_Player.update()		11,	101,	101,	1100,	1100,	111,	110
2017-01-04 09:20:27 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:27 AI_Player.update()		11,	1010,	101,	110,	11,	1010,	101
2017-01-04 09:20:27 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1011,	1011
2017-01-04 09:20:27 AI_Player.update()		1010,	1100,	1101,	1010,	1101,	11,	1100
2017-01-04 09:20:27 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:20:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:27 AI_Player.update()	update
2017-01-04 09:20:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:20:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:27 AI_Player.update()	update
2017-01-04 09:20:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:28 AI_Player.update()	Search took257ms
2017-01-04 09:20:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:28 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:20:28 AI_Player.update()		11,	101,	101,	1100,	1100,	111,	110
2017-01-04 09:20:28 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:28 AI_Player.update()		1010,	101,	110,	11,	1010,	101,	11
2017-01-04 09:20:28 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1011,	1011
2017-01-04 09:20:28 AI_Player.update()		1010,	1100,	1101,	1010,	1101,	11,	1100
2017-01-04 09:20:28 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:20:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:28 AI_Player.update()	update
2017-01-04 09:20:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:28 AI_Player.update()	update
2017-01-04 09:20:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:28 AI_Player.update()	Search took415ms
2017-01-04 09:20:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:28 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:20:28 AI_Player.update()		11,	101,	101,	1100,	1100,	111,	110
2017-01-04 09:20:28 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:28 AI_Player.update()		101,	110,	11,	1010,	101,	11,	1010
2017-01-04 09:20:28 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1011,	1011
2017-01-04 09:20:28 AI_Player.update()		1010,	1100,	1101,	1010,	1101,	11,	1100
2017-01-04 09:20:28 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:28 AI_Player.update()	update
2017-01-04 09:20:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:28 AI_Player.update()	update
2017-01-04 09:20:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:28 AI_Player.update()	Search took68ms
2017-01-04 09:20:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:28 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:20:28 AI_Player.update()		110,	11,	101,	101,	1100,	1100,	111
2017-01-04 09:20:28 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:28 AI_Player.update()		101,	110,	11,	1010,	101,	11,	1010
2017-01-04 09:20:28 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1011,	1011
2017-01-04 09:20:28 AI_Player.update()		1010,	1100,	1101,	1010,	1101,	11,	1100
2017-01-04 09:20:28 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:28 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:29 AI_Player.update()	update
2017-01-04 09:20:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:29 AI_Player.update()	update
2017-01-04 09:20:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:29 AI_Player.update()	Search took292ms
2017-01-04 09:20:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:29 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:20:29 AI_Player.update()		110,	11,	101,	101,	1100,	1100,	111
2017-01-04 09:20:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:29 AI_Player.update()		1010,	101,	110,	11,	1010,	101,	11
2017-01-04 09:20:29 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1011,	1011
2017-01-04 09:20:29 AI_Player.update()		1010,	1100,	1101,	1010,	1101,	11,	1100
2017-01-04 09:20:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:29 AI_Player.update()	update
2017-01-04 09:20:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:20:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:29 AI_Player.update()	update
2017-01-04 09:20:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:29 AI_Player.update()	Search took358ms
2017-01-04 09:20:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:29 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 09:20:29 AI_Player.update()		110,	11,	101,	1010,	1100,	1100,	111
2017-01-04 09:20:29 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-04 09:20:29 AI_Player.update()		1010,	101,	110,	1011,	1010,	101,	11
2017-01-04 09:20:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-04 09:20:29 AI_Player.update()		1010,	1100,	1101,	110,	1101,	11,	1100
2017-01-04 09:20:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:29 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:20:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:30 AI_Player.update()	update
2017-01-04 09:20:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:20:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:30 AI_Player.update()	update
2017-01-04 09:20:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:30 AI_Player.update()	Search took252ms
2017-01-04 09:20:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:30 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 09:20:30 AI_Player.update()		11,	101,	1010,	1100,	1100,	111,	110
2017-01-04 09:20:30 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-04 09:20:30 AI_Player.update()		1010,	101,	110,	1011,	1010,	101,	11
2017-01-04 09:20:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-04 09:20:30 AI_Player.update()		1010,	1100,	1101,	110,	1101,	11,	1100
2017-01-04 09:20:30 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:20:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:30 AI_Player.update()	update
2017-01-04 09:20:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:20:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:30 AI_Player.update()	update
2017-01-04 09:20:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:31 AI_Player.update()	Search took828ms
2017-01-04 09:20:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:31 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:20:31 AI_Player.update()		11,	101,	1010,	1100,	1100,	1001,	110
2017-01-04 09:20:31 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-04 09:20:31 AI_Player.update()		1010,	101,	110,	1011,	1010,	1011,	11
2017-01-04 09:20:31 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 09:20:31 AI_Player.update()		1010,	1100,	1101,	110,	1101,	101,	1100
2017-01-04 09:20:31 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:20:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:31 AI_Player.update()	update
2017-01-04 09:20:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:20:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:31 AI_Player.update()	update
2017-01-04 09:20:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:32 AI_Player.update()	Search took591ms
2017-01-04 09:20:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:32 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 09:20:32 AI_Player.update()		11,	1100,	1010,	1100,	1100,	1001,	110
2017-01-04 09:20:32 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 09:20:32 AI_Player.update()		1010,	101,	110,	1011,	1010,	1011,	11
2017-01-04 09:20:32 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-04 09:20:32 AI_Player.update()		1010,	101,	1101,	110,	1101,	101,	1100
2017-01-04 09:20:32 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 09:20:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:20:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:32 AI_Player.update()	update
2017-01-04 09:20:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:32 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:20:32 AI_Player.update()	Player a has won!
2017-01-04 09:20:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:32 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:20:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:32 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:20:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:32 AI_Player.update()	update
2017-01-04 09:20:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:32 AI_Player.update()	Search took34ms
2017-01-04 09:20:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:32 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-04 09:20:32 AI_Player.update()		110,	1101,	1100,	1010,	1100,	1101,	110
2017-01-04 09:20:32 AI_Player.update()		1110,	110,	1110,	1110,	111,	111,	1011
2017-01-04 09:20:32 AI_Player.update()		11,	1001,	11,	101,	1010,	110,	11
2017-01-04 09:20:32 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-04 09:20:32 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1100,	1110
2017-01-04 09:20:32 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-04 09:20:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:32 AI_Player.update()	update
2017-01-04 09:20:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:32 AI_Player.update()	update
2017-01-04 09:20:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:32 AI_Player.update()	Search took45ms
2017-01-04 09:20:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:32 AI_Player.update()		110,	1001,	111,	1001,	111,	1101,	11
2017-01-04 09:20:32 AI_Player.update()		110,	1101,	1100,	1010,	1100,	111,	110
2017-01-04 09:20:32 AI_Player.update()		1110,	110,	1110,	1110,	111,	110,	1011
2017-01-04 09:20:32 AI_Player.update()		11,	1001,	11,	101,	1010,	11,	11
2017-01-04 09:20:32 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:20:32 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1101,	1110
2017-01-04 09:20:32 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 09:20:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:32 AI_Player.update()	update
2017-01-04 09:20:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:32 AI_Player.update()	update
2017-01-04 09:20:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:33 AI_Player.update()	Search took43ms
2017-01-04 09:20:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:33 AI_Player.update()		110,	1101,	111,	1001,	111,	1101,	11
2017-01-04 09:20:33 AI_Player.update()		110,	110,	1100,	1010,	1100,	111,	110
2017-01-04 09:20:33 AI_Player.update()		1110,	1001,	1110,	1110,	111,	110,	1011
2017-01-04 09:20:33 AI_Player.update()		11,	1100,	11,	101,	1010,	11,	11
2017-01-04 09:20:33 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:20:33 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1101,	1110
2017-01-04 09:20:33 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 09:20:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:33 AI_Player.update()	update
2017-01-04 09:20:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:33 AI_Player.update()	update
2017-01-04 09:20:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:33 AI_Player.update()	Search took147ms
2017-01-04 09:20:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:33 AI_Player.update()		110,	1101,	111,	1001,	111,	111,	11
2017-01-04 09:20:33 AI_Player.update()		110,	110,	1100,	1010,	1100,	110,	110
2017-01-04 09:20:33 AI_Player.update()		1110,	1001,	1110,	1110,	111,	11,	1011
2017-01-04 09:20:33 AI_Player.update()		11,	1100,	11,	101,	1010,	1100,	11
2017-01-04 09:20:33 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 09:20:33 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1010,	1110
2017-01-04 09:20:33 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-04 09:20:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:33 AI_Player.update()	update
2017-01-04 09:20:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:33 AI_Player.update()	update
2017-01-04 09:20:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:33 AI_Player.update()	Search took117ms
2017-01-04 09:20:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:33 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 09:20:33 AI_Player.update()		110,	1001,	1100,	1010,	1100,	110,	110
2017-01-04 09:20:33 AI_Player.update()		1110,	1100,	1110,	1110,	111,	11,	1011
2017-01-04 09:20:33 AI_Player.update()		11,	1001,	11,	101,	1010,	1100,	11
2017-01-04 09:20:33 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 09:20:33 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1010,	1110
2017-01-04 09:20:33 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1101,	1001
2017-01-04 09:20:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:33 AI_Player.update()	update
2017-01-04 09:20:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:33 AI_Player.update()	update
2017-01-04 09:20:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:34 AI_Player.update()	Search took858ms
2017-01-04 09:20:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:34 AI_Player.update()		110,	110,	111,	101,	111,	111,	11
2017-01-04 09:20:34 AI_Player.update()		110,	1001,	1100,	1001,	1100,	110,	110
2017-01-04 09:20:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-04 09:20:34 AI_Player.update()		11,	1001,	11,	1110,	1010,	1100,	11
2017-01-04 09:20:34 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1101,	1011
2017-01-04 09:20:34 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	1010,	1110
2017-01-04 09:20:34 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1101,	1001
2017-01-04 09:20:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:34 AI_Player.update()	update
2017-01-04 09:20:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:34 AI_Player.update()	update
2017-01-04 09:20:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:35 AI_Player.update()	Search took945ms
2017-01-04 09:20:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:35 AI_Player.update()		110,	110,	111,	101,	111,	111,	11
2017-01-04 09:20:35 AI_Player.update()		110,	1001,	1100,	101,	1100,	110,	110
2017-01-04 09:20:35 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-04 09:20:35 AI_Player.update()		11,	1001,	11,	1010,	1010,	1100,	11
2017-01-04 09:20:35 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1101,	1011
2017-01-04 09:20:35 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1010,	1110
2017-01-04 09:20:35 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1101,	1001
2017-01-04 09:20:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:35 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:36 AI_Player.update()	update
2017-01-04 09:20:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:36 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:36 AI_Player.update()	update
2017-01-04 09:20:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:36 AI_Player.update()	Search took122ms
2017-01-04 09:20:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:36 AI_Player.update()		110,	1101,	111,	101,	111,	111,	11
2017-01-04 09:20:36 AI_Player.update()		110,	110,	1100,	101,	1100,	110,	110
2017-01-04 09:20:36 AI_Player.update()		1110,	1001,	1110,	1001,	111,	11,	1011
2017-01-04 09:20:36 AI_Player.update()		11,	1100,	11,	1010,	1010,	1100,	11
2017-01-04 09:20:36 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1101,	1011
2017-01-04 09:20:36 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1010,	1110
2017-01-04 09:20:36 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-04 09:20:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:36 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:36 AI_Player.update()	update
2017-01-04 09:20:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:36 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:36 AI_Player.update()	update
2017-01-04 09:20:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:37 AI_Player.update()	Search took551ms
2017-01-04 09:20:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:37 AI_Player.update()		110,	1101,	111,	101,	111,	110,	11
2017-01-04 09:20:37 AI_Player.update()		110,	110,	1100,	101,	1100,	11,	110
2017-01-04 09:20:37 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-04 09:20:37 AI_Player.update()		11,	1100,	11,	1010,	1010,	1101,	11
2017-01-04 09:20:37 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1010,	1011
2017-01-04 09:20:37 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1101,	1110
2017-01-04 09:20:37 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	111,	1001
2017-01-04 09:20:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:20:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:37 AI_Player.update()	update
2017-01-04 09:20:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:20:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:37 AI_Player.update()	update
2017-01-04 09:20:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:37 AI_Player.update()	Search took145ms
2017-01-04 09:20:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:37 AI_Player.update()		110,	1101,	111,	101,	111,	110,	11
2017-01-04 09:20:37 AI_Player.update()		110,	110,	1100,	101,	1100,	11,	110
2017-01-04 09:20:37 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-04 09:20:37 AI_Player.update()		1100,	11,	1010,	1010,	1101,	11,	11
2017-01-04 09:20:37 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1010,	1011
2017-01-04 09:20:37 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1101,	1110
2017-01-04 09:20:37 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	111,	1001
2017-01-04 09:20:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:20:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:37 AI_Player.update()	update
2017-01-04 09:20:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:20:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:37 AI_Player.update()	update
2017-01-04 09:20:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:37 AI_Player.update()	Search took211ms
2017-01-04 09:20:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:37 AI_Player.update()		110,	1101,	111,	101,	111,	110,	11
2017-01-04 09:20:37 AI_Player.update()		110,	110,	1100,	101,	1100,	11,	110
2017-01-04 09:20:37 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-04 09:20:37 AI_Player.update()		11,	1100,	11,	1010,	1010,	1101,	11
2017-01-04 09:20:37 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1010,	1011
2017-01-04 09:20:37 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1101,	1110
2017-01-04 09:20:37 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	111,	1001
2017-01-04 09:20:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:20:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:37 AI_Player.update()	update
2017-01-04 09:20:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:37 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:20:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:37 AI_Player.update()	update
2017-01-04 09:20:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:38 AI_Player.update()	Search took81ms
2017-01-04 09:20:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:38 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:20:38 AI_Player.update()		110,	1001,	1100,	101,	1100,	11,	110
2017-01-04 09:20:38 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-04 09:20:38 AI_Player.update()		11,	1001,	11,	1010,	1010,	1101,	11
2017-01-04 09:20:38 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1010,	1011
2017-01-04 09:20:38 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1101,	1110
2017-01-04 09:20:38 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	111,	1001
2017-01-04 09:20:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:20:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:38 AI_Player.update()	update
2017-01-04 09:20:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:20:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:38 AI_Player.update()	update
2017-01-04 09:20:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:38 AI_Player.update()	Search took314ms
2017-01-04 09:20:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:38 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-04 09:20:38 AI_Player.update()		110,	1001,	1100,	101,	1100,	11,	110
2017-01-04 09:20:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-04 09:20:38 AI_Player.update()		11,	1001,	11,	1001,	1010,	1101,	11
2017-01-04 09:20:38 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:20:38 AI_Player.update()		1100,	1001,	1010,	1110,	1010,	1101,	1110
2017-01-04 09:20:38 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 09:20:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:20:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:38 AI_Player.update()	update
2017-01-04 09:20:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:38 AI_Player.update()	update
2017-01-04 09:20:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:38 AI_Player.update()	Search took132ms
2017-01-04 09:20:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:38 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-04 09:20:38 AI_Player.update()		110,	1001,	1100,	101,	1100,	11,	110
2017-01-04 09:20:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-04 09:20:38 AI_Player.update()		1001,	11,	1001,	1010,	1101,	11,	11
2017-01-04 09:20:38 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:20:38 AI_Player.update()		1100,	1001,	1010,	1110,	1010,	1101,	1110
2017-01-04 09:20:38 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 09:20:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:38 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:39 AI_Player.update()	update
2017-01-04 09:20:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:20:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:39 AI_Player.update()	update
2017-01-04 09:20:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:39 AI_Player.update()	Search took286ms
2017-01-04 09:20:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:39 AI_Player.update()		110,	1001,	111,	1010,	111,	110,	11
2017-01-04 09:20:39 AI_Player.update()		110,	1100,	1100,	101,	1100,	11,	110
2017-01-04 09:20:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 09:20:39 AI_Player.update()		1001,	1001,	1001,	1010,	1101,	11,	11
2017-01-04 09:20:39 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:20:39 AI_Player.update()		1100,	1101,	1010,	1110,	1010,	1101,	1110
2017-01-04 09:20:39 AI_Player.update()		1100,	110,	1101,	101,	1101,	111,	1001
2017-01-04 09:20:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:20:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:39 AI_Player.update()	update
2017-01-04 09:20:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:39 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:20:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:39 AI_Player.update()	update
2017-01-04 09:20:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:40 AI_Player.update()	Search took372ms
2017-01-04 09:20:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:40 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 09:20:40 AI_Player.update()		110,	1100,	1100,	1010,	1100,	11,	110
2017-01-04 09:20:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 09:20:40 AI_Player.update()		1001,	1001,	1001,	101,	1101,	11,	11
2017-01-04 09:20:40 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:20:40 AI_Player.update()		1100,	1101,	1010,	1010,	1010,	1101,	1110
2017-01-04 09:20:40 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-04 09:20:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:20:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:40 AI_Player.update()	update
2017-01-04 09:20:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:20:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:40 AI_Player.update()	update
2017-01-04 09:20:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:40 AI_Player.update()	Search took334ms
2017-01-04 09:20:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:40 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-04 09:20:40 AI_Player.update()		1100,	1100,	1010,	1100,	11,	110,	110
2017-01-04 09:20:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 09:20:40 AI_Player.update()		1001,	1001,	1001,	101,	1101,	11,	11
2017-01-04 09:20:40 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:20:40 AI_Player.update()		1100,	1101,	1010,	1010,	1010,	1101,	1110
2017-01-04 09:20:40 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-04 09:20:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:20:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:40 AI_Player.update()	update
2017-01-04 09:20:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:40 AI_Player.update()	update
2017-01-04 09:20:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:41 AI_Player.update()	Search took317ms
2017-01-04 09:20:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:41 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-04 09:20:41 AI_Player.update()		1100,	11,	1010,	1100,	11,	110,	110
2017-01-04 09:20:41 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 09:20:41 AI_Player.update()		1001,	1001,	1001,	101,	1101,	11,	11
2017-01-04 09:20:41 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:20:41 AI_Player.update()		1100,	110,	1010,	1010,	1010,	1101,	1110
2017-01-04 09:20:41 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	111,	1001
2017-01-04 09:20:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:41 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:41 AI_Player.update()	update
2017-01-04 09:20:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:41 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:41 AI_Player.update()	update
2017-01-04 09:20:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:41 AI_Player.update()	Search took278ms
2017-01-04 09:20:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:41 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-04 09:20:41 AI_Player.update()		1100,	1001,	1010,	1100,	11,	110,	110
2017-01-04 09:20:41 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 09:20:41 AI_Player.update()		1001,	1101,	1001,	101,	1101,	11,	11
2017-01-04 09:20:41 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:20:41 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	1101,	1110
2017-01-04 09:20:41 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	111,	1001
2017-01-04 09:20:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:41 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:41 AI_Player.update()	update
2017-01-04 09:20:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:41 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:41 AI_Player.update()	update
2017-01-04 09:20:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:42 AI_Player.update()	Search took310ms
2017-01-04 09:20:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:42 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:20:42 AI_Player.update()		1100,	1001,	1010,	1100,	11,	110,	110
2017-01-04 09:20:42 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-04 09:20:42 AI_Player.update()		1001,	1101,	1001,	101,	1101,	1100,	11
2017-01-04 09:20:42 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 09:20:42 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	1010,	1110
2017-01-04 09:20:42 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1101,	1001
2017-01-04 09:20:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:20:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:42 AI_Player.update()	update
2017-01-04 09:20:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:20:42 AI_Player.update()	Player b has won!
2017-01-04 09:20:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:42 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:20:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:42 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:20:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:42 AI_Player.update()	update
2017-01-04 09:20:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:42 AI_Player.update()	Search took293ms
2017-01-04 09:20:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:42 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:42 AI_Player.update()		101,	1110,	11,	1011,	1001,	1001,	1001
2017-01-04 09:20:42 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:42 AI_Player.update()		110,	111,	101,	1010,	1110,	1010,	1010
2017-01-04 09:20:42 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:20:42 AI_Player.update()		1100,	110,	101,	110,	101,	101,	11
2017-01-04 09:20:42 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-04 09:20:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:42 AI_Player.update()	update
2017-01-04 09:20:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:42 AI_Player.update()	update
2017-01-04 09:20:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:42 AI_Player.update()	Search took34ms
2017-01-04 09:20:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:42 AI_Player.update()		110,	1110,	111,	11,	111,	11,	11
2017-01-04 09:20:42 AI_Player.update()		101,	1100,	11,	1011,	1001,	1001,	1001
2017-01-04 09:20:42 AI_Player.update()		1110,	111,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:42 AI_Player.update()		110,	101,	101,	1010,	1110,	1010,	1010
2017-01-04 09:20:42 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:20:42 AI_Player.update()		1100,	111,	101,	110,	101,	101,	11
2017-01-04 09:20:42 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-04 09:20:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:42 AI_Player.update()	update
2017-01-04 09:20:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:43 AI_Player.update()	update
2017-01-04 09:20:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:43 AI_Player.update()	Search took340ms
2017-01-04 09:20:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:43 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-04 09:20:43 AI_Player.update()		101,	111,	11,	1011,	1001,	1001,	1001
2017-01-04 09:20:43 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:43 AI_Player.update()		110,	110,	101,	1010,	1110,	1010,	1010
2017-01-04 09:20:43 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:20:43 AI_Player.update()		1100,	111,	101,	110,	101,	101,	11
2017-01-04 09:20:43 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1011,	1001
2017-01-04 09:20:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:43 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:43 AI_Player.update()	update
2017-01-04 09:20:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:43 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:43 AI_Player.update()	update
2017-01-04 09:20:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:43 AI_Player.update()	Search took24ms
2017-01-04 09:20:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:43 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-04 09:20:43 AI_Player.update()		1001,	101,	111,	11,	1011,	1001,	1001
2017-01-04 09:20:43 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-04 09:20:43 AI_Player.update()		110,	110,	101,	1010,	1110,	1010,	1010
2017-01-04 09:20:43 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:20:43 AI_Player.update()		1100,	111,	101,	110,	101,	101,	11
2017-01-04 09:20:43 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1011,	1001
2017-01-04 09:20:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:43 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:43 AI_Player.update()	update
2017-01-04 09:20:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:43 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:43 AI_Player.update()	update
2017-01-04 09:20:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:43 AI_Player.update()	Search took139ms
2017-01-04 09:20:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:43 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-04 09:20:43 AI_Player.update()		1001,	101,	111,	1100,	1011,	1001,	1001
2017-01-04 09:20:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:43 AI_Player.update()		110,	110,	101,	1100,	1110,	1010,	1010
2017-01-04 09:20:43 AI_Player.update()		1110,	111,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:43 AI_Player.update()		1100,	111,	101,	1001,	101,	101,	11
2017-01-04 09:20:43 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:43 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:44 AI_Player.update()	update
2017-01-04 09:20:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:20:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:44 AI_Player.update()	update
2017-01-04 09:20:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:44 AI_Player.update()	Search took29ms
2017-01-04 09:20:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:44 AI_Player.update()		110,	1110,	111,	11,	111,	11,	11
2017-01-04 09:20:44 AI_Player.update()		1001,	1100,	111,	1100,	1011,	1001,	1001
2017-01-04 09:20:44 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:44 AI_Player.update()		110,	101,	101,	1100,	1110,	1010,	1010
2017-01-04 09:20:44 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:44 AI_Player.update()		1100,	111,	101,	1001,	101,	101,	11
2017-01-04 09:20:44 AI_Player.update()		1100,	111,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:20:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:44 AI_Player.update()	update
2017-01-04 09:20:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:20:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:44 AI_Player.update()	update
2017-01-04 09:20:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:44 AI_Player.update()	Search took194ms
2017-01-04 09:20:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:44 AI_Player.update()		110,	1110,	111,	11,	111,	11,	11
2017-01-04 09:20:44 AI_Player.update()		1001,	1001,	1100,	111,	1100,	1011,	1001
2017-01-04 09:20:44 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:44 AI_Player.update()		110,	101,	101,	1100,	1110,	1010,	1010
2017-01-04 09:20:44 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:44 AI_Player.update()		1100,	111,	101,	1001,	101,	101,	11
2017-01-04 09:20:44 AI_Player.update()		1100,	111,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:20:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:44 AI_Player.update()	update
2017-01-04 09:20:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:20:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:44 AI_Player.update()	update
2017-01-04 09:20:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:44 AI_Player.update()	Search took152ms
2017-01-04 09:20:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:44 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:44 AI_Player.update()		1001,	1110,	1100,	111,	1100,	1011,	1001
2017-01-04 09:20:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:44 AI_Player.update()		110,	101,	101,	1100,	1110,	1010,	1010
2017-01-04 09:20:44 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:44 AI_Player.update()		1100,	110,	101,	1001,	101,	101,	11
2017-01-04 09:20:44 AI_Player.update()		1100,	111,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:44 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:20:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:45 AI_Player.update()	update
2017-01-04 09:20:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:45 AI_Player.update()	update
2017-01-04 09:20:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:45 AI_Player.update()	Search took171ms
2017-01-04 09:20:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:45 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:45 AI_Player.update()		1001,	111,	1100,	111,	1100,	1011,	1001
2017-01-04 09:20:45 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:45 AI_Player.update()		110,	1001,	101,	1100,	1110,	1010,	1010
2017-01-04 09:20:45 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:45 AI_Player.update()		1100,	101,	101,	1001,	101,	101,	11
2017-01-04 09:20:45 AI_Player.update()		1100,	110,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:45 AI_Player.update()	update
2017-01-04 09:20:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:45 AI_Player.update()	update
2017-01-04 09:20:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:45 AI_Player.update()	Search took102ms
2017-01-04 09:20:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:45 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:45 AI_Player.update()		1001,	1110,	1100,	111,	1100,	1011,	1001
2017-01-04 09:20:45 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:45 AI_Player.update()		110,	101,	101,	1100,	1110,	1010,	1010
2017-01-04 09:20:45 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:45 AI_Player.update()		1100,	110,	101,	1001,	101,	101,	11
2017-01-04 09:20:45 AI_Player.update()		1100,	111,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:45 AI_Player.update()	update
2017-01-04 09:20:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:45 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:45 AI_Player.update()	update
2017-01-04 09:20:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:46 AI_Player.update()	Search took235ms
2017-01-04 09:20:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:46 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:46 AI_Player.update()		1001,	111,	1100,	111,	1100,	1011,	1001
2017-01-04 09:20:46 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:46 AI_Player.update()		110,	1001,	101,	1100,	1110,	1010,	1010
2017-01-04 09:20:46 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:46 AI_Player.update()		1100,	101,	101,	1001,	101,	101,	11
2017-01-04 09:20:46 AI_Player.update()		1100,	110,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:46 AI_Player.update()	update
2017-01-04 09:20:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:46 AI_Player.update()	update
2017-01-04 09:20:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:46 AI_Player.update()	Search took167ms
2017-01-04 09:20:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:46 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:46 AI_Player.update()		1001,	111,	1100,	111,	1100,	1011,	1001
2017-01-04 09:20:46 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:46 AI_Player.update()		1001,	101,	1100,	1110,	1010,	1010,	110
2017-01-04 09:20:46 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:46 AI_Player.update()		1100,	101,	101,	1001,	101,	101,	11
2017-01-04 09:20:46 AI_Player.update()		1100,	110,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:46 AI_Player.update()	update
2017-01-04 09:20:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:20:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:46 AI_Player.update()	update
2017-01-04 09:20:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:46 AI_Player.update()	Search took271ms
2017-01-04 09:20:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:46 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 09:20:46 AI_Player.update()		1001,	111,	1100,	111,	1100,	1011,	1001
2017-01-04 09:20:46 AI_Player.update()		1110,	111,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:46 AI_Player.update()		1001,	1110,	1100,	1110,	1010,	1010,	110
2017-01-04 09:20:46 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:46 AI_Player.update()		1100,	101,	101,	1001,	101,	101,	11
2017-01-04 09:20:46 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:46 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:20:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:47 AI_Player.update()	update
2017-01-04 09:20:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:20:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:47 AI_Player.update()	update
2017-01-04 09:20:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:47 AI_Player.update()	Search took215ms
2017-01-04 09:20:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:47 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 09:20:47 AI_Player.update()		1001,	111,	1100,	111,	1100,	1011,	1001
2017-01-04 09:20:47 AI_Player.update()		1110,	111,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:47 AI_Player.update()		1110,	1100,	1110,	1010,	1010,	110,	1001
2017-01-04 09:20:47 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:47 AI_Player.update()		1100,	101,	101,	1001,	101,	101,	11
2017-01-04 09:20:47 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:20:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:47 AI_Player.update()	update
2017-01-04 09:20:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:47 AI_Player.update()	update
2017-01-04 09:20:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:47 AI_Player.update()	Search took77ms
2017-01-04 09:20:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:47 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:47 AI_Player.update()		1001,	111,	1100,	111,	1100,	1011,	1001
2017-01-04 09:20:47 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:47 AI_Player.update()		1110,	101,	1110,	1010,	1010,	110,	1001
2017-01-04 09:20:47 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:47 AI_Player.update()		1100,	101,	101,	1001,	101,	101,	11
2017-01-04 09:20:47 AI_Player.update()		1100,	110,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:47 AI_Player.update()	update
2017-01-04 09:20:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:47 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:47 AI_Player.update()	update
2017-01-04 09:20:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:48 AI_Player.update()	Search took545ms
2017-01-04 09:20:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:48 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:48 AI_Player.update()		111,	1100,	111,	1100,	1011,	1001,	1001
2017-01-04 09:20:48 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:48 AI_Player.update()		1110,	101,	1110,	1010,	1010,	110,	1001
2017-01-04 09:20:48 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:48 AI_Player.update()		1100,	101,	101,	1001,	101,	101,	11
2017-01-04 09:20:48 AI_Player.update()		1100,	110,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:20:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:48 AI_Player.update()	update
2017-01-04 09:20:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:20:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:48 AI_Player.update()	update
2017-01-04 09:20:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:48 AI_Player.update()	Search took73ms
2017-01-04 09:20:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:48 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-04 09:20:48 AI_Player.update()		111,	1100,	111,	1100,	1011,	1001,	1001
2017-01-04 09:20:48 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:48 AI_Player.update()		1110,	101,	1110,	1010,	1010,	110,	1001
2017-01-04 09:20:48 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:48 AI_Player.update()		1100,	110,	101,	1001,	101,	101,	11
2017-01-04 09:20:48 AI_Player.update()		1100,	111,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:20:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:48 AI_Player.update()	update
2017-01-04 09:20:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:20:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:48 AI_Player.update()	update
2017-01-04 09:20:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:49 AI_Player.update()	Search took185ms
2017-01-04 09:20:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:49 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:49 AI_Player.update()		111,	1100,	111,	1100,	1011,	1001,	1001
2017-01-04 09:20:49 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:49 AI_Player.update()		1110,	101,	1110,	1010,	1010,	110,	1001
2017-01-04 09:20:49 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:49 AI_Player.update()		1100,	101,	101,	1001,	101,	101,	11
2017-01-04 09:20:49 AI_Player.update()		1100,	110,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:20:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:49 AI_Player.update()	update
2017-01-04 09:20:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:20:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:49 AI_Player.update()	update
2017-01-04 09:20:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:49 AI_Player.update()	Search took546ms
2017-01-04 09:20:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:49 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:49 AI_Player.update()		111,	1100,	111,	1100,	1011,	1001,	1001
2017-01-04 09:20:49 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:49 AI_Player.update()		1001,	1110,	101,	1110,	1010,	1010,	110
2017-01-04 09:20:49 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:49 AI_Player.update()		1100,	101,	101,	1001,	101,	101,	11
2017-01-04 09:20:49 AI_Player.update()		1100,	110,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:20:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:49 AI_Player.update()	update
2017-01-04 09:20:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:20:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:20:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:50 AI_Player.update()	update
2017-01-04 09:20:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:50 AI_Player.update()	Search took203ms
2017-01-04 09:20:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:50 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 09:20:50 AI_Player.update()		111,	1100,	111,	1100,	1011,	1001,	1001
2017-01-04 09:20:50 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:50 AI_Player.update()		1110,	101,	1110,	1010,	1010,	110,	1001
2017-01-04 09:20:50 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:20:50 AI_Player.update()		1100,	101,	101,	1001,	101,	101,	11
2017-01-04 09:20:50 AI_Player.update()		1100,	110,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:50 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:20:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:50 AI_Player.update()	update
2017-01-04 09:20:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:50 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:20:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:50 AI_Player.update()	update
2017-01-04 09:20:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:51 AI_Player.update()	Search took650ms
2017-01-04 09:20:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:51 AI_Player.update()		110,	111,	111,	1100,	111,	11,	11
2017-01-04 09:20:51 AI_Player.update()		111,	1100,	111,	1010,	1011,	1001,	1001
2017-01-04 09:20:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:20:51 AI_Player.update()		1110,	101,	1110,	110,	1010,	110,	1001
2017-01-04 09:20:51 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:20:51 AI_Player.update()		1100,	101,	101,	11,	101,	101,	11
2017-01-04 09:20:51 AI_Player.update()		1100,	110,	1101,	11,	1101,	1011,	1001
2017-01-04 09:20:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:20:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:51 AI_Player.update()	update
2017-01-04 09:20:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:51 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:20:51 AI_Player.update()	Player a has won!
2017-01-04 09:20:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:51 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:20:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:51 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:20:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:51 AI_Player.update()	update
2017-01-04 09:20:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:51 AI_Player.update()	Search took186ms
2017-01-04 09:20:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:51 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-04 09:20:51 AI_Player.update()		110,	1010,	1010,	1100,	101,	1001,	101
2017-01-04 09:20:51 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 09:20:51 AI_Player.update()		110,	1001,	11,	1011,	101,	101,	1100
2017-01-04 09:20:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 09:20:51 AI_Player.update()		11,	1001,	110,	1010,	1001,	1010,	101
2017-01-04 09:20:51 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:51 AI_Player.update()	update
2017-01-04 09:20:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:51 AI_Player.update()	update
2017-01-04 09:20:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:51 AI_Player.update()	Search took114ms
2017-01-04 09:20:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:51 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-04 09:20:51 AI_Player.update()		101,	110,	1010,	1010,	1100,	101,	1001
2017-01-04 09:20:51 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 09:20:51 AI_Player.update()		110,	1001,	11,	1011,	101,	101,	1100
2017-01-04 09:20:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 09:20:51 AI_Player.update()		11,	1001,	110,	1010,	1001,	1010,	101
2017-01-04 09:20:51 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:51 AI_Player.update()	update
2017-01-04 09:20:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:52 AI_Player.update()	update
2017-01-04 09:20:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:52 AI_Player.update()	Search took175ms
2017-01-04 09:20:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:52 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-04 09:20:52 AI_Player.update()		101,	110,	1010,	1010,	1100,	101,	1001
2017-01-04 09:20:52 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 09:20:52 AI_Player.update()		1001,	11,	1011,	101,	101,	1100,	110
2017-01-04 09:20:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 09:20:52 AI_Player.update()		11,	1001,	110,	1010,	1001,	1010,	101
2017-01-04 09:20:52 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:20:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:52 AI_Player.update()	update
2017-01-04 09:20:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:20:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:52 AI_Player.update()	update
2017-01-04 09:20:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:52 AI_Player.update()	Search took140ms
2017-01-04 09:20:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:52 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 09:20:52 AI_Player.update()		101,	110,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:52 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 09:20:52 AI_Player.update()		1001,	11,	1011,	101,	101,	1100,	110
2017-01-04 09:20:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:52 AI_Player.update()		11,	1001,	110,	1010,	1001,	101,	101
2017-01-04 09:20:52 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:20:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:52 AI_Player.update()	update
2017-01-04 09:20:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:52 AI_Player.update()	update
2017-01-04 09:20:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:53 AI_Player.update()	Search took327ms
2017-01-04 09:20:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:53 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 09:20:53 AI_Player.update()		101,	110,	1010,	110,	1100,	1101,	1001
2017-01-04 09:20:53 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 09:20:53 AI_Player.update()		1001,	11,	1011,	101,	101,	1100,	110
2017-01-04 09:20:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:53 AI_Player.update()		11,	1001,	110,	101,	1001,	101,	101
2017-01-04 09:20:53 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 09:20:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:20:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:53 AI_Player.update()	update
2017-01-04 09:20:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:20:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:53 AI_Player.update()	update
2017-01-04 09:20:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:53 AI_Player.update()	Search took95ms
2017-01-04 09:20:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:53 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 09:20:53 AI_Player.update()		101,	110,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:53 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 09:20:53 AI_Player.update()		1001,	11,	1011,	101,	101,	1100,	110
2017-01-04 09:20:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:53 AI_Player.update()		11,	1001,	110,	1010,	1001,	101,	101
2017-01-04 09:20:53 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:20:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:53 AI_Player.update()	update
2017-01-04 09:20:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:20:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:53 AI_Player.update()	update
2017-01-04 09:20:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:53 AI_Player.update()	Search took360ms
2017-01-04 09:20:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:53 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 09:20:53 AI_Player.update()		101,	101,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:53 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:20:53 AI_Player.update()		1001,	101,	1011,	101,	101,	1100,	110
2017-01-04 09:20:53 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:53 AI_Player.update()		11,	110,	110,	1010,	1001,	101,	101
2017-01-04 09:20:53 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:53 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:20:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:54 AI_Player.update()	update
2017-01-04 09:20:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:20:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:54 AI_Player.update()	update
2017-01-04 09:20:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:54 AI_Player.update()	Search took309ms
2017-01-04 09:20:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:54 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 09:20:54 AI_Player.update()		101,	101,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:54 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:20:54 AI_Player.update()		1001,	101,	1011,	101,	101,	1100,	110
2017-01-04 09:20:54 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:54 AI_Player.update()		101,	11,	110,	110,	1010,	1001,	101
2017-01-04 09:20:54 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:20:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:54 AI_Player.update()	update
2017-01-04 09:20:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:20:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:54 AI_Player.update()	update
2017-01-04 09:20:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:54 AI_Player.update()	Search took298ms
2017-01-04 09:20:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:54 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 09:20:54 AI_Player.update()		101,	101,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:54 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:20:54 AI_Player.update()		101,	1011,	101,	101,	1100,	110,	1001
2017-01-04 09:20:54 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:54 AI_Player.update()		101,	11,	110,	110,	1010,	1001,	101
2017-01-04 09:20:54 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:20:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:55 AI_Player.update()	update
2017-01-04 09:20:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:20:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:55 AI_Player.update()	update
2017-01-04 09:20:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:55 AI_Player.update()	Search took142ms
2017-01-04 09:20:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:55 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 09:20:55 AI_Player.update()		101,	11,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:55 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-04 09:20:55 AI_Player.update()		101,	1001,	101,	101,	1100,	110,	1001
2017-01-04 09:20:55 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:55 AI_Player.update()		101,	101,	110,	110,	1010,	1001,	101
2017-01-04 09:20:55 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:20:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:55 AI_Player.update()	update
2017-01-04 09:20:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:20:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:55 AI_Player.update()	update
2017-01-04 09:20:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:55 AI_Player.update()	Search took71ms
2017-01-04 09:20:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:55 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 09:20:55 AI_Player.update()		101,	11,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:55 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-04 09:20:55 AI_Player.update()		1001,	101,	1001,	101,	101,	1100,	110
2017-01-04 09:20:55 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:55 AI_Player.update()		101,	101,	110,	110,	1010,	1001,	101
2017-01-04 09:20:55 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:20:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:55 AI_Player.update()	update
2017-01-04 09:20:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:20:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:55 AI_Player.update()	update
2017-01-04 09:20:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:55 AI_Player.update()	Search took98ms
2017-01-04 09:20:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:55 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-04 09:20:55 AI_Player.update()		101,	1011,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:55 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 09:20:55 AI_Player.update()		1001,	11,	1001,	101,	101,	1100,	110
2017-01-04 09:20:55 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:55 AI_Player.update()		101,	110,	110,	110,	1010,	1001,	101
2017-01-04 09:20:55 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:55 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:20:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:56 AI_Player.update()	update
2017-01-04 09:20:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:20:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:56 AI_Player.update()	update
2017-01-04 09:20:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:56 AI_Player.update()	Search took79ms
2017-01-04 09:20:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:56 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-04 09:20:56 AI_Player.update()		101,	1011,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:56 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 09:20:56 AI_Player.update()		11,	1001,	101,	101,	1100,	110,	1001
2017-01-04 09:20:56 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:56 AI_Player.update()		101,	110,	110,	110,	1010,	1001,	101
2017-01-04 09:20:56 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:20:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:56 AI_Player.update()	update
2017-01-04 09:20:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:20:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:56 AI_Player.update()	update
2017-01-04 09:20:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:56 AI_Player.update()	Search took142ms
2017-01-04 09:20:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:56 AI_Player.update()		110,	1011,	111,	110,	111,	1010,	11
2017-01-04 09:20:56 AI_Player.update()		101,	101,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:56 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:20:56 AI_Player.update()		11,	101,	101,	101,	1100,	110,	1001
2017-01-04 09:20:56 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:56 AI_Player.update()		101,	101,	110,	110,	1010,	1001,	101
2017-01-04 09:20:56 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:20:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:56 AI_Player.update()	update
2017-01-04 09:20:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:20:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:56 AI_Player.update()	update
2017-01-04 09:20:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:56 AI_Player.update()	Search took198ms
2017-01-04 09:20:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:56 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 09:20:56 AI_Player.update()		101,	1001,	1010,	1010,	1100,	1101,	1001
2017-01-04 09:20:56 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 09:20:56 AI_Player.update()		11,	110,	101,	101,	1100,	110,	1001
2017-01-04 09:20:56 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:20:56 AI_Player.update()		101,	11,	110,	110,	1010,	1001,	101
2017-01-04 09:20:56 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:20:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:56 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:20:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:57 AI_Player.update()	update
2017-01-04 09:20:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:57 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:20:57 AI_Player.update()	Player a has won!
2017-01-04 09:20:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:57 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:20:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:20:57 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:20:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:57 AI_Player.update()	update
2017-01-04 09:20:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:57 AI_Player.update()	Search took170ms
2017-01-04 09:20:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:57 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 09:20:57 AI_Player.update()		1110,	101,	110,	1010,	1010,	1100,	1011
2017-01-04 09:20:57 AI_Player.update()		1110,	1100,	1110,	1011,	111,	110,	1011
2017-01-04 09:20:57 AI_Player.update()		1010,	1010,	1010,	1100,	111,	1011,	1010
2017-01-04 09:20:57 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	101,	1011
2017-01-04 09:20:57 AI_Player.update()		101,	101,	1101,	1101,	1100,	1100,	101
2017-01-04 09:20:57 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1010,	1001
2017-01-04 09:20:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:57 AI_Player.update()	update
2017-01-04 09:20:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:57 AI_Player.update()	update
2017-01-04 09:20:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:20:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:20:58 AI_Player.update()	Search took740ms
2017-01-04 09:20:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:58 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:20:58 AI_Player.update()		1110,	1100,	110,	1010,	1010,	1100,	1011
2017-01-04 09:20:58 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-04 09:20:58 AI_Player.update()		1010,	1010,	1010,	1100,	111,	1011,	1010
2017-01-04 09:20:58 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:20:58 AI_Player.update()		101,	11,	1101,	1101,	1100,	1100,	101
2017-01-04 09:20:58 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-04 09:20:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:20:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:58 AI_Player.update()	update
2017-01-04 09:20:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:20:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:20:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:20:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:20:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:58 AI_Player.update()	update
2017-01-04 09:20:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:20:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:20:59 AI_Player.update()	Search took930ms
2017-01-04 09:20:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:20:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:59 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 09:20:59 AI_Player.update()		1110,	1100,	110,	1011,	1010,	1100,	1011
2017-01-04 09:20:59 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:20:59 AI_Player.update()		1010,	1010,	1010,	1110,	111,	1011,	1010
2017-01-04 09:20:59 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 09:20:59 AI_Player.update()		101,	11,	1101,	1101,	1100,	1100,	101
2017-01-04 09:20:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:20:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:20:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:20:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:20:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:59 AI_Player.update()	update
2017-01-04 09:20:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:20:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:20:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:20:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:20:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:20:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:20:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:20:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:20:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:20:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:20:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:20:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:20:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:20:59 AI_Player.update()	update
2017-01-04 09:20:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:00 AI_Player.update()	Search took1238ms
2017-01-04 09:21:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:00 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 09:21:00 AI_Player.update()		1110,	1100,	110,	1100,	1010,	1100,	1011
2017-01-04 09:21:00 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-04 09:21:00 AI_Player.update()		1010,	1010,	1010,	1101,	111,	1011,	1010
2017-01-04 09:21:00 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 09:21:00 AI_Player.update()		101,	11,	1101,	1100,	1100,	1100,	101
2017-01-04 09:21:00 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 09:21:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:00 AI_Player.update()	update
2017-01-04 09:21:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:01 AI_Player.update()	update
2017-01-04 09:21:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:02 AI_Player.update()	Search took1270ms
2017-01-04 09:21:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:02 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 09:21:02 AI_Player.update()		1110,	1100,	110,	1011,	1010,	1100,	1011
2017-01-04 09:21:02 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:02 AI_Player.update()		1010,	1010,	1010,	1110,	111,	1011,	1010
2017-01-04 09:21:02 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 09:21:02 AI_Player.update()		101,	11,	1101,	1101,	1100,	1100,	101
2017-01-04 09:21:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:21:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:02 AI_Player.update()	update
2017-01-04 09:21:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:02 AI_Player.update()	update
2017-01-04 09:21:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:03 AI_Player.update()	Search took1354ms
2017-01-04 09:21:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:03 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 09:21:03 AI_Player.update()		1110,	1100,	110,	1100,	1010,	1100,	1011
2017-01-04 09:21:03 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-04 09:21:03 AI_Player.update()		1010,	1010,	1010,	1101,	111,	1011,	1010
2017-01-04 09:21:03 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 09:21:03 AI_Player.update()		101,	11,	1101,	1100,	1100,	1100,	101
2017-01-04 09:21:03 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 09:21:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:04 AI_Player.update()	update
2017-01-04 09:21:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:04 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:04 AI_Player.update()	update
2017-01-04 09:21:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:05 AI_Player.update()	Search took1235ms
2017-01-04 09:21:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:05 AI_Player.update()		110,	1100,	111,	1011,	111,	1010,	11
2017-01-04 09:21:05 AI_Player.update()		1110,	1010,	110,	1100,	1010,	1100,	1011
2017-01-04 09:21:05 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-04 09:21:05 AI_Player.update()		1010,	101,	1010,	1101,	111,	1011,	1010
2017-01-04 09:21:05 AI_Player.update()		1110,	11,	1101,	1101,	1011,	101,	1011
2017-01-04 09:21:05 AI_Player.update()		101,	1010,	1101,	1100,	1100,	1100,	101
2017-01-04 09:21:05 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 09:21:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:05 AI_Player.update()	update
2017-01-04 09:21:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:21:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:05 AI_Player.update()	update
2017-01-04 09:21:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:05 AI_Player.update()	Search took195ms
2017-01-04 09:21:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:05 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 09:21:05 AI_Player.update()		1110,	1010,	110,	1011,	1010,	1100,	1011
2017-01-04 09:21:05 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:05 AI_Player.update()		1010,	101,	1010,	1110,	111,	1011,	1010
2017-01-04 09:21:05 AI_Player.update()		1110,	11,	1101,	1101,	1011,	101,	1011
2017-01-04 09:21:05 AI_Player.update()		101,	1010,	1101,	1101,	1100,	1100,	101
2017-01-04 09:21:05 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:21:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:21:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:05 AI_Player.update()	update
2017-01-04 09:21:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:05 AI_Player.update()	update
2017-01-04 09:21:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:06 AI_Player.update()	Search took915ms
2017-01-04 09:21:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:06 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:21:06 AI_Player.update()		1110,	1010,	110,	1011,	1010,	1100,	1011
2017-01-04 09:21:06 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:06 AI_Player.update()		1010,	11,	1010,	1110,	111,	1011,	1010
2017-01-04 09:21:06 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-04 09:21:06 AI_Player.update()		101,	101,	1101,	1101,	1100,	1100,	101
2017-01-04 09:21:06 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:21:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:06 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:07 AI_Player.update()	update
2017-01-04 09:21:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:07 AI_Player.update()	update
2017-01-04 09:21:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:07 AI_Player.update()	Search took27ms
2017-01-04 09:21:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:07 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 09:21:07 AI_Player.update()		1110,	1010,	110,	1010,	1010,	1100,	1011
2017-01-04 09:21:07 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-04 09:21:07 AI_Player.update()		1010,	11,	1010,	1100,	111,	1011,	1010
2017-01-04 09:21:07 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	101,	1011
2017-01-04 09:21:07 AI_Player.update()		101,	101,	1101,	1101,	1100,	1100,	101
2017-01-04 09:21:07 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 09:21:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:07 AI_Player.update()	update
2017-01-04 09:21:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:07 AI_Player.update()	update
2017-01-04 09:21:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:08 AI_Player.update()	Search took791ms
2017-01-04 09:21:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:08 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 09:21:08 AI_Player.update()		1110,	101,	110,	1010,	1010,	1100,	1011
2017-01-04 09:21:08 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-04 09:21:08 AI_Player.update()		1010,	1010,	1010,	1100,	111,	1011,	1010
2017-01-04 09:21:08 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:21:08 AI_Player.update()		101,	1100,	1101,	1101,	1100,	1100,	101
2017-01-04 09:21:08 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-04 09:21:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:08 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:08 AI_Player.update()	update
2017-01-04 09:21:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:08 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:08 AI_Player.update()	update
2017-01-04 09:21:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:08 AI_Player.update()	Search took46ms
2017-01-04 09:21:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:08 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 09:21:08 AI_Player.update()		1110,	1010,	110,	1010,	1010,	1100,	1011
2017-01-04 09:21:08 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-04 09:21:08 AI_Player.update()		1010,	11,	1010,	1100,	111,	1011,	1010
2017-01-04 09:21:08 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	101,	1011
2017-01-04 09:21:08 AI_Player.update()		101,	101,	1101,	1101,	1100,	1100,	101
2017-01-04 09:21:08 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 09:21:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:08 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:08 AI_Player.update()	update
2017-01-04 09:21:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:08 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:08 AI_Player.update()	update
2017-01-04 09:21:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:09 AI_Player.update()	Search took626ms
2017-01-04 09:21:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:09 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 09:21:09 AI_Player.update()		1010,	110,	1010,	1010,	1100,	1011,	1110
2017-01-04 09:21:09 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-04 09:21:09 AI_Player.update()		1010,	11,	1010,	1100,	111,	1011,	1010
2017-01-04 09:21:09 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	101,	1011
2017-01-04 09:21:09 AI_Player.update()		101,	101,	1101,	1101,	1100,	1100,	101
2017-01-04 09:21:09 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 09:21:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:09 AI_Player.update()	update
2017-01-04 09:21:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:09 AI_Player.update()	update
2017-01-04 09:21:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:09 AI_Player.update()	Search took286ms
2017-01-04 09:21:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:09 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 09:21:09 AI_Player.update()		1010,	101,	1010,	1010,	1100,	1011,	1110
2017-01-04 09:21:09 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-04 09:21:09 AI_Player.update()		1010,	1010,	1010,	1100,	111,	1011,	1010
2017-01-04 09:21:09 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:21:09 AI_Player.update()		101,	1100,	1101,	1101,	1100,	1100,	101
2017-01-04 09:21:09 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-04 09:21:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:09 AI_Player.update()	update
2017-01-04 09:21:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:21:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:09 AI_Player.update()	update
2017-01-04 09:21:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:10 AI_Player.update()	Search took103ms
2017-01-04 09:21:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:10 AI_Player.update()		110,	110,	111,	1101,	111,	1010,	11
2017-01-04 09:21:10 AI_Player.update()		1010,	101,	1010,	1100,	1100,	1011,	1110
2017-01-04 09:21:10 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:10 AI_Player.update()		1010,	1010,	1010,	1011,	111,	1011,	1010
2017-01-04 09:21:10 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:21:10 AI_Player.update()		101,	1100,	1101,	1110,	1100,	1100,	101
2017-01-04 09:21:10 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-04 09:21:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:21:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:10 AI_Player.update()	update
2017-01-04 09:21:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:10 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:21:10 AI_Player.update()	Player a has won!
2017-01-04 09:21:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:10 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:21:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:10 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:21:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:10 AI_Player.update()	update
2017-01-04 09:21:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:10 AI_Player.update()	Search took16ms
2017-01-04 09:21:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:10 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:21:10 AI_Player.update()		101,	1100,	1010,	1010,	1001,	1101,	1001
2017-01-04 09:21:10 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-04 09:21:10 AI_Player.update()		110,	1010,	110,	1010,	1001,	1110,	1010
2017-01-04 09:21:10 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:21:10 AI_Player.update()		11,	1010,	1100,	101,	1010,	1101,	1001
2017-01-04 09:21:10 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-04 09:21:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:10 AI_Player.update()	update
2017-01-04 09:21:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:10 AI_Player.update()	update
2017-01-04 09:21:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:10 AI_Player.update()	Search took85ms
2017-01-04 09:21:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:10 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:21:10 AI_Player.update()		101,	1100,	1010,	1001,	1001,	1101,	1001
2017-01-04 09:21:10 AI_Player.update()		1110,	110,	1110,	1010,	111,	11,	1011
2017-01-04 09:21:10 AI_Player.update()		110,	1010,	110,	1001,	1001,	1110,	1010
2017-01-04 09:21:10 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:21:10 AI_Player.update()		11,	1010,	1100,	1011,	1010,	1101,	1001
2017-01-04 09:21:10 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:21:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:10 AI_Player.update()	update
2017-01-04 09:21:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:10 AI_Player.update()	update
2017-01-04 09:21:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:10 AI_Player.update()	Search took209ms
2017-01-04 09:21:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:10 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 09:21:10 AI_Player.update()		101,	110,	1010,	1001,	1001,	1101,	1001
2017-01-04 09:21:10 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-04 09:21:10 AI_Player.update()		110,	1101,	110,	1001,	1001,	1110,	1010
2017-01-04 09:21:10 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 09:21:10 AI_Player.update()		11,	101,	1100,	1011,	1010,	1101,	1001
2017-01-04 09:21:10 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:21:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:11 AI_Player.update()	update
2017-01-04 09:21:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:21:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:11 AI_Player.update()	update
2017-01-04 09:21:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:11 AI_Player.update()	Search took108ms
2017-01-04 09:21:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:11 AI_Player.update()		110,	1100,	111,	1010,	111,	1101,	11
2017-01-04 09:21:11 AI_Player.update()		101,	110,	1010,	1001,	1001,	11,	1001
2017-01-04 09:21:11 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-04 09:21:11 AI_Player.update()		110,	1101,	110,	1001,	1001,	1010,	1010
2017-01-04 09:21:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-04 09:21:11 AI_Player.update()		11,	101,	1100,	1011,	1010,	101,	1001
2017-01-04 09:21:11 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:21:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:21:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:11 AI_Player.update()	update
2017-01-04 09:21:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:21:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:11 AI_Player.update()	update
2017-01-04 09:21:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:11 AI_Player.update()	Search took112ms
2017-01-04 09:21:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:11 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 09:21:11 AI_Player.update()		101,	110,	1010,	1001,	1001,	1101,	1001
2017-01-04 09:21:11 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-04 09:21:11 AI_Player.update()		110,	1101,	110,	1001,	1001,	1110,	1010
2017-01-04 09:21:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 09:21:11 AI_Player.update()		11,	101,	1100,	1011,	1010,	1101,	1001
2017-01-04 09:21:11 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:21:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:21:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:11 AI_Player.update()	update
2017-01-04 09:21:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:21:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:11 AI_Player.update()	update
2017-01-04 09:21:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:12 AI_Player.update()	Search took312ms
2017-01-04 09:21:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:12 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:21:12 AI_Player.update()		101,	1100,	1010,	1001,	1001,	1101,	1001
2017-01-04 09:21:12 AI_Player.update()		1110,	110,	1110,	1010,	111,	11,	1011
2017-01-04 09:21:12 AI_Player.update()		110,	1010,	110,	1001,	1001,	1110,	1010
2017-01-04 09:21:12 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:21:12 AI_Player.update()		11,	1010,	1100,	1011,	1010,	1101,	1001
2017-01-04 09:21:12 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 09:21:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:21:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:12 AI_Player.update()	update
2017-01-04 09:21:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:12 AI_Player.update()	update
2017-01-04 09:21:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:12 AI_Player.update()	Search took321ms
2017-01-04 09:21:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:12 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:21:12 AI_Player.update()		101,	1100,	1010,	1010,	1001,	1101,	1001
2017-01-04 09:21:12 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-04 09:21:12 AI_Player.update()		110,	1010,	110,	101,	1001,	1110,	1010
2017-01-04 09:21:12 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:21:12 AI_Player.update()		11,	1010,	1100,	1001,	1010,	1101,	1001
2017-01-04 09:21:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:21:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:12 AI_Player.update()	update
2017-01-04 09:21:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:21:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:12 AI_Player.update()	update
2017-01-04 09:21:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:13 AI_Player.update()	Search took587ms
2017-01-04 09:21:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:13 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:21:13 AI_Player.update()		101,	1100,	1010,	1010,	1001,	101,	1001
2017-01-04 09:21:13 AI_Player.update()		1110,	110,	1110,	1001,	111,	1101,	1011
2017-01-04 09:21:13 AI_Player.update()		110,	1010,	110,	101,	1001,	11,	1010
2017-01-04 09:21:13 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	1110,	1011
2017-01-04 09:21:13 AI_Player.update()		11,	1010,	1100,	1001,	1010,	1010,	1001
2017-01-04 09:21:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-04 09:21:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:21:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:13 AI_Player.update()	update
2017-01-04 09:21:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:13 AI_Player.update()	update
2017-01-04 09:21:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:14 AI_Player.update()	Search took835ms
2017-01-04 09:21:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:14 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-04 09:21:14 AI_Player.update()		101,	110,	1010,	1010,	1001,	101,	1001
2017-01-04 09:21:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1101,	1011
2017-01-04 09:21:14 AI_Player.update()		110,	1101,	110,	101,	1001,	11,	1010
2017-01-04 09:21:14 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1110,	1011
2017-01-04 09:21:14 AI_Player.update()		11,	101,	1100,	1001,	1010,	1010,	1001
2017-01-04 09:21:14 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-04 09:21:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:14 AI_Player.update()	update
2017-01-04 09:21:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:21:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:14 AI_Player.update()	update
2017-01-04 09:21:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:15 AI_Player.update()	Search took726ms
2017-01-04 09:21:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:15 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 09:21:15 AI_Player.update()		101,	110,	1010,	1001,	1001,	101,	1001
2017-01-04 09:21:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-04 09:21:15 AI_Player.update()		110,	1101,	110,	1001,	1001,	11,	1010
2017-01-04 09:21:15 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:15 AI_Player.update()		11,	101,	1100,	1011,	1010,	1010,	1001
2017-01-04 09:21:15 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:21:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:21:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:15 AI_Player.update()	update
2017-01-04 09:21:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:15 AI_Player.update()	update
2017-01-04 09:21:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:16 AI_Player.update()	Search took629ms
2017-01-04 09:21:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:16 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 09:21:16 AI_Player.update()		101,	1010,	1010,	1001,	1001,	101,	1001
2017-01-04 09:21:16 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1101,	1011
2017-01-04 09:21:16 AI_Player.update()		110,	1010,	110,	1001,	1001,	11,	1010
2017-01-04 09:21:16 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:16 AI_Player.update()		11,	101,	1100,	1011,	1010,	1010,	1001
2017-01-04 09:21:16 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:21:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:16 AI_Player.update()	update
2017-01-04 09:21:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:16 AI_Player.update()	update
2017-01-04 09:21:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:17 AI_Player.update()	Search took670ms
2017-01-04 09:21:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:17 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 09:21:17 AI_Player.update()		1001,	101,	1010,	1010,	1001,	1001,	101
2017-01-04 09:21:17 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1101,	1011
2017-01-04 09:21:17 AI_Player.update()		110,	1010,	110,	1001,	1001,	11,	1010
2017-01-04 09:21:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:17 AI_Player.update()		11,	101,	1100,	1011,	1010,	1010,	1001
2017-01-04 09:21:17 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:21:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:17 AI_Player.update()	update
2017-01-04 09:21:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:17 AI_Player.update()	update
2017-01-04 09:21:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:17 AI_Player.update()	Search took599ms
2017-01-04 09:21:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:17 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:21:17 AI_Player.update()		1001,	1101,	1010,	1010,	1001,	1001,	101
2017-01-04 09:21:17 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-04 09:21:17 AI_Player.update()		110,	101,	110,	1001,	1001,	11,	1010
2017-01-04 09:21:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:17 AI_Player.update()		11,	1100,	1100,	1011,	1010,	1010,	1001
2017-01-04 09:21:17 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:21:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:18 AI_Player.update()	update
2017-01-04 09:21:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:18 AI_Player.update()	update
2017-01-04 09:21:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:18 AI_Player.update()	Search took478ms
2017-01-04 09:21:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:18 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:21:18 AI_Player.update()		1101,	1010,	1010,	1001,	1001,	101,	1001
2017-01-04 09:21:18 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-04 09:21:18 AI_Player.update()		110,	101,	110,	1001,	1001,	11,	1010
2017-01-04 09:21:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:18 AI_Player.update()		11,	1100,	1100,	1011,	1010,	1010,	1001
2017-01-04 09:21:18 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:21:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:18 AI_Player.update()	update
2017-01-04 09:21:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:21:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:18 AI_Player.update()	update
2017-01-04 09:21:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:19 AI_Player.update()	Search took588ms
2017-01-04 09:21:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:19 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:21:19 AI_Player.update()		1101,	1010,	1010,	1001,	1001,	101,	1001
2017-01-04 09:21:19 AI_Player.update()		1110,	101,	1110,	1010,	111,	1101,	1011
2017-01-04 09:21:19 AI_Player.update()		110,	101,	110,	1001,	1001,	11,	1010
2017-01-04 09:21:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:19 AI_Player.update()		11,	110,	1100,	1011,	1010,	1010,	1001
2017-01-04 09:21:19 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:21:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:21:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:19 AI_Player.update()	update
2017-01-04 09:21:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:19 AI_Player.update()	update
2017-01-04 09:21:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:19 AI_Player.update()	Search took100ms
2017-01-04 09:21:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:19 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:21:19 AI_Player.update()		1101,	1010,	1010,	1001,	1001,	101,	1001
2017-01-04 09:21:19 AI_Player.update()		1110,	101,	1110,	1010,	111,	1101,	1011
2017-01-04 09:21:19 AI_Player.update()		101,	110,	1001,	1001,	11,	1010,	110
2017-01-04 09:21:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:19 AI_Player.update()		11,	110,	1100,	1011,	1010,	1010,	1001
2017-01-04 09:21:19 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:21:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:19 AI_Player.update()	update
2017-01-04 09:21:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:21:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:19 AI_Player.update()	update
2017-01-04 09:21:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:19 AI_Player.update()	Search took26ms
2017-01-04 09:21:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:19 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:21:19 AI_Player.update()		1101,	1010,	1010,	1001,	1001,	101,	1001
2017-01-04 09:21:19 AI_Player.update()		1110,	101,	1110,	1010,	111,	1101,	1011
2017-01-04 09:21:19 AI_Player.update()		110,	101,	110,	1001,	1001,	11,	1010
2017-01-04 09:21:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:19 AI_Player.update()		11,	110,	1100,	1011,	1010,	1010,	1001
2017-01-04 09:21:19 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:21:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:19 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:21:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:20 AI_Player.update()	update
2017-01-04 09:21:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:20 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:21:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:20 AI_Player.update()	update
2017-01-04 09:21:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:20 AI_Player.update()	Search took720ms
2017-01-04 09:21:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:20 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:21:20 AI_Player.update()		1101,	101,	1010,	1001,	1001,	101,	1001
2017-01-04 09:21:20 AI_Player.update()		1110,	101,	1110,	1010,	111,	1101,	1011
2017-01-04 09:21:20 AI_Player.update()		110,	1100,	110,	1001,	1001,	11,	1010
2017-01-04 09:21:20 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:20 AI_Player.update()		11,	101,	1100,	1011,	1010,	1010,	1001
2017-01-04 09:21:20 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:21:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:20 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:21:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:21 AI_Player.update()	update
2017-01-04 09:21:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:21 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:21:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:21 AI_Player.update()	update
2017-01-04 09:21:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:21 AI_Player.update()	Search took31ms
2017-01-04 09:21:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:21 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:21:21 AI_Player.update()		1101,	101,	1010,	1001,	1001,	101,	1001
2017-01-04 09:21:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-04 09:21:21 AI_Player.update()		110,	110,	110,	1001,	1001,	11,	1010
2017-01-04 09:21:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:21 AI_Player.update()		11,	1010,	1100,	1011,	1010,	1010,	1001
2017-01-04 09:21:21 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:21:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:21 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:21:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:21 AI_Player.update()	update
2017-01-04 09:21:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:21 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:21:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:21 AI_Player.update()	update
2017-01-04 09:21:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:21 AI_Player.update()	Search took571ms
2017-01-04 09:21:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:21 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:21:21 AI_Player.update()		1101,	101,	1010,	1001,	1001,	1101,	1001
2017-01-04 09:21:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-04 09:21:21 AI_Player.update()		110,	110,	110,	1001,	1001,	1110,	1010
2017-01-04 09:21:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:21:21 AI_Player.update()		11,	1010,	1100,	1011,	1010,	1101,	1001
2017-01-04 09:21:21 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 09:21:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:21 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:21:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:22 AI_Player.update()	update
2017-01-04 09:21:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:22 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:21:22 AI_Player.update()	Player b has won!
2017-01-04 09:21:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:21:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:22 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:21:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:22 AI_Player.update()	update
2017-01-04 09:21:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:22 AI_Player.update()	Search took93ms
2017-01-04 09:21:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:22 AI_Player.update()		110,	1101,	111,	110,	111,	1001,	11
2017-01-04 09:21:22 AI_Player.update()		1001,	11,	1010,	1011,	101,	101,	1001
2017-01-04 09:21:22 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-04 09:21:22 AI_Player.update()		1100,	1100,	110,	1001,	101,	1100,	1010
2017-01-04 09:21:22 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 09:21:22 AI_Player.update()		1100,	101,	11,	1010,	1010,	101,	1011
2017-01-04 09:21:22 AI_Player.update()		1100,	110,	1101,	1010,	1101,	111,	1001
2017-01-04 09:21:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:22 AI_Player.update()	update
2017-01-04 09:21:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:22 AI_Player.update()	update
2017-01-04 09:21:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:22 AI_Player.update()	Search took219ms
2017-01-04 09:21:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:22 AI_Player.update()		110,	11,	111,	110,	111,	1001,	11
2017-01-04 09:21:22 AI_Player.update()		1001,	110,	1010,	1011,	101,	101,	1001
2017-01-04 09:21:22 AI_Player.update()		1110,	1100,	1110,	1011,	111,	110,	1011
2017-01-04 09:21:22 AI_Player.update()		1100,	1001,	110,	1001,	101,	1100,	1010
2017-01-04 09:21:22 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:21:22 AI_Player.update()		1100,	110,	11,	1010,	1010,	101,	1011
2017-01-04 09:21:22 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	111,	1001
2017-01-04 09:21:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:22 AI_Player.update()	update
2017-01-04 09:21:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:22 AI_Player.update()	update
2017-01-04 09:21:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:23 AI_Player.update()	Search took452ms
2017-01-04 09:21:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:23 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:21:23 AI_Player.update()		1001,	110,	1010,	1011,	101,	110,	1001
2017-01-04 09:21:23 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1100,	1011
2017-01-04 09:21:23 AI_Player.update()		1100,	1001,	110,	1001,	101,	101,	1010
2017-01-04 09:21:23 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:21:23 AI_Player.update()		1100,	110,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:23 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:23 AI_Player.update()	update
2017-01-04 09:21:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:21:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:23 AI_Player.update()	update
2017-01-04 09:21:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:24 AI_Player.update()	Search took616ms
2017-01-04 09:21:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:24 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 09:21:24 AI_Player.update()		1001,	110,	1010,	1011,	101,	1100,	1001
2017-01-04 09:21:24 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 09:21:24 AI_Player.update()		1100,	1001,	110,	1001,	101,	101,	1010
2017-01-04 09:21:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	111,	1011
2017-01-04 09:21:24 AI_Player.update()		1100,	110,	11,	1010,	1010,	1001,	1011
2017-01-04 09:21:24 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:21:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:21:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:24 AI_Player.update()	update
2017-01-04 09:21:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:24 AI_Player.update()	update
2017-01-04 09:21:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:24 AI_Player.update()	Search took414ms
2017-01-04 09:21:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:24 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:21:24 AI_Player.update()		1001,	110,	1010,	1011,	101,	110,	1001
2017-01-04 09:21:24 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1100,	1011
2017-01-04 09:21:24 AI_Player.update()		1100,	1001,	110,	1001,	101,	101,	1010
2017-01-04 09:21:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:21:24 AI_Player.update()		1100,	110,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:24 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:24 AI_Player.update()	update
2017-01-04 09:21:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:21:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:25 AI_Player.update()	update
2017-01-04 09:21:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:25 AI_Player.update()	Search took96ms
2017-01-04 09:21:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:25 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-04 09:21:25 AI_Player.update()		1001,	110,	1010,	1011,	101,	1100,	1001
2017-01-04 09:21:25 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 09:21:25 AI_Player.update()		1100,	1001,	110,	1001,	101,	101,	1010
2017-01-04 09:21:25 AI_Player.update()		1110,	101,	1101,	1100,	1011,	111,	1011
2017-01-04 09:21:25 AI_Player.update()		1100,	110,	11,	1010,	1010,	1001,	1011
2017-01-04 09:21:25 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:21:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:21:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:25 AI_Player.update()	update
2017-01-04 09:21:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:21:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:25 AI_Player.update()	update
2017-01-04 09:21:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:25 AI_Player.update()	Search took346ms
2017-01-04 09:21:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:25 AI_Player.update()		110,	1101,	111,	110,	111,	110,	11
2017-01-04 09:21:25 AI_Player.update()		1001,	11,	1010,	1011,	101,	1100,	1001
2017-01-04 09:21:25 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-04 09:21:25 AI_Player.update()		1100,	1100,	110,	1001,	101,	101,	1010
2017-01-04 09:21:25 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	111,	1011
2017-01-04 09:21:25 AI_Player.update()		1100,	101,	11,	1010,	1010,	1001,	1011
2017-01-04 09:21:25 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:21:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:21:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:25 AI_Player.update()	update
2017-01-04 09:21:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:21:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:25 AI_Player.update()	update
2017-01-04 09:21:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:26 AI_Player.update()	Search took353ms
2017-01-04 09:21:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:26 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-04 09:21:26 AI_Player.update()		1001,	11,	1010,	1011,	101,	110,	1001
2017-01-04 09:21:26 AI_Player.update()		1110,	110,	1110,	1011,	111,	1100,	1011
2017-01-04 09:21:26 AI_Player.update()		1100,	1100,	110,	1001,	101,	101,	1010
2017-01-04 09:21:26 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 09:21:26 AI_Player.update()		1100,	101,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:26 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:21:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:26 AI_Player.update()	update
2017-01-04 09:21:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:21:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:26 AI_Player.update()	update
2017-01-04 09:21:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:27 AI_Player.update()	Search took570ms
2017-01-04 09:21:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:27 AI_Player.update()		110,	1101,	111,	1011,	111,	101,	11
2017-01-04 09:21:27 AI_Player.update()		1001,	11,	1010,	1011,	101,	110,	1001
2017-01-04 09:21:27 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:21:27 AI_Player.update()		1100,	1100,	110,	1100,	101,	101,	1010
2017-01-04 09:21:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 09:21:27 AI_Player.update()		1100,	101,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:27 AI_Player.update()		1100,	110,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:21:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:27 AI_Player.update()	update
2017-01-04 09:21:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:21:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:27 AI_Player.update()	update
2017-01-04 09:21:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:27 AI_Player.update()	Search took124ms
2017-01-04 09:21:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:27 AI_Player.update()		110,	11,	111,	1011,	111,	101,	11
2017-01-04 09:21:27 AI_Player.update()		1001,	110,	1010,	1011,	101,	110,	1001
2017-01-04 09:21:27 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-04 09:21:27 AI_Player.update()		1100,	1001,	110,	1100,	101,	101,	1010
2017-01-04 09:21:27 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-04 09:21:27 AI_Player.update()		1100,	110,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:27 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:21:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:27 AI_Player.update()	update
2017-01-04 09:21:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:27 AI_Player.update()	update
2017-01-04 09:21:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:27 AI_Player.update()	Search took213ms
2017-01-04 09:21:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:27 AI_Player.update()		110,	11,	111,	1011,	111,	101,	11
2017-01-04 09:21:27 AI_Player.update()		1001,	110,	1010,	1011,	101,	110,	1001
2017-01-04 09:21:27 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-04 09:21:27 AI_Player.update()		1010,	1100,	1001,	110,	1100,	101,	101
2017-01-04 09:21:27 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-04 09:21:27 AI_Player.update()		1100,	110,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:27 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:27 AI_Player.update()	update
2017-01-04 09:21:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:27 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:27 AI_Player.update()	update
2017-01-04 09:21:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:28 AI_Player.update()	Search took118ms
2017-01-04 09:21:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:28 AI_Player.update()		110,	11,	111,	1011,	111,	101,	11
2017-01-04 09:21:28 AI_Player.update()		1001,	110,	1010,	1011,	101,	110,	1001
2017-01-04 09:21:28 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	1001,	110,	1100,	101,	101,	1010
2017-01-04 09:21:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	110,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:28 AI_Player.update()	update
2017-01-04 09:21:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:28 AI_Player.update()	update
2017-01-04 09:21:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:28 AI_Player.update()	Search took62ms
2017-01-04 09:21:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:28 AI_Player.update()		110,	1101,	111,	1011,	111,	101,	11
2017-01-04 09:21:28 AI_Player.update()		1001,	11,	1010,	1011,	101,	110,	1001
2017-01-04 09:21:28 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	1100,	110,	1100,	101,	101,	1010
2017-01-04 09:21:28 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	101,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	110,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:28 AI_Player.update()	update
2017-01-04 09:21:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:21:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:28 AI_Player.update()	update
2017-01-04 09:21:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:28 AI_Player.update()	Search took158ms
2017-01-04 09:21:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:28 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-04 09:21:28 AI_Player.update()		1001,	11,	1010,	1011,	101,	110,	1001
2017-01-04 09:21:28 AI_Player.update()		1110,	110,	1110,	1011,	111,	1100,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	1100,	110,	1001,	101,	101,	1010
2017-01-04 09:21:28 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	101,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:21:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:28 AI_Player.update()	update
2017-01-04 09:21:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:28 AI_Player.update()	update
2017-01-04 09:21:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:28 AI_Player.update()	Search took32ms
2017-01-04 09:21:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:28 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-04 09:21:28 AI_Player.update()		11,	1010,	1011,	101,	110,	1001,	1001
2017-01-04 09:21:28 AI_Player.update()		1110,	110,	1110,	1011,	111,	1100,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	1100,	110,	1001,	101,	101,	1010
2017-01-04 09:21:28 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	101,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:28 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:28 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:29 AI_Player.update()	update
2017-01-04 09:21:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:29 AI_Player.update()	update
2017-01-04 09:21:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:29 AI_Player.update()	Search took494ms
2017-01-04 09:21:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:29 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-04 09:21:29 AI_Player.update()		11,	1010,	1011,	1011,	110,	1001,	1001
2017-01-04 09:21:29 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:21:29 AI_Player.update()		1100,	1100,	110,	1100,	101,	101,	1010
2017-01-04 09:21:29 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 09:21:29 AI_Player.update()		1100,	101,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:29 AI_Player.update()		1100,	110,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:29 AI_Player.update()	update
2017-01-04 09:21:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:21:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:29 AI_Player.update()	update
2017-01-04 09:21:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:29 AI_Player.update()	Search took97ms
2017-01-04 09:21:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:29 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-04 09:21:29 AI_Player.update()		1010,	1011,	1011,	110,	1001,	1001,	11
2017-01-04 09:21:29 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:21:29 AI_Player.update()		1100,	1100,	110,	1100,	101,	101,	1010
2017-01-04 09:21:29 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 09:21:29 AI_Player.update()		1100,	101,	11,	1010,	1010,	111,	1011
2017-01-04 09:21:29 AI_Player.update()		1100,	110,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:29 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:21:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:30 AI_Player.update()	update
2017-01-04 09:21:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:30 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:21:30 AI_Player.update()	Player a has won!
2017-01-04 09:21:30 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:30 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:21:30 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:30 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:21:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:30 AI_Player.update()	update
2017-01-04 09:21:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:30 AI_Player.update()	Search took109ms
2017-01-04 09:21:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:30 AI_Player.update()		110,	1010,	111,	1101,	111,	1001,	11
2017-01-04 09:21:30 AI_Player.update()		1100,	101,	11,	11,	11,	101,	110
2017-01-04 09:21:30 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1010,	1011
2017-01-04 09:21:30 AI_Player.update()		11,	11,	1010,	1010,	11,	110,	1001
2017-01-04 09:21:30 AI_Player.update()		1110,	110,	1101,	101,	1011,	111,	1011
2017-01-04 09:21:30 AI_Player.update()		101,	1001,	1010,	110,	101,	1010,	101
2017-01-04 09:21:30 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:21:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:30 AI_Player.update()	update
2017-01-04 09:21:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:30 AI_Player.update()	update
2017-01-04 09:21:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:30 AI_Player.update()	Search took26ms
2017-01-04 09:21:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:30 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-04 09:21:30 AI_Player.update()		1100,	101,	11,	11,	11,	1010,	110
2017-01-04 09:21:30 AI_Player.update()		1110,	1010,	1110,	1101,	111,	110,	1011
2017-01-04 09:21:30 AI_Player.update()		11,	11,	1010,	1010,	11,	111,	1001
2017-01-04 09:21:30 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 09:21:30 AI_Player.update()		101,	1001,	1010,	110,	101,	1010,	101
2017-01-04 09:21:30 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1001,	1001
2017-01-04 09:21:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:30 AI_Player.update()	update
2017-01-04 09:21:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:30 AI_Player.update()	update
2017-01-04 09:21:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:31 AI_Player.update()	Search took481ms
2017-01-04 09:21:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:31 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 09:21:31 AI_Player.update()		1100,	101,	11,	1101,	11,	1010,	110
2017-01-04 09:21:31 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:31 AI_Player.update()		11,	11,	1010,	101,	11,	111,	1001
2017-01-04 09:21:31 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:31 AI_Player.update()		101,	1001,	1010,	1110,	101,	1010,	101
2017-01-04 09:21:31 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:31 AI_Player.update()	update
2017-01-04 09:21:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:21:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:31 AI_Player.update()	update
2017-01-04 09:21:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:31 AI_Player.update()	Search took534ms
2017-01-04 09:21:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:31 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-04 09:21:31 AI_Player.update()		1100,	101,	11,	1101,	11,	101,	110
2017-01-04 09:21:31 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 09:21:31 AI_Player.update()		11,	11,	1010,	101,	11,	110,	1001
2017-01-04 09:21:31 AI_Player.update()		1110,	110,	1101,	110,	1011,	111,	1011
2017-01-04 09:21:31 AI_Player.update()		101,	1001,	1010,	1110,	101,	1010,	101
2017-01-04 09:21:31 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-04 09:21:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:21:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:32 AI_Player.update()	update
2017-01-04 09:21:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:32 AI_Player.update()	update
2017-01-04 09:21:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:32 AI_Player.update()	Search took107ms
2017-01-04 09:21:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:32 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 09:21:32 AI_Player.update()		1100,	101,	11,	1101,	11,	1010,	110
2017-01-04 09:21:32 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:32 AI_Player.update()		11,	11,	1010,	101,	11,	111,	1001
2017-01-04 09:21:32 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:32 AI_Player.update()		101,	1001,	1010,	1110,	101,	1010,	101
2017-01-04 09:21:32 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:32 AI_Player.update()	update
2017-01-04 09:21:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:32 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:32 AI_Player.update()	update
2017-01-04 09:21:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:33 AI_Player.update()	Search took522ms
2017-01-04 09:21:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:33 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 09:21:33 AI_Player.update()		1100,	101,	11,	1101,	11,	1010,	110
2017-01-04 09:21:33 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:33 AI_Player.update()		1001,	11,	11,	1010,	101,	11,	111
2017-01-04 09:21:33 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:33 AI_Player.update()		101,	1001,	1010,	1110,	101,	1010,	101
2017-01-04 09:21:33 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:33 AI_Player.update()	update
2017-01-04 09:21:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:33 AI_Player.update()	update
2017-01-04 09:21:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:33 AI_Player.update()	Search took254ms
2017-01-04 09:21:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:33 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 09:21:33 AI_Player.update()		1100,	1010,	11,	1101,	11,	1010,	110
2017-01-04 09:21:33 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:33 AI_Player.update()		1001,	1010,	11,	1010,	101,	11,	111
2017-01-04 09:21:33 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:33 AI_Player.update()		101,	110,	1010,	1110,	101,	1010,	101
2017-01-04 09:21:33 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:33 AI_Player.update()	update
2017-01-04 09:21:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:33 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:33 AI_Player.update()	update
2017-01-04 09:21:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:34 AI_Player.update()	Search took369ms
2017-01-04 09:21:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:34 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 09:21:34 AI_Player.update()		1100,	101,	11,	1101,	11,	1010,	110
2017-01-04 09:21:34 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:34 AI_Player.update()		1001,	11,	11,	1010,	101,	11,	111
2017-01-04 09:21:34 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:34 AI_Player.update()		101,	1001,	1010,	1110,	101,	1010,	101
2017-01-04 09:21:34 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:34 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:34 AI_Player.update()	update
2017-01-04 09:21:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:34 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:34 AI_Player.update()	update
2017-01-04 09:21:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:34 AI_Player.update()	Search took393ms
2017-01-04 09:21:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:34 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 09:21:34 AI_Player.update()		1100,	101,	11,	1101,	11,	1010,	110
2017-01-04 09:21:34 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:34 AI_Player.update()		1001,	11,	11,	1010,	101,	11,	111
2017-01-04 09:21:34 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:34 AI_Player.update()		1001,	1010,	1110,	101,	1010,	101,	101
2017-01-04 09:21:34 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:34 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:34 AI_Player.update()	update
2017-01-04 09:21:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:34 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:34 AI_Player.update()	update
2017-01-04 09:21:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:35 AI_Player.update()	Search took421ms
2017-01-04 09:21:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:35 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 09:21:35 AI_Player.update()		1100,	1010,	11,	1101,	11,	1010,	110
2017-01-04 09:21:35 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:35 AI_Player.update()		1001,	1010,	11,	1010,	101,	11,	111
2017-01-04 09:21:35 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:35 AI_Player.update()		1001,	110,	1110,	101,	1010,	101,	101
2017-01-04 09:21:35 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:35 AI_Player.update()	update
2017-01-04 09:21:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:21:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:35 AI_Player.update()	update
2017-01-04 09:21:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:35 AI_Player.update()	Search took70ms
2017-01-04 09:21:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:35 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 09:21:35 AI_Player.update()		1100,	1010,	11,	1101,	11,	1010,	110
2017-01-04 09:21:35 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:35 AI_Player.update()		1001,	1010,	11,	1010,	101,	11,	111
2017-01-04 09:21:35 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:35 AI_Player.update()		110,	1110,	101,	1010,	101,	101,	1001
2017-01-04 09:21:35 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:21:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:35 AI_Player.update()	update
2017-01-04 09:21:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:21:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:35 AI_Player.update()	update
2017-01-04 09:21:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:35 AI_Player.update()	Search took60ms
2017-01-04 09:21:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:35 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-04 09:21:35 AI_Player.update()		1100,	1010,	11,	1010,	11,	1010,	110
2017-01-04 09:21:35 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:35 AI_Player.update()		1001,	1010,	11,	110,	101,	11,	111
2017-01-04 09:21:35 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:21:35 AI_Player.update()		110,	1110,	101,	1101,	101,	101,	1001
2017-01-04 09:21:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:21:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:21:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:35 AI_Player.update()	update
2017-01-04 09:21:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:21:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:36 AI_Player.update()	update
2017-01-04 09:21:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:36 AI_Player.update()	Search took273ms
2017-01-04 09:21:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:36 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-04 09:21:36 AI_Player.update()		1100,	1100,	11,	1010,	11,	1010,	110
2017-01-04 09:21:36 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:36 AI_Player.update()		1001,	101,	11,	110,	101,	11,	111
2017-01-04 09:21:36 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:21:36 AI_Player.update()		110,	11,	101,	1101,	101,	101,	1001
2017-01-04 09:21:36 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1001,	1001
2017-01-04 09:21:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:36 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:21:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:36 AI_Player.update()	update
2017-01-04 09:21:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:36 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:21:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:36 AI_Player.update()	update
2017-01-04 09:21:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:36 AI_Player.update()	Search took109ms
2017-01-04 09:21:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:36 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-04 09:21:36 AI_Player.update()		1100,	1010,	11,	1010,	11,	1010,	110
2017-01-04 09:21:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:36 AI_Player.update()		1001,	1010,	11,	110,	101,	11,	111
2017-01-04 09:21:36 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:21:36 AI_Player.update()		110,	1010,	101,	1101,	101,	101,	1001
2017-01-04 09:21:36 AI_Player.update()		1100,	11,	1101,	11,	1101,	1001,	1001
2017-01-04 09:21:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:36 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:21:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:36 AI_Player.update()	update
2017-01-04 09:21:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:36 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:21:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:36 AI_Player.update()	update
2017-01-04 09:21:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:36 AI_Player.update()	Search took109ms
2017-01-04 09:21:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:36 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-04 09:21:36 AI_Player.update()		1100,	1010,	11,	1101,	11,	1010,	110
2017-01-04 09:21:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:36 AI_Player.update()		1001,	1010,	11,	1010,	101,	11,	111
2017-01-04 09:21:36 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:36 AI_Player.update()		110,	1010,	101,	1010,	101,	101,	1001
2017-01-04 09:21:36 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:36 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:21:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:37 AI_Player.update()	update
2017-01-04 09:21:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:21:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:37 AI_Player.update()	update
2017-01-04 09:21:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:37 AI_Player.update()	Search took95ms
2017-01-04 09:21:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:37 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-04 09:21:37 AI_Player.update()		1010,	11,	1101,	11,	1010,	110,	1100
2017-01-04 09:21:37 AI_Player.update()		1110,	1100,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:37 AI_Player.update()		1001,	1010,	11,	1010,	101,	11,	111
2017-01-04 09:21:37 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:37 AI_Player.update()		110,	1010,	101,	1010,	101,	101,	1001
2017-01-04 09:21:37 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:21:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:37 AI_Player.update()	update
2017-01-04 09:21:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:21:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:37 AI_Player.update()	update
2017-01-04 09:21:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:37 AI_Player.update()	Search took95ms
2017-01-04 09:21:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:37 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-04 09:21:37 AI_Player.update()		1010,	1110,	1101,	11,	1010,	110,	1100
2017-01-04 09:21:37 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 09:21:37 AI_Player.update()		1001,	1100,	11,	1010,	101,	11,	111
2017-01-04 09:21:37 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 09:21:37 AI_Player.update()		110,	101,	101,	1010,	101,	101,	1001
2017-01-04 09:21:37 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:21:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:37 AI_Player.update()	update
2017-01-04 09:21:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:37 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:21:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:37 AI_Player.update()	update
2017-01-04 09:21:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:38 AI_Player.update()	Search took285ms
2017-01-04 09:21:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:38 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-04 09:21:38 AI_Player.update()		1010,	1110,	1101,	11,	1010,	110,	1100
2017-01-04 09:21:38 AI_Player.update()		1110,	11,	1110,	11,	111,	110,	1011
2017-01-04 09:21:38 AI_Player.update()		1001,	1100,	11,	1010,	101,	11,	111
2017-01-04 09:21:38 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:21:38 AI_Player.update()		110,	101,	101,	110,	101,	101,	1001
2017-01-04 09:21:38 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:21:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:38 AI_Player.update()	update
2017-01-04 09:21:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:21:38 AI_Player.update()	Player b has won!
2017-01-04 09:21:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:38 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:21:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:38 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:21:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:38 AI_Player.update()	update
2017-01-04 09:21:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:38 AI_Player.update()	Search took67ms
2017-01-04 09:21:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:38 AI_Player.update()		110,	101,	111,	1101,	111,	1001,	11
2017-01-04 09:21:38 AI_Player.update()		101,	1001,	1010,	101,	1101,	1100,	1001
2017-01-04 09:21:38 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 09:21:38 AI_Player.update()		1001,	110,	1001,	111,	1001,	101,	1100
2017-01-04 09:21:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1110,	1011
2017-01-04 09:21:38 AI_Player.update()		110,	1001,	11,	1001,	110,	101,	1110
2017-01-04 09:21:38 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 09:21:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:38 AI_Player.update()	update
2017-01-04 09:21:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:38 AI_Player.update()	update
2017-01-04 09:21:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:38 AI_Player.update()	Search took117ms
2017-01-04 09:21:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:38 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-04 09:21:38 AI_Player.update()		101,	1001,	1010,	101,	1101,	101,	1001
2017-01-04 09:21:38 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 09:21:38 AI_Player.update()		1001,	110,	1001,	111,	1001,	1110,	1100
2017-01-04 09:21:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 09:21:38 AI_Player.update()		110,	1001,	11,	1001,	110,	101,	1110
2017-01-04 09:21:38 AI_Player.update()		1100,	110,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:38 AI_Player.update()	update
2017-01-04 09:21:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:38 AI_Player.update()	update
2017-01-04 09:21:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:39 AI_Player.update()	Search took340ms
2017-01-04 09:21:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:39 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 09:21:39 AI_Player.update()		101,	1001,	1010,	1001,	1101,	101,	1001
2017-01-04 09:21:39 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-04 09:21:39 AI_Player.update()		1001,	110,	1001,	1100,	1001,	1110,	1100
2017-01-04 09:21:39 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-04 09:21:39 AI_Player.update()		110,	1001,	11,	110,	110,	101,	1110
2017-01-04 09:21:39 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:39 AI_Player.update()	update
2017-01-04 09:21:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:39 AI_Player.update()	update
2017-01-04 09:21:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:39 AI_Player.update()	Search took505ms
2017-01-04 09:21:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:39 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 09:21:39 AI_Player.update()		1001,	1010,	1001,	1101,	101,	1001,	101
2017-01-04 09:21:39 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-04 09:21:39 AI_Player.update()		1001,	110,	1001,	1100,	1001,	1110,	1100
2017-01-04 09:21:39 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-04 09:21:39 AI_Player.update()		110,	1001,	11,	110,	110,	101,	1110
2017-01-04 09:21:39 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:40 AI_Player.update()	update
2017-01-04 09:21:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:21:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:40 AI_Player.update()	update
2017-01-04 09:21:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:40 AI_Player.update()	Search took227ms
2017-01-04 09:21:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:40 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-04 09:21:40 AI_Player.update()		1001,	1010,	1001,	101,	101,	1001,	101
2017-01-04 09:21:40 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 09:21:40 AI_Player.update()		1001,	110,	1001,	111,	1001,	1110,	1100
2017-01-04 09:21:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 09:21:40 AI_Player.update()		110,	1001,	11,	1001,	110,	101,	1110
2017-01-04 09:21:40 AI_Player.update()		1100,	110,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:21:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:40 AI_Player.update()	update
2017-01-04 09:21:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:40 AI_Player.update()	update
2017-01-04 09:21:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:40 AI_Player.update()	Search took82ms
2017-01-04 09:21:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:40 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-04 09:21:40 AI_Player.update()		1001,	1010,	1001,	1101,	101,	1001,	101
2017-01-04 09:21:40 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:21:40 AI_Player.update()		1001,	110,	1001,	1101,	1001,	1110,	1100
2017-01-04 09:21:40 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-04 09:21:40 AI_Player.update()		110,	1001,	11,	1100,	110,	101,	1110
2017-01-04 09:21:40 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1001,	1001
2017-01-04 09:21:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:40 AI_Player.update()	update
2017-01-04 09:21:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:40 AI_Player.update()	update
2017-01-04 09:21:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:40 AI_Player.update()	Search took117ms
2017-01-04 09:21:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:40 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-04 09:21:40 AI_Player.update()		1001,	1010,	1001,	1101,	101,	1001,	101
2017-01-04 09:21:40 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:21:40 AI_Player.update()		110,	1001,	1101,	1001,	1110,	1100,	1001
2017-01-04 09:21:40 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-04 09:21:40 AI_Player.update()		110,	1001,	11,	1100,	110,	101,	1110
2017-01-04 09:21:40 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1001,	1001
2017-01-04 09:21:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:40 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:41 AI_Player.update()	update
2017-01-04 09:21:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:21:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:41 AI_Player.update()	update
2017-01-04 09:21:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:41 AI_Player.update()	Search took367ms
2017-01-04 09:21:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:41 AI_Player.update()		110,	1010,	111,	110,	111,	1100,	11
2017-01-04 09:21:41 AI_Player.update()		1001,	1001,	1001,	1101,	101,	1001,	101
2017-01-04 09:21:41 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:21:41 AI_Player.update()		110,	11,	1101,	1001,	1110,	1100,	1001
2017-01-04 09:21:41 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-04 09:21:41 AI_Player.update()		110,	110,	11,	1100,	110,	101,	1110
2017-01-04 09:21:41 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-04 09:21:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:21:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:41 AI_Player.update()	update
2017-01-04 09:21:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:41 AI_Player.update()	update
2017-01-04 09:21:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:42 AI_Player.update()	Search took363ms
2017-01-04 09:21:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:42 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-04 09:21:42 AI_Player.update()		1001,	1001,	1001,	1101,	101,	1001,	101
2017-01-04 09:21:42 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 09:21:42 AI_Player.update()		110,	1001,	1101,	1001,	1110,	1100,	1001
2017-01-04 09:21:42 AI_Player.update()		1110,	110,	1101,	111,	1011,	101,	1011
2017-01-04 09:21:42 AI_Player.update()		110,	101,	11,	1100,	110,	101,	1110
2017-01-04 09:21:42 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-04 09:21:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:42 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:42 AI_Player.update()	update
2017-01-04 09:21:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:42 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:42 AI_Player.update()	update
2017-01-04 09:21:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:42 AI_Player.update()	Search took336ms
2017-01-04 09:21:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:42 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-04 09:21:42 AI_Player.update()		1001,	11,	1001,	1101,	101,	1001,	101
2017-01-04 09:21:42 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:21:42 AI_Player.update()		110,	110,	1101,	1001,	1110,	1100,	1001
2017-01-04 09:21:42 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-04 09:21:42 AI_Player.update()		110,	1010,	11,	1100,	110,	101,	1110
2017-01-04 09:21:42 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-04 09:21:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:42 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:42 AI_Player.update()	update
2017-01-04 09:21:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:42 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:42 AI_Player.update()	update
2017-01-04 09:21:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:43 AI_Player.update()	Search took575ms
2017-01-04 09:21:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:43 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 09:21:43 AI_Player.update()		1001,	11,	1001,	1101,	101,	1100,	101
2017-01-04 09:21:43 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-04 09:21:43 AI_Player.update()		110,	110,	1101,	1001,	1110,	101,	1001
2017-01-04 09:21:43 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 09:21:43 AI_Player.update()		110,	1010,	11,	1100,	110,	101,	1110
2017-01-04 09:21:43 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-04 09:21:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:43 AI_Player.update()	update
2017-01-04 09:21:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:21:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:43 AI_Player.update()	update
2017-01-04 09:21:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:44 AI_Player.update()	Search took467ms
2017-01-04 09:21:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:44 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 09:21:44 AI_Player.update()		1001,	1001,	1001,	1101,	101,	1100,	101
2017-01-04 09:21:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-04 09:21:44 AI_Player.update()		110,	1001,	1101,	1001,	1110,	101,	1001
2017-01-04 09:21:44 AI_Player.update()		1110,	110,	1101,	111,	1011,	1100,	1011
2017-01-04 09:21:44 AI_Player.update()		110,	101,	11,	1100,	110,	101,	1110
2017-01-04 09:21:44 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 09:21:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:21:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:44 AI_Player.update()	update
2017-01-04 09:21:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:44 AI_Player.update()	update
2017-01-04 09:21:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:44 AI_Player.update()	Search took176ms
2017-01-04 09:21:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:44 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 09:21:44 AI_Player.update()		1001,	1001,	1001,	1101,	101,	1100,	101
2017-01-04 09:21:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-04 09:21:44 AI_Player.update()		1001,	110,	1001,	1101,	1001,	1110,	101
2017-01-04 09:21:44 AI_Player.update()		1110,	110,	1101,	111,	1011,	1100,	1011
2017-01-04 09:21:44 AI_Player.update()		110,	101,	11,	1100,	110,	101,	1110
2017-01-04 09:21:44 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 09:21:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:44 AI_Player.update()	update
2017-01-04 09:21:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:44 AI_Player.update()	update
2017-01-04 09:21:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:44 AI_Player.update()	Search took92ms
2017-01-04 09:21:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:44 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-04 09:21:44 AI_Player.update()		1001,	1001,	1001,	1101,	101,	1100,	101
2017-01-04 09:21:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-04 09:21:44 AI_Player.update()		1001,	110,	1001,	1101,	1001,	1110,	101
2017-01-04 09:21:44 AI_Player.update()		1110,	110,	1101,	111,	1011,	1100,	1011
2017-01-04 09:21:44 AI_Player.update()		101,	11,	1100,	110,	101,	1110,	110
2017-01-04 09:21:44 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 09:21:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:44 AI_Player.update()	update
2017-01-04 09:21:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:44 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:45 AI_Player.update()	update
2017-01-04 09:21:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:45 AI_Player.update()	Search took95ms
2017-01-04 09:21:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:45 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-04 09:21:45 AI_Player.update()		1001,	1001,	1001,	1101,	101,	1001,	101
2017-01-04 09:21:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 09:21:45 AI_Player.update()		1001,	110,	1001,	1101,	1001,	1100,	101
2017-01-04 09:21:45 AI_Player.update()		1110,	110,	1101,	111,	1011,	1110,	1011
2017-01-04 09:21:45 AI_Player.update()		101,	11,	1100,	110,	101,	101,	110
2017-01-04 09:21:45 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-04 09:21:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:45 AI_Player.update()	update
2017-01-04 09:21:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:45 AI_Player.update()	update
2017-01-04 09:21:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:45 AI_Player.update()	Search took82ms
2017-01-04 09:21:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:45 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-04 09:21:45 AI_Player.update()		1001,	1001,	1001,	110,	101,	1001,	101
2017-01-04 09:21:45 AI_Player.update()		1110,	11,	1110,	1101,	111,	1110,	1011
2017-01-04 09:21:45 AI_Player.update()		1001,	110,	1001,	101,	1001,	1100,	101
2017-01-04 09:21:45 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1110,	1011
2017-01-04 09:21:45 AI_Player.update()		101,	11,	1100,	111,	101,	101,	110
2017-01-04 09:21:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:45 AI_Player.update()	update
2017-01-04 09:21:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:45 AI_Player.update()	update
2017-01-04 09:21:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:45 AI_Player.update()	Search took81ms
2017-01-04 09:21:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:45 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-04 09:21:45 AI_Player.update()		1001,	1001,	1001,	110,	101,	1001,	101
2017-01-04 09:21:45 AI_Player.update()		1110,	11,	1110,	1101,	111,	1110,	1011
2017-01-04 09:21:45 AI_Player.update()		110,	1001,	101,	1001,	1100,	101,	1001
2017-01-04 09:21:45 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1110,	1011
2017-01-04 09:21:45 AI_Player.update()		101,	11,	1100,	111,	101,	101,	110
2017-01-04 09:21:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 09:21:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:45 AI_Player.update()	update
2017-01-04 09:21:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:45 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:45 AI_Player.update()	update
2017-01-04 09:21:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:46 AI_Player.update()	Search took76ms
2017-01-04 09:21:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-04 09:21:46 AI_Player.update()		1001,	1001,	1001,	1001,	101,	1001,	101
2017-01-04 09:21:46 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 09:21:46 AI_Player.update()		110,	1001,	101,	1101,	1100,	101,	1001
2017-01-04 09:21:46 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-04 09:21:46 AI_Player.update()		101,	11,	1100,	1101,	101,	101,	110
2017-01-04 09:21:46 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 09:21:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()	update
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()	update
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:46 AI_Player.update()	Search took54ms
2017-01-04 09:21:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-04 09:21:46 AI_Player.update()		1001,	1001,	1001,	101,	1001,	101,	1001
2017-01-04 09:21:46 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 09:21:46 AI_Player.update()		110,	1001,	101,	1101,	1100,	101,	1001
2017-01-04 09:21:46 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-04 09:21:46 AI_Player.update()		101,	11,	1100,	1101,	101,	101,	110
2017-01-04 09:21:46 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 09:21:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()	update
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()	update
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:46 AI_Player.update()	Search took91ms
2017-01-04 09:21:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-04 09:21:46 AI_Player.update()		1001,	1001,	1001,	101,	1001,	101,	1001
2017-01-04 09:21:46 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 09:21:46 AI_Player.update()		110,	1001,	101,	1101,	1100,	101,	1001
2017-01-04 09:21:46 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-04 09:21:46 AI_Player.update()		110,	101,	11,	1100,	1101,	101,	101
2017-01-04 09:21:46 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 09:21:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()	update
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()	update
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:46 AI_Player.update()	Search took109ms
2017-01-04 09:21:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 09:21:46 AI_Player.update()		1001,	1001,	1001,	101,	1001,	1110,	1001
2017-01-04 09:21:46 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 09:21:46 AI_Player.update()		110,	1001,	101,	1101,	1100,	1110,	1001
2017-01-04 09:21:46 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 09:21:46 AI_Player.update()		110,	101,	11,	1100,	1101,	1001,	101
2017-01-04 09:21:46 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1100,	1001
2017-01-04 09:21:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:46 AI_Player.update()	update
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:46 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:47 AI_Player.update()	update
2017-01-04 09:21:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:47 AI_Player.update()	Search took128ms
2017-01-04 09:21:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:47 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 09:21:47 AI_Player.update()		1001,	11,	1001,	101,	1001,	1110,	1001
2017-01-04 09:21:47 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:21:47 AI_Player.update()		110,	110,	101,	1101,	1100,	1110,	1001
2017-01-04 09:21:47 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-04 09:21:47 AI_Player.update()		110,	1010,	11,	1100,	1101,	1001,	101
2017-01-04 09:21:47 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1100,	1001
2017-01-04 09:21:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:47 AI_Player.update()	update
2017-01-04 09:21:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:21:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:47 AI_Player.update()	update
2017-01-04 09:21:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:47 AI_Player.update()	Search took188ms
2017-01-04 09:21:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:47 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-04 09:21:47 AI_Player.update()		1001,	1001,	11,	1001,	101,	1001,	1110
2017-01-04 09:21:47 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:21:47 AI_Player.update()		110,	110,	101,	1101,	1100,	1110,	1001
2017-01-04 09:21:47 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-04 09:21:47 AI_Player.update()		110,	1010,	11,	1100,	1101,	1001,	101
2017-01-04 09:21:47 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1100,	1001
2017-01-04 09:21:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:21:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:47 AI_Player.update()	update
2017-01-04 09:21:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:47 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:21:47 AI_Player.update()	Player a has won!
2017-01-04 09:21:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:47 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:21:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:47 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:21:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:47 AI_Player.update()	update
2017-01-04 09:21:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:47 AI_Player.update()	Search took45ms
2017-01-04 09:21:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:47 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:47 AI_Player.update()		1100,	1100,	110,	11,	1001,	1110,	101
2017-01-04 09:21:47 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1011,	1011
2017-01-04 09:21:47 AI_Player.update()		11,	1110,	101,	1100,	110,	1010,	101
2017-01-04 09:21:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:47 AI_Player.update()		1001,	110,	101,	11,	101,	1011,	101
2017-01-04 09:21:47 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:47 AI_Player.update()	update
2017-01-04 09:21:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:48 AI_Player.update()	update
2017-01-04 09:21:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:48 AI_Player.update()	Search took57ms
2017-01-04 09:21:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:48 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:48 AI_Player.update()		101,	1100,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:48 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1011,	1011
2017-01-04 09:21:48 AI_Player.update()		11,	1110,	101,	1100,	110,	1010,	101
2017-01-04 09:21:48 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:48 AI_Player.update()		1001,	110,	101,	11,	101,	1011,	101
2017-01-04 09:21:48 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:48 AI_Player.update()	update
2017-01-04 09:21:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:21:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:48 AI_Player.update()	update
2017-01-04 09:21:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:48 AI_Player.update()	Search took63ms
2017-01-04 09:21:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:48 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-04 09:21:48 AI_Player.update()		101,	1100,	1100,	110,	11,	1010,	1110
2017-01-04 09:21:48 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-04 09:21:48 AI_Player.update()		11,	1110,	101,	1100,	110,	1011,	101
2017-01-04 09:21:48 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:21:48 AI_Player.update()		1001,	110,	101,	11,	101,	1001,	101
2017-01-04 09:21:48 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1011,	1001
2017-01-04 09:21:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:21:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:48 AI_Player.update()	update
2017-01-04 09:21:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:48 AI_Player.update()	update
2017-01-04 09:21:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:48 AI_Player.update()	Search took60ms
2017-01-04 09:21:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:48 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-04 09:21:48 AI_Player.update()		101,	1100,	1100,	110,	11,	1010,	1110
2017-01-04 09:21:48 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1001,	1011
2017-01-04 09:21:48 AI_Player.update()		101,	11,	1110,	101,	1100,	110,	1011
2017-01-04 09:21:48 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:21:48 AI_Player.update()		1001,	110,	101,	11,	101,	1001,	101
2017-01-04 09:21:48 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1011,	1001
2017-01-04 09:21:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:48 AI_Player.update()	update
2017-01-04 09:21:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:48 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:48 AI_Player.update()	update
2017-01-04 09:21:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:49 AI_Player.update()	Search took226ms
2017-01-04 09:21:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:49 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-04 09:21:49 AI_Player.update()		101,	1100,	1100,	1100,	11,	1010,	1110
2017-01-04 09:21:49 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-04 09:21:49 AI_Player.update()		101,	11,	1110,	101,	1100,	110,	1011
2017-01-04 09:21:49 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:21:49 AI_Player.update()		1001,	110,	101,	1100,	101,	1001,	101
2017-01-04 09:21:49 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 09:21:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:49 AI_Player.update()	update
2017-01-04 09:21:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:21:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:49 AI_Player.update()	update
2017-01-04 09:21:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:49 AI_Player.update()	Search took478ms
2017-01-04 09:21:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:49 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 09:21:49 AI_Player.update()		101,	1100,	1100,	1100,	11,	1001,	1110
2017-01-04 09:21:49 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-04 09:21:49 AI_Player.update()		101,	11,	1110,	101,	1100,	1010,	1011
2017-01-04 09:21:49 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 09:21:49 AI_Player.update()		1001,	110,	101,	1100,	101,	1011,	101
2017-01-04 09:21:49 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:21:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:21:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:49 AI_Player.update()	update
2017-01-04 09:21:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:50 AI_Player.update()	update
2017-01-04 09:21:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:50 AI_Player.update()	Search took408ms
2017-01-04 09:21:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:50 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:50 AI_Player.update()		101,	1100,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:50 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:50 AI_Player.update()		101,	11,	1110,	101,	1100,	1010,	1011
2017-01-04 09:21:50 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:50 AI_Player.update()		1001,	110,	101,	11,	101,	1011,	101
2017-01-04 09:21:50 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:50 AI_Player.update()	update
2017-01-04 09:21:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:21:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:50 AI_Player.update()	update
2017-01-04 09:21:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:50 AI_Player.update()	Search took234ms
2017-01-04 09:21:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:50 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:50 AI_Player.update()		101,	1100,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:50 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:50 AI_Player.update()		101,	11,	1110,	101,	1100,	1010,	1011
2017-01-04 09:21:50 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:50 AI_Player.update()		110,	101,	11,	101,	1011,	101,	1001
2017-01-04 09:21:50 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:21:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:50 AI_Player.update()	update
2017-01-04 09:21:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:51 AI_Player.update()	update
2017-01-04 09:21:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:51 AI_Player.update()	Search took486ms
2017-01-04 09:21:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:51 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:51 AI_Player.update()		101,	1100,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:51 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:51 AI_Player.update()		1011,	101,	11,	1110,	101,	1100,	1010
2017-01-04 09:21:51 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:51 AI_Player.update()		110,	101,	11,	101,	1011,	101,	1001
2017-01-04 09:21:51 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:21:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:51 AI_Player.update()	update
2017-01-04 09:21:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:51 AI_Player.update()	update
2017-01-04 09:21:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:52 AI_Player.update()	Search took498ms
2017-01-04 09:21:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:52 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:52 AI_Player.update()		101,	1100,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:52 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:52 AI_Player.update()		101,	11,	1110,	101,	1100,	1010,	1011
2017-01-04 09:21:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:52 AI_Player.update()		110,	101,	11,	101,	1011,	101,	1001
2017-01-04 09:21:52 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:21:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:52 AI_Player.update()	update
2017-01-04 09:21:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:52 AI_Player.update()	update
2017-01-04 09:21:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:52 AI_Player.update()	Search took94ms
2017-01-04 09:21:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:52 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:52 AI_Player.update()		101,	1100,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:52 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:52 AI_Player.update()		1011,	101,	11,	1110,	101,	1100,	1010
2017-01-04 09:21:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:52 AI_Player.update()		110,	101,	11,	101,	1011,	101,	1001
2017-01-04 09:21:52 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:52 AI_Player.update()	update
2017-01-04 09:21:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:52 AI_Player.update()	update
2017-01-04 09:21:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:52 AI_Player.update()	Search took79ms
2017-01-04 09:21:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:52 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:52 AI_Player.update()		101,	1100,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:52 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:52 AI_Player.update()		101,	11,	1110,	101,	1100,	1010,	1011
2017-01-04 09:21:52 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:52 AI_Player.update()		110,	101,	11,	101,	1011,	101,	1001
2017-01-04 09:21:52 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:52 AI_Player.update()	update
2017-01-04 09:21:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:52 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:53 AI_Player.update()	update
2017-01-04 09:21:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:53 AI_Player.update()	Search took231ms
2017-01-04 09:21:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:53 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:21:53 AI_Player.update()		101,	1001,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:53 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:53 AI_Player.update()		101,	101,	1110,	101,	1100,	1010,	1011
2017-01-04 09:21:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:53 AI_Player.update()		110,	101,	11,	101,	1011,	101,	1001
2017-01-04 09:21:53 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:21:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:53 AI_Player.update()	update
2017-01-04 09:21:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:21:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:53 AI_Player.update()	update
2017-01-04 09:21:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:53 AI_Player.update()	Search took50ms
2017-01-04 09:21:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:53 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:53 AI_Player.update()		101,	1100,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:53 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:53 AI_Player.update()		101,	11,	1110,	101,	1100,	1010,	1011
2017-01-04 09:21:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:53 AI_Player.update()		110,	101,	11,	101,	1011,	101,	1001
2017-01-04 09:21:53 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:53 AI_Player.update()	update
2017-01-04 09:21:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:53 AI_Player.update()	update
2017-01-04 09:21:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:53 AI_Player.update()	Search took210ms
2017-01-04 09:21:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:53 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:21:53 AI_Player.update()		101,	1001,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:53 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:53 AI_Player.update()		101,	101,	1110,	101,	1100,	1010,	1011
2017-01-04 09:21:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:53 AI_Player.update()		110,	101,	11,	101,	1011,	101,	1001
2017-01-04 09:21:53 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:53 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:54 AI_Player.update()	update
2017-01-04 09:21:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:54 AI_Player.update()	update
2017-01-04 09:21:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:54 AI_Player.update()	Search took76ms
2017-01-04 09:21:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:54 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:54 AI_Player.update()		101,	1100,	1100,	110,	11,	1001,	1110
2017-01-04 09:21:54 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:54 AI_Player.update()		101,	11,	1110,	101,	1100,	1010,	1011
2017-01-04 09:21:54 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:54 AI_Player.update()		110,	101,	11,	101,	1011,	101,	1001
2017-01-04 09:21:54 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:54 AI_Player.update()	update
2017-01-04 09:21:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:54 AI_Player.update()	update
2017-01-04 09:21:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:54 AI_Player.update()	Search took205ms
2017-01-04 09:21:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:54 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:21:54 AI_Player.update()		1110,	101,	1100,	1100,	110,	11,	1001
2017-01-04 09:21:54 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:21:54 AI_Player.update()		101,	11,	1110,	101,	1100,	1010,	1011
2017-01-04 09:21:54 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:54 AI_Player.update()		110,	101,	11,	101,	1011,	101,	1001
2017-01-04 09:21:54 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:21:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:21:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:54 AI_Player.update()	update
2017-01-04 09:21:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:54 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:21:54 AI_Player.update()	Player a has won!
2017-01-04 09:21:54 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:54 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:21:54 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:21:54 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:21:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:54 AI_Player.update()	update
2017-01-04 09:21:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:54 AI_Player.update()	Search took63ms
2017-01-04 09:21:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:54 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-04 09:21:54 AI_Player.update()		1001,	1010,	101,	1100,	1100,	111,	101
2017-01-04 09:21:54 AI_Player.update()		1110,	1101,	1110,	11,	111,	101,	1011
2017-01-04 09:21:54 AI_Player.update()		110,	1100,	11,	1001,	101,	1101,	1001
2017-01-04 09:21:54 AI_Player.update()		1110,	101,	1101,	11,	1011,	1110,	1011
2017-01-04 09:21:54 AI_Player.update()		1010,	11,	1101,	1101,	101,	111,	1010
2017-01-04 09:21:54 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:55 AI_Player.update()	update
2017-01-04 09:21:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:55 AI_Player.update()	update
2017-01-04 09:21:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:55 AI_Player.update()	Search took41ms
2017-01-04 09:21:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:55 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:21:55 AI_Player.update()		1001,	1010,	101,	1100,	1100,	101,	101
2017-01-04 09:21:55 AI_Player.update()		1110,	1101,	1110,	11,	111,	1101,	1011
2017-01-04 09:21:55 AI_Player.update()		110,	1100,	11,	1001,	101,	1110,	1001
2017-01-04 09:21:55 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-04 09:21:55 AI_Player.update()		1010,	11,	1101,	1101,	101,	1001,	1010
2017-01-04 09:21:55 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:55 AI_Player.update()	update
2017-01-04 09:21:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:55 AI_Player.update()	update
2017-01-04 09:21:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:55 AI_Player.update()	Search took173ms
2017-01-04 09:21:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:55 AI_Player.update()		110,	1010,	111,	101,	111,	111,	11
2017-01-04 09:21:55 AI_Player.update()		1001,	1101,	101,	1100,	1100,	101,	101
2017-01-04 09:21:55 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-04 09:21:55 AI_Player.update()		110,	101,	11,	1001,	101,	1110,	1001
2017-01-04 09:21:55 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-04 09:21:55 AI_Player.update()		1010,	1010,	1101,	1101,	101,	1001,	1010
2017-01-04 09:21:55 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:55 AI_Player.update()	update
2017-01-04 09:21:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:55 AI_Player.update()	update
2017-01-04 09:21:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:55 AI_Player.update()	Search took157ms
2017-01-04 09:21:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:55 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-04 09:21:55 AI_Player.update()		1001,	1101,	101,	1100,	1100,	111,	101
2017-01-04 09:21:55 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-04 09:21:55 AI_Player.update()		110,	101,	11,	1001,	101,	1101,	1001
2017-01-04 09:21:55 AI_Player.update()		1110,	11,	1101,	11,	1011,	1110,	1011
2017-01-04 09:21:55 AI_Player.update()		1010,	1010,	1101,	1101,	101,	111,	1010
2017-01-04 09:21:55 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:21:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:56 AI_Player.update()	update
2017-01-04 09:21:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:21:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:56 AI_Player.update()	update
2017-01-04 09:21:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:56 AI_Player.update()	Search took379ms
2017-01-04 09:21:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:56 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-04 09:21:56 AI_Player.update()		1001,	1100,	101,	1100,	1100,	111,	101
2017-01-04 09:21:56 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 09:21:56 AI_Player.update()		110,	11,	11,	1001,	101,	1101,	1001
2017-01-04 09:21:56 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1110,	1011
2017-01-04 09:21:56 AI_Player.update()		1010,	11,	1101,	1101,	101,	111,	1010
2017-01-04 09:21:56 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:21:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:56 AI_Player.update()	update
2017-01-04 09:21:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:56 AI_Player.update()	update
2017-01-04 09:21:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:56 AI_Player.update()	Search took136ms
2017-01-04 09:21:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:56 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-04 09:21:56 AI_Player.update()		1001,	1100,	101,	1100,	1100,	111,	101
2017-01-04 09:21:56 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 09:21:56 AI_Player.update()		11,	11,	1001,	101,	1101,	1001,	110
2017-01-04 09:21:56 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1110,	1011
2017-01-04 09:21:56 AI_Player.update()		1010,	11,	1101,	1101,	101,	111,	1010
2017-01-04 09:21:56 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:56 AI_Player.update()	update
2017-01-04 09:21:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:56 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:57 AI_Player.update()	update
2017-01-04 09:21:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:57 AI_Player.update()	Search took192ms
2017-01-04 09:21:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:57 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-04 09:21:57 AI_Player.update()		1001,	101,	101,	1100,	1100,	111,	101
2017-01-04 09:21:57 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-04 09:21:57 AI_Player.update()		11,	1010,	1001,	101,	1101,	1001,	110
2017-01-04 09:21:57 AI_Player.update()		1110,	11,	1101,	11,	1011,	1110,	1011
2017-01-04 09:21:57 AI_Player.update()		1010,	1010,	1101,	1101,	101,	111,	1010
2017-01-04 09:21:57 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:21:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:57 AI_Player.update()	update
2017-01-04 09:21:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:57 AI_Player.update()	update
2017-01-04 09:21:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:57 AI_Player.update()	Search took103ms
2017-01-04 09:21:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:57 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-04 09:21:57 AI_Player.update()		1001,	101,	101,	101,	1100,	111,	101
2017-01-04 09:21:57 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:21:57 AI_Player.update()		11,	1010,	1001,	11,	1101,	1001,	110
2017-01-04 09:21:57 AI_Player.update()		1110,	11,	1101,	101,	1011,	1110,	1011
2017-01-04 09:21:57 AI_Player.update()		1010,	1010,	1101,	11,	101,	111,	1010
2017-01-04 09:21:57 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1001,	1001
2017-01-04 09:21:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:21:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:57 AI_Player.update()	update
2017-01-04 09:21:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:57 AI_Player.update()	update
2017-01-04 09:21:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:58 AI_Player.update()	Search took377ms
2017-01-04 09:21:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:58 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-04 09:21:58 AI_Player.update()		1001,	101,	101,	101,	1100,	1001,	101
2017-01-04 09:21:58 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-04 09:21:58 AI_Player.update()		11,	1010,	1001,	11,	1101,	101,	110
2017-01-04 09:21:58 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:58 AI_Player.update()		1010,	1010,	1101,	11,	101,	1110,	1010
2017-01-04 09:21:58 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	111,	1001
2017-01-04 09:21:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:21:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:58 AI_Player.update()	update
2017-01-04 09:21:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:58 AI_Player.update()	update
2017-01-04 09:21:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:58 AI_Player.update()	Search took127ms
2017-01-04 09:21:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:58 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-04 09:21:58 AI_Player.update()		1001,	101,	101,	101,	1100,	1001,	101
2017-01-04 09:21:58 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-04 09:21:58 AI_Player.update()		11,	1010,	1001,	11,	1101,	101,	110
2017-01-04 09:21:58 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 09:21:58 AI_Player.update()		1010,	1101,	11,	101,	1110,	1010,	1010
2017-01-04 09:21:58 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	111,	1001
2017-01-04 09:21:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:21:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:58 AI_Player.update()	update
2017-01-04 09:21:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:21:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:58 AI_Player.update()	update
2017-01-04 09:21:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:21:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:21:58 AI_Player.update()	Search took61ms
2017-01-04 09:21:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:58 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 09:21:58 AI_Player.update()		1001,	101,	101,	1010,	1100,	1001,	101
2017-01-04 09:21:58 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 09:21:58 AI_Player.update()		11,	1010,	1001,	1100,	1101,	101,	110
2017-01-04 09:21:58 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 09:21:58 AI_Player.update()		1010,	1101,	11,	101,	1110,	1010,	1010
2017-01-04 09:21:58 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 09:21:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:21:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:58 AI_Player.update()	update
2017-01-04 09:21:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:21:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:21:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:21:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:58 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:21:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:58 AI_Player.update()	update
2017-01-04 09:21:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:21:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:21:59 AI_Player.update()	Search took653ms
2017-01-04 09:21:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:21:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:59 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 09:21:59 AI_Player.update()		1001,	101,	101,	1010,	1100,	1001,	101
2017-01-04 09:21:59 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 09:21:59 AI_Player.update()		110,	11,	1010,	1001,	1100,	1101,	101
2017-01-04 09:21:59 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 09:21:59 AI_Player.update()		1010,	1101,	11,	101,	1110,	1010,	1010
2017-01-04 09:21:59 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 09:21:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:21:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:21:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:21:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:59 AI_Player.update()	update
2017-01-04 09:21:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:21:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:21:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:21:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:21:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:21:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:21:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:21:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:21:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:21:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:21:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:21:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:21:59 AI_Player.update()	update
2017-01-04 09:21:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:00 AI_Player.update()	Search took266ms
2017-01-04 09:22:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:00 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 09:22:00 AI_Player.update()		1001,	101,	101,	1010,	1100,	111,	101
2017-01-04 09:22:00 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-04 09:22:00 AI_Player.update()		110,	11,	1010,	1001,	1100,	1001,	101
2017-01-04 09:22:00 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 09:22:00 AI_Player.update()		1010,	1101,	11,	101,	1110,	111,	1010
2017-01-04 09:22:00 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:22:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:22:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:00 AI_Player.update()	update
2017-01-04 09:22:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:00 AI_Player.update()	update
2017-01-04 09:22:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:00 AI_Player.update()	Search took198ms
2017-01-04 09:22:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:00 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-04 09:22:00 AI_Player.update()		1001,	101,	101,	1010,	1100,	1101,	101
2017-01-04 09:22:00 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-04 09:22:00 AI_Player.update()		110,	11,	1010,	1001,	1100,	1010,	101
2017-01-04 09:22:00 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-04 09:22:00 AI_Player.update()		1010,	1101,	11,	101,	1110,	1001,	1010
2017-01-04 09:22:00 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:22:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:00 AI_Player.update()	update
2017-01-04 09:22:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:22:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:00 AI_Player.update()	update
2017-01-04 09:22:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:01 AI_Player.update()	Search took496ms
2017-01-04 09:22:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:01 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 09:22:01 AI_Player.update()		1001,	101,	101,	1010,	1100,	111,	101
2017-01-04 09:22:01 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-04 09:22:01 AI_Player.update()		110,	11,	1010,	1001,	1100,	1001,	101
2017-01-04 09:22:01 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 09:22:01 AI_Player.update()		1010,	1101,	11,	101,	1110,	111,	1010
2017-01-04 09:22:01 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:22:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:22:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:01 AI_Player.update()	update
2017-01-04 09:22:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:01 AI_Player.update()	update
2017-01-04 09:22:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:01 AI_Player.update()	Search took553ms
2017-01-04 09:22:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:01 AI_Player.update()		110,	1100,	111,	1101,	111,	1001,	11
2017-01-04 09:22:01 AI_Player.update()		1001,	101,	101,	1010,	1100,	1001,	101
2017-01-04 09:22:01 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 09:22:01 AI_Player.update()		110,	11,	1010,	1001,	1100,	1101,	101
2017-01-04 09:22:01 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 09:22:01 AI_Player.update()		1010,	1101,	11,	101,	1110,	1010,	1010
2017-01-04 09:22:01 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 09:22:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:01 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:02 AI_Player.update()	update
2017-01-04 09:22:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:02 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:02 AI_Player.update()	update
2017-01-04 09:22:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:02 AI_Player.update()	Search took224ms
2017-01-04 09:22:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:02 AI_Player.update()		110,	101,	111,	1101,	111,	1001,	11
2017-01-04 09:22:02 AI_Player.update()		1001,	11,	101,	1010,	1100,	1001,	101
2017-01-04 09:22:02 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 09:22:02 AI_Player.update()		110,	11,	1010,	1001,	1100,	1101,	101
2017-01-04 09:22:02 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1001,	1011
2017-01-04 09:22:02 AI_Player.update()		1010,	1101,	11,	101,	1110,	1010,	1010
2017-01-04 09:22:02 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-04 09:22:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:02 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:02 AI_Player.update()	update
2017-01-04 09:22:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:02 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:02 AI_Player.update()	update
2017-01-04 09:22:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:03 AI_Player.update()	Search took679ms
2017-01-04 09:22:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:03 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-04 09:22:03 AI_Player.update()		1001,	11,	101,	1010,	1100,	1001,	101
2017-01-04 09:22:03 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-04 09:22:03 AI_Player.update()		110,	11,	1010,	1001,	1100,	111,	101
2017-01-04 09:22:03 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1101,	1011
2017-01-04 09:22:03 AI_Player.update()		1010,	1101,	11,	101,	1110,	1001,	1010
2017-01-04 09:22:03 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 09:22:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:03 AI_Player.update()	update
2017-01-04 09:22:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:22:03 AI_Player.update()	Player b has won!
2017-01-04 09:22:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:03 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:22:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:03 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:22:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:03 AI_Player.update()	update
2017-01-04 09:22:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:03 AI_Player.update()	Search took90ms
2017-01-04 09:22:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:03 AI_Player.update()		110,	11,	111,	1110,	111,	1010,	11
2017-01-04 09:22:03 AI_Player.update()		11,	1010,	101,	1101,	101,	101,	101
2017-01-04 09:22:03 AI_Player.update()		1110,	1010,	1110,	111,	111,	11,	1011
2017-01-04 09:22:03 AI_Player.update()		1101,	1100,	1001,	110,	11,	1010,	11
2017-01-04 09:22:03 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:22:03 AI_Player.update()		110,	111,	11,	1001,	110,	1010,	1001
2017-01-04 09:22:03 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:22:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:03 AI_Player.update()	update
2017-01-04 09:22:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:03 AI_Player.update()	update
2017-01-04 09:22:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:03 AI_Player.update()	Search took25ms
2017-01-04 09:22:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:03 AI_Player.update()		110,	11,	111,	1110,	111,	101,	11
2017-01-04 09:22:03 AI_Player.update()		11,	1010,	101,	1101,	101,	11,	101
2017-01-04 09:22:03 AI_Player.update()		1110,	1010,	1110,	111,	111,	1010,	1011
2017-01-04 09:22:03 AI_Player.update()		1101,	1100,	1001,	110,	11,	1001,	11
2017-01-04 09:22:03 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:22:03 AI_Player.update()		110,	111,	11,	1001,	110,	11,	1001
2017-01-04 09:22:03 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:22:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:03 AI_Player.update()	update
2017-01-04 09:22:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:04 AI_Player.update()	update
2017-01-04 09:22:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:04 AI_Player.update()	Search took160ms
2017-01-04 09:22:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:04 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-04 09:22:04 AI_Player.update()		11,	1010,	101,	1110,	101,	11,	101
2017-01-04 09:22:04 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1010,	1011
2017-01-04 09:22:04 AI_Player.update()		1101,	1100,	1001,	111,	11,	1001,	11
2017-01-04 09:22:04 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-04 09:22:04 AI_Player.update()		110,	111,	11,	1010,	110,	11,	1001
2017-01-04 09:22:04 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1010,	1001
2017-01-04 09:22:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:04 AI_Player.update()	update
2017-01-04 09:22:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:04 AI_Player.update()	update
2017-01-04 09:22:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:04 AI_Player.update()	Search took203ms
2017-01-04 09:22:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:04 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:22:04 AI_Player.update()		11,	1010,	101,	1110,	101,	11,	101
2017-01-04 09:22:04 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-04 09:22:04 AI_Player.update()		1101,	1100,	1001,	111,	11,	1001,	11
2017-01-04 09:22:04 AI_Player.update()		1110,	111,	1101,	110,	1011,	1010,	1011
2017-01-04 09:22:04 AI_Player.update()		110,	1101,	11,	1010,	110,	11,	1001
2017-01-04 09:22:04 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-04 09:22:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:04 AI_Player.update()	update
2017-01-04 09:22:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:04 AI_Player.update()	update
2017-01-04 09:22:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:05 AI_Player.update()	Search took336ms
2017-01-04 09:22:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:05 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-04 09:22:05 AI_Player.update()		11,	1010,	101,	1110,	101,	1010,	101
2017-01-04 09:22:05 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1001,	1011
2017-01-04 09:22:05 AI_Player.update()		1101,	1100,	1001,	111,	11,	1010,	11
2017-01-04 09:22:05 AI_Player.update()		1110,	111,	1101,	110,	1011,	11,	1011
2017-01-04 09:22:05 AI_Player.update()		110,	1101,	11,	1010,	110,	1010,	1001
2017-01-04 09:22:05 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-04 09:22:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:05 AI_Player.update()	update
2017-01-04 09:22:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:05 AI_Player.update()	update
2017-01-04 09:22:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:05 AI_Player.update()	Search took247ms
2017-01-04 09:22:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:05 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-04 09:22:05 AI_Player.update()		11,	1100,	101,	1110,	101,	1010,	101
2017-01-04 09:22:05 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1001,	1011
2017-01-04 09:22:05 AI_Player.update()		1101,	111,	1001,	111,	11,	1010,	11
2017-01-04 09:22:05 AI_Player.update()		1110,	1101,	1101,	110,	1011,	11,	1011
2017-01-04 09:22:05 AI_Player.update()		110,	11,	11,	1010,	110,	1010,	1001
2017-01-04 09:22:05 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 09:22:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:05 AI_Player.update()	update
2017-01-04 09:22:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:22:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:05 AI_Player.update()	update
2017-01-04 09:22:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:06 AI_Player.update()	Search took207ms
2017-01-04 09:22:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:06 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-04 09:22:06 AI_Player.update()		11,	1100,	101,	1110,	101,	1010,	101
2017-01-04 09:22:06 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1001,	1011
2017-01-04 09:22:06 AI_Player.update()		1101,	111,	1001,	111,	11,	1010,	11
2017-01-04 09:22:06 AI_Player.update()		1110,	1101,	1101,	110,	1011,	11,	1011
2017-01-04 09:22:06 AI_Player.update()		1001,	110,	11,	11,	1010,	110,	1010
2017-01-04 09:22:06 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 09:22:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:22:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:06 AI_Player.update()	update
2017-01-04 09:22:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:06 AI_Player.update()	update
2017-01-04 09:22:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:06 AI_Player.update()	Search took440ms
2017-01-04 09:22:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:06 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-04 09:22:06 AI_Player.update()		101,	11,	1100,	101,	1110,	101,	1010
2017-01-04 09:22:06 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1001,	1011
2017-01-04 09:22:06 AI_Player.update()		1101,	111,	1001,	111,	11,	1010,	11
2017-01-04 09:22:06 AI_Player.update()		1110,	1101,	1101,	110,	1011,	11,	1011
2017-01-04 09:22:06 AI_Player.update()		1001,	110,	11,	11,	1010,	110,	1010
2017-01-04 09:22:06 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 09:22:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:06 AI_Player.update()	update
2017-01-04 09:22:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:06 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:06 AI_Player.update()	update
2017-01-04 09:22:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:07 AI_Player.update()	Search took291ms
2017-01-04 09:22:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:07 AI_Player.update()		110,	1010,	111,	1001,	111,	11,	11
2017-01-04 09:22:07 AI_Player.update()		101,	11,	1100,	1100,	1110,	101,	1010
2017-01-04 09:22:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-04 09:22:07 AI_Player.update()		1101,	111,	1001,	1101,	11,	1010,	11
2017-01-04 09:22:07 AI_Player.update()		1110,	1101,	1101,	111,	1011,	11,	1011
2017-01-04 09:22:07 AI_Player.update()		1001,	110,	11,	110,	1010,	110,	1010
2017-01-04 09:22:07 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 09:22:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:07 AI_Player.update()	update
2017-01-04 09:22:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:07 AI_Player.update()	update
2017-01-04 09:22:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:07 AI_Player.update()	Search took448ms
2017-01-04 09:22:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:07 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:22:07 AI_Player.update()		101,	11,	1100,	1100,	1110,	1001,	1010
2017-01-04 09:22:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:22:07 AI_Player.update()		1101,	111,	1001,	1101,	11,	11,	11
2017-01-04 09:22:07 AI_Player.update()		1110,	1101,	1101,	111,	1011,	110,	1011
2017-01-04 09:22:07 AI_Player.update()		1001,	110,	11,	110,	1010,	101,	1010
2017-01-04 09:22:07 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-04 09:22:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:07 AI_Player.update()	update
2017-01-04 09:22:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:22:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:08 AI_Player.update()	update
2017-01-04 09:22:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:08 AI_Player.update()	Search took437ms
2017-01-04 09:22:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:08 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:22:08 AI_Player.update()		101,	11,	1100,	101,	1110,	1001,	1010
2017-01-04 09:22:08 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-04 09:22:08 AI_Player.update()		1101,	111,	1001,	111,	11,	11,	11
2017-01-04 09:22:08 AI_Player.update()		1110,	1101,	1101,	110,	1011,	110,	1011
2017-01-04 09:22:08 AI_Player.update()		1001,	110,	11,	11,	1010,	101,	1010
2017-01-04 09:22:08 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 09:22:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:22:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:08 AI_Player.update()	update
2017-01-04 09:22:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:08 AI_Player.update()	update
2017-01-04 09:22:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:08 AI_Player.update()	Search took124ms
2017-01-04 09:22:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:08 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-04 09:22:08 AI_Player.update()		101,	1100,	1100,	101,	1110,	1001,	1010
2017-01-04 09:22:08 AI_Player.update()		1110,	111,	1110,	1101,	111,	1010,	1011
2017-01-04 09:22:08 AI_Player.update()		1101,	1101,	1001,	111,	11,	11,	11
2017-01-04 09:22:08 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-04 09:22:08 AI_Player.update()		1001,	1010,	11,	11,	1010,	101,	1010
2017-01-04 09:22:08 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 09:22:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:08 AI_Player.update()	update
2017-01-04 09:22:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:09 AI_Player.update()	update
2017-01-04 09:22:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:09 AI_Player.update()	Search took54ms
2017-01-04 09:22:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:09 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:22:09 AI_Player.update()		101,	11,	1100,	101,	1110,	1001,	1010
2017-01-04 09:22:09 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-04 09:22:09 AI_Player.update()		1101,	111,	1001,	111,	11,	11,	11
2017-01-04 09:22:09 AI_Player.update()		1110,	1101,	1101,	110,	1011,	110,	1011
2017-01-04 09:22:09 AI_Player.update()		1001,	110,	11,	11,	1010,	101,	1010
2017-01-04 09:22:09 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 09:22:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:09 AI_Player.update()	update
2017-01-04 09:22:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:09 AI_Player.update()	update
2017-01-04 09:22:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:09 AI_Player.update()	Search took156ms
2017-01-04 09:22:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:09 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:22:09 AI_Player.update()		11,	1100,	101,	1110,	1001,	1010,	101
2017-01-04 09:22:09 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-04 09:22:09 AI_Player.update()		1101,	111,	1001,	111,	11,	11,	11
2017-01-04 09:22:09 AI_Player.update()		1110,	1101,	1101,	110,	1011,	110,	1011
2017-01-04 09:22:09 AI_Player.update()		1001,	110,	11,	11,	1010,	101,	1010
2017-01-04 09:22:09 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 09:22:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:09 AI_Player.update()	update
2017-01-04 09:22:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:09 AI_Player.update()	update
2017-01-04 09:22:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:09 AI_Player.update()	Search took35ms
2017-01-04 09:22:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:09 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:22:09 AI_Player.update()		101,	11,	1100,	101,	1110,	1001,	1010
2017-01-04 09:22:09 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-04 09:22:09 AI_Player.update()		1101,	111,	1001,	111,	11,	11,	11
2017-01-04 09:22:09 AI_Player.update()		1110,	1101,	1101,	110,	1011,	110,	1011
2017-01-04 09:22:09 AI_Player.update()		1001,	110,	11,	11,	1010,	101,	1010
2017-01-04 09:22:09 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 09:22:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:09 AI_Player.update()	update
2017-01-04 09:22:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:09 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:09 AI_Player.update()	update
2017-01-04 09:22:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:10 AI_Player.update()	Search took286ms
2017-01-04 09:22:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:10 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-04 09:22:10 AI_Player.update()		101,	1100,	1100,	101,	1110,	1001,	1010
2017-01-04 09:22:10 AI_Player.update()		1110,	111,	1110,	1101,	111,	1010,	1011
2017-01-04 09:22:10 AI_Player.update()		1101,	1101,	1001,	111,	11,	11,	11
2017-01-04 09:22:10 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-04 09:22:10 AI_Player.update()		1001,	1010,	11,	11,	1010,	101,	1010
2017-01-04 09:22:10 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 09:22:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:10 AI_Player.update()	update
2017-01-04 09:22:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:22:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:10 AI_Player.update()	update
2017-01-04 09:22:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:10 AI_Player.update()	Search took85ms
2017-01-04 09:22:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:10 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:22:10 AI_Player.update()		101,	11,	1100,	101,	1110,	1001,	1010
2017-01-04 09:22:10 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-04 09:22:10 AI_Player.update()		1101,	111,	1001,	111,	11,	11,	11
2017-01-04 09:22:10 AI_Player.update()		1110,	1101,	1101,	110,	1011,	110,	1011
2017-01-04 09:22:10 AI_Player.update()		1001,	110,	11,	11,	1010,	101,	1010
2017-01-04 09:22:10 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 09:22:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:22:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:10 AI_Player.update()	update
2017-01-04 09:22:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:22:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:10 AI_Player.update()	update
2017-01-04 09:22:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:10 AI_Player.update()	Search took291ms
2017-01-04 09:22:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:10 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:22:10 AI_Player.update()		11,	1100,	101,	1110,	1001,	1010,	101
2017-01-04 09:22:10 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-04 09:22:10 AI_Player.update()		1101,	111,	1001,	111,	11,	11,	11
2017-01-04 09:22:10 AI_Player.update()		1110,	1101,	1101,	110,	1011,	110,	1011
2017-01-04 09:22:10 AI_Player.update()		1001,	110,	11,	11,	1010,	101,	1010
2017-01-04 09:22:10 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 09:22:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:10 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:22:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:11 AI_Player.update()	update
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:22:11 AI_Player.update()	Player b has won!
2017-01-04 09:22:11 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:11 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:22:11 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:11 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:22:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:11 AI_Player.update()	update
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:11 AI_Player.update()	Search took27ms
2017-01-04 09:22:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:11 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-04 09:22:11 AI_Player.update()		1101,	110,	101,	1001,	11,	1110,	101
2017-01-04 09:22:11 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:11 AI_Player.update()		1001,	11,	1010,	1011,	1010,	101,	1101
2017-01-04 09:22:11 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:22:11 AI_Player.update()		1101,	1010,	101,	110,	110,	11,	1100
2017-01-04 09:22:11 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-04 09:22:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:11 AI_Player.update()	update
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:11 AI_Player.update()	update
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:11 AI_Player.update()	Search took53ms
2017-01-04 09:22:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:11 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-04 09:22:11 AI_Player.update()		110,	101,	1001,	11,	1110,	101,	1101
2017-01-04 09:22:11 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:11 AI_Player.update()		1001,	11,	1010,	1011,	1010,	101,	1101
2017-01-04 09:22:11 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:22:11 AI_Player.update()		1101,	1010,	101,	110,	110,	11,	1100
2017-01-04 09:22:11 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-04 09:22:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:11 AI_Player.update()	update
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:11 AI_Player.update()	update
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:11 AI_Player.update()	Search took136ms
2017-01-04 09:22:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:11 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-04 09:22:11 AI_Player.update()		110,	1010,	1001,	11,	1110,	101,	1101
2017-01-04 09:22:11 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:11 AI_Player.update()		1001,	101,	1010,	1011,	1010,	101,	1101
2017-01-04 09:22:11 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:22:11 AI_Player.update()		1101,	1010,	101,	110,	110,	11,	1100
2017-01-04 09:22:11 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-04 09:22:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:11 AI_Player.update()	update
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:12 AI_Player.update()	update
2017-01-04 09:22:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:12 AI_Player.update()	Search took153ms
2017-01-04 09:22:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:12 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-04 09:22:12 AI_Player.update()		1010,	1001,	11,	1110,	101,	1101,	110
2017-01-04 09:22:12 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:12 AI_Player.update()		1001,	101,	1010,	1011,	1010,	101,	1101
2017-01-04 09:22:12 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:22:12 AI_Player.update()		1101,	1010,	101,	110,	110,	11,	1100
2017-01-04 09:22:12 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-04 09:22:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:12 AI_Player.update()	update
2017-01-04 09:22:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:12 AI_Player.update()	update
2017-01-04 09:22:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:12 AI_Player.update()	Search took268ms
2017-01-04 09:22:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:12 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-04 09:22:12 AI_Player.update()		1010,	11,	11,	1110,	101,	1101,	110
2017-01-04 09:22:12 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:12 AI_Player.update()		1001,	1010,	1010,	1011,	1010,	101,	1101
2017-01-04 09:22:12 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:22:12 AI_Player.update()		1101,	11,	101,	110,	110,	11,	1100
2017-01-04 09:22:12 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-04 09:22:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:12 AI_Player.update()	update
2017-01-04 09:22:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:12 AI_Player.update()	update
2017-01-04 09:22:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:13 AI_Player.update()	Search took232ms
2017-01-04 09:22:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:13 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-04 09:22:13 AI_Player.update()		1010,	101,	11,	1110,	101,	1101,	110
2017-01-04 09:22:13 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:13 AI_Player.update()		1001,	1010,	1010,	1011,	1010,	101,	1101
2017-01-04 09:22:13 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:22:13 AI_Player.update()		1101,	101,	101,	110,	110,	11,	1100
2017-01-04 09:22:13 AI_Player.update()		1100,	1001,	1101,	101,	1101,	11,	1001
2017-01-04 09:22:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:13 AI_Player.update()	update
2017-01-04 09:22:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:13 AI_Player.update()	update
2017-01-04 09:22:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:13 AI_Player.update()	Search took282ms
2017-01-04 09:22:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:13 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:22:13 AI_Player.update()		1010,	101,	11,	1010,	101,	1101,	110
2017-01-04 09:22:13 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-04 09:22:13 AI_Player.update()		1001,	1010,	1010,	1001,	1010,	101,	1101
2017-01-04 09:22:13 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-04 09:22:13 AI_Player.update()		1101,	101,	101,	101,	110,	11,	1100
2017-01-04 09:22:13 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-04 09:22:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:13 AI_Player.update()	update
2017-01-04 09:22:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:22:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:13 AI_Player.update()	update
2017-01-04 09:22:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:14 AI_Player.update()	Search took224ms
2017-01-04 09:22:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:14 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-04 09:22:14 AI_Player.update()		1010,	1010,	11,	1010,	101,	1101,	110
2017-01-04 09:22:14 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-04 09:22:14 AI_Player.update()		1001,	11,	1010,	1001,	1010,	101,	1101
2017-01-04 09:22:14 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-04 09:22:14 AI_Player.update()		1101,	1001,	101,	101,	110,	11,	1100
2017-01-04 09:22:14 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-04 09:22:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:14 AI_Player.update()	update
2017-01-04 09:22:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:14 AI_Player.update()	update
2017-01-04 09:22:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:14 AI_Player.update()	Search took84ms
2017-01-04 09:22:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:14 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-04 09:22:14 AI_Player.update()		1010,	1010,	11,	1010,	101,	1101,	110
2017-01-04 09:22:14 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-04 09:22:14 AI_Player.update()		1001,	11,	1010,	1001,	1010,	101,	1101
2017-01-04 09:22:14 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-04 09:22:14 AI_Player.update()		1001,	101,	101,	110,	11,	1100,	1101
2017-01-04 09:22:14 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-04 09:22:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:14 AI_Player.update()	update
2017-01-04 09:22:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:14 AI_Player.update()	update
2017-01-04 09:22:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:14 AI_Player.update()	Search took95ms
2017-01-04 09:22:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:14 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 09:22:14 AI_Player.update()		1010,	1010,	11,	1011,	101,	1101,	110
2017-01-04 09:22:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-04 09:22:14 AI_Player.update()		1001,	11,	1010,	110,	1010,	101,	1101
2017-01-04 09:22:14 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-04 09:22:14 AI_Player.update()		1001,	101,	101,	1100,	11,	1100,	1101
2017-01-04 09:22:14 AI_Player.update()		1100,	11,	1101,	1110,	1101,	11,	1001
2017-01-04 09:22:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:14 AI_Player.update()	update
2017-01-04 09:22:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:22:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:14 AI_Player.update()	update
2017-01-04 09:22:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:15 AI_Player.update()	Search took230ms
2017-01-04 09:22:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:15 AI_Player.update()		110,	101,	111,	1011,	111,	11,	11
2017-01-04 09:22:15 AI_Player.update()		1010,	1010,	11,	1001,	101,	1101,	110
2017-01-04 09:22:15 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-04 09:22:15 AI_Player.update()		1001,	11,	1010,	110,	1010,	101,	1101
2017-01-04 09:22:15 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:22:15 AI_Player.update()		1001,	101,	101,	1110,	11,	1100,	1101
2017-01-04 09:22:15 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-04 09:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:22:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:15 AI_Player.update()	update
2017-01-04 09:22:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:15 AI_Player.update()	update
2017-01-04 09:22:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:15 AI_Player.update()	Search took119ms
2017-01-04 09:22:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:15 AI_Player.update()		110,	101,	111,	1011,	111,	1101,	11
2017-01-04 09:22:15 AI_Player.update()		1010,	1010,	11,	1001,	101,	110,	110
2017-01-04 09:22:15 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 09:22:15 AI_Player.update()		1001,	11,	1010,	110,	1010,	1100,	1101
2017-01-04 09:22:15 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:22:15 AI_Player.update()		1001,	101,	101,	1110,	11,	11,	1101
2017-01-04 09:22:15 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-04 09:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:15 AI_Player.update()	update
2017-01-04 09:22:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:15 AI_Player.update()	update
2017-01-04 09:22:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:15 AI_Player.update()	Search took313ms
2017-01-04 09:22:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:15 AI_Player.update()		110,	101,	111,	1001,	111,	1101,	11
2017-01-04 09:22:15 AI_Player.update()		1010,	1010,	11,	110,	101,	110,	110
2017-01-04 09:22:15 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 09:22:15 AI_Player.update()		1001,	11,	1010,	1100,	1010,	1100,	1101
2017-01-04 09:22:15 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 09:22:15 AI_Player.update()		1001,	101,	101,	1010,	11,	11,	1101
2017-01-04 09:22:15 AI_Player.update()		1100,	11,	1101,	1011,	1101,	11,	1001
2017-01-04 09:22:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:16 AI_Player.update()	update
2017-01-04 09:22:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:22:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:16 AI_Player.update()	update
2017-01-04 09:22:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:16 AI_Player.update()	Search took295ms
2017-01-04 09:22:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:16 AI_Player.update()		110,	101,	111,	1001,	111,	1101,	11
2017-01-04 09:22:16 AI_Player.update()		1010,	1010,	11,	110,	101,	110,	110
2017-01-04 09:22:16 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 09:22:16 AI_Player.update()		11,	1010,	1100,	1010,	1100,	1101,	1001
2017-01-04 09:22:16 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 09:22:16 AI_Player.update()		1001,	101,	101,	1010,	11,	11,	1101
2017-01-04 09:22:16 AI_Player.update()		1100,	11,	1101,	1011,	1101,	11,	1001
2017-01-04 09:22:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:22:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:16 AI_Player.update()	update
2017-01-04 09:22:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:22:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:16 AI_Player.update()	update
2017-01-04 09:22:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:16 AI_Player.update()	Search took301ms
2017-01-04 09:22:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:16 AI_Player.update()		110,	1010,	111,	1001,	111,	1101,	11
2017-01-04 09:22:16 AI_Player.update()		1010,	1010,	11,	110,	101,	110,	110
2017-01-04 09:22:16 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-04 09:22:16 AI_Player.update()		11,	101,	1100,	1010,	1100,	1101,	1001
2017-01-04 09:22:16 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 09:22:16 AI_Player.update()		1001,	11,	101,	1010,	11,	11,	1101
2017-01-04 09:22:16 AI_Player.update()		1100,	101,	1101,	1011,	1101,	11,	1001
2017-01-04 09:22:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:22:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:17 AI_Player.update()	update
2017-01-04 09:22:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:22:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:17 AI_Player.update()	update
2017-01-04 09:22:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:17 AI_Player.update()	Search took408ms
2017-01-04 09:22:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:17 AI_Player.update()		110,	1010,	111,	1001,	111,	1101,	11
2017-01-04 09:22:17 AI_Player.update()		1010,	1010,	11,	110,	101,	110,	110
2017-01-04 09:22:17 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 09:22:17 AI_Player.update()		11,	101,	1100,	1010,	1100,	1101,	1001
2017-01-04 09:22:17 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1100,	1011
2017-01-04 09:22:17 AI_Player.update()		1001,	101,	101,	1010,	11,	11,	1101
2017-01-04 09:22:17 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-04 09:22:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:22:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:17 AI_Player.update()	update
2017-01-04 09:22:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:22:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:17 AI_Player.update()	update
2017-01-04 09:22:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:18 AI_Player.update()	Search took349ms
2017-01-04 09:22:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:18 AI_Player.update()		110,	1010,	111,	1001,	111,	1101,	11
2017-01-04 09:22:18 AI_Player.update()		1010,	1010,	11,	110,	101,	110,	110
2017-01-04 09:22:18 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 09:22:18 AI_Player.update()		101,	1100,	1010,	1100,	1101,	1001,	11
2017-01-04 09:22:18 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1100,	1011
2017-01-04 09:22:18 AI_Player.update()		1001,	101,	101,	1010,	11,	11,	1101
2017-01-04 09:22:18 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-04 09:22:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:22:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:18 AI_Player.update()	update
2017-01-04 09:22:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:18 AI_Player.update()	update
2017-01-04 09:22:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:18 AI_Player.update()	Search took260ms
2017-01-04 09:22:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:18 AI_Player.update()		110,	1010,	111,	1001,	111,	11,	11
2017-01-04 09:22:18 AI_Player.update()		1010,	1010,	11,	110,	101,	1101,	110
2017-01-04 09:22:18 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-04 09:22:18 AI_Player.update()		101,	1100,	1010,	1100,	1101,	101,	11
2017-01-04 09:22:18 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1001,	1011
2017-01-04 09:22:18 AI_Player.update()		1001,	101,	101,	1010,	11,	1100,	1101
2017-01-04 09:22:18 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-04 09:22:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:18 AI_Player.update()	update
2017-01-04 09:22:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:22:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:18 AI_Player.update()	update
2017-01-04 09:22:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:18 AI_Player.update()	Search took106ms
2017-01-04 09:22:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:18 AI_Player.update()		110,	1010,	111,	1001,	111,	11,	11
2017-01-04 09:22:18 AI_Player.update()		1010,	101,	11,	110,	101,	1101,	110
2017-01-04 09:22:18 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-04 09:22:18 AI_Player.update()		101,	11,	1010,	1100,	1101,	101,	11
2017-01-04 09:22:18 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1001,	1011
2017-01-04 09:22:18 AI_Player.update()		1001,	1010,	101,	1010,	11,	1100,	1101
2017-01-04 09:22:18 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-04 09:22:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:22:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:18 AI_Player.update()	update
2017-01-04 09:22:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:22:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:19 AI_Player.update()	update
2017-01-04 09:22:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:19 AI_Player.update()	Search took235ms
2017-01-04 09:22:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:19 AI_Player.update()		110,	1010,	111,	1011,	111,	11,	11
2017-01-04 09:22:19 AI_Player.update()		1010,	101,	11,	1001,	101,	1101,	110
2017-01-04 09:22:19 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-04 09:22:19 AI_Player.update()		101,	11,	1010,	110,	1101,	101,	11
2017-01-04 09:22:19 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-04 09:22:19 AI_Player.update()		1001,	1010,	101,	1110,	11,	1100,	1101
2017-01-04 09:22:19 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 09:22:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:22:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:19 AI_Player.update()	update
2017-01-04 09:22:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:22:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:19 AI_Player.update()	update
2017-01-04 09:22:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:19 AI_Player.update()	Search took107ms
2017-01-04 09:22:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:19 AI_Player.update()		110,	1010,	111,	1011,	111,	11,	11
2017-01-04 09:22:19 AI_Player.update()		1010,	1010,	11,	1001,	101,	1101,	110
2017-01-04 09:22:19 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-04 09:22:19 AI_Player.update()		101,	1100,	1010,	110,	1101,	101,	11
2017-01-04 09:22:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-04 09:22:19 AI_Player.update()		1001,	101,	101,	1110,	11,	1100,	1101
2017-01-04 09:22:19 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 09:22:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:22:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:19 AI_Player.update()	update
2017-01-04 09:22:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:19 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:22:19 AI_Player.update()	Player a has won!
2017-01-04 09:22:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:19 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:22:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:19 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:22:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:19 AI_Player.update()	update
2017-01-04 09:22:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:19 AI_Player.update()	Search took86ms
2017-01-04 09:22:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:19 AI_Player.update()		110,	111,	111,	11,	111,	110,	11
2017-01-04 09:22:19 AI_Player.update()		11,	1001,	110,	110,	1010,	101,	111
2017-01-04 09:22:19 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-04 09:22:19 AI_Player.update()		1100,	101,	1011,	101,	1001,	1001,	1001
2017-01-04 09:22:19 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-04 09:22:19 AI_Player.update()		1100,	101,	101,	101,	110,	110,	1011
2017-01-04 09:22:19 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 09:22:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:20 AI_Player.update()	update
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:20 AI_Player.update()	update
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:20 AI_Player.update()	Search took58ms
2017-01-04 09:22:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:20 AI_Player.update()		110,	111,	111,	11,	111,	110,	11
2017-01-04 09:22:20 AI_Player.update()		111,	11,	1001,	110,	110,	1010,	101
2017-01-04 09:22:20 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-04 09:22:20 AI_Player.update()		1100,	101,	1011,	101,	1001,	1001,	1001
2017-01-04 09:22:20 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-04 09:22:20 AI_Player.update()		1100,	101,	101,	101,	110,	110,	1011
2017-01-04 09:22:20 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 09:22:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:20 AI_Player.update()	update
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:20 AI_Player.update()	update
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:20 AI_Player.update()	Search took96ms
2017-01-04 09:22:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:20 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-04 09:22:20 AI_Player.update()		111,	111,	1001,	110,	110,	1010,	101
2017-01-04 09:22:20 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 09:22:20 AI_Player.update()		1100,	101,	1011,	101,	1001,	1001,	1001
2017-01-04 09:22:20 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-04 09:22:20 AI_Player.update()		1100,	110,	101,	101,	110,	110,	1011
2017-01-04 09:22:20 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 09:22:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:20 AI_Player.update()	update
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:20 AI_Player.update()	update
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:20 AI_Player.update()	Search took140ms
2017-01-04 09:22:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:20 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-04 09:22:20 AI_Player.update()		111,	111,	1001,	110,	110,	1010,	101
2017-01-04 09:22:20 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 09:22:20 AI_Player.update()		1001,	1100,	101,	1011,	101,	1001,	1001
2017-01-04 09:22:20 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-04 09:22:20 AI_Player.update()		1100,	110,	101,	101,	110,	110,	1011
2017-01-04 09:22:20 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 09:22:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:20 AI_Player.update()	update
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:22:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:21 AI_Player.update()	update
2017-01-04 09:22:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:21 AI_Player.update()	Search took123ms
2017-01-04 09:22:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:21 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-04 09:22:21 AI_Player.update()		111,	111,	1001,	110,	110,	1010,	101
2017-01-04 09:22:21 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 09:22:21 AI_Player.update()		1001,	1001,	1100,	101,	1011,	101,	1001
2017-01-04 09:22:21 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-04 09:22:21 AI_Player.update()		1100,	110,	101,	101,	110,	110,	1011
2017-01-04 09:22:21 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 09:22:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:21 AI_Player.update()	update
2017-01-04 09:22:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:21 AI_Player.update()	update
2017-01-04 09:22:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:21 AI_Player.update()	Search took166ms
2017-01-04 09:22:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:21 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 09:22:21 AI_Player.update()		111,	111,	1001,	1010,	110,	1010,	101
2017-01-04 09:22:21 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 09:22:21 AI_Player.update()		1001,	1001,	1100,	1001,	1011,	101,	1001
2017-01-04 09:22:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-04 09:22:21 AI_Player.update()		1100,	110,	101,	101,	110,	110,	1011
2017-01-04 09:22:21 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 09:22:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:21 AI_Player.update()	update
2017-01-04 09:22:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:21 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:21 AI_Player.update()	update
2017-01-04 09:22:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:22 AI_Player.update()	Search took319ms
2017-01-04 09:22:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:22 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-04 09:22:22 AI_Player.update()		111,	111,	1001,	101,	110,	1010,	101
2017-01-04 09:22:22 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 09:22:22 AI_Player.update()		1001,	1001,	1100,	101,	1011,	101,	1001
2017-01-04 09:22:22 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-04 09:22:22 AI_Player.update()		1100,	110,	101,	11,	110,	110,	1011
2017-01-04 09:22:22 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 09:22:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:22 AI_Player.update()	update
2017-01-04 09:22:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:22:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:22 AI_Player.update()	update
2017-01-04 09:22:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:22 AI_Player.update()	Search took318ms
2017-01-04 09:22:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:22 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-04 09:22:22 AI_Player.update()		111,	111,	1001,	101,	110,	1010,	101
2017-01-04 09:22:22 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 09:22:22 AI_Player.update()		1001,	1001,	1001,	1100,	101,	1011,	101
2017-01-04 09:22:22 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-04 09:22:22 AI_Player.update()		1100,	110,	101,	11,	110,	110,	1011
2017-01-04 09:22:22 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 09:22:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:22:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:22 AI_Player.update()	update
2017-01-04 09:22:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:22 AI_Player.update()	update
2017-01-04 09:22:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:22 AI_Player.update()	Search took87ms
2017-01-04 09:22:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:22 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 09:22:22 AI_Player.update()		111,	111,	1001,	1010,	110,	1010,	101
2017-01-04 09:22:22 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 09:22:22 AI_Player.update()		1001,	1001,	1001,	1001,	101,	1011,	101
2017-01-04 09:22:22 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-04 09:22:22 AI_Player.update()		1100,	110,	101,	101,	110,	110,	1011
2017-01-04 09:22:22 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 09:22:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:22 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:23 AI_Player.update()	update
2017-01-04 09:22:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:23 AI_Player.update()	update
2017-01-04 09:22:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:23 AI_Player.update()	Search took172ms
2017-01-04 09:22:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:23 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 09:22:23 AI_Player.update()		111,	111,	1001,	1010,	110,	110,	101
2017-01-04 09:22:23 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 09:22:23 AI_Player.update()		1001,	1001,	1001,	1001,	101,	1100,	101
2017-01-04 09:22:23 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1011,	1011
2017-01-04 09:22:23 AI_Player.update()		1100,	110,	101,	101,	110,	1101,	1011
2017-01-04 09:22:23 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-04 09:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:23 AI_Player.update()	update
2017-01-04 09:22:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:23 AI_Player.update()	update
2017-01-04 09:22:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:23 AI_Player.update()	Search took92ms
2017-01-04 09:22:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:23 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 09:22:23 AI_Player.update()		111,	111,	1001,	1010,	110,	110,	101
2017-01-04 09:22:23 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 09:22:23 AI_Player.update()		1001,	1001,	1001,	101,	1100,	101,	1001
2017-01-04 09:22:23 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1011,	1011
2017-01-04 09:22:23 AI_Player.update()		1100,	110,	101,	101,	110,	1101,	1011
2017-01-04 09:22:23 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-04 09:22:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:23 AI_Player.update()	update
2017-01-04 09:22:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:22:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:23 AI_Player.update()	update
2017-01-04 09:22:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:24 AI_Player.update()	Search took192ms
2017-01-04 09:22:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:24 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 09:22:24 AI_Player.update()		111,	111,	1001,	110,	110,	110,	101
2017-01-04 09:22:24 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 09:22:24 AI_Player.update()		1001,	1001,	1001,	101,	1100,	101,	1001
2017-01-04 09:22:24 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-04 09:22:24 AI_Player.update()		1100,	110,	101,	1100,	110,	1101,	1011
2017-01-04 09:22:24 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 09:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:24 AI_Player.update()	update
2017-01-04 09:22:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:22:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:24 AI_Player.update()	update
2017-01-04 09:22:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:24 AI_Player.update()	Search took134ms
2017-01-04 09:22:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:24 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 09:22:24 AI_Player.update()		111,	111,	1001,	11,	110,	110,	101
2017-01-04 09:22:24 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-04 09:22:24 AI_Player.update()		1001,	1001,	1001,	1010,	1100,	101,	1001
2017-01-04 09:22:24 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-04 09:22:24 AI_Player.update()		1100,	110,	101,	101,	110,	1101,	1011
2017-01-04 09:22:24 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:24 AI_Player.update()	update
2017-01-04 09:22:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:24 AI_Player.update()	update
2017-01-04 09:22:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:24 AI_Player.update()	Search took135ms
2017-01-04 09:22:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:24 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 09:22:24 AI_Player.update()		111,	111,	1001,	110,	110,	110,	101
2017-01-04 09:22:24 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 09:22:24 AI_Player.update()		1001,	1001,	1001,	101,	1100,	101,	1001
2017-01-04 09:22:24 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-04 09:22:24 AI_Player.update()		1100,	110,	101,	1100,	110,	1101,	1011
2017-01-04 09:22:24 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 09:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:24 AI_Player.update()	update
2017-01-04 09:22:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:24 AI_Player.update()	update
2017-01-04 09:22:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:24 AI_Player.update()	Search took32ms
2017-01-04 09:22:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:24 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 09:22:24 AI_Player.update()		111,	111,	1001,	11,	110,	110,	101
2017-01-04 09:22:24 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-04 09:22:24 AI_Player.update()		1001,	1001,	1001,	1010,	1100,	101,	1001
2017-01-04 09:22:24 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-04 09:22:24 AI_Player.update()		1100,	110,	101,	101,	110,	1101,	1011
2017-01-04 09:22:24 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:22:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:24 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:25 AI_Player.update()	update
2017-01-04 09:22:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:25 AI_Player.update()	update
2017-01-04 09:22:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:25 AI_Player.update()	Search took217ms
2017-01-04 09:22:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:25 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-04 09:22:25 AI_Player.update()		111,	111,	1001,	11,	110,	1010,	101
2017-01-04 09:22:25 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-04 09:22:25 AI_Player.update()		1001,	1001,	1001,	1010,	1100,	1011,	1001
2017-01-04 09:22:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-04 09:22:25 AI_Player.update()		1100,	110,	101,	101,	110,	110,	1011
2017-01-04 09:22:25 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:22:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:25 AI_Player.update()	update
2017-01-04 09:22:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:22:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:25 AI_Player.update()	update
2017-01-04 09:22:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:25 AI_Player.update()	Search took153ms
2017-01-04 09:22:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:25 AI_Player.update()		110,	111,	111,	101,	111,	110,	11
2017-01-04 09:22:25 AI_Player.update()		111,	11,	1001,	11,	110,	1010,	101
2017-01-04 09:22:25 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:22:25 AI_Player.update()		1001,	101,	1001,	1010,	1100,	1011,	1001
2017-01-04 09:22:25 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-04 09:22:25 AI_Player.update()		1100,	101,	101,	101,	110,	110,	1011
2017-01-04 09:22:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:22:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:22:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:25 AI_Player.update()	update
2017-01-04 09:22:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:25 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:22:25 AI_Player.update()	Player a has won!
2017-01-04 09:22:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:25 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:22:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:25 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:22:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:25 AI_Player.update()	update
2017-01-04 09:22:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:26 AI_Player.update()	Search took539ms
2017-01-04 09:22:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:26 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:22:26 AI_Player.update()		101,	11,	101,	1100,	110,	101,	1110
2017-01-04 09:22:26 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-04 09:22:26 AI_Player.update()		1101,	1001,	101,	111,	1100,	1100,	11
2017-01-04 09:22:26 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 09:22:26 AI_Player.update()		1001,	1100,	1010,	1100,	1010,	1010,	110
2017-01-04 09:22:26 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-04 09:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:26 AI_Player.update()	update
2017-01-04 09:22:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:26 AI_Player.update()	update
2017-01-04 09:22:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:26 AI_Player.update()	Search took186ms
2017-01-04 09:22:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:26 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:22:26 AI_Player.update()		101,	11,	101,	1100,	110,	101,	1110
2017-01-04 09:22:26 AI_Player.update()		1110,	101,	1110,	111,	111,	1100,	1011
2017-01-04 09:22:26 AI_Player.update()		1101,	1001,	101,	111,	1100,	110,	11
2017-01-04 09:22:26 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:22:26 AI_Player.update()		1001,	1100,	1010,	1100,	1010,	1001,	110
2017-01-04 09:22:26 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-04 09:22:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:26 AI_Player.update()	update
2017-01-04 09:22:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:26 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:27 AI_Player.update()	update
2017-01-04 09:22:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:27 AI_Player.update()	Search took168ms
2017-01-04 09:22:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:27 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:22:27 AI_Player.update()		1110,	101,	11,	101,	1100,	110,	101
2017-01-04 09:22:27 AI_Player.update()		1110,	101,	1110,	111,	111,	1100,	1011
2017-01-04 09:22:27 AI_Player.update()		1101,	1001,	101,	111,	1100,	110,	11
2017-01-04 09:22:27 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:22:27 AI_Player.update()		1001,	1100,	1010,	1100,	1010,	1001,	110
2017-01-04 09:22:27 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-04 09:22:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:27 AI_Player.update()	update
2017-01-04 09:22:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:22:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:27 AI_Player.update()	update
2017-01-04 09:22:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:27 AI_Player.update()	Search took420ms
2017-01-04 09:22:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:27 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:22:27 AI_Player.update()		1110,	101,	11,	101,	1100,	110,	101
2017-01-04 09:22:27 AI_Player.update()		1110,	1001,	1110,	111,	111,	1100,	1011
2017-01-04 09:22:27 AI_Player.update()		1101,	1100,	101,	111,	1100,	110,	11
2017-01-04 09:22:27 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:22:27 AI_Player.update()		1001,	1001,	1010,	1100,	1010,	1001,	110
2017-01-04 09:22:27 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 09:22:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:22:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:27 AI_Player.update()	update
2017-01-04 09:22:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:28 AI_Player.update()	update
2017-01-04 09:22:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:28 AI_Player.update()	Search took422ms
2017-01-04 09:22:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:28 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:22:28 AI_Player.update()		1110,	1001,	11,	101,	1100,	110,	101
2017-01-04 09:22:28 AI_Player.update()		1110,	1100,	1110,	111,	111,	1100,	1011
2017-01-04 09:22:28 AI_Player.update()		1101,	1100,	101,	111,	1100,	110,	11
2017-01-04 09:22:28 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:22:28 AI_Player.update()		1001,	101,	1010,	1100,	1010,	1001,	110
2017-01-04 09:22:28 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 09:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:28 AI_Player.update()	update
2017-01-04 09:22:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:28 AI_Player.update()	update
2017-01-04 09:22:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:28 AI_Player.update()	Search took93ms
2017-01-04 09:22:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:28 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:22:28 AI_Player.update()		1110,	1001,	11,	111,	1100,	110,	101
2017-01-04 09:22:28 AI_Player.update()		1110,	1100,	1110,	111,	111,	1100,	1011
2017-01-04 09:22:28 AI_Player.update()		1101,	1100,	101,	1100,	1100,	110,	11
2017-01-04 09:22:28 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:22:28 AI_Player.update()		1001,	101,	1010,	11,	1010,	1001,	110
2017-01-04 09:22:28 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 09:22:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:28 AI_Player.update()	update
2017-01-04 09:22:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:22:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:29 AI_Player.update()	update
2017-01-04 09:22:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:29 AI_Player.update()	Search took206ms
2017-01-04 09:22:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:29 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:22:29 AI_Player.update()		1001,	11,	111,	1100,	110,	101,	1110
2017-01-04 09:22:29 AI_Player.update()		1110,	1100,	1110,	111,	111,	1100,	1011
2017-01-04 09:22:29 AI_Player.update()		1101,	1100,	101,	1100,	1100,	110,	11
2017-01-04 09:22:29 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:22:29 AI_Player.update()		1001,	101,	1010,	11,	1010,	1001,	110
2017-01-04 09:22:29 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 09:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:29 AI_Player.update()	update
2017-01-04 09:22:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:29 AI_Player.update()	update
2017-01-04 09:22:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:29 AI_Player.update()	Search took253ms
2017-01-04 09:22:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:29 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:22:29 AI_Player.update()		1001,	11,	111,	1100,	110,	101,	1110
2017-01-04 09:22:29 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-04 09:22:29 AI_Player.update()		1101,	1100,	101,	1100,	1100,	1100,	11
2017-01-04 09:22:29 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 09:22:29 AI_Player.update()		1001,	101,	1010,	11,	1010,	1010,	110
2017-01-04 09:22:29 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:22:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:29 AI_Player.update()	update
2017-01-04 09:22:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:29 AI_Player.update()	update
2017-01-04 09:22:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:30 AI_Player.update()	Search took272ms
2017-01-04 09:22:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:30 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 09:22:30 AI_Player.update()		1001,	11,	111,	1100,	110,	101,	1110
2017-01-04 09:22:30 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-04 09:22:30 AI_Player.update()		11,	1101,	1100,	101,	1100,	1100,	1100
2017-01-04 09:22:30 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 09:22:30 AI_Player.update()		1001,	101,	1010,	11,	1010,	1010,	110
2017-01-04 09:22:30 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:30 AI_Player.update()	update
2017-01-04 09:22:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:30 AI_Player.update()	update
2017-01-04 09:22:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:30 AI_Player.update()	Search took344ms
2017-01-04 09:22:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:30 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-04 09:22:30 AI_Player.update()		1001,	1100,	111,	1100,	110,	101,	1110
2017-01-04 09:22:30 AI_Player.update()		1110,	1101,	1110,	111,	111,	101,	1011
2017-01-04 09:22:30 AI_Player.update()		11,	1001,	1100,	101,	1100,	1100,	1100
2017-01-04 09:22:30 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 09:22:30 AI_Player.update()		1001,	101,	1010,	11,	1010,	1010,	110
2017-01-04 09:22:30 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:22:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:30 AI_Player.update()	update
2017-01-04 09:22:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:30 AI_Player.update()	update
2017-01-04 09:22:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:31 AI_Player.update()	Search took303ms
2017-01-04 09:22:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:31 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-04 09:22:31 AI_Player.update()		1001,	1100,	111,	101,	110,	101,	1110
2017-01-04 09:22:31 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-04 09:22:31 AI_Player.update()		11,	1001,	1100,	111,	1100,	1100,	1100
2017-01-04 09:22:31 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 09:22:31 AI_Player.update()		1001,	101,	1010,	1100,	1010,	1010,	110
2017-01-04 09:22:31 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-04 09:22:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:31 AI_Player.update()	update
2017-01-04 09:22:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:22:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:31 AI_Player.update()	update
2017-01-04 09:22:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:31 AI_Player.update()	Search took306ms
2017-01-04 09:22:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:31 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-04 09:22:31 AI_Player.update()		1001,	1100,	111,	101,	110,	101,	1110
2017-01-04 09:22:31 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-04 09:22:31 AI_Player.update()		1001,	1100,	111,	1100,	1100,	1100,	11
2017-01-04 09:22:31 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 09:22:31 AI_Player.update()		1001,	101,	1010,	1100,	1010,	1010,	110
2017-01-04 09:22:31 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-04 09:22:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:22:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:31 AI_Player.update()	update
2017-01-04 09:22:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:31 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:22:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:31 AI_Player.update()	update
2017-01-04 09:22:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:32 AI_Player.update()	Search took320ms
2017-01-04 09:22:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:32 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:22:32 AI_Player.update()		1001,	1101,	111,	101,	110,	101,	1110
2017-01-04 09:22:32 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-04 09:22:32 AI_Player.update()		1001,	101,	111,	1100,	1100,	1100,	11
2017-01-04 09:22:32 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 09:22:32 AI_Player.update()		1001,	101,	1010,	1100,	1010,	1010,	110
2017-01-04 09:22:32 AI_Player.update()		1100,	11,	1101,	11,	1101,	1001,	1001
2017-01-04 09:22:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:22:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:32 AI_Player.update()	update
2017-01-04 09:22:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:22:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:32 AI_Player.update()	update
2017-01-04 09:22:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:32 AI_Player.update()	Search took68ms
2017-01-04 09:22:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:32 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 09:22:32 AI_Player.update()		1001,	1100,	111,	101,	110,	101,	1110
2017-01-04 09:22:32 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 09:22:32 AI_Player.update()		1001,	101,	111,	1100,	1100,	1100,	11
2017-01-04 09:22:32 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 09:22:32 AI_Player.update()		1001,	11,	1010,	1100,	1010,	1010,	110
2017-01-04 09:22:32 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 09:22:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:22:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:32 AI_Player.update()	update
2017-01-04 09:22:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:32 AI_Player.update()	update
2017-01-04 09:22:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:33 AI_Player.update()	Search took383ms
2017-01-04 09:22:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:33 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-04 09:22:33 AI_Player.update()		1001,	1100,	111,	101,	110,	101,	1110
2017-01-04 09:22:33 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-04 09:22:33 AI_Player.update()		1001,	101,	111,	1100,	1100,	110,	11
2017-01-04 09:22:33 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:22:33 AI_Player.update()		1001,	11,	1010,	1100,	1010,	1001,	110
2017-01-04 09:22:33 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-04 09:22:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:33 AI_Player.update()	update
2017-01-04 09:22:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:22:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:33 AI_Player.update()	update
2017-01-04 09:22:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:33 AI_Player.update()	Search took47ms
2017-01-04 09:22:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:33 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-04 09:22:33 AI_Player.update()		1001,	1100,	111,	101,	110,	101,	1110
2017-01-04 09:22:33 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 09:22:33 AI_Player.update()		1001,	101,	111,	1100,	1100,	110,	11
2017-01-04 09:22:33 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:22:33 AI_Player.update()		1001,	11,	1010,	101,	1010,	1001,	110
2017-01-04 09:22:33 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:22:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:22:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:33 AI_Player.update()	update
2017-01-04 09:22:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:22:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:33 AI_Player.update()	update
2017-01-04 09:22:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:33 AI_Player.update()	Search took116ms
2017-01-04 09:22:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:33 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-04 09:22:33 AI_Player.update()		1001,	1100,	111,	101,	110,	101,	1110
2017-01-04 09:22:33 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-04 09:22:33 AI_Player.update()		1001,	101,	111,	1100,	1100,	110,	11
2017-01-04 09:22:33 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:22:33 AI_Player.update()		1001,	11,	1010,	1100,	1010,	1001,	110
2017-01-04 09:22:33 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-04 09:22:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:22:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:33 AI_Player.update()	update
2017-01-04 09:22:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:33 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:22:33 AI_Player.update()	Player a has won!
2017-01-04 09:22:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:33 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:22:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:33 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:22:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:33 AI_Player.update()	update
2017-01-04 09:22:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:34 AI_Player.update()	Search took446ms
2017-01-04 09:22:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:34 AI_Player.update()		110,	111,	111,	1101,	111,	101,	11
2017-01-04 09:22:34 AI_Player.update()		110,	1101,	1001,	101,	11,	1110,	110
2017-01-04 09:22:34 AI_Player.update()		1110,	1100,	1110,	111,	111,	110,	1011
2017-01-04 09:22:34 AI_Player.update()		1101,	11,	1011,	101,	1011,	1010,	1010
2017-01-04 09:22:34 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:22:34 AI_Player.update()		101,	101,	111,	1101,	110,	110,	1010
2017-01-04 09:22:34 AI_Player.update()		1100,	11,	1101,	1001,	1101,	110,	1001
2017-01-04 09:22:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:34 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:34 AI_Player.update()	update
2017-01-04 09:22:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:34 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:34 AI_Player.update()	update
2017-01-04 09:22:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:35 AI_Player.update()	Search took406ms
2017-01-04 09:22:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:35 AI_Player.update()		110,	111,	111,	1101,	111,	101,	11
2017-01-04 09:22:35 AI_Player.update()		110,	1101,	1001,	101,	11,	1110,	110
2017-01-04 09:22:35 AI_Player.update()		1110,	1100,	1110,	111,	111,	110,	1011
2017-01-04 09:22:35 AI_Player.update()		11,	1011,	101,	1011,	1010,	1010,	1101
2017-01-04 09:22:35 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:22:35 AI_Player.update()		101,	101,	111,	1101,	110,	110,	1010
2017-01-04 09:22:35 AI_Player.update()		1100,	11,	1101,	1001,	1101,	110,	1001
2017-01-04 09:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:35 AI_Player.update()	update
2017-01-04 09:22:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:22:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:35 AI_Player.update()	update
2017-01-04 09:22:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:35 AI_Player.update()	Search took264ms
2017-01-04 09:22:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:35 AI_Player.update()		110,	111,	111,	1101,	111,	1110,	11
2017-01-04 09:22:35 AI_Player.update()		110,	1101,	1001,	101,	11,	110,	110
2017-01-04 09:22:35 AI_Player.update()		1110,	1100,	1110,	111,	111,	1010,	1011
2017-01-04 09:22:35 AI_Player.update()		11,	1011,	101,	1011,	1010,	1100,	1101
2017-01-04 09:22:35 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-04 09:22:35 AI_Player.update()		101,	101,	111,	1101,	110,	110,	1010
2017-01-04 09:22:35 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-04 09:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:22:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:35 AI_Player.update()	update
2017-01-04 09:22:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:22:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:35 AI_Player.update()	update
2017-01-04 09:22:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:35 AI_Player.update()	Search took253ms
2017-01-04 09:22:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:35 AI_Player.update()		110,	111,	111,	1101,	111,	1110,	11
2017-01-04 09:22:35 AI_Player.update()		110,	1101,	1001,	101,	11,	110,	110
2017-01-04 09:22:35 AI_Player.update()		1110,	1100,	1110,	111,	111,	1010,	1011
2017-01-04 09:22:35 AI_Player.update()		1011,	101,	1011,	1010,	1100,	1101,	11
2017-01-04 09:22:35 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-04 09:22:35 AI_Player.update()		101,	101,	111,	1101,	110,	110,	1010
2017-01-04 09:22:35 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-04 09:22:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:35 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:22:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:36 AI_Player.update()	update
2017-01-04 09:22:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:22:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:36 AI_Player.update()	update
2017-01-04 09:22:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:36 AI_Player.update()	Search took711ms
2017-01-04 09:22:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:36 AI_Player.update()		110,	111,	111,	101,	111,	1110,	11
2017-01-04 09:22:36 AI_Player.update()		110,	1101,	1001,	111,	11,	110,	110
2017-01-04 09:22:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 09:22:36 AI_Player.update()		1011,	101,	1011,	1001,	1100,	1101,	11
2017-01-04 09:22:36 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-04 09:22:36 AI_Player.update()		101,	101,	111,	1001,	110,	110,	1010
2017-01-04 09:22:36 AI_Player.update()		1100,	11,	1101,	1101,	1101,	101,	1001
2017-01-04 09:22:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:22:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:36 AI_Player.update()	update
2017-01-04 09:22:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:37 AI_Player.update()	update
2017-01-04 09:22:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:37 AI_Player.update()	Search took238ms
2017-01-04 09:22:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:37 AI_Player.update()		110,	1101,	111,	101,	111,	1110,	11
2017-01-04 09:22:37 AI_Player.update()		110,	1100,	1001,	111,	11,	110,	110
2017-01-04 09:22:37 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 09:22:37 AI_Player.update()		1011,	1100,	1011,	1001,	1100,	1101,	11
2017-01-04 09:22:37 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-04 09:22:37 AI_Player.update()		101,	11,	111,	1001,	110,	110,	1010
2017-01-04 09:22:37 AI_Player.update()		1100,	111,	1101,	1101,	1101,	101,	1001
2017-01-04 09:22:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:37 AI_Player.update()	update
2017-01-04 09:22:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:37 AI_Player.update()	update
2017-01-04 09:22:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:38 AI_Player.update()	Search took591ms
2017-01-04 09:22:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:38 AI_Player.update()		110,	1101,	111,	101,	111,	1110,	11
2017-01-04 09:22:38 AI_Player.update()		110,	1100,	1001,	111,	11,	110,	110
2017-01-04 09:22:38 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 09:22:38 AI_Player.update()		1011,	1100,	1011,	1001,	1100,	1101,	11
2017-01-04 09:22:38 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-04 09:22:38 AI_Player.update()		1010,	101,	11,	111,	1001,	110,	110
2017-01-04 09:22:38 AI_Player.update()		1100,	111,	1101,	1101,	1101,	101,	1001
2017-01-04 09:22:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:38 AI_Player.update()	update
2017-01-04 09:22:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:22:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:38 AI_Player.update()	update
2017-01-04 09:22:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:39 AI_Player.update()	Search took1192ms
2017-01-04 09:22:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:39 AI_Player.update()		110,	1101,	111,	101,	111,	110,	11
2017-01-04 09:22:39 AI_Player.update()		110,	1100,	1001,	111,	11,	1010,	110
2017-01-04 09:22:39 AI_Player.update()		1110,	101,	1110,	1010,	111,	1101,	1011
2017-01-04 09:22:39 AI_Player.update()		1011,	1100,	1011,	1001,	1100,	110,	11
2017-01-04 09:22:39 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-04 09:22:39 AI_Player.update()		1010,	101,	11,	111,	1001,	101,	110
2017-01-04 09:22:39 AI_Player.update()		1100,	111,	1101,	1101,	1101,	1110,	1001
2017-01-04 09:22:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:22:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:39 AI_Player.update()	update
2017-01-04 09:22:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:39 AI_Player.update()	update
2017-01-04 09:22:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:40 AI_Player.update()	Search took970ms
2017-01-04 09:22:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:40 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 09:22:40 AI_Player.update()		110,	1100,	1001,	111,	11,	1101,	110
2017-01-04 09:22:40 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:40 AI_Player.update()		1011,	1100,	1011,	1001,	1100,	110,	11
2017-01-04 09:22:40 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 09:22:40 AI_Player.update()		1010,	101,	11,	111,	1001,	1110,	110
2017-01-04 09:22:40 AI_Player.update()		1100,	111,	1101,	1101,	1101,	110,	1001
2017-01-04 09:22:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:22:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:40 AI_Player.update()	update
2017-01-04 09:22:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:22:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:40 AI_Player.update()	update
2017-01-04 09:22:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:41 AI_Player.update()	Search took1013ms
2017-01-04 09:22:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:41 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 09:22:41 AI_Player.update()		1100,	1001,	111,	11,	1101,	110,	110
2017-01-04 09:22:41 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:41 AI_Player.update()		1011,	1100,	1011,	1001,	1100,	110,	11
2017-01-04 09:22:41 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 09:22:41 AI_Player.update()		1010,	101,	11,	111,	1001,	1110,	110
2017-01-04 09:22:41 AI_Player.update()		1100,	111,	1101,	1101,	1101,	110,	1001
2017-01-04 09:22:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:41 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:22:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:42 AI_Player.update()	update
2017-01-04 09:22:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:22:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:42 AI_Player.update()	update
2017-01-04 09:22:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:43 AI_Player.update()	Search took1091ms
2017-01-04 09:22:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:43 AI_Player.update()		110,	111,	111,	101,	111,	1010,	11
2017-01-04 09:22:43 AI_Player.update()		1100,	1101,	111,	11,	1101,	110,	110
2017-01-04 09:22:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:43 AI_Player.update()		1011,	101,	1011,	1001,	1100,	110,	11
2017-01-04 09:22:43 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	101,	1011
2017-01-04 09:22:43 AI_Player.update()		1010,	101,	11,	111,	1001,	1110,	110
2017-01-04 09:22:43 AI_Player.update()		1100,	101,	1101,	1101,	1101,	110,	1001
2017-01-04 09:22:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:22:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:43 AI_Player.update()	update
2017-01-04 09:22:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:43 AI_Player.update()	update
2017-01-04 09:22:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:44 AI_Player.update()	Search took1136ms
2017-01-04 09:22:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:44 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 09:22:44 AI_Player.update()		1100,	1001,	111,	11,	1101,	110,	110
2017-01-04 09:22:44 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:44 AI_Player.update()		1011,	1100,	1011,	1001,	1100,	110,	11
2017-01-04 09:22:44 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 09:22:44 AI_Player.update()		1010,	101,	11,	111,	1001,	1110,	110
2017-01-04 09:22:44 AI_Player.update()		1100,	111,	1101,	1101,	1101,	110,	1001
2017-01-04 09:22:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:44 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:44 AI_Player.update()	update
2017-01-04 09:22:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:44 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:44 AI_Player.update()	update
2017-01-04 09:22:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:45 AI_Player.update()	Search took1088ms
2017-01-04 09:22:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:45 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-04 09:22:45 AI_Player.update()		1100,	101,	111,	11,	1101,	110,	110
2017-01-04 09:22:45 AI_Player.update()		1110,	1100,	1110,	1010,	111,	110,	1011
2017-01-04 09:22:45 AI_Player.update()		1011,	101,	1011,	1001,	1100,	110,	11
2017-01-04 09:22:45 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 09:22:45 AI_Player.update()		1010,	111,	11,	111,	1001,	1110,	110
2017-01-04 09:22:45 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	110,	1001
2017-01-04 09:22:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:22:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:45 AI_Player.update()	update
2017-01-04 09:22:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:45 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:22:45 AI_Player.update()	Player a has won!
2017-01-04 09:22:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:45 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:22:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:45 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:22:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:46 AI_Player.update()	update
2017-01-04 09:22:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:46 AI_Player.update()	Search took18ms
2017-01-04 09:22:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:46 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-04 09:22:46 AI_Player.update()		1001,	1110,	1001,	110,	110,	101,	1001
2017-01-04 09:22:46 AI_Player.update()		1110,	1100,	1110,	111,	111,	1011,	1011
2017-01-04 09:22:46 AI_Player.update()		110,	11,	1010,	110,	1011,	101,	101
2017-01-04 09:22:46 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-04 09:22:46 AI_Player.update()		11,	1110,	1001,	1101,	1011,	1101,	1101
2017-01-04 09:22:46 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:46 AI_Player.update()	update
2017-01-04 09:22:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:46 AI_Player.update()	update
2017-01-04 09:22:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:46 AI_Player.update()	Search took92ms
2017-01-04 09:22:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:46 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-04 09:22:46 AI_Player.update()		1110,	1001,	110,	110,	101,	1001,	1001
2017-01-04 09:22:46 AI_Player.update()		1110,	1100,	1110,	111,	111,	1011,	1011
2017-01-04 09:22:46 AI_Player.update()		110,	11,	1010,	110,	1011,	101,	101
2017-01-04 09:22:46 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-04 09:22:46 AI_Player.update()		11,	1110,	1001,	1101,	1011,	1101,	1101
2017-01-04 09:22:46 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:46 AI_Player.update()	update
2017-01-04 09:22:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:46 AI_Player.update()	update
2017-01-04 09:22:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:46 AI_Player.update()	Search took139ms
2017-01-04 09:22:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:46 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-04 09:22:46 AI_Player.update()		1110,	110,	110,	110,	101,	1001,	1001
2017-01-04 09:22:46 AI_Player.update()		1110,	1001,	1110,	111,	111,	1011,	1011
2017-01-04 09:22:46 AI_Player.update()		110,	1100,	1010,	110,	1011,	101,	101
2017-01-04 09:22:46 AI_Player.update()		1110,	11,	1101,	1101,	1011,	11,	1011
2017-01-04 09:22:46 AI_Player.update()		11,	1010,	1001,	1101,	1011,	1101,	1101
2017-01-04 09:22:46 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:22:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:46 AI_Player.update()	update
2017-01-04 09:22:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:46 AI_Player.update()	update
2017-01-04 09:22:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:47 AI_Player.update()	Search took198ms
2017-01-04 09:22:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:47 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 09:22:47 AI_Player.update()		1110,	110,	110,	111,	101,	1001,	1001
2017-01-04 09:22:47 AI_Player.update()		1110,	1001,	1110,	110,	111,	1011,	1011
2017-01-04 09:22:47 AI_Player.update()		110,	1100,	1010,	1101,	1011,	101,	101
2017-01-04 09:22:47 AI_Player.update()		1110,	11,	1101,	1101,	1011,	11,	1011
2017-01-04 09:22:47 AI_Player.update()		11,	1010,	1001,	1010,	1011,	1101,	1101
2017-01-04 09:22:47 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:22:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:47 AI_Player.update()	update
2017-01-04 09:22:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:22:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:47 AI_Player.update()	update
2017-01-04 09:22:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:47 AI_Player.update()	Search took156ms
2017-01-04 09:22:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:47 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 09:22:47 AI_Player.update()		110,	110,	111,	101,	1001,	1001,	1110
2017-01-04 09:22:47 AI_Player.update()		1110,	1001,	1110,	110,	111,	1011,	1011
2017-01-04 09:22:47 AI_Player.update()		110,	1100,	1010,	1101,	1011,	101,	101
2017-01-04 09:22:47 AI_Player.update()		1110,	11,	1101,	1101,	1011,	11,	1011
2017-01-04 09:22:47 AI_Player.update()		11,	1010,	1001,	1010,	1011,	1101,	1101
2017-01-04 09:22:47 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1100,	1001
2017-01-04 09:22:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:22:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:47 AI_Player.update()	update
2017-01-04 09:22:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:47 AI_Player.update()	update
2017-01-04 09:22:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:48 AI_Player.update()	Search took814ms
2017-01-04 09:22:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:48 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-04 09:22:48 AI_Player.update()		110,	110,	111,	110,	1001,	1001,	1110
2017-01-04 09:22:48 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1011,	1011
2017-01-04 09:22:48 AI_Player.update()		110,	1100,	1010,	1101,	1011,	101,	101
2017-01-04 09:22:48 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-04 09:22:48 AI_Player.update()		11,	1010,	1001,	1010,	1011,	1101,	1101
2017-01-04 09:22:48 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1100,	1001
2017-01-04 09:22:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:48 AI_Player.update()	update
2017-01-04 09:22:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:22:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:48 AI_Player.update()	update
2017-01-04 09:22:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:49 AI_Player.update()	Search took807ms
2017-01-04 09:22:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:49 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-04 09:22:49 AI_Player.update()		110,	110,	111,	110,	1001,	1001,	1110
2017-01-04 09:22:49 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1011,	1011
2017-01-04 09:22:49 AI_Player.update()		110,	1100,	1010,	1101,	1011,	101,	101
2017-01-04 09:22:49 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-04 09:22:49 AI_Player.update()		1010,	1001,	1010,	1011,	1101,	1101,	11
2017-01-04 09:22:49 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1100,	1001
2017-01-04 09:22:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:49 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:22:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:49 AI_Player.update()	update
2017-01-04 09:22:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:49 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:22:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:49 AI_Player.update()	update
2017-01-04 09:22:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:50 AI_Player.update()	Search took742ms
2017-01-04 09:22:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:50 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-04 09:22:50 AI_Player.update()		110,	111,	110,	1001,	1001,	1110,	110
2017-01-04 09:22:50 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1011,	1011
2017-01-04 09:22:50 AI_Player.update()		110,	1100,	1010,	1101,	1011,	101,	101
2017-01-04 09:22:50 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-04 09:22:50 AI_Player.update()		1010,	1001,	1010,	1011,	1101,	1101,	11
2017-01-04 09:22:50 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1100,	1001
2017-01-04 09:22:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:22:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:50 AI_Player.update()	update
2017-01-04 09:22:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:22:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:50 AI_Player.update()	update
2017-01-04 09:22:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:51 AI_Player.update()	Search took562ms
2017-01-04 09:22:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:51 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-04 09:22:51 AI_Player.update()		110,	111,	110,	1001,	1001,	1011,	110
2017-01-04 09:22:51 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 09:22:51 AI_Player.update()		110,	1100,	1010,	1101,	1011,	11,	101
2017-01-04 09:22:51 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1101,	1011
2017-01-04 09:22:51 AI_Player.update()		1010,	1001,	1010,	1011,	1101,	1100,	11
2017-01-04 09:22:51 AI_Player.update()		1100,	1110,	1101,	110,	1101,	110,	1001
2017-01-04 09:22:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:22:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:51 AI_Player.update()	update
2017-01-04 09:22:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:51 AI_Player.update()	update
2017-01-04 09:22:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:51 AI_Player.update()	Search took316ms
2017-01-04 09:22:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:51 AI_Player.update()		110,	101,	111,	1001,	111,	1110,	11
2017-01-04 09:22:51 AI_Player.update()		110,	111,	110,	1101,	1001,	1011,	110
2017-01-04 09:22:51 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-04 09:22:51 AI_Player.update()		110,	1100,	1010,	1010,	1011,	11,	101
2017-01-04 09:22:51 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1101,	1011
2017-01-04 09:22:51 AI_Player.update()		1010,	1001,	1010,	110,	1101,	1100,	11
2017-01-04 09:22:51 AI_Player.update()		1100,	1110,	1101,	101,	1101,	110,	1001
2017-01-04 09:22:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:51 AI_Player.update()	update
2017-01-04 09:22:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:51 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:52 AI_Player.update()	update
2017-01-04 09:22:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:52 AI_Player.update()	Search took61ms
2017-01-04 09:22:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:52 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-04 09:22:52 AI_Player.update()		110,	111,	110,	1101,	1001,	101,	110
2017-01-04 09:22:52 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-04 09:22:52 AI_Player.update()		110,	1100,	1010,	1010,	1011,	1101,	101
2017-01-04 09:22:52 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1100,	1011
2017-01-04 09:22:52 AI_Player.update()		1010,	1001,	1010,	110,	1101,	110,	11
2017-01-04 09:22:52 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1110,	1001
2017-01-04 09:22:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:52 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:52 AI_Player.update()	update
2017-01-04 09:22:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:52 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:52 AI_Player.update()	update
2017-01-04 09:22:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:52 AI_Player.update()	Search took648ms
2017-01-04 09:22:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:52 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 09:22:52 AI_Player.update()		110,	111,	110,	1001,	1001,	101,	110
2017-01-04 09:22:52 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-04 09:22:52 AI_Player.update()		110,	1100,	1010,	1101,	1011,	1101,	101
2017-01-04 09:22:52 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:22:52 AI_Player.update()		1010,	1001,	1010,	1011,	1101,	110,	11
2017-01-04 09:22:52 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1110,	1001
2017-01-04 09:22:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:52 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:53 AI_Player.update()	update
2017-01-04 09:22:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:53 AI_Player.update()	update
2017-01-04 09:22:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:53 AI_Player.update()	Search took115ms
2017-01-04 09:22:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:53 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 09:22:53 AI_Player.update()		110,	111,	110,	1001,	1001,	101,	110
2017-01-04 09:22:53 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-04 09:22:53 AI_Player.update()		110,	1100,	1010,	1101,	1011,	1101,	101
2017-01-04 09:22:53 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:22:53 AI_Player.update()		1001,	1010,	1011,	1101,	110,	11,	1010
2017-01-04 09:22:53 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1110,	1001
2017-01-04 09:22:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:53 AI_Player.update()	update
2017-01-04 09:22:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:53 AI_Player.update()	update
2017-01-04 09:22:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:53 AI_Player.update()	Search took300ms
2017-01-04 09:22:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:53 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-04 09:22:53 AI_Player.update()		110,	111,	110,	1101,	1001,	101,	110
2017-01-04 09:22:53 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-04 09:22:53 AI_Player.update()		110,	1100,	1010,	1010,	1011,	1101,	101
2017-01-04 09:22:53 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1100,	1011
2017-01-04 09:22:53 AI_Player.update()		1001,	1010,	1011,	110,	110,	11,	1010
2017-01-04 09:22:53 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1110,	1001
2017-01-04 09:22:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:53 AI_Player.update()	update
2017-01-04 09:22:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:22:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:53 AI_Player.update()	update
2017-01-04 09:22:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:54 AI_Player.update()	Search took533ms
2017-01-04 09:22:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:54 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-04 09:22:54 AI_Player.update()		110,	111,	110,	1101,	1001,	101,	110
2017-01-04 09:22:54 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-04 09:22:54 AI_Player.update()		110,	1100,	1010,	1010,	1011,	1101,	101
2017-01-04 09:22:54 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1100,	1011
2017-01-04 09:22:54 AI_Player.update()		1010,	1001,	1010,	1011,	110,	110,	11
2017-01-04 09:22:54 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1110,	1001
2017-01-04 09:22:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:22:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:54 AI_Player.update()	update
2017-01-04 09:22:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:54 AI_Player.update()	update
2017-01-04 09:22:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:55 AI_Player.update()	Search took286ms
2017-01-04 09:22:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:55 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-04 09:22:55 AI_Player.update()		110,	111,	110,	1101,	1001,	101,	110
2017-01-04 09:22:55 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-04 09:22:55 AI_Player.update()		110,	1100,	1010,	1010,	1011,	1101,	101
2017-01-04 09:22:55 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1100,	1011
2017-01-04 09:22:55 AI_Player.update()		11,	1010,	1001,	1010,	1011,	110,	110
2017-01-04 09:22:55 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1110,	1001
2017-01-04 09:22:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:55 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:55 AI_Player.update()	update
2017-01-04 09:22:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:55 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:55 AI_Player.update()	update
2017-01-04 09:22:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:56 AI_Player.update()	Search took992ms
2017-01-04 09:22:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:56 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-04 09:22:56 AI_Player.update()		111,	110,	1101,	1001,	101,	110,	110
2017-01-04 09:22:56 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-04 09:22:56 AI_Player.update()		110,	1100,	1010,	1010,	1011,	1101,	101
2017-01-04 09:22:56 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1100,	1011
2017-01-04 09:22:56 AI_Player.update()		11,	1010,	1001,	1010,	1011,	110,	110
2017-01-04 09:22:56 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1110,	1001
2017-01-04 09:22:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:22:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:56 AI_Player.update()	update
2017-01-04 09:22:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:22:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:56 AI_Player.update()	update
2017-01-04 09:22:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:56 AI_Player.update()	Search took258ms
2017-01-04 09:22:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:56 AI_Player.update()		110,	101,	111,	1001,	111,	1110,	11
2017-01-04 09:22:56 AI_Player.update()		111,	110,	1101,	1001,	101,	1011,	110
2017-01-04 09:22:56 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-04 09:22:56 AI_Player.update()		110,	1100,	1010,	1010,	1011,	11,	101
2017-01-04 09:22:56 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1101,	1011
2017-01-04 09:22:56 AI_Player.update()		11,	1010,	1001,	1010,	1011,	1100,	110
2017-01-04 09:22:56 AI_Player.update()		1100,	1110,	1101,	101,	1101,	110,	1001
2017-01-04 09:22:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:22:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:56 AI_Player.update()	update
2017-01-04 09:22:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:56 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:22:56 AI_Player.update()	Player b has won!
2017-01-04 09:22:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:56 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:22:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:22:56 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:22:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:56 AI_Player.update()	update
2017-01-04 09:22:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:56 AI_Player.update()	Search took61ms
2017-01-04 09:22:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:56 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:22:56 AI_Player.update()		1101,	101,	11,	1010,	101,	11,	110
2017-01-04 09:22:56 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-04 09:22:56 AI_Player.update()		101,	1110,	101,	1100,	1110,	110,	101
2017-01-04 09:22:56 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:22:56 AI_Player.update()		110,	101,	1001,	11,	101,	1101,	1100
2017-01-04 09:22:56 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1101,	1001
2017-01-04 09:22:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:57 AI_Player.update()	update
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:57 AI_Player.update()	update
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:57 AI_Player.update()	Search took32ms
2017-01-04 09:22:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:57 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:22:57 AI_Player.update()		101,	11,	1010,	101,	11,	110,	1101
2017-01-04 09:22:57 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-04 09:22:57 AI_Player.update()		101,	1110,	101,	1100,	1110,	110,	101
2017-01-04 09:22:57 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:22:57 AI_Player.update()		110,	101,	1001,	11,	101,	1101,	1100
2017-01-04 09:22:57 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1101,	1001
2017-01-04 09:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:57 AI_Player.update()	update
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:57 AI_Player.update()	update
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:57 AI_Player.update()	Search took154ms
2017-01-04 09:22:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:57 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:22:57 AI_Player.update()		101,	11,	1010,	101,	11,	110,	1101
2017-01-04 09:22:57 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-04 09:22:57 AI_Player.update()		1110,	101,	1100,	1110,	110,	101,	101
2017-01-04 09:22:57 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:22:57 AI_Player.update()		110,	101,	1001,	11,	101,	1101,	1100
2017-01-04 09:22:57 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1101,	1001
2017-01-04 09:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:57 AI_Player.update()	update
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:57 AI_Player.update()	update
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:57 AI_Player.update()	Search took92ms
2017-01-04 09:22:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:57 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:22:57 AI_Player.update()		1101,	101,	11,	1010,	101,	11,	110
2017-01-04 09:22:57 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-04 09:22:57 AI_Player.update()		1110,	101,	1100,	1110,	110,	101,	101
2017-01-04 09:22:57 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-04 09:22:57 AI_Player.update()		110,	101,	1001,	11,	101,	1101,	1100
2017-01-04 09:22:57 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1101,	1001
2017-01-04 09:22:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:57 AI_Player.update()	update
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:58 AI_Player.update()	update
2017-01-04 09:22:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:58 AI_Player.update()	Search took199ms
2017-01-04 09:22:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:58 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 09:22:58 AI_Player.update()		1101,	101,	11,	1010,	101,	1110,	110
2017-01-04 09:22:58 AI_Player.update()		1110,	1010,	1110,	1101,	111,	101,	1011
2017-01-04 09:22:58 AI_Player.update()		1110,	101,	1100,	1110,	110,	1010,	101
2017-01-04 09:22:58 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1101,	1011
2017-01-04 09:22:58 AI_Player.update()		110,	101,	1001,	11,	101,	1101,	1100
2017-01-04 09:22:58 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:22:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:22:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:58 AI_Player.update()	update
2017-01-04 09:22:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:22:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:58 AI_Player.update()	update
2017-01-04 09:22:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:22:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:22:58 AI_Player.update()	Search took313ms
2017-01-04 09:22:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:58 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-04 09:22:58 AI_Player.update()		1101,	1010,	11,	1010,	101,	1110,	110
2017-01-04 09:22:58 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:22:58 AI_Player.update()		1110,	1010,	1100,	1110,	110,	1010,	101
2017-01-04 09:22:58 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1101,	1011
2017-01-04 09:22:58 AI_Player.update()		110,	1010,	1001,	11,	101,	1101,	1100
2017-01-04 09:22:58 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:22:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:22:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:58 AI_Player.update()	update
2017-01-04 09:22:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:22:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:22:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:22:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:22:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:22:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:22:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:22:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:59 AI_Player.update()	update
2017-01-04 09:22:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:22:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:22:59 AI_Player.update()	Search took325ms
2017-01-04 09:22:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:22:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:59 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-04 09:22:59 AI_Player.update()		1101,	1010,	11,	1010,	101,	1110,	110
2017-01-04 09:22:59 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:22:59 AI_Player.update()		101,	1110,	1010,	1100,	1110,	110,	1010
2017-01-04 09:22:59 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1101,	1011
2017-01-04 09:22:59 AI_Player.update()		110,	1010,	1001,	11,	101,	1101,	1100
2017-01-04 09:22:59 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:22:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:22:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:22:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:59 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:59 AI_Player.update()	update
2017-01-04 09:22:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:22:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:22:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:22:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:22:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:22:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:22:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:22:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:22:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:22:59 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:22:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:22:59 AI_Player.update()	update
2017-01-04 09:22:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:00 AI_Player.update()	Search took529ms
2017-01-04 09:23:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:00 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-04 09:23:00 AI_Player.update()		1101,	1010,	11,	1010,	101,	1110,	110
2017-01-04 09:23:00 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:23:00 AI_Player.update()		1110,	1010,	1100,	1110,	110,	1010,	101
2017-01-04 09:23:00 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1101,	1011
2017-01-04 09:23:00 AI_Player.update()		110,	1010,	1001,	11,	101,	1101,	1100
2017-01-04 09:23:00 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:00 AI_Player.update()	update
2017-01-04 09:23:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:00 AI_Player.update()	update
2017-01-04 09:23:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:00 AI_Player.update()	Search took344ms
2017-01-04 09:23:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:00 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-04 09:23:00 AI_Player.update()		1101,	1010,	11,	1101,	101,	1110,	110
2017-01-04 09:23:00 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-04 09:23:00 AI_Player.update()		1110,	1010,	1100,	1011,	110,	1010,	101
2017-01-04 09:23:00 AI_Player.update()		1110,	101,	1101,	11,	1011,	1101,	1011
2017-01-04 09:23:00 AI_Player.update()		110,	1010,	1001,	1011,	101,	1101,	1100
2017-01-04 09:23:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 09:23:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:00 AI_Player.update()	update
2017-01-04 09:23:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:00 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:00 AI_Player.update()	update
2017-01-04 09:23:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:01 AI_Player.update()	Search took237ms
2017-01-04 09:23:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:01 AI_Player.update()		110,	11,	111,	1101,	111,	11,	11
2017-01-04 09:23:01 AI_Player.update()		1101,	1010,	11,	1110,	101,	1110,	110
2017-01-04 09:23:01 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 09:23:01 AI_Player.update()		1110,	1010,	1100,	11,	110,	1010,	101
2017-01-04 09:23:01 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1101,	1011
2017-01-04 09:23:01 AI_Player.update()		110,	1010,	1001,	1010,	101,	1101,	1100
2017-01-04 09:23:01 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 09:23:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:01 AI_Player.update()	update
2017-01-04 09:23:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:01 AI_Player.update()	update
2017-01-04 09:23:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:01 AI_Player.update()	Search took485ms
2017-01-04 09:23:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:01 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:23:01 AI_Player.update()		1101,	1010,	11,	1011,	101,	1110,	110
2017-01-04 09:23:01 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 09:23:01 AI_Player.update()		1110,	1010,	1100,	1011,	110,	1010,	101
2017-01-04 09:23:01 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 09:23:01 AI_Player.update()		110,	1010,	1001,	1010,	101,	1101,	1100
2017-01-04 09:23:01 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1010,	1001
2017-01-04 09:23:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:01 AI_Player.update()	update
2017-01-04 09:23:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:01 AI_Player.update()	update
2017-01-04 09:23:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:02 AI_Player.update()	Search took109ms
2017-01-04 09:23:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:02 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-04 09:23:02 AI_Player.update()		1101,	1010,	11,	1011,	101,	101,	110
2017-01-04 09:23:02 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 09:23:02 AI_Player.update()		1110,	1010,	1100,	1011,	110,	1101,	101
2017-01-04 09:23:02 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 09:23:02 AI_Player.update()		110,	1010,	1001,	1010,	101,	1010,	1100
2017-01-04 09:23:02 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-04 09:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:02 AI_Player.update()	update
2017-01-04 09:23:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:02 AI_Player.update()	update
2017-01-04 09:23:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:02 AI_Player.update()	Search took328ms
2017-01-04 09:23:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:02 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-04 09:23:02 AI_Player.update()		1101,	1010,	11,	1011,	101,	101,	110
2017-01-04 09:23:02 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 09:23:02 AI_Player.update()		1110,	1010,	1100,	1011,	110,	1101,	101
2017-01-04 09:23:02 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 09:23:02 AI_Player.update()		1010,	1001,	1010,	101,	1010,	1100,	110
2017-01-04 09:23:02 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-04 09:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:02 AI_Player.update()	update
2017-01-04 09:23:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:23:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:02 AI_Player.update()	update
2017-01-04 09:23:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:02 AI_Player.update()	Search took68ms
2017-01-04 09:23:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:02 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:23:02 AI_Player.update()		1101,	1010,	11,	1011,	101,	1110,	110
2017-01-04 09:23:02 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 09:23:02 AI_Player.update()		1110,	1010,	1100,	1011,	110,	1010,	101
2017-01-04 09:23:02 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 09:23:02 AI_Player.update()		1010,	1001,	1010,	101,	1010,	1101,	110
2017-01-04 09:23:02 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-04 09:23:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:02 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:03 AI_Player.update()	update
2017-01-04 09:23:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:03 AI_Player.update()	update
2017-01-04 09:23:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:03 AI_Player.update()	Search took656ms
2017-01-04 09:23:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:03 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:23:03 AI_Player.update()		1101,	1010,	11,	1011,	101,	1110,	110
2017-01-04 09:23:03 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 09:23:03 AI_Player.update()		1010,	1100,	1011,	110,	1010,	101,	1110
2017-01-04 09:23:03 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 09:23:03 AI_Player.update()		1010,	1001,	1010,	101,	1010,	1101,	110
2017-01-04 09:23:03 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-04 09:23:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:03 AI_Player.update()	update
2017-01-04 09:23:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:23:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:03 AI_Player.update()	update
2017-01-04 09:23:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:04 AI_Player.update()	Search took233ms
2017-01-04 09:23:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:04 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:23:04 AI_Player.update()		110,	1101,	1010,	11,	1011,	101,	1110
2017-01-04 09:23:04 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 09:23:04 AI_Player.update()		1010,	1100,	1011,	110,	1010,	101,	1110
2017-01-04 09:23:04 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 09:23:04 AI_Player.update()		1010,	1001,	1010,	101,	1010,	1101,	110
2017-01-04 09:23:04 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-04 09:23:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:23:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:04 AI_Player.update()	update
2017-01-04 09:23:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:23:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:04 AI_Player.update()	update
2017-01-04 09:23:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:05 AI_Player.update()	Search took1120ms
2017-01-04 09:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:05 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-04 09:23:05 AI_Player.update()		110,	1101,	1010,	11,	1011,	101,	1110
2017-01-04 09:23:05 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 09:23:05 AI_Player.update()		1010,	1100,	1011,	1010,	1010,	101,	1110
2017-01-04 09:23:05 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-04 09:23:05 AI_Player.update()		1010,	1001,	1010,	1101,	1010,	1101,	110
2017-01-04 09:23:05 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1100,	1001
2017-01-04 09:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:05 AI_Player.update()	update
2017-01-04 09:23:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:05 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:23:05 AI_Player.update()	Player a has won!
2017-01-04 09:23:05 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:05 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:23:05 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:05 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:05 AI_Player.update()	update
2017-01-04 09:23:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:05 AI_Player.update()	Search took47ms
2017-01-04 09:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:05 AI_Player.update()		110,	1001,	111,	110,	111,	11,	11
2017-01-04 09:23:05 AI_Player.update()		1010,	111,	1011,	110,	1100,	110,	101
2017-01-04 09:23:05 AI_Player.update()		1110,	1010,	1110,	11,	111,	1010,	1011
2017-01-04 09:23:05 AI_Player.update()		1011,	110,	1001,	1010,	11,	1101,	111
2017-01-04 09:23:05 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:23:05 AI_Player.update()		101,	1011,	111,	1101,	101,	11,	111
2017-01-04 09:23:05 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1011,	1001
2017-01-04 09:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:05 AI_Player.update()	update
2017-01-04 09:23:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:06 AI_Player.update()	update
2017-01-04 09:23:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:06 AI_Player.update()	Search took48ms
2017-01-04 09:23:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:06 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 09:23:06 AI_Player.update()		1010,	111,	1011,	110,	1100,	1010,	101
2017-01-04 09:23:06 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-04 09:23:06 AI_Player.update()		1011,	110,	1001,	1010,	11,	1010,	111
2017-01-04 09:23:06 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 09:23:06 AI_Player.update()		101,	1011,	111,	1101,	101,	1011,	111
2017-01-04 09:23:06 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-04 09:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:06 AI_Player.update()	update
2017-01-04 09:23:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:06 AI_Player.update()	update
2017-01-04 09:23:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:06 AI_Player.update()	Search took274ms
2017-01-04 09:23:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:06 AI_Player.update()		110,	111,	111,	110,	111,	110,	11
2017-01-04 09:23:06 AI_Player.update()		1010,	1010,	1011,	110,	1100,	1010,	101
2017-01-04 09:23:06 AI_Player.update()		1110,	110,	1110,	11,	111,	1101,	1011
2017-01-04 09:23:06 AI_Player.update()		1011,	101,	1001,	1010,	11,	1010,	111
2017-01-04 09:23:06 AI_Player.update()		1110,	1011,	1101,	110,	1011,	11,	1011
2017-01-04 09:23:06 AI_Player.update()		101,	1100,	111,	1101,	101,	1011,	111
2017-01-04 09:23:06 AI_Player.update()		1100,	1001,	1101,	110,	1101,	11,	1001
2017-01-04 09:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:06 AI_Player.update()	update
2017-01-04 09:23:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:06 AI_Player.update()	update
2017-01-04 09:23:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:07 AI_Player.update()	Search took273ms
2017-01-04 09:23:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:07 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-04 09:23:07 AI_Player.update()		1010,	1010,	1011,	110,	1100,	1101,	101
2017-01-04 09:23:07 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-04 09:23:07 AI_Player.update()		1011,	101,	1001,	1010,	11,	11,	111
2017-01-04 09:23:07 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1011,	1011
2017-01-04 09:23:07 AI_Player.update()		101,	1100,	111,	1101,	101,	11,	111
2017-01-04 09:23:07 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-04 09:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:07 AI_Player.update()	update
2017-01-04 09:23:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:23:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:07 AI_Player.update()	update
2017-01-04 09:23:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:07 AI_Player.update()	Search took129ms
2017-01-04 09:23:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:07 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-04 09:23:07 AI_Player.update()		1010,	1010,	1011,	110,	1100,	1101,	101
2017-01-04 09:23:07 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-04 09:23:07 AI_Player.update()		1011,	101,	1001,	11,	11,	11,	111
2017-01-04 09:23:07 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-04 09:23:07 AI_Player.update()		101,	1100,	111,	110,	101,	11,	111
2017-01-04 09:23:07 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	110,	1001
2017-01-04 09:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:07 AI_Player.update()	update
2017-01-04 09:23:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:07 AI_Player.update()	update
2017-01-04 09:23:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:07 AI_Player.update()	Search took114ms
2017-01-04 09:23:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:07 AI_Player.update()		110,	111,	111,	1101,	111,	1010,	11
2017-01-04 09:23:07 AI_Player.update()		1010,	1010,	1011,	110,	1100,	1101,	101
2017-01-04 09:23:07 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-04 09:23:07 AI_Player.update()		1011,	101,	1001,	110,	11,	11,	111
2017-01-04 09:23:07 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1011,	1011
2017-01-04 09:23:07 AI_Player.update()		101,	1100,	111,	1010,	101,	11,	111
2017-01-04 09:23:07 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-04 09:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:07 AI_Player.update()	update
2017-01-04 09:23:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	1 3
2017-01-04 09:23:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:07 AI_Player.update()	update
2017-01-04 09:23:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:07 AI_Player.update()	Search took35ms
2017-01-04 09:23:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:07 AI_Player.update()		110,	111,	111,	1101,	111,	110,	11
2017-01-04 09:23:07 AI_Player.update()		1010,	1010,	1011,	110,	1100,	1010,	101
2017-01-04 09:23:07 AI_Player.update()		1110,	110,	1110,	110,	111,	1101,	1011
2017-01-04 09:23:07 AI_Player.update()		1011,	101,	1001,	110,	11,	1010,	111
2017-01-04 09:23:07 AI_Player.update()		1110,	1011,	1101,	11,	1011,	11,	1011
2017-01-04 09:23:07 AI_Player.update()		101,	1100,	111,	1010,	101,	1011,	111
2017-01-04 09:23:07 AI_Player.update()		1100,	1001,	1101,	110,	1101,	11,	1001
2017-01-04 09:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:07 GameBoard.setupTreasurePanel()	1 3
2017-01-04 09:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:08 AI_Player.update()	update
2017-01-04 09:23:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	1 3
2017-01-04 09:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:08 AI_Player.update()	update
2017-01-04 09:23:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:08 AI_Player.update()	Search took383ms
2017-01-04 09:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:08 AI_Player.update()		110,	111,	111,	1101,	111,	1010,	11
2017-01-04 09:23:08 AI_Player.update()		1010,	1010,	1011,	110,	1100,	1101,	101
2017-01-04 09:23:08 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-04 09:23:08 AI_Player.update()		1011,	101,	1001,	110,	11,	11,	111
2017-01-04 09:23:08 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1011,	1011
2017-01-04 09:23:08 AI_Player.update()		101,	1100,	111,	1010,	101,	11,	111
2017-01-04 09:23:08 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-04 09:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	1 3
2017-01-04 09:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:08 AI_Player.update()	update
2017-01-04 09:23:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	1 4
2017-01-04 09:23:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:08 AI_Player.update()	update
2017-01-04 09:23:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:08 AI_Player.update()	Search took98ms
2017-01-04 09:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:08 AI_Player.update()		110,	111,	111,	1101,	111,	1010,	11
2017-01-04 09:23:08 AI_Player.update()		1010,	1010,	1011,	110,	1100,	1101,	101
2017-01-04 09:23:08 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-04 09:23:08 AI_Player.update()		1011,	101,	1001,	110,	11,	11,	111
2017-01-04 09:23:08 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1011,	1011
2017-01-04 09:23:08 AI_Player.update()		1100,	111,	1010,	101,	11,	111,	101
2017-01-04 09:23:08 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-04 09:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	1 4
2017-01-04 09:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:08 AI_Player.update()	update
2017-01-04 09:23:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:23:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:09 AI_Player.update()	update
2017-01-04 09:23:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:09 AI_Player.update()	Search took125ms
2017-01-04 09:23:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:09 AI_Player.update()		110,	1010,	111,	1101,	111,	1010,	11
2017-01-04 09:23:09 AI_Player.update()		1010,	110,	1011,	110,	1100,	1101,	101
2017-01-04 09:23:09 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-04 09:23:09 AI_Player.update()		1011,	1011,	1001,	110,	11,	11,	111
2017-01-04 09:23:09 AI_Player.update()		1110,	111,	1101,	11,	1011,	1011,	1011
2017-01-04 09:23:09 AI_Player.update()		1100,	1001,	1010,	101,	11,	111,	101
2017-01-04 09:23:09 AI_Player.update()		1100,	111,	1101,	110,	1101,	110,	1001
2017-01-04 09:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:09 AI_Player.update()	update
2017-01-04 09:23:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:09 AI_Player.update()	update
2017-01-04 09:23:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:09 AI_Player.update()	Search took74ms
2017-01-04 09:23:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:09 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 09:23:09 AI_Player.update()		1010,	110,	1011,	1101,	1100,	1101,	101
2017-01-04 09:23:09 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-04 09:23:09 AI_Player.update()		1011,	1011,	1001,	110,	11,	11,	111
2017-01-04 09:23:09 AI_Player.update()		1110,	111,	1101,	110,	1011,	1011,	1011
2017-01-04 09:23:09 AI_Player.update()		1100,	1001,	1010,	11,	11,	111,	101
2017-01-04 09:23:09 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:09 AI_Player.update()	update
2017-01-04 09:23:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:09 AI_Player.update()	update
2017-01-04 09:23:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:09 AI_Player.update()	Search took124ms
2017-01-04 09:23:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:09 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 09:23:09 AI_Player.update()		1010,	110,	1011,	1101,	1100,	1101,	101
2017-01-04 09:23:09 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-04 09:23:09 AI_Player.update()		1011,	1011,	1001,	110,	11,	11,	111
2017-01-04 09:23:09 AI_Player.update()		1110,	111,	1101,	110,	1011,	1011,	1011
2017-01-04 09:23:09 AI_Player.update()		1001,	1010,	11,	11,	111,	101,	1100
2017-01-04 09:23:09 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:09 AI_Player.update()	update
2017-01-04 09:23:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	2 5
2017-01-04 09:23:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:09 AI_Player.update()	update
2017-01-04 09:23:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:10 AI_Player.update()	Search took194ms
2017-01-04 09:23:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:10 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 09:23:10 AI_Player.update()		1010,	110,	1011,	110,	1100,	1101,	101
2017-01-04 09:23:10 AI_Player.update()		1110,	101,	1110,	1101,	111,	1010,	1011
2017-01-04 09:23:10 AI_Player.update()		1011,	1011,	1001,	110,	11,	11,	111
2017-01-04 09:23:10 AI_Player.update()		1110,	111,	1101,	110,	1011,	1011,	1011
2017-01-04 09:23:10 AI_Player.update()		1001,	1010,	11,	110,	111,	101,	1100
2017-01-04 09:23:10 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-04 09:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	2 5
2017-01-04 09:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:10 AI_Player.update()	update
2017-01-04 09:23:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:23:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:10 AI_Player.update()	update
2017-01-04 09:23:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:10 AI_Player.update()	Search took279ms
2017-01-04 09:23:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:10 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 09:23:10 AI_Player.update()		101,	1010,	110,	1011,	110,	1100,	1101
2017-01-04 09:23:10 AI_Player.update()		1110,	101,	1110,	1101,	111,	1010,	1011
2017-01-04 09:23:10 AI_Player.update()		1011,	1011,	1001,	110,	11,	11,	111
2017-01-04 09:23:10 AI_Player.update()		1110,	111,	1101,	110,	1011,	1011,	1011
2017-01-04 09:23:10 AI_Player.update()		1001,	1010,	11,	110,	111,	101,	1100
2017-01-04 09:23:10 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-04 09:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:10 AI_Player.update()	update
2017-01-04 09:23:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	3 6
2017-01-04 09:23:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:10 AI_Player.update()	update
2017-01-04 09:23:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:11 AI_Player.update()	Search took150ms
2017-01-04 09:23:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:11 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 09:23:11 AI_Player.update()		101,	1010,	110,	1011,	110,	1010,	1101
2017-01-04 09:23:11 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 09:23:11 AI_Player.update()		1011,	1011,	1001,	110,	11,	1011,	111
2017-01-04 09:23:11 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:23:11 AI_Player.update()		1001,	1010,	11,	110,	111,	110,	1100
2017-01-04 09:23:11 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-04 09:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:11 GameBoard.setupTreasurePanel()	3 6
2017-01-04 09:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:11 AI_Player.update()	update
2017-01-04 09:23:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:11 GameBoard.setupTreasurePanel()	3 6
2017-01-04 09:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:11 AI_Player.update()	update
2017-01-04 09:23:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:11 AI_Player.update()	Search took195ms
2017-01-04 09:23:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:11 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 09:23:11 AI_Player.update()		1010,	110,	1011,	110,	1010,	1101,	101
2017-01-04 09:23:11 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 09:23:11 AI_Player.update()		1011,	1011,	1001,	110,	11,	1011,	111
2017-01-04 09:23:11 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:23:11 AI_Player.update()		1001,	1010,	11,	110,	111,	110,	1100
2017-01-04 09:23:11 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-04 09:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:11 GameBoard.setupTreasurePanel()	3 6
2017-01-04 09:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:11 AI_Player.update()	update
2017-01-04 09:23:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:11 GameBoard.setupTreasurePanel()	3 6
2017-01-04 09:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:11 AI_Player.update()	update
2017-01-04 09:23:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:11 AI_Player.update()	Search took280ms
2017-01-04 09:23:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:11 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 09:23:11 AI_Player.update()		1010,	110,	1011,	110,	1010,	1101,	101
2017-01-04 09:23:11 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 09:23:11 AI_Player.update()		111,	1011,	1011,	1001,	110,	11,	1011
2017-01-04 09:23:11 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:23:11 AI_Player.update()		1001,	1010,	11,	110,	111,	110,	1100
2017-01-04 09:23:11 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-04 09:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:11 GameBoard.setupTreasurePanel()	3 6
2017-01-04 09:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:12 AI_Player.update()	update
2017-01-04 09:23:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:23:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:12 AI_Player.update()	update
2017-01-04 09:23:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:12 AI_Player.update()	Search took209ms
2017-01-04 09:23:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:12 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 09:23:12 AI_Player.update()		110,	1011,	110,	1010,	1101,	101,	1010
2017-01-04 09:23:12 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 09:23:12 AI_Player.update()		111,	1011,	1011,	1001,	110,	11,	1011
2017-01-04 09:23:12 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:23:12 AI_Player.update()		1001,	1010,	11,	110,	111,	110,	1100
2017-01-04 09:23:12 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-04 09:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:12 AI_Player.update()	update
2017-01-04 09:23:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:12 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:23:12 AI_Player.update()	Player b has won!
2017-01-04 09:23:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:23:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:12 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:23:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:12 AI_Player.update()	update
2017-01-04 09:23:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:12 AI_Player.update()	Search took108ms
2017-01-04 09:23:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:12 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:23:12 AI_Player.update()		1110,	101,	1100,	101,	110,	1001,	101
2017-01-04 09:23:12 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-04 09:23:12 AI_Player.update()		1001,	1100,	101,	1010,	1110,	1100,	111
2017-01-04 09:23:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:23:12 AI_Player.update()		1011,	11,	1011,	1001,	1101,	1001,	1010
2017-01-04 09:23:12 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:12 AI_Player.update()	update
2017-01-04 09:23:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:12 AI_Player.update()	update
2017-01-04 09:23:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:13 AI_Player.update()	Search took475ms
2017-01-04 09:23:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:13 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:23:13 AI_Player.update()		1110,	11,	1100,	101,	110,	1001,	101
2017-01-04 09:23:13 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1001,	1011
2017-01-04 09:23:13 AI_Player.update()		1001,	101,	101,	1010,	1110,	1100,	111
2017-01-04 09:23:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 09:23:13 AI_Player.update()		1011,	1100,	1011,	1001,	1101,	1001,	1010
2017-01-04 09:23:13 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:13 AI_Player.update()	update
2017-01-04 09:23:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:13 AI_Player.update()	update
2017-01-04 09:23:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:13 AI_Player.update()	Search took362ms
2017-01-04 09:23:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:13 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 09:23:13 AI_Player.update()		1110,	1100,	1100,	101,	110,	1001,	101
2017-01-04 09:23:13 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-04 09:23:13 AI_Player.update()		1001,	11,	101,	1010,	1110,	1100,	111
2017-01-04 09:23:13 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-04 09:23:13 AI_Player.update()		1011,	101,	1011,	1001,	1101,	1001,	1010
2017-01-04 09:23:13 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:14 AI_Player.update()	update
2017-01-04 09:23:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:14 AI_Player.update()	update
2017-01-04 09:23:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:14 AI_Player.update()	Search took107ms
2017-01-04 09:23:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:14 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:23:14 AI_Player.update()		1110,	11,	1100,	101,	110,	1001,	101
2017-01-04 09:23:14 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1001,	1011
2017-01-04 09:23:14 AI_Player.update()		1001,	101,	101,	1010,	1110,	1100,	111
2017-01-04 09:23:14 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 09:23:14 AI_Player.update()		1011,	1100,	1011,	1001,	1101,	1001,	1010
2017-01-04 09:23:14 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:14 AI_Player.update()	update
2017-01-04 09:23:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:23:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:14 AI_Player.update()	update
2017-01-04 09:23:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:14 AI_Player.update()	Search took385ms
2017-01-04 09:23:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:14 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:23:14 AI_Player.update()		1110,	11,	1100,	1101,	110,	1001,	101
2017-01-04 09:23:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:23:14 AI_Player.update()		1001,	101,	101,	101,	1110,	1100,	111
2017-01-04 09:23:14 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-04 09:23:14 AI_Player.update()		1011,	1100,	1011,	1100,	1101,	1001,	1010
2017-01-04 09:23:14 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:14 AI_Player.update()	update
2017-01-04 09:23:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:15 AI_Player.update()	update
2017-01-04 09:23:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:15 AI_Player.update()	Search took312ms
2017-01-04 09:23:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:15 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:23:15 AI_Player.update()		11,	1100,	1101,	110,	1001,	101,	1110
2017-01-04 09:23:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:23:15 AI_Player.update()		1001,	101,	101,	101,	1110,	1100,	111
2017-01-04 09:23:15 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-04 09:23:15 AI_Player.update()		1011,	1100,	1011,	1100,	1101,	1001,	1010
2017-01-04 09:23:15 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:23:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:15 AI_Player.update()	update
2017-01-04 09:23:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:23:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:15 AI_Player.update()	update
2017-01-04 09:23:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:15 AI_Player.update()	Search took246ms
2017-01-04 09:23:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:15 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:23:15 AI_Player.update()		11,	1100,	1101,	110,	1001,	101,	1110
2017-01-04 09:23:15 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:23:15 AI_Player.update()		1001,	11,	101,	101,	1110,	1100,	111
2017-01-04 09:23:15 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-04 09:23:15 AI_Player.update()		1011,	101,	1011,	1100,	1101,	1001,	1010
2017-01-04 09:23:15 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:23:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:23:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:15 AI_Player.update()	update
2017-01-04 09:23:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:15 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:23:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:16 AI_Player.update()	update
2017-01-04 09:23:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:16 AI_Player.update()	Search took352ms
2017-01-04 09:23:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:16 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:23:16 AI_Player.update()		1100,	1101,	110,	1001,	101,	1110,	11
2017-01-04 09:23:16 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 09:23:16 AI_Player.update()		1001,	11,	101,	101,	1110,	1100,	111
2017-01-04 09:23:16 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-04 09:23:16 AI_Player.update()		1011,	101,	1011,	1100,	1101,	1001,	1010
2017-01-04 09:23:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:23:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:23:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:16 AI_Player.update()	update
2017-01-04 09:23:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:23:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:16 AI_Player.update()	update
2017-01-04 09:23:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:16 AI_Player.update()	Search took250ms
2017-01-04 09:23:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:16 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-04 09:23:16 AI_Player.update()		1100,	1101,	110,	1010,	101,	1110,	11
2017-01-04 09:23:16 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-04 09:23:16 AI_Player.update()		1001,	11,	101,	1001,	1110,	1100,	111
2017-01-04 09:23:16 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-04 09:23:16 AI_Player.update()		1011,	101,	1011,	101,	1101,	1001,	1010
2017-01-04 09:23:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:23:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:23:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:16 AI_Player.update()	update
2017-01-04 09:23:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:17 AI_Player.update()	update
2017-01-04 09:23:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:17 AI_Player.update()	Search took298ms
2017-01-04 09:23:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:17 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-04 09:23:17 AI_Player.update()		1100,	1101,	110,	1010,	101,	1110,	11
2017-01-04 09:23:17 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-04 09:23:17 AI_Player.update()		1001,	11,	101,	1001,	1110,	1100,	111
2017-01-04 09:23:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-04 09:23:17 AI_Player.update()		1010,	1011,	101,	1011,	101,	1101,	1001
2017-01-04 09:23:17 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:23:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:17 AI_Player.update()	update
2017-01-04 09:23:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:23:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:17 AI_Player.update()	update
2017-01-04 09:23:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:17 AI_Player.update()	Search took320ms
2017-01-04 09:23:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:17 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-04 09:23:17 AI_Player.update()		1100,	1101,	110,	1010,	101,	1110,	11
2017-01-04 09:23:17 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-04 09:23:17 AI_Player.update()		1001,	11,	101,	1001,	1110,	1100,	111
2017-01-04 09:23:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-04 09:23:17 AI_Player.update()		1001,	1010,	1011,	101,	1011,	101,	1101
2017-01-04 09:23:17 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 09:23:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:23:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:17 AI_Player.update()	update
2017-01-04 09:23:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:18 AI_Player.update()	update
2017-01-04 09:23:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:18 AI_Player.update()	Search took71ms
2017-01-04 09:23:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:18 AI_Player.update()		110,	1100,	111,	1001,	111,	1110,	11
2017-01-04 09:23:18 AI_Player.update()		1100,	1101,	110,	1010,	101,	1001,	11
2017-01-04 09:23:18 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 09:23:18 AI_Player.update()		1001,	11,	101,	1001,	1110,	1001,	111
2017-01-04 09:23:18 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 09:23:18 AI_Player.update()		1001,	1010,	1011,	101,	1011,	1001,	1101
2017-01-04 09:23:18 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 09:23:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:18 AI_Player.update()	update
2017-01-04 09:23:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:18 AI_Player.update()	update
2017-01-04 09:23:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:18 AI_Player.update()	Search took530ms
2017-01-04 09:23:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:18 AI_Player.update()		110,	1100,	111,	1001,	111,	1110,	11
2017-01-04 09:23:18 AI_Player.update()		11,	1100,	1101,	110,	1010,	101,	1001
2017-01-04 09:23:18 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 09:23:18 AI_Player.update()		1001,	11,	101,	1001,	1110,	1001,	111
2017-01-04 09:23:18 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 09:23:18 AI_Player.update()		1001,	1010,	1011,	101,	1011,	1001,	1101
2017-01-04 09:23:18 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 09:23:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:19 AI_Player.update()	update
2017-01-04 09:23:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:23:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:19 AI_Player.update()	update
2017-01-04 09:23:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:19 AI_Player.update()	Search took129ms
2017-01-04 09:23:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:19 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-04 09:23:19 AI_Player.update()		11,	1100,	1101,	110,	1010,	1100,	1001
2017-01-04 09:23:19 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-04 09:23:19 AI_Player.update()		1001,	11,	101,	1001,	1110,	101,	111
2017-01-04 09:23:19 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-04 09:23:19 AI_Player.update()		1001,	1010,	1011,	101,	1011,	101,	1101
2017-01-04 09:23:19 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-04 09:23:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:23:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:19 AI_Player.update()	update
2017-01-04 09:23:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:19 AI_Player.update()	update
2017-01-04 09:23:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:19 AI_Player.update()	Search took472ms
2017-01-04 09:23:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:19 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:23:19 AI_Player.update()		11,	1100,	1101,	110,	1010,	1100,	1001
2017-01-04 09:23:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-04 09:23:19 AI_Player.update()		1001,	101,	101,	1001,	1110,	101,	111
2017-01-04 09:23:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-04 09:23:19 AI_Player.update()		1001,	1100,	1011,	101,	1011,	101,	1101
2017-01-04 09:23:19 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1110,	1001
2017-01-04 09:23:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:20 AI_Player.update()	update
2017-01-04 09:23:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:20 AI_Player.update()	update
2017-01-04 09:23:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:20 AI_Player.update()	Search took634ms
2017-01-04 09:23:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:20 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-04 09:23:20 AI_Player.update()		11,	1100,	1101,	110,	1010,	1001,	1001
2017-01-04 09:23:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-04 09:23:20 AI_Player.update()		1001,	101,	101,	1001,	1110,	1001,	111
2017-01-04 09:23:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 09:23:20 AI_Player.update()		1001,	1100,	1011,	101,	1011,	1110,	1101
2017-01-04 09:23:20 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:23:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:20 AI_Player.update()	update
2017-01-04 09:23:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:20 AI_Player.update()	update
2017-01-04 09:23:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:21 AI_Player.update()	Search took653ms
2017-01-04 09:23:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:21 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-04 09:23:21 AI_Player.update()		11,	1100,	1101,	101,	1010,	1001,	1001
2017-01-04 09:23:21 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-04 09:23:21 AI_Player.update()		1001,	101,	101,	1100,	1110,	1001,	111
2017-01-04 09:23:21 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 09:23:21 AI_Player.update()		1001,	1100,	1011,	101,	1011,	1110,	1101
2017-01-04 09:23:21 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 09:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:21 AI_Player.update()	update
2017-01-04 09:23:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:21 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:23:21 AI_Player.update()	Player a has won!
2017-01-04 09:23:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:21 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:23:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:21 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:23:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:21 AI_Player.update()	update
2017-01-04 09:23:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:21 AI_Player.update()	Search took105ms
2017-01-04 09:23:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:21 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 09:23:21 AI_Player.update()		1010,	1010,	110,	101,	11,	110,	110
2017-01-04 09:23:21 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-04 09:23:21 AI_Player.update()		1100,	1010,	101,	1001,	1010,	110,	101
2017-01-04 09:23:21 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 09:23:21 AI_Player.update()		101,	11,	101,	111,	11,	1010,	1100
2017-01-04 09:23:21 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1011,	1001
2017-01-04 09:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:22 AI_Player.update()	update
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:22 AI_Player.update()	update
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:22 AI_Player.update()	Search took38ms
2017-01-04 09:23:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:22 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 09:23:22 AI_Player.update()		1010,	110,	101,	11,	110,	110,	1010
2017-01-04 09:23:22 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-04 09:23:22 AI_Player.update()		1100,	1010,	101,	1001,	1010,	110,	101
2017-01-04 09:23:22 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 09:23:22 AI_Player.update()		101,	11,	101,	111,	11,	1010,	1100
2017-01-04 09:23:22 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1011,	1001
2017-01-04 09:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:22 AI_Player.update()	update
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:22 AI_Player.update()	update
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:22 AI_Player.update()	Search took99ms
2017-01-04 09:23:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:22 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 09:23:22 AI_Player.update()		1010,	110,	101,	11,	110,	110,	1010
2017-01-04 09:23:22 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-04 09:23:22 AI_Player.update()		1010,	101,	1001,	1010,	110,	101,	1100
2017-01-04 09:23:22 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 09:23:22 AI_Player.update()		101,	11,	101,	111,	11,	1010,	1100
2017-01-04 09:23:22 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1011,	1001
2017-01-04 09:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:22 AI_Player.update()	update
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:22 AI_Player.update()	update
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:22 AI_Player.update()	Search took135ms
2017-01-04 09:23:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:22 AI_Player.update()		110,	101,	111,	1011,	111,	1010,	11
2017-01-04 09:23:22 AI_Player.update()		1010,	1010,	110,	101,	11,	110,	110
2017-01-04 09:23:22 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-04 09:23:22 AI_Player.update()		1010,	101,	1001,	1010,	110,	101,	1100
2017-01-04 09:23:22 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 09:23:22 AI_Player.update()		101,	11,	101,	111,	11,	1010,	1100
2017-01-04 09:23:22 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1011,	1001
2017-01-04 09:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:22 AI_Player.update()	update
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:23 AI_Player.update()	update
2017-01-04 09:23:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:23 AI_Player.update()	Search took171ms
2017-01-04 09:23:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:23 AI_Player.update()		110,	1100,	111,	1011,	111,	1010,	11
2017-01-04 09:23:23 AI_Player.update()		1010,	101,	110,	101,	11,	110,	110
2017-01-04 09:23:23 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-04 09:23:23 AI_Player.update()		1010,	1010,	1001,	1010,	110,	101,	1100
2017-01-04 09:23:23 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-04 09:23:23 AI_Player.update()		101,	1001,	101,	111,	11,	1010,	1100
2017-01-04 09:23:23 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1011,	1001
2017-01-04 09:23:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:23 AI_Player.update()	update
2017-01-04 09:23:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:23 AI_Player.update()	update
2017-01-04 09:23:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:23 AI_Player.update()	Search took148ms
2017-01-04 09:23:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:23 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:23:23 AI_Player.update()		1010,	101,	110,	110,	11,	110,	110
2017-01-04 09:23:23 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 09:23:23 AI_Player.update()		1010,	1010,	1001,	1010,	110,	101,	1100
2017-01-04 09:23:23 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-04 09:23:23 AI_Player.update()		101,	1001,	101,	1001,	11,	1010,	1100
2017-01-04 09:23:23 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1011,	1001
2017-01-04 09:23:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:23 AI_Player.update()	update
2017-01-04 09:23:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:23 AI_Player.update()	update
2017-01-04 09:23:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:24 AI_Player.update()	Search took287ms
2017-01-04 09:23:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:24 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-04 09:23:24 AI_Player.update()		1010,	101,	110,	110,	11,	1100,	110
2017-01-04 09:23:24 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:24 AI_Player.update()		1010,	1010,	1001,	1010,	110,	101,	1100
2017-01-04 09:23:24 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-04 09:23:24 AI_Player.update()		101,	1001,	101,	1001,	11,	1011,	1100
2017-01-04 09:23:24 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:24 AI_Player.update()	update
2017-01-04 09:23:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:24 AI_Player.update()	update
2017-01-04 09:23:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:24 AI_Player.update()	Search took157ms
2017-01-04 09:23:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:24 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-04 09:23:24 AI_Player.update()		1010,	1010,	110,	110,	11,	1100,	110
2017-01-04 09:23:24 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:24 AI_Player.update()		1010,	101,	1001,	1010,	110,	101,	1100
2017-01-04 09:23:24 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1010,	1011
2017-01-04 09:23:24 AI_Player.update()		101,	11,	101,	1001,	11,	1011,	1100
2017-01-04 09:23:24 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-04 09:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:24 AI_Player.update()	update
2017-01-04 09:23:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:24 AI_Player.update()	update
2017-01-04 09:23:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:24 AI_Player.update()	Search took214ms
2017-01-04 09:23:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:24 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 09:23:24 AI_Player.update()		1010,	1010,	110,	110,	11,	101,	110
2017-01-04 09:23:24 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:24 AI_Player.update()		1010,	101,	1001,	1010,	110,	1010,	1100
2017-01-04 09:23:24 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1011,	1011
2017-01-04 09:23:24 AI_Player.update()		101,	11,	101,	1001,	11,	1010,	1100
2017-01-04 09:23:24 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	110,	1001
2017-01-04 09:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:24 AI_Player.update()	update
2017-01-04 09:23:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:25 AI_Player.update()	update
2017-01-04 09:23:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:25 AI_Player.update()	Search took155ms
2017-01-04 09:23:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:25 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 09:23:25 AI_Player.update()		1010,	1010,	110,	110,	11,	101,	110
2017-01-04 09:23:25 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:25 AI_Player.update()		101,	1001,	1010,	110,	1010,	1100,	1010
2017-01-04 09:23:25 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1011,	1011
2017-01-04 09:23:25 AI_Player.update()		101,	11,	101,	1001,	11,	1010,	1100
2017-01-04 09:23:25 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	110,	1001
2017-01-04 09:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:25 AI_Player.update()	update
2017-01-04 09:23:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:25 AI_Player.update()	update
2017-01-04 09:23:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:25 AI_Player.update()	Search took141ms
2017-01-04 09:23:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:25 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 09:23:25 AI_Player.update()		110,	1010,	1010,	110,	110,	11,	101
2017-01-04 09:23:25 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:25 AI_Player.update()		101,	1001,	1010,	110,	1010,	1100,	1010
2017-01-04 09:23:25 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1011,	1011
2017-01-04 09:23:25 AI_Player.update()		101,	11,	101,	1001,	11,	1010,	1100
2017-01-04 09:23:25 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	110,	1001
2017-01-04 09:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:25 AI_Player.update()	update
2017-01-04 09:23:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:23:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:25 AI_Player.update()	update
2017-01-04 09:23:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:25 AI_Player.update()	Search took92ms
2017-01-04 09:23:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:25 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 09:23:25 AI_Player.update()		110,	1010,	1010,	110,	110,	11,	101
2017-01-04 09:23:25 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:25 AI_Player.update()		101,	1001,	1010,	110,	1010,	1100,	1010
2017-01-04 09:23:25 AI_Player.update()		1110,	11,	1101,	111,	1011,	1011,	1011
2017-01-04 09:23:25 AI_Player.update()		101,	1100,	101,	1001,	11,	1010,	1100
2017-01-04 09:23:25 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-04 09:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:25 AI_Player.update()	update
2017-01-04 09:23:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:25 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:23:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:26 AI_Player.update()	update
2017-01-04 09:23:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:26 AI_Player.update()	Search took444ms
2017-01-04 09:23:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:26 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 09:23:26 AI_Player.update()		110,	1010,	1010,	110,	110,	11,	101
2017-01-04 09:23:26 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:26 AI_Player.update()		101,	1001,	1010,	110,	1010,	1100,	1010
2017-01-04 09:23:26 AI_Player.update()		1110,	11,	1101,	111,	1011,	1011,	1011
2017-01-04 09:23:26 AI_Player.update()		1100,	101,	1001,	11,	1010,	1100,	101
2017-01-04 09:23:26 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-04 09:23:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:23:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:26 AI_Player.update()	update
2017-01-04 09:23:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:23:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:26 AI_Player.update()	update
2017-01-04 09:23:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:26 AI_Player.update()	Search took88ms
2017-01-04 09:23:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:26 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 09:23:26 AI_Player.update()		110,	1001,	1010,	110,	110,	11,	101
2017-01-04 09:23:26 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:26 AI_Player.update()		101,	11,	1010,	110,	1010,	1100,	1010
2017-01-04 09:23:26 AI_Player.update()		1110,	101,	1101,	111,	1011,	1011,	1011
2017-01-04 09:23:26 AI_Player.update()		1100,	101,	1001,	11,	1010,	1100,	101
2017-01-04 09:23:26 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-04 09:23:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:23:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:26 AI_Player.update()	update
2017-01-04 09:23:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:26 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:23:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:27 AI_Player.update()	update
2017-01-04 09:23:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:27 AI_Player.update()	Search took436ms
2017-01-04 09:23:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:27 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 09:23:27 AI_Player.update()		1001,	1010,	110,	110,	11,	101,	110
2017-01-04 09:23:27 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:27 AI_Player.update()		101,	11,	1010,	110,	1010,	1100,	1010
2017-01-04 09:23:27 AI_Player.update()		1110,	101,	1101,	111,	1011,	1011,	1011
2017-01-04 09:23:27 AI_Player.update()		1100,	101,	1001,	11,	1010,	1100,	101
2017-01-04 09:23:27 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-04 09:23:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:27 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:23:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:27 AI_Player.update()	update
2017-01-04 09:23:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:27 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:23:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:27 AI_Player.update()	update
2017-01-04 09:23:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:28 AI_Player.update()	Search took399ms
2017-01-04 09:23:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:28 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 09:23:28 AI_Player.update()		1001,	1010,	110,	110,	11,	101,	110
2017-01-04 09:23:28 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:28 AI_Player.update()		101,	11,	1010,	110,	1010,	1100,	1010
2017-01-04 09:23:28 AI_Player.update()		1110,	101,	1101,	111,	1011,	1011,	1011
2017-01-04 09:23:28 AI_Player.update()		101,	1001,	11,	1010,	1100,	101,	1100
2017-01-04 09:23:28 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-04 09:23:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	6 3
2017-01-04 09:23:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:28 AI_Player.update()	update
2017-01-04 09:23:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:23:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:28 AI_Player.update()	update
2017-01-04 09:23:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:28 AI_Player.update()	Search took397ms
2017-01-04 09:23:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:28 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-04 09:23:28 AI_Player.update()		1010,	110,	110,	11,	101,	110,	1001
2017-01-04 09:23:28 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:23:28 AI_Player.update()		101,	11,	1010,	110,	1010,	1100,	1010
2017-01-04 09:23:28 AI_Player.update()		1110,	101,	1101,	111,	1011,	1011,	1011
2017-01-04 09:23:28 AI_Player.update()		101,	1001,	11,	1010,	1100,	101,	1100
2017-01-04 09:23:28 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-04 09:23:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:23:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:28 AI_Player.update()	update
2017-01-04 09:23:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:28 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:23:28 AI_Player.update()	Player a has won!
2017-01-04 09:23:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:28 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:23:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:28 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:23:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:28 AI_Player.update()	update
2017-01-04 09:23:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:28 AI_Player.update()	Search took29ms
2017-01-04 09:23:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:28 AI_Player.update()		110,	101,	111,	1110,	111,	111,	11
2017-01-04 09:23:28 AI_Player.update()		110,	1011,	1100,	1010,	1100,	111,	101
2017-01-04 09:23:28 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-04 09:23:28 AI_Player.update()		1110,	1010,	101,	1001,	1010,	11,	101
2017-01-04 09:23:28 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:23:28 AI_Player.update()		11,	11,	111,	11,	101,	110,	1001
2017-01-04 09:23:28 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 09:23:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:29 AI_Player.update()	update
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:29 AI_Player.update()	update
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:29 AI_Player.update()	Search took126ms
2017-01-04 09:23:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:29 AI_Player.update()		110,	1011,	111,	1110,	111,	111,	11
2017-01-04 09:23:29 AI_Player.update()		110,	1100,	1100,	1010,	1100,	111,	101
2017-01-04 09:23:29 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-04 09:23:29 AI_Player.update()		1110,	1010,	101,	1001,	1010,	11,	101
2017-01-04 09:23:29 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:23:29 AI_Player.update()		11,	1010,	111,	11,	101,	110,	1001
2017-01-04 09:23:29 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:29 AI_Player.update()	update
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:29 AI_Player.update()	update
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:29 AI_Player.update()	Search took126ms
2017-01-04 09:23:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:29 AI_Player.update()		110,	1011,	111,	1010,	111,	111,	11
2017-01-04 09:23:29 AI_Player.update()		110,	1100,	1100,	110,	1100,	111,	101
2017-01-04 09:23:29 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-04 09:23:29 AI_Player.update()		1110,	1010,	101,	1010,	1010,	11,	101
2017-01-04 09:23:29 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:29 AI_Player.update()		11,	1010,	111,	1010,	101,	110,	1001
2017-01-04 09:23:29 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-04 09:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:29 AI_Player.update()	update
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:29 AI_Player.update()	update
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:29 AI_Player.update()	Search took63ms
2017-01-04 09:23:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:29 AI_Player.update()		110,	1011,	111,	1110,	111,	111,	11
2017-01-04 09:23:29 AI_Player.update()		110,	1100,	1100,	1010,	1100,	111,	101
2017-01-04 09:23:29 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-04 09:23:29 AI_Player.update()		1110,	1010,	101,	1001,	1010,	11,	101
2017-01-04 09:23:29 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:23:29 AI_Player.update()		11,	1010,	111,	11,	101,	110,	1001
2017-01-04 09:23:29 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:29 AI_Player.update()	update
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:30 AI_Player.update()	update
2017-01-04 09:23:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:30 AI_Player.update()	Search took119ms
2017-01-04 09:23:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:30 AI_Player.update()		110,	1011,	111,	1010,	111,	111,	11
2017-01-04 09:23:30 AI_Player.update()		110,	1100,	1100,	110,	1100,	111,	101
2017-01-04 09:23:30 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-04 09:23:30 AI_Player.update()		1110,	1010,	101,	1010,	1010,	11,	101
2017-01-04 09:23:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:30 AI_Player.update()		11,	1010,	111,	1010,	101,	110,	1001
2017-01-04 09:23:30 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-04 09:23:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:30 AI_Player.update()	update
2017-01-04 09:23:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:30 AI_Player.update()	update
2017-01-04 09:23:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:30 AI_Player.update()	Search took58ms
2017-01-04 09:23:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:30 AI_Player.update()		110,	1011,	111,	1010,	111,	111,	11
2017-01-04 09:23:30 AI_Player.update()		101,	110,	1100,	1100,	110,	1100,	111
2017-01-04 09:23:30 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-04 09:23:30 AI_Player.update()		1110,	1010,	101,	1010,	1010,	11,	101
2017-01-04 09:23:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:30 AI_Player.update()		11,	1010,	111,	1010,	101,	110,	1001
2017-01-04 09:23:30 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-04 09:23:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:30 AI_Player.update()	update
2017-01-04 09:23:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:30 AI_Player.update()	update
2017-01-04 09:23:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:30 AI_Player.update()	Search took76ms
2017-01-04 09:23:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:30 AI_Player.update()		110,	1011,	111,	1010,	111,	111,	11
2017-01-04 09:23:30 AI_Player.update()		101,	110,	1100,	1100,	110,	1100,	111
2017-01-04 09:23:30 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-04 09:23:30 AI_Player.update()		1110,	1010,	101,	1010,	1010,	11,	101
2017-01-04 09:23:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:30 AI_Player.update()		1001,	11,	1010,	111,	1010,	101,	110
2017-01-04 09:23:30 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-04 09:23:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:30 AI_Player.update()	update
2017-01-04 09:23:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:30 AI_Player.update()	update
2017-01-04 09:23:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:31 AI_Player.update()	Search took108ms
2017-01-04 09:23:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:31 AI_Player.update()		110,	1011,	111,	1010,	111,	111,	11
2017-01-04 09:23:31 AI_Player.update()		110,	1100,	1100,	110,	1100,	111,	101
2017-01-04 09:23:31 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-04 09:23:31 AI_Player.update()		1110,	1010,	101,	1010,	1010,	11,	101
2017-01-04 09:23:31 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:31 AI_Player.update()		1001,	11,	1010,	111,	1010,	101,	110
2017-01-04 09:23:31 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-04 09:23:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:31 AI_Player.update()	update
2017-01-04 09:23:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:31 AI_Player.update()	update
2017-01-04 09:23:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:31 AI_Player.update()	Search took296ms
2017-01-04 09:23:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:31 AI_Player.update()		110,	1011,	111,	1110,	111,	111,	11
2017-01-04 09:23:31 AI_Player.update()		110,	1100,	1100,	1010,	1100,	111,	101
2017-01-04 09:23:31 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-04 09:23:31 AI_Player.update()		1110,	1010,	101,	1001,	1010,	11,	101
2017-01-04 09:23:31 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:23:31 AI_Player.update()		1001,	11,	1010,	11,	1010,	101,	110
2017-01-04 09:23:31 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-04 09:23:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:31 AI_Player.update()	update
2017-01-04 09:23:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:31 AI_Player.update()	update
2017-01-04 09:23:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:31 AI_Player.update()	Search took70ms
2017-01-04 09:23:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:31 AI_Player.update()		110,	1011,	111,	111,	111,	111,	11
2017-01-04 09:23:31 AI_Player.update()		110,	1100,	1100,	1110,	1100,	111,	101
2017-01-04 09:23:31 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:23:31 AI_Player.update()		1110,	1010,	101,	110,	1010,	11,	101
2017-01-04 09:23:31 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:23:31 AI_Player.update()		1001,	11,	1010,	1010,	1010,	101,	110
2017-01-04 09:23:31 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 09:23:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:31 AI_Player.update()	update
2017-01-04 09:23:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:23:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:32 AI_Player.update()	update
2017-01-04 09:23:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:32 AI_Player.update()	Search took145ms
2017-01-04 09:23:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:32 AI_Player.update()		110,	1011,	111,	111,	111,	111,	11
2017-01-04 09:23:32 AI_Player.update()		110,	1100,	1100,	1110,	1100,	111,	101
2017-01-04 09:23:32 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:23:32 AI_Player.update()		101,	1110,	1010,	101,	110,	1010,	11
2017-01-04 09:23:32 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:23:32 AI_Player.update()		1001,	11,	1010,	1010,	1010,	101,	110
2017-01-04 09:23:32 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 09:23:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:23:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:32 AI_Player.update()	update
2017-01-04 09:23:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:32 AI_Player.update()	update
2017-01-04 09:23:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:32 AI_Player.update()	Search took262ms
2017-01-04 09:23:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:32 AI_Player.update()		110,	1100,	111,	111,	111,	111,	11
2017-01-04 09:23:32 AI_Player.update()		110,	1010,	1100,	1110,	1100,	111,	101
2017-01-04 09:23:32 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-04 09:23:32 AI_Player.update()		101,	11,	1010,	101,	110,	1010,	11
2017-01-04 09:23:32 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:23:32 AI_Player.update()		1001,	101,	1010,	1010,	1010,	101,	110
2017-01-04 09:23:32 AI_Player.update()		1100,	1011,	1101,	11,	1101,	101,	1001
2017-01-04 09:23:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:32 AI_Player.update()	update
2017-01-04 09:23:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:32 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:32 AI_Player.update()	update
2017-01-04 09:23:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:33 AI_Player.update()	Search took150ms
2017-01-04 09:23:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:33 AI_Player.update()		110,	1100,	111,	1110,	111,	111,	11
2017-01-04 09:23:33 AI_Player.update()		110,	1010,	1100,	1010,	1100,	111,	101
2017-01-04 09:23:33 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-04 09:23:33 AI_Player.update()		101,	11,	1010,	1001,	110,	1010,	11
2017-01-04 09:23:33 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:23:33 AI_Player.update()		1001,	101,	1010,	11,	1010,	101,	110
2017-01-04 09:23:33 AI_Player.update()		1100,	1011,	1101,	111,	1101,	101,	1001
2017-01-04 09:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:33 AI_Player.update()	update
2017-01-04 09:23:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:33 AI_Player.update()	update
2017-01-04 09:23:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:33 AI_Player.update()	Search took128ms
2017-01-04 09:23:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:33 AI_Player.update()		110,	1010,	111,	1110,	111,	111,	11
2017-01-04 09:23:33 AI_Player.update()		110,	1110,	1100,	1010,	1100,	111,	101
2017-01-04 09:23:33 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-04 09:23:33 AI_Player.update()		101,	11,	1010,	1001,	110,	1010,	11
2017-01-04 09:23:33 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:23:33 AI_Player.update()		1001,	1011,	1010,	11,	1010,	101,	110
2017-01-04 09:23:33 AI_Player.update()		1100,	1100,	1101,	111,	1101,	101,	1001
2017-01-04 09:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:33 AI_Player.update()	update
2017-01-04 09:23:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:33 AI_Player.update()	update
2017-01-04 09:23:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:33 AI_Player.update()	Search took158ms
2017-01-04 09:23:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:33 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 09:23:33 AI_Player.update()		110,	1110,	1100,	1010,	1100,	111,	101
2017-01-04 09:23:33 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 09:23:33 AI_Player.update()		101,	11,	1010,	1001,	110,	110,	11
2017-01-04 09:23:33 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:23:33 AI_Player.update()		1001,	1011,	1010,	11,	1010,	1010,	110
2017-01-04 09:23:33 AI_Player.update()		1100,	1100,	1101,	111,	1101,	101,	1001
2017-01-04 09:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:33 AI_Player.update()	update
2017-01-04 09:23:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:23:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:33 AI_Player.update()	update
2017-01-04 09:23:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:34 AI_Player.update()	Search took309ms
2017-01-04 09:23:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:34 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:23:34 AI_Player.update()		110,	1110,	1100,	101,	1100,	111,	101
2017-01-04 09:23:34 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-04 09:23:34 AI_Player.update()		101,	11,	1010,	1010,	110,	110,	11
2017-01-04 09:23:34 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:34 AI_Player.update()		1001,	1011,	1010,	111,	1010,	1010,	110
2017-01-04 09:23:34 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-04 09:23:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:23:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:34 AI_Player.update()	update
2017-01-04 09:23:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:23:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:34 AI_Player.update()	update
2017-01-04 09:23:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:34 AI_Player.update()	Search took95ms
2017-01-04 09:23:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:34 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-04 09:23:34 AI_Player.update()		110,	1110,	1100,	101,	1100,	111,	101
2017-01-04 09:23:34 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-04 09:23:34 AI_Player.update()		101,	11,	1010,	1010,	110,	1010,	11
2017-01-04 09:23:34 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:34 AI_Player.update()		1001,	1011,	1010,	111,	1010,	101,	110
2017-01-04 09:23:34 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-04 09:23:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:23:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:34 AI_Player.update()	update
2017-01-04 09:23:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:23:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:34 AI_Player.update()	update
2017-01-04 09:23:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:34 AI_Player.update()	Search took114ms
2017-01-04 09:23:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:34 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-04 09:23:34 AI_Player.update()		110,	1110,	1100,	101,	1100,	111,	101
2017-01-04 09:23:34 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-04 09:23:34 AI_Player.update()		101,	11,	1010,	1010,	110,	1010,	11
2017-01-04 09:23:34 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:34 AI_Player.update()		1011,	1010,	111,	1010,	101,	110,	1001
2017-01-04 09:23:34 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-04 09:23:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:23:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:34 AI_Player.update()	update
2017-01-04 09:23:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:35 AI_Player.update()	update
2017-01-04 09:23:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:35 AI_Player.update()	Search took116ms
2017-01-04 09:23:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:35 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:23:35 AI_Player.update()		110,	1110,	1100,	101,	1100,	111,	101
2017-01-04 09:23:35 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-04 09:23:35 AI_Player.update()		101,	11,	1010,	1010,	110,	110,	11
2017-01-04 09:23:35 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:35 AI_Player.update()		1011,	1010,	111,	1010,	101,	1010,	1001
2017-01-04 09:23:35 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-04 09:23:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:35 AI_Player.update()	update
2017-01-04 09:23:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:23:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:35 AI_Player.update()	update
2017-01-04 09:23:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:35 AI_Player.update()	Search took239ms
2017-01-04 09:23:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:35 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:23:35 AI_Player.update()		110,	1110,	1100,	101,	1100,	111,	101
2017-01-04 09:23:35 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-04 09:23:35 AI_Player.update()		101,	11,	1010,	1010,	110,	110,	11
2017-01-04 09:23:35 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:35 AI_Player.update()		1001,	1011,	1010,	111,	1010,	101,	1010
2017-01-04 09:23:35 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-04 09:23:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:23:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:35 AI_Player.update()	update
2017-01-04 09:23:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:35 AI_Player.update()	update
2017-01-04 09:23:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:36 AI_Player.update()	Search took202ms
2017-01-04 09:23:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:36 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:23:36 AI_Player.update()		101,	110,	1110,	1100,	101,	1100,	111
2017-01-04 09:23:36 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-04 09:23:36 AI_Player.update()		101,	11,	1010,	1010,	110,	110,	11
2017-01-04 09:23:36 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:36 AI_Player.update()		1001,	1011,	1010,	111,	1010,	101,	1010
2017-01-04 09:23:36 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-04 09:23:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:36 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:36 AI_Player.update()	update
2017-01-04 09:23:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:36 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:36 AI_Player.update()	update
2017-01-04 09:23:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:36 AI_Player.update()	Search took242ms
2017-01-04 09:23:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:36 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:23:36 AI_Player.update()		111,	101,	110,	1110,	1100,	101,	1100
2017-01-04 09:23:36 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-04 09:23:36 AI_Player.update()		101,	11,	1010,	1010,	110,	110,	11
2017-01-04 09:23:36 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:36 AI_Player.update()		1001,	1011,	1010,	111,	1010,	101,	1010
2017-01-04 09:23:36 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-04 09:23:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:36 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:36 AI_Player.update()	update
2017-01-04 09:23:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:36 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:36 AI_Player.update()	update
2017-01-04 09:23:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:36 AI_Player.update()	Search took240ms
2017-01-04 09:23:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:36 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:23:36 AI_Player.update()		111,	101,	110,	1110,	1100,	101,	1100
2017-01-04 09:23:36 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-04 09:23:36 AI_Player.update()		101,	11,	1010,	1010,	110,	110,	11
2017-01-04 09:23:36 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:23:36 AI_Player.update()		1010,	1001,	1011,	1010,	111,	1010,	101
2017-01-04 09:23:36 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-04 09:23:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:36 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:37 AI_Player.update()	update
2017-01-04 09:23:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:37 AI_Player.update()	update
2017-01-04 09:23:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:37 AI_Player.update()	Search took282ms
2017-01-04 09:23:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:37 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 09:23:37 AI_Player.update()		111,	101,	110,	1010,	1100,	101,	1100
2017-01-04 09:23:37 AI_Player.update()		1110,	11,	1110,	1110,	111,	111,	1011
2017-01-04 09:23:37 AI_Player.update()		101,	11,	1010,	1001,	110,	110,	11
2017-01-04 09:23:37 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:23:37 AI_Player.update()		1010,	1001,	1011,	11,	111,	1010,	101
2017-01-04 09:23:37 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-04 09:23:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:37 AI_Player.update()	update
2017-01-04 09:23:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:23:37 AI_Player.update()	Player b has won!
2017-01-04 09:23:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:37 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:23:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:37 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:23:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:37 AI_Player.update()	update
2017-01-04 09:23:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:37 AI_Player.update()	Search took21ms
2017-01-04 09:23:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:37 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 09:23:37 AI_Player.update()		11,	11,	11,	1001,	1010,	1010,	111
2017-01-04 09:23:37 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 09:23:37 AI_Player.update()		1100,	101,	101,	101,	101,	1100,	1100
2017-01-04 09:23:37 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1110,	1011
2017-01-04 09:23:37 AI_Player.update()		11,	110,	11,	111,	1010,	111,	1001
2017-01-04 09:23:37 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 09:23:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:37 AI_Player.update()	update
2017-01-04 09:23:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:37 AI_Player.update()	update
2017-01-04 09:23:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:37 AI_Player.update()	Search took51ms
2017-01-04 09:23:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:37 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 09:23:37 AI_Player.update()		11,	11,	11,	1001,	1010,	1010,	111
2017-01-04 09:23:37 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 09:23:37 AI_Player.update()		1100,	101,	101,	101,	101,	101,	1100
2017-01-04 09:23:37 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:37 AI_Player.update()		11,	110,	11,	111,	1010,	1110,	1001
2017-01-04 09:23:37 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:38 AI_Player.update()	update
2017-01-04 09:23:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:38 AI_Player.update()	update
2017-01-04 09:23:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:38 AI_Player.update()	Search took146ms
2017-01-04 09:23:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:38 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 09:23:38 AI_Player.update()		111,	11,	11,	11,	1001,	1010,	1010
2017-01-04 09:23:38 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 09:23:38 AI_Player.update()		1100,	101,	101,	101,	101,	101,	1100
2017-01-04 09:23:38 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:38 AI_Player.update()		11,	110,	11,	111,	1010,	1110,	1001
2017-01-04 09:23:38 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:38 AI_Player.update()	update
2017-01-04 09:23:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:23:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:38 AI_Player.update()	update
2017-01-04 09:23:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:38 AI_Player.update()	Search took233ms
2017-01-04 09:23:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:38 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:23:38 AI_Player.update()		111,	11,	11,	1001,	1001,	1010,	1010
2017-01-04 09:23:38 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:23:38 AI_Player.update()		1100,	101,	101,	11,	101,	101,	1100
2017-01-04 09:23:38 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1100,	1011
2017-01-04 09:23:38 AI_Player.update()		11,	110,	11,	11,	1010,	1110,	1001
2017-01-04 09:23:38 AI_Player.update()		1100,	101,	1101,	111,	1101,	111,	1001
2017-01-04 09:23:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:23:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:38 AI_Player.update()	update
2017-01-04 09:23:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:38 AI_Player.update()	update
2017-01-04 09:23:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:39 AI_Player.update()	Search took127ms
2017-01-04 09:23:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:39 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 09:23:39 AI_Player.update()		111,	11,	11,	11,	1001,	1010,	1010
2017-01-04 09:23:39 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 09:23:39 AI_Player.update()		1100,	101,	101,	101,	101,	101,	1100
2017-01-04 09:23:39 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:39 AI_Player.update()		11,	110,	11,	111,	1010,	1110,	1001
2017-01-04 09:23:39 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:39 AI_Player.update()	update
2017-01-04 09:23:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:39 AI_Player.update()	update
2017-01-04 09:23:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:39 AI_Player.update()	Search took147ms
2017-01-04 09:23:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:39 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:23:39 AI_Player.update()		111,	11,	11,	1001,	1001,	1010,	1010
2017-01-04 09:23:39 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:23:39 AI_Player.update()		1100,	101,	101,	11,	101,	101,	1100
2017-01-04 09:23:39 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1100,	1011
2017-01-04 09:23:39 AI_Player.update()		11,	110,	11,	11,	1010,	1110,	1001
2017-01-04 09:23:39 AI_Player.update()		1100,	101,	1101,	111,	1101,	111,	1001
2017-01-04 09:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:39 AI_Player.update()	update
2017-01-04 09:23:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:39 AI_Player.update()	update
2017-01-04 09:23:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:39 AI_Player.update()	Search took129ms
2017-01-04 09:23:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:39 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:23:39 AI_Player.update()		111,	101,	11,	1001,	1001,	1010,	1010
2017-01-04 09:23:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 09:23:39 AI_Player.update()		1100,	110,	101,	11,	101,	101,	1100
2017-01-04 09:23:39 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 09:23:39 AI_Player.update()		11,	1001,	11,	11,	1010,	1110,	1001
2017-01-04 09:23:39 AI_Player.update()		1100,	110,	1101,	111,	1101,	111,	1001
2017-01-04 09:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:39 AI_Player.update()	update
2017-01-04 09:23:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:23:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:39 AI_Player.update()	update
2017-01-04 09:23:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:40 AI_Player.update()	Search took344ms
2017-01-04 09:23:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:40 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:23:40 AI_Player.update()		111,	101,	11,	101,	1001,	1010,	1010
2017-01-04 09:23:40 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-04 09:23:40 AI_Player.update()		1100,	110,	101,	111,	101,	101,	1100
2017-01-04 09:23:40 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:40 AI_Player.update()		11,	1001,	11,	111,	1010,	1110,	1001
2017-01-04 09:23:40 AI_Player.update()		1100,	110,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:40 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:40 AI_Player.update()	update
2017-01-04 09:23:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:40 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:40 AI_Player.update()	update
2017-01-04 09:23:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:40 AI_Player.update()	Search took123ms
2017-01-04 09:23:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:40 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:23:40 AI_Player.update()		111,	11,	11,	101,	1001,	1010,	1010
2017-01-04 09:23:40 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-04 09:23:40 AI_Player.update()		1100,	101,	101,	111,	101,	101,	1100
2017-01-04 09:23:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:40 AI_Player.update()		11,	110,	11,	111,	1010,	1110,	1001
2017-01-04 09:23:40 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:40 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:40 AI_Player.update()	update
2017-01-04 09:23:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:40 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:40 AI_Player.update()	update
2017-01-04 09:23:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:40 AI_Player.update()	Search took159ms
2017-01-04 09:23:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:40 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:23:40 AI_Player.update()		111,	11,	11,	11,	1001,	1010,	1010
2017-01-04 09:23:40 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 09:23:40 AI_Player.update()		1100,	101,	101,	11,	101,	101,	1100
2017-01-04 09:23:40 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1100,	1011
2017-01-04 09:23:40 AI_Player.update()		11,	110,	11,	11,	1010,	1110,	1001
2017-01-04 09:23:40 AI_Player.update()		1100,	101,	1101,	1001,	1101,	111,	1001
2017-01-04 09:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:40 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:41 AI_Player.update()	update
2017-01-04 09:23:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:41 AI_Player.update()	update
2017-01-04 09:23:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:41 AI_Player.update()	Search took113ms
2017-01-04 09:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:41 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:23:41 AI_Player.update()		111,	11,	11,	101,	1001,	1010,	1010
2017-01-04 09:23:41 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-04 09:23:41 AI_Player.update()		1100,	101,	101,	111,	101,	101,	1100
2017-01-04 09:23:41 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:41 AI_Player.update()		11,	110,	11,	111,	1010,	1110,	1001
2017-01-04 09:23:41 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:41 AI_Player.update()	update
2017-01-04 09:23:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:41 AI_Player.update()	update
2017-01-04 09:23:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:41 AI_Player.update()	Search took74ms
2017-01-04 09:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:41 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:23:41 AI_Player.update()		111,	11,	11,	11,	1001,	1010,	1010
2017-01-04 09:23:41 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 09:23:41 AI_Player.update()		1100,	101,	101,	11,	101,	101,	1100
2017-01-04 09:23:41 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1100,	1011
2017-01-04 09:23:41 AI_Player.update()		11,	110,	11,	11,	1010,	1110,	1001
2017-01-04 09:23:41 AI_Player.update()		1100,	101,	1101,	1001,	1101,	111,	1001
2017-01-04 09:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:41 AI_Player.update()	update
2017-01-04 09:23:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:41 AI_Player.update()	update
2017-01-04 09:23:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:41 AI_Player.update()	Search took113ms
2017-01-04 09:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:41 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:23:41 AI_Player.update()		111,	11,	11,	101,	1001,	1010,	1010
2017-01-04 09:23:41 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-04 09:23:41 AI_Player.update()		1100,	101,	101,	111,	101,	101,	1100
2017-01-04 09:23:41 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:41 AI_Player.update()		11,	110,	11,	111,	1010,	1110,	1001
2017-01-04 09:23:41 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:41 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:42 AI_Player.update()	update
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:42 AI_Player.update()	update
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:42 AI_Player.update()	Search took21ms
2017-01-04 09:23:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:42 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 09:23:42 AI_Player.update()		111,	11,	11,	11,	1001,	1010,	1010
2017-01-04 09:23:42 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 09:23:42 AI_Player.update()		1100,	101,	101,	11,	101,	101,	1100
2017-01-04 09:23:42 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1100,	1011
2017-01-04 09:23:42 AI_Player.update()		11,	110,	11,	11,	1010,	1110,	1001
2017-01-04 09:23:42 AI_Player.update()		1100,	101,	1101,	1001,	1101,	111,	1001
2017-01-04 09:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:42 AI_Player.update()	update
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:42 AI_Player.update()	update
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:42 AI_Player.update()	Search took91ms
2017-01-04 09:23:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:42 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:23:42 AI_Player.update()		111,	11,	11,	101,	1001,	1010,	1010
2017-01-04 09:23:42 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-04 09:23:42 AI_Player.update()		1100,	101,	101,	111,	101,	101,	1100
2017-01-04 09:23:42 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:42 AI_Player.update()		11,	110,	11,	111,	1010,	1110,	1001
2017-01-04 09:23:42 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:42 AI_Player.update()	update
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:42 AI_Player.update()	update
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:42 AI_Player.update()	Search took187ms
2017-01-04 09:23:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:42 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:23:42 AI_Player.update()		111,	11,	11,	1001,	1001,	1010,	1010
2017-01-04 09:23:42 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:23:42 AI_Player.update()		1100,	101,	101,	11,	101,	101,	1100
2017-01-04 09:23:42 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1100,	1011
2017-01-04 09:23:42 AI_Player.update()		11,	110,	11,	11,	1010,	1110,	1001
2017-01-04 09:23:42 AI_Player.update()		1100,	101,	1101,	111,	1101,	111,	1001
2017-01-04 09:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:42 AI_Player.update()	update
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:23:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:43 AI_Player.update()	update
2017-01-04 09:23:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:43 AI_Player.update()	Search took408ms
2017-01-04 09:23:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:43 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:23:43 AI_Player.update()		111,	101,	11,	1001,	1001,	1010,	1010
2017-01-04 09:23:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 09:23:43 AI_Player.update()		1100,	110,	101,	11,	101,	101,	1100
2017-01-04 09:23:43 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 09:23:43 AI_Player.update()		11,	1001,	11,	11,	1010,	1110,	1001
2017-01-04 09:23:43 AI_Player.update()		1100,	110,	1101,	111,	1101,	111,	1001
2017-01-04 09:23:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:23:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:43 AI_Player.update()	update
2017-01-04 09:23:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:43 AI_Player.update()	update
2017-01-04 09:23:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:43 AI_Player.update()	Search took348ms
2017-01-04 09:23:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:43 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:23:43 AI_Player.update()		111,	11,	11,	1001,	1001,	1010,	1010
2017-01-04 09:23:43 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:23:43 AI_Player.update()		1100,	101,	101,	11,	101,	101,	1100
2017-01-04 09:23:43 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1100,	1011
2017-01-04 09:23:43 AI_Player.update()		11,	110,	11,	11,	1010,	1110,	1001
2017-01-04 09:23:43 AI_Player.update()		1100,	101,	1101,	111,	1101,	111,	1001
2017-01-04 09:23:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:43 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:44 AI_Player.update()	update
2017-01-04 09:23:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:44 AI_Player.update()	update
2017-01-04 09:23:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:44 AI_Player.update()	Search took421ms
2017-01-04 09:23:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:44 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:23:44 AI_Player.update()		111,	11,	11,	1001,	1001,	1010,	1010
2017-01-04 09:23:44 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:23:44 AI_Player.update()		1100,	101,	101,	11,	101,	101,	1100
2017-01-04 09:23:44 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1100,	1011
2017-01-04 09:23:44 AI_Player.update()		1001,	11,	110,	11,	11,	1010,	1110
2017-01-04 09:23:44 AI_Player.update()		1100,	101,	1101,	111,	1101,	111,	1001
2017-01-04 09:23:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:44 AI_Player.update()	update
2017-01-04 09:23:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:23:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:44 AI_Player.update()	update
2017-01-04 09:23:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:45 AI_Player.update()	Search took402ms
2017-01-04 09:23:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:45 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 09:23:45 AI_Player.update()		111,	11,	11,	11,	1001,	1010,	1010
2017-01-04 09:23:45 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 09:23:45 AI_Player.update()		1100,	101,	101,	101,	101,	101,	1100
2017-01-04 09:23:45 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:45 AI_Player.update()		1001,	11,	110,	111,	11,	1010,	1110
2017-01-04 09:23:45 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:23:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:45 AI_Player.update()	update
2017-01-04 09:23:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:45 AI_Player.update()	update
2017-01-04 09:23:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:45 AI_Player.update()	Search took338ms
2017-01-04 09:23:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:45 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 09:23:45 AI_Player.update()		111,	110,	11,	11,	1001,	1010,	1010
2017-01-04 09:23:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-04 09:23:45 AI_Player.update()		1100,	1001,	101,	101,	101,	101,	1100
2017-01-04 09:23:45 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:45 AI_Player.update()		1001,	101,	110,	111,	11,	1010,	1110
2017-01-04 09:23:45 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:45 AI_Player.update()	update
2017-01-04 09:23:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:45 AI_Player.update()	update
2017-01-04 09:23:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:46 AI_Player.update()	Search took145ms
2017-01-04 09:23:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:46 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 09:23:46 AI_Player.update()		110,	11,	11,	1001,	1010,	1010,	111
2017-01-04 09:23:46 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-04 09:23:46 AI_Player.update()		1100,	1001,	101,	101,	101,	101,	1100
2017-01-04 09:23:46 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 09:23:46 AI_Player.update()		1001,	101,	110,	111,	11,	1010,	1110
2017-01-04 09:23:46 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-04 09:23:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:46 AI_Player.update()	update
2017-01-04 09:23:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:23:46 AI_Player.update()	Player b has won!
2017-01-04 09:23:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:46 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:23:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:46 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:23:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:46 AI_Player.update()	update
2017-01-04 09:23:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:46 AI_Player.update()	Search took46ms
2017-01-04 09:23:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:46 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 09:23:46 AI_Player.update()		111,	1010,	1001,	110,	110,	111,	1011
2017-01-04 09:23:46 AI_Player.update()		1110,	101,	1110,	11,	111,	1110,	1011
2017-01-04 09:23:46 AI_Player.update()		11,	1010,	101,	11,	11,	101,	111
2017-01-04 09:23:46 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:23:46 AI_Player.update()		1010,	1100,	1011,	1101,	101,	1101,	101
2017-01-04 09:23:46 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-04 09:23:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:46 AI_Player.update()	update
2017-01-04 09:23:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:46 AI_Player.update()	update
2017-01-04 09:23:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:46 AI_Player.update()	Search took117ms
2017-01-04 09:23:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:46 AI_Player.update()		110,	101,	111,	1101,	111,	110,	11
2017-01-04 09:23:46 AI_Player.update()		111,	1010,	1001,	110,	110,	1010,	1011
2017-01-04 09:23:46 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-04 09:23:46 AI_Player.update()		11,	1010,	101,	11,	11,	1110,	111
2017-01-04 09:23:46 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-04 09:23:46 AI_Player.update()		1010,	1100,	1011,	1101,	101,	1001,	101
2017-01-04 09:23:46 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1101,	1001
2017-01-04 09:23:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:23:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:46 AI_Player.update()	update
2017-01-04 09:23:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:46 AI_Player.update()	update
2017-01-04 09:23:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:47 AI_Player.update()	Search took127ms
2017-01-04 09:23:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:47 AI_Player.update()		110,	1010,	111,	1101,	111,	110,	11
2017-01-04 09:23:47 AI_Player.update()		111,	101,	1001,	110,	110,	1010,	1011
2017-01-04 09:23:47 AI_Player.update()		1110,	1010,	1110,	11,	111,	111,	1011
2017-01-04 09:23:47 AI_Player.update()		11,	1010,	101,	11,	11,	1110,	111
2017-01-04 09:23:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 09:23:47 AI_Player.update()		1010,	1001,	1011,	1101,	101,	1001,	101
2017-01-04 09:23:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-04 09:23:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:47 AI_Player.update()	update
2017-01-04 09:23:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:47 AI_Player.update()	update
2017-01-04 09:23:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:47 AI_Player.update()	Search took311ms
2017-01-04 09:23:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:47 AI_Player.update()		110,	1010,	111,	1101,	111,	110,	11
2017-01-04 09:23:47 AI_Player.update()		111,	101,	1001,	110,	110,	1010,	1011
2017-01-04 09:23:47 AI_Player.update()		1110,	1010,	1110,	11,	111,	111,	1011
2017-01-04 09:23:47 AI_Player.update()		11,	1010,	101,	11,	11,	1110,	111
2017-01-04 09:23:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 09:23:47 AI_Player.update()		1001,	1011,	1101,	101,	1001,	101,	1010
2017-01-04 09:23:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-04 09:23:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:23:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:47 AI_Player.update()	update
2017-01-04 09:23:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:23:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:47 AI_Player.update()	update
2017-01-04 09:23:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:48 AI_Player.update()	Search took202ms
2017-01-04 09:23:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:48 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 09:23:48 AI_Player.update()		111,	101,	1001,	11,	110,	1010,	1011
2017-01-04 09:23:48 AI_Player.update()		1110,	1010,	1110,	11,	111,	111,	1011
2017-01-04 09:23:48 AI_Player.update()		11,	1010,	101,	1010,	11,	1110,	111
2017-01-04 09:23:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 09:23:48 AI_Player.update()		1001,	1011,	1101,	110,	1001,	101,	1010
2017-01-04 09:23:48 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1101,	1001
2017-01-04 09:23:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:23:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:48 AI_Player.update()	update
2017-01-04 09:23:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:48 AI_Player.update()	update
2017-01-04 09:23:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:49 AI_Player.update()	Search took976ms
2017-01-04 09:23:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:49 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 09:23:49 AI_Player.update()		111,	101,	1001,	11,	110,	1010,	1011
2017-01-04 09:23:49 AI_Player.update()		1110,	1010,	1110,	11,	111,	111,	1011
2017-01-04 09:23:49 AI_Player.update()		111,	11,	1010,	101,	1010,	11,	1110
2017-01-04 09:23:49 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 09:23:49 AI_Player.update()		1001,	1011,	1101,	110,	1001,	101,	1010
2017-01-04 09:23:49 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1101,	1001
2017-01-04 09:23:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:23:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:49 AI_Player.update()	update
2017-01-04 09:23:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:23:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:49 AI_Player.update()	update
2017-01-04 09:23:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:50 AI_Player.update()	Search took1237ms
2017-01-04 09:23:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:50 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 09:23:50 AI_Player.update()		111,	101,	1001,	11,	110,	111,	1011
2017-01-04 09:23:50 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-04 09:23:50 AI_Player.update()		111,	11,	1010,	101,	1010,	101,	1110
2017-01-04 09:23:50 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 09:23:50 AI_Player.update()		1001,	1011,	1101,	110,	1001,	1101,	1010
2017-01-04 09:23:50 AI_Player.update()		1100,	101,	1101,	1101,	1101,	110,	1001
2017-01-04 09:23:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:23:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:50 AI_Player.update()	update
2017-01-04 09:23:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:50 AI_Player.update()	update
2017-01-04 09:23:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:51 AI_Player.update()	Search took810ms
2017-01-04 09:23:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:51 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 09:23:51 AI_Player.update()		111,	101,	1001,	11,	110,	1010,	1011
2017-01-04 09:23:51 AI_Player.update()		1110,	1010,	1110,	11,	111,	111,	1011
2017-01-04 09:23:51 AI_Player.update()		111,	11,	1010,	101,	1010,	11,	1110
2017-01-04 09:23:51 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 09:23:51 AI_Player.update()		1001,	1011,	1101,	110,	1001,	101,	1010
2017-01-04 09:23:51 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1101,	1001
2017-01-04 09:23:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:23:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:51 AI_Player.update()	update
2017-01-04 09:23:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:23:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:51 AI_Player.update()	update
2017-01-04 09:23:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:53 AI_Player.update()	Search took1258ms
2017-01-04 09:23:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:53 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 09:23:53 AI_Player.update()		1011,	111,	101,	1001,	11,	110,	1010
2017-01-04 09:23:53 AI_Player.update()		1110,	1010,	1110,	11,	111,	111,	1011
2017-01-04 09:23:53 AI_Player.update()		111,	11,	1010,	101,	1010,	11,	1110
2017-01-04 09:23:53 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 09:23:53 AI_Player.update()		1001,	1011,	1101,	110,	1001,	101,	1010
2017-01-04 09:23:53 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1101,	1001
2017-01-04 09:23:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:53 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:23:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:53 AI_Player.update()	update
2017-01-04 09:23:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:53 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:23:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:53 AI_Player.update()	update
2017-01-04 09:23:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:54 AI_Player.update()	Search took1369ms
2017-01-04 09:23:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:54 AI_Player.update()		110,	1010,	111,	1001,	111,	110,	11
2017-01-04 09:23:54 AI_Player.update()		1011,	111,	101,	11,	11,	110,	1010
2017-01-04 09:23:54 AI_Player.update()		1110,	1010,	1110,	101,	111,	111,	1011
2017-01-04 09:23:54 AI_Player.update()		111,	11,	1010,	101,	1010,	11,	1110
2017-01-04 09:23:54 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-04 09:23:54 AI_Player.update()		1001,	1011,	1101,	1101,	1001,	101,	1010
2017-01-04 09:23:54 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-04 09:23:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:54 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:23:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:54 AI_Player.update()	update
2017-01-04 09:23:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:54 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:23:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:54 AI_Player.update()	update
2017-01-04 09:23:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:55 AI_Player.update()	Search took1078ms
2017-01-04 09:23:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:55 AI_Player.update()		110,	111,	111,	1001,	111,	110,	11
2017-01-04 09:23:55 AI_Player.update()		1011,	1010,	101,	11,	11,	110,	1010
2017-01-04 09:23:55 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 09:23:55 AI_Player.update()		111,	1100,	1010,	101,	1010,	11,	1110
2017-01-04 09:23:55 AI_Player.update()		1110,	1011,	1101,	110,	1011,	101,	1011
2017-01-04 09:23:55 AI_Player.update()		1001,	101,	1101,	1101,	1001,	101,	1010
2017-01-04 09:23:55 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1101,	1001
2017-01-04 09:23:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:55 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:56 AI_Player.update()	update
2017-01-04 09:23:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:56 AI_Player.update()	update
2017-01-04 09:23:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:56 AI_Player.update()	Search took441ms
2017-01-04 09:23:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:56 AI_Player.update()		110,	111,	111,	11,	111,	110,	11
2017-01-04 09:23:56 AI_Player.update()		1011,	1010,	101,	101,	11,	110,	1010
2017-01-04 09:23:56 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 09:23:56 AI_Player.update()		111,	1100,	1010,	110,	1010,	11,	1110
2017-01-04 09:23:56 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	101,	1011
2017-01-04 09:23:56 AI_Player.update()		1001,	101,	1101,	110,	1001,	101,	1010
2017-01-04 09:23:56 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:56 AI_Player.update()	update
2017-01-04 09:23:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:23:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:56 AI_Player.update()	update
2017-01-04 09:23:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:57 AI_Player.update()	Search took307ms
2017-01-04 09:23:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:57 AI_Player.update()		110,	111,	111,	11,	111,	110,	11
2017-01-04 09:23:57 AI_Player.update()		1010,	1011,	1010,	101,	101,	11,	110
2017-01-04 09:23:57 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 09:23:57 AI_Player.update()		111,	1100,	1010,	110,	1010,	11,	1110
2017-01-04 09:23:57 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	101,	1011
2017-01-04 09:23:57 AI_Player.update()		1001,	101,	1101,	110,	1001,	101,	1010
2017-01-04 09:23:57 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:57 AI_Player.update()	update
2017-01-04 09:23:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:23:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:57 AI_Player.update()	update
2017-01-04 09:23:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:58 AI_Player.update()	Search took752ms
2017-01-04 09:23:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:58 AI_Player.update()		110,	111,	111,	11,	111,	110,	11
2017-01-04 09:23:58 AI_Player.update()		1010,	1011,	1010,	101,	101,	11,	110
2017-01-04 09:23:58 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-04 09:23:58 AI_Player.update()		1110,	111,	1100,	1010,	110,	1010,	11
2017-01-04 09:23:58 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	101,	1011
2017-01-04 09:23:58 AI_Player.update()		1001,	101,	1101,	110,	1001,	101,	1010
2017-01-04 09:23:58 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:23:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:58 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:58 AI_Player.update()	update
2017-01-04 09:23:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:58 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:58 AI_Player.update()	update
2017-01-04 09:23:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:59 AI_Player.update()	Search took684ms
2017-01-04 09:23:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:59 AI_Player.update()		110,	1011,	111,	11,	111,	110,	11
2017-01-04 09:23:59 AI_Player.update()		1010,	11,	1010,	101,	101,	11,	110
2017-01-04 09:23:59 AI_Player.update()		1110,	111,	1110,	101,	111,	111,	1011
2017-01-04 09:23:59 AI_Player.update()		1110,	1011,	1100,	1010,	110,	1010,	11
2017-01-04 09:23:59 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-04 09:23:59 AI_Player.update()		1001,	1010,	1101,	110,	1001,	101,	1010
2017-01-04 09:23:59 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1101,	1001
2017-01-04 09:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:59 AI_Player.update()	update
2017-01-04 09:23:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:59 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:23:59 AI_Player.update()	Player a has won!
2017-01-04 09:23:59 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:59 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:23:59 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:23:59 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:23:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:23:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:59 AI_Player.update()	update
2017-01-04 09:23:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:23:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:23:59 AI_Player.update()	Search took93ms
2017-01-04 09:23:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:59 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 09:23:59 AI_Player.update()		110,	1100,	1101,	1001,	101,	1110,	111
2017-01-04 09:23:59 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-04 09:23:59 AI_Player.update()		1010,	1011,	11,	110,	1101,	1100,	11
2017-01-04 09:23:59 AI_Player.update()		1110,	1100,	1101,	11,	1011,	110,	1011
2017-01-04 09:23:59 AI_Player.update()		1010,	1010,	1010,	1100,	1001,	110,	1001
2017-01-04 09:23:59 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:59 AI_Player.update()	update
2017-01-04 09:23:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:23:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:23:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:23:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:59 AI_Player.update()	update
2017-01-04 09:23:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:23:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:23:59 AI_Player.update()	Search took27ms
2017-01-04 09:23:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:59 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 09:23:59 AI_Player.update()		111,	110,	1100,	1101,	1001,	101,	1110
2017-01-04 09:23:59 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-04 09:23:59 AI_Player.update()		1010,	1011,	11,	110,	1101,	1100,	11
2017-01-04 09:23:59 AI_Player.update()		1110,	1100,	1101,	11,	1011,	110,	1011
2017-01-04 09:23:59 AI_Player.update()		1010,	1010,	1010,	1100,	1001,	110,	1001
2017-01-04 09:23:59 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:23:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:59 AI_Player.update()	update
2017-01-04 09:23:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:23:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:23:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:23:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:23:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:23:59 AI_Player.update()	update
2017-01-04 09:23:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:00 AI_Player.update()	Search took239ms
2017-01-04 09:24:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:00 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-04 09:24:00 AI_Player.update()		111,	110,	1100,	1010,	1001,	101,	1110
2017-01-04 09:24:00 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 09:24:00 AI_Player.update()		1010,	1011,	11,	1001,	1101,	1100,	11
2017-01-04 09:24:00 AI_Player.update()		1110,	1100,	1101,	110,	1011,	110,	1011
2017-01-04 09:24:00 AI_Player.update()		1010,	1010,	1010,	11,	1001,	110,	1001
2017-01-04 09:24:00 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:00 AI_Player.update()	update
2017-01-04 09:24:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:00 AI_Player.update()	update
2017-01-04 09:24:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:00 AI_Player.update()	Search took150ms
2017-01-04 09:24:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:00 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:00 AI_Player.update()		111,	110,	1100,	1010,	1001,	11,	1110
2017-01-04 09:24:00 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:00 AI_Player.update()		1010,	1011,	11,	1001,	1101,	11,	11
2017-01-04 09:24:00 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-04 09:24:00 AI_Player.update()		1010,	1010,	1010,	11,	1001,	110,	1001
2017-01-04 09:24:00 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:00 AI_Player.update()	update
2017-01-04 09:24:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:00 AI_Player.update()	update
2017-01-04 09:24:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:00 AI_Player.update()	Search took120ms
2017-01-04 09:24:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:00 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:00 AI_Player.update()		111,	110,	1100,	1010,	1001,	11,	1110
2017-01-04 09:24:00 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:00 AI_Player.update()		1010,	1011,	11,	1001,	1101,	11,	11
2017-01-04 09:24:00 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-04 09:24:00 AI_Player.update()		1010,	1010,	11,	1001,	110,	1001,	1010
2017-01-04 09:24:00 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:00 AI_Player.update()	update
2017-01-04 09:24:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:00 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:00 AI_Player.update()	update
2017-01-04 09:24:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:01 AI_Player.update()	Search took657ms
2017-01-04 09:24:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:01 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:01 AI_Player.update()		111,	110,	1100,	1010,	1001,	11,	1110
2017-01-04 09:24:01 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:01 AI_Player.update()		1011,	11,	1001,	1101,	11,	11,	1010
2017-01-04 09:24:01 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-04 09:24:01 AI_Player.update()		1010,	1010,	11,	1001,	110,	1001,	1010
2017-01-04 09:24:01 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:01 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:01 AI_Player.update()	update
2017-01-04 09:24:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:01 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:01 AI_Player.update()	update
2017-01-04 09:24:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:02 AI_Player.update()	Search took290ms
2017-01-04 09:24:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:02 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:02 AI_Player.update()		111,	110,	1100,	1010,	1001,	11,	1110
2017-01-04 09:24:02 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:02 AI_Player.update()		1011,	11,	1001,	1101,	11,	11,	1010
2017-01-04 09:24:02 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-04 09:24:02 AI_Player.update()		1010,	1010,	1010,	11,	1001,	110,	1001
2017-01-04 09:24:02 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:02 AI_Player.update()	update
2017-01-04 09:24:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:02 AI_Player.update()	update
2017-01-04 09:24:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:02 AI_Player.update()	Search took486ms
2017-01-04 09:24:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:02 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:24:02 AI_Player.update()		111,	101,	1100,	1010,	1001,	11,	1110
2017-01-04 09:24:02 AI_Player.update()		1110,	11,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:02 AI_Player.update()		1011,	1100,	1001,	1101,	11,	11,	1010
2017-01-04 09:24:02 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 09:24:02 AI_Player.update()		1010,	1100,	1010,	11,	1001,	110,	1001
2017-01-04 09:24:02 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:02 AI_Player.update()	update
2017-01-04 09:24:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:24:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:02 AI_Player.update()	update
2017-01-04 09:24:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:03 AI_Player.update()	Search took103ms
2017-01-04 09:24:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:03 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:24:03 AI_Player.update()		111,	101,	1100,	1010,	1001,	11,	1110
2017-01-04 09:24:03 AI_Player.update()		1110,	11,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:03 AI_Player.update()		1011,	1100,	1001,	1101,	11,	11,	1010
2017-01-04 09:24:03 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 09:24:03 AI_Player.update()		1001,	1010,	1100,	1010,	11,	1001,	110
2017-01-04 09:24:03 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:03 AI_Player.update()	update
2017-01-04 09:24:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:24:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:03 AI_Player.update()	update
2017-01-04 09:24:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:03 AI_Player.update()	Search took158ms
2017-01-04 09:24:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:03 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:24:03 AI_Player.update()		111,	101,	1100,	1010,	1001,	11,	1110
2017-01-04 09:24:03 AI_Player.update()		1110,	11,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:03 AI_Player.update()		1011,	1100,	1001,	1101,	11,	11,	1010
2017-01-04 09:24:03 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 09:24:03 AI_Player.update()		1010,	1100,	1010,	11,	1001,	110,	1001
2017-01-04 09:24:03 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:03 AI_Player.update()	update
2017-01-04 09:24:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:24:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:03 AI_Player.update()	update
2017-01-04 09:24:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:03 AI_Player.update()	Search took54ms
2017-01-04 09:24:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:03 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:03 AI_Player.update()		111,	11,	1100,	1010,	1001,	11,	1110
2017-01-04 09:24:03 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:03 AI_Player.update()		1011,	1010,	1001,	1101,	11,	11,	1010
2017-01-04 09:24:03 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-04 09:24:03 AI_Player.update()		1010,	101,	1010,	11,	1001,	110,	1001
2017-01-04 09:24:03 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:03 AI_Player.update()	update
2017-01-04 09:24:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:03 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:03 AI_Player.update()	update
2017-01-04 09:24:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:04 AI_Player.update()	Search took357ms
2017-01-04 09:24:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:04 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:24:04 AI_Player.update()		111,	101,	1100,	1010,	1001,	11,	1110
2017-01-04 09:24:04 AI_Player.update()		1110,	11,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:04 AI_Player.update()		1011,	1100,	1001,	1101,	11,	11,	1010
2017-01-04 09:24:04 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 09:24:04 AI_Player.update()		1010,	1100,	1010,	11,	1001,	110,	1001
2017-01-04 09:24:04 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:24:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:04 AI_Player.update()	update
2017-01-04 09:24:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:24:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:04 AI_Player.update()	update
2017-01-04 09:24:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:04 AI_Player.update()	Search took98ms
2017-01-04 09:24:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:04 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 09:24:04 AI_Player.update()		111,	101,	1100,	1101,	1001,	11,	1110
2017-01-04 09:24:04 AI_Player.update()		1110,	11,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:04 AI_Player.update()		1011,	1100,	1001,	110,	11,	11,	1010
2017-01-04 09:24:04 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 09:24:04 AI_Player.update()		1010,	1100,	1010,	1100,	1001,	110,	1001
2017-01-04 09:24:04 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:24:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:04 AI_Player.update()	update
2017-01-04 09:24:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:24:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:04 AI_Player.update()	update
2017-01-04 09:24:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:05 AI_Player.update()	Search took810ms
2017-01-04 09:24:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:05 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:24:05 AI_Player.update()		111,	101,	1100,	1010,	1001,	11,	1110
2017-01-04 09:24:05 AI_Player.update()		1110,	11,	1110,	1101,	111,	101,	1011
2017-01-04 09:24:05 AI_Player.update()		1011,	1100,	1001,	1101,	11,	11,	1010
2017-01-04 09:24:05 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 09:24:05 AI_Player.update()		1010,	1100,	1010,	11,	1001,	110,	1001
2017-01-04 09:24:05 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:24:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:05 AI_Player.update()	update
2017-01-04 09:24:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:24:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:05 AI_Player.update()	update
2017-01-04 09:24:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:05 AI_Player.update()	Search took63ms
2017-01-04 09:24:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:05 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:24:05 AI_Player.update()		111,	101,	1100,	1100,	1001,	11,	1110
2017-01-04 09:24:05 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 09:24:05 AI_Player.update()		1011,	1100,	1001,	1101,	11,	11,	1010
2017-01-04 09:24:05 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-04 09:24:05 AI_Player.update()		1010,	1100,	1010,	110,	1001,	110,	1001
2017-01-04 09:24:05 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-04 09:24:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:24:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:05 AI_Player.update()	update
2017-01-04 09:24:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:05 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:24:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:06 AI_Player.update()	update
2017-01-04 09:24:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:06 AI_Player.update()	Search took462ms
2017-01-04 09:24:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:06 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:24:06 AI_Player.update()		101,	1100,	1100,	1001,	11,	1110,	111
2017-01-04 09:24:06 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 09:24:06 AI_Player.update()		1011,	1100,	1001,	1101,	11,	11,	1010
2017-01-04 09:24:06 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-04 09:24:06 AI_Player.update()		1010,	1100,	1010,	110,	1001,	110,	1001
2017-01-04 09:24:06 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-04 09:24:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:24:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:06 AI_Player.update()	update
2017-01-04 09:24:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:06 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:24:06 AI_Player.update()	Player b has won!
2017-01-04 09:24:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:06 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:24:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:06 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:24:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:06 AI_Player.update()	update
2017-01-04 09:24:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:06 AI_Player.update()	Search took52ms
2017-01-04 09:24:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:06 AI_Player.update()		110,	11,	111,	110,	111,	1101,	11
2017-01-04 09:24:06 AI_Player.update()		1001,	101,	1001,	101,	1100,	11,	110
2017-01-04 09:24:06 AI_Player.update()		1110,	101,	1110,	1110,	111,	111,	1011
2017-01-04 09:24:06 AI_Player.update()		1010,	110,	110,	110,	110,	101,	11
2017-01-04 09:24:06 AI_Player.update()		1110,	111,	1101,	1010,	1011,	110,	1011
2017-01-04 09:24:06 AI_Player.update()		101,	101,	1100,	101,	1110,	101,	1100
2017-01-04 09:24:06 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-04 09:24:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:06 AI_Player.update()	update
2017-01-04 09:24:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:07 AI_Player.update()	update
2017-01-04 09:24:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:07 AI_Player.update()	Search took112ms
2017-01-04 09:24:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:07 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-04 09:24:07 AI_Player.update()		1001,	101,	1001,	101,	1100,	11,	110
2017-01-04 09:24:07 AI_Player.update()		1110,	110,	1110,	1110,	111,	111,	1011
2017-01-04 09:24:07 AI_Player.update()		1010,	111,	110,	110,	110,	101,	11
2017-01-04 09:24:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 09:24:07 AI_Player.update()		101,	1100,	1100,	101,	1110,	101,	1100
2017-01-04 09:24:07 AI_Player.update()		1100,	11,	1101,	111,	1101,	11,	1001
2017-01-04 09:24:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:07 AI_Player.update()	update
2017-01-04 09:24:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:07 AI_Player.update()	update
2017-01-04 09:24:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:07 AI_Player.update()	Search took109ms
2017-01-04 09:24:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:07 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-04 09:24:07 AI_Player.update()		101,	1001,	101,	1100,	11,	110,	1001
2017-01-04 09:24:07 AI_Player.update()		1110,	110,	1110,	1110,	111,	111,	1011
2017-01-04 09:24:07 AI_Player.update()		1010,	111,	110,	110,	110,	101,	11
2017-01-04 09:24:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 09:24:07 AI_Player.update()		101,	1100,	1100,	101,	1110,	101,	1100
2017-01-04 09:24:07 AI_Player.update()		1100,	11,	1101,	111,	1101,	11,	1001
2017-01-04 09:24:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:07 AI_Player.update()	update
2017-01-04 09:24:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:07 AI_Player.update()	update
2017-01-04 09:24:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:07 AI_Player.update()	Search took108ms
2017-01-04 09:24:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:07 AI_Player.update()		110,	101,	111,	111,	111,	1101,	11
2017-01-04 09:24:07 AI_Player.update()		101,	1001,	101,	110,	11,	110,	1001
2017-01-04 09:24:07 AI_Player.update()		1110,	110,	1110,	1100,	111,	111,	1011
2017-01-04 09:24:07 AI_Player.update()		1010,	111,	110,	1110,	110,	101,	11
2017-01-04 09:24:07 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-04 09:24:07 AI_Player.update()		101,	1100,	1100,	1010,	1110,	101,	1100
2017-01-04 09:24:07 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-04 09:24:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:07 AI_Player.update()	update
2017-01-04 09:24:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:07 AI_Player.update()	update
2017-01-04 09:24:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:08 AI_Player.update()	Search took143ms
2017-01-04 09:24:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:08 AI_Player.update()		110,	101,	111,	111,	111,	11,	11
2017-01-04 09:24:08 AI_Player.update()		101,	1001,	101,	110,	11,	1101,	1001
2017-01-04 09:24:08 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-04 09:24:08 AI_Player.update()		1010,	111,	110,	1110,	110,	111,	11
2017-01-04 09:24:08 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:08 AI_Player.update()		101,	1100,	1100,	1010,	1110,	110,	1100
2017-01-04 09:24:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-04 09:24:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:08 AI_Player.update()	update
2017-01-04 09:24:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:08 AI_Player.update()	update
2017-01-04 09:24:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:08 AI_Player.update()	Search took46ms
2017-01-04 09:24:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:08 AI_Player.update()		110,	101,	111,	111,	111,	11,	11
2017-01-04 09:24:08 AI_Player.update()		101,	1001,	101,	110,	11,	1101,	1001
2017-01-04 09:24:08 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-04 09:24:08 AI_Player.update()		111,	110,	1110,	110,	111,	11,	1010
2017-01-04 09:24:08 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:08 AI_Player.update()		101,	1100,	1100,	1010,	1110,	110,	1100
2017-01-04 09:24:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-04 09:24:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:08 AI_Player.update()	update
2017-01-04 09:24:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:08 AI_Player.update()	update
2017-01-04 09:24:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:08 AI_Player.update()	Search took98ms
2017-01-04 09:24:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:08 AI_Player.update()		110,	101,	111,	111,	111,	11,	11
2017-01-04 09:24:08 AI_Player.update()		1001,	101,	110,	11,	1101,	1001,	101
2017-01-04 09:24:08 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-04 09:24:08 AI_Player.update()		111,	110,	1110,	110,	111,	11,	1010
2017-01-04 09:24:08 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:08 AI_Player.update()		101,	1100,	1100,	1010,	1110,	110,	1100
2017-01-04 09:24:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-04 09:24:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:08 AI_Player.update()	update
2017-01-04 09:24:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:08 AI_Player.update()	update
2017-01-04 09:24:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:09 AI_Player.update()	Search took185ms
2017-01-04 09:24:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:09 AI_Player.update()		110,	101,	111,	111,	111,	1001,	11
2017-01-04 09:24:09 AI_Player.update()		1001,	101,	110,	11,	1101,	110,	101
2017-01-04 09:24:09 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-04 09:24:09 AI_Player.update()		111,	110,	1110,	110,	111,	101,	1010
2017-01-04 09:24:09 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-04 09:24:09 AI_Player.update()		101,	1100,	1100,	1010,	1110,	101,	1100
2017-01-04 09:24:09 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-04 09:24:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:09 AI_Player.update()	update
2017-01-04 09:24:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:24:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:09 AI_Player.update()	update
2017-01-04 09:24:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:09 AI_Player.update()	Search took230ms
2017-01-04 09:24:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:09 AI_Player.update()		110,	101,	111,	111,	111,	1001,	11
2017-01-04 09:24:09 AI_Player.update()		1001,	101,	110,	11,	1101,	110,	101
2017-01-04 09:24:09 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-04 09:24:09 AI_Player.update()		1010,	111,	110,	1110,	110,	111,	101
2017-01-04 09:24:09 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-04 09:24:09 AI_Player.update()		101,	1100,	1100,	1010,	1110,	101,	1100
2017-01-04 09:24:09 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-04 09:24:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:24:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:09 AI_Player.update()	update
2017-01-04 09:24:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:09 AI_Player.update()	update
2017-01-04 09:24:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:10 AI_Player.update()	Search took330ms
2017-01-04 09:24:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:10 AI_Player.update()		110,	101,	111,	111,	111,	110,	11
2017-01-04 09:24:10 AI_Player.update()		1001,	101,	110,	11,	1101,	11,	101
2017-01-04 09:24:10 AI_Player.update()		1110,	110,	1110,	1100,	111,	111,	1011
2017-01-04 09:24:10 AI_Player.update()		1010,	111,	110,	1110,	110,	110,	101
2017-01-04 09:24:10 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:10 AI_Player.update()		101,	1100,	1100,	1010,	1110,	11,	1100
2017-01-04 09:24:10 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:10 AI_Player.update()	update
2017-01-04 09:24:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:24:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:10 AI_Player.update()	update
2017-01-04 09:24:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:10 AI_Player.update()	Search took119ms
2017-01-04 09:24:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:10 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:24:10 AI_Player.update()		1001,	101,	110,	11,	1101,	11,	101
2017-01-04 09:24:10 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-04 09:24:10 AI_Player.update()		1010,	110,	110,	1110,	110,	110,	101
2017-01-04 09:24:10 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:10 AI_Player.update()		101,	101,	1100,	1010,	1110,	11,	1100
2017-01-04 09:24:10 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:24:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:10 AI_Player.update()	update
2017-01-04 09:24:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:10 AI_Player.update()	update
2017-01-04 09:24:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:10 AI_Player.update()	Search took364ms
2017-01-04 09:24:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:10 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:24:10 AI_Player.update()		1001,	101,	110,	11,	1101,	11,	101
2017-01-04 09:24:10 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-04 09:24:10 AI_Player.update()		101,	1010,	110,	110,	1110,	110,	110
2017-01-04 09:24:10 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:10 AI_Player.update()		101,	101,	1100,	1010,	1110,	11,	1100
2017-01-04 09:24:10 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:10 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:11 AI_Player.update()	update
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:11 AI_Player.update()	update
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:11 AI_Player.update()	Search took46ms
2017-01-04 09:24:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:11 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:24:11 AI_Player.update()		1001,	101,	110,	11,	1101,	11,	101
2017-01-04 09:24:11 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-04 09:24:11 AI_Player.update()		1010,	110,	110,	1110,	110,	110,	101
2017-01-04 09:24:11 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:11 AI_Player.update()		101,	101,	1100,	1010,	1110,	11,	1100
2017-01-04 09:24:11 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:11 AI_Player.update()	update
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:11 AI_Player.update()	update
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:11 AI_Player.update()	Search took181ms
2017-01-04 09:24:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:11 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:24:11 AI_Player.update()		1001,	101,	110,	11,	1101,	11,	101
2017-01-04 09:24:11 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-04 09:24:11 AI_Player.update()		101,	1010,	110,	110,	1110,	110,	110
2017-01-04 09:24:11 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:11 AI_Player.update()		101,	101,	1100,	1010,	1110,	11,	1100
2017-01-04 09:24:11 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:11 AI_Player.update()	update
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:24:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:11 AI_Player.update()	update
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:11 AI_Player.update()	Search took88ms
2017-01-04 09:24:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:11 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:24:11 AI_Player.update()		1001,	101,	110,	11,	1101,	11,	101
2017-01-04 09:24:11 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-04 09:24:11 AI_Player.update()		110,	101,	1010,	110,	110,	1110,	110
2017-01-04 09:24:11 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:11 AI_Player.update()		101,	101,	1100,	1010,	1110,	11,	1100
2017-01-04 09:24:11 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:24:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:11 AI_Player.update()	update
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:24:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:12 AI_Player.update()	update
2017-01-04 09:24:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:12 AI_Player.update()	Search took335ms
2017-01-04 09:24:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:12 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:24:12 AI_Player.update()		1001,	101,	110,	11,	1101,	11,	101
2017-01-04 09:24:12 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-04 09:24:12 AI_Player.update()		101,	1010,	110,	110,	1110,	110,	110
2017-01-04 09:24:12 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:12 AI_Player.update()		101,	101,	1100,	1010,	1110,	11,	1100
2017-01-04 09:24:12 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:24:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:12 AI_Player.update()	update
2017-01-04 09:24:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:24:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:12 AI_Player.update()	update
2017-01-04 09:24:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:13 AI_Player.update()	Search took521ms
2017-01-04 09:24:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:13 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-04 09:24:13 AI_Player.update()		1001,	101,	110,	11,	1101,	111,	101
2017-01-04 09:24:13 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 09:24:13 AI_Player.update()		101,	1010,	110,	110,	1110,	101,	110
2017-01-04 09:24:13 AI_Player.update()		1110,	111,	1101,	110,	1011,	11,	1011
2017-01-04 09:24:13 AI_Player.update()		101,	101,	1100,	1010,	1110,	1001,	1100
2017-01-04 09:24:13 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 09:24:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:13 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:24:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:13 AI_Player.update()	update
2017-01-04 09:24:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:13 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:24:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:13 AI_Player.update()	update
2017-01-04 09:24:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:13 AI_Player.update()	Search took395ms
2017-01-04 09:24:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:13 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 09:24:13 AI_Player.update()		1001,	101,	110,	111,	1101,	111,	101
2017-01-04 09:24:13 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-04 09:24:13 AI_Player.update()		101,	1010,	110,	1100,	1110,	101,	110
2017-01-04 09:24:13 AI_Player.update()		1110,	111,	1101,	110,	1011,	11,	1011
2017-01-04 09:24:13 AI_Player.update()		101,	101,	1100,	110,	1110,	1001,	1100
2017-01-04 09:24:13 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-04 09:24:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:13 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:24:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:13 AI_Player.update()	update
2017-01-04 09:24:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:13 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:24:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:13 AI_Player.update()	update
2017-01-04 09:24:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:14 AI_Player.update()	Search took293ms
2017-01-04 09:24:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:14 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-04 09:24:14 AI_Player.update()		1001,	101,	110,	111,	1101,	11,	101
2017-01-04 09:24:14 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-04 09:24:14 AI_Player.update()		101,	1010,	110,	1100,	1110,	110,	110
2017-01-04 09:24:14 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:14 AI_Player.update()		101,	101,	1100,	110,	1110,	11,	1100
2017-01-04 09:24:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:14 AI_Player.update()	update
2017-01-04 09:24:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:14 AI_Player.update()	update
2017-01-04 09:24:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:14 AI_Player.update()	Search took221ms
2017-01-04 09:24:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:14 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:24:14 AI_Player.update()		1001,	101,	110,	11,	1101,	11,	101
2017-01-04 09:24:14 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-04 09:24:14 AI_Player.update()		101,	1010,	110,	110,	1110,	110,	110
2017-01-04 09:24:14 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:14 AI_Player.update()		101,	101,	1100,	1010,	1110,	11,	1100
2017-01-04 09:24:14 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:14 AI_Player.update()	update
2017-01-04 09:24:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:14 AI_Player.update()	update
2017-01-04 09:24:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:14 AI_Player.update()	Search took71ms
2017-01-04 09:24:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:14 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-04 09:24:14 AI_Player.update()		1001,	101,	110,	111,	1101,	11,	101
2017-01-04 09:24:14 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-04 09:24:14 AI_Player.update()		101,	1010,	110,	1100,	1110,	110,	110
2017-01-04 09:24:14 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:14 AI_Player.update()		101,	101,	1100,	110,	1110,	11,	1100
2017-01-04 09:24:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:24:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:14 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:15 AI_Player.update()	update
2017-01-04 09:24:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:15 AI_Player.update()	update
2017-01-04 09:24:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:15 AI_Player.update()	Search took337ms
2017-01-04 09:24:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:15 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-04 09:24:15 AI_Player.update()		101,	1001,	101,	110,	111,	1101,	11
2017-01-04 09:24:15 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-04 09:24:15 AI_Player.update()		101,	1010,	110,	1100,	1110,	110,	110
2017-01-04 09:24:15 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-04 09:24:15 AI_Player.update()		101,	101,	1100,	110,	1110,	11,	1100
2017-01-04 09:24:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 09:24:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:15 AI_Player.update()	update
2017-01-04 09:24:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:15 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:24:15 AI_Player.update()	Player b has won!
2017-01-04 09:24:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:15 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:24:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:15 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:24:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:15 AI_Player.update()	update
2017-01-04 09:24:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:15 AI_Player.update()	Search took255ms
2017-01-04 09:24:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:15 AI_Player.update()		110,	1101,	111,	1010,	111,	1100,	11
2017-01-04 09:24:15 AI_Player.update()		1010,	1100,	101,	110,	101,	1010,	1010
2017-01-04 09:24:15 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 09:24:15 AI_Player.update()		1010,	1110,	110,	110,	110,	1010,	110
2017-01-04 09:24:15 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-04 09:24:15 AI_Player.update()		11,	1100,	1010,	1100,	1010,	101,	110
2017-01-04 09:24:15 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:16 AI_Player.update()	update
2017-01-04 09:24:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:16 AI_Player.update()	update
2017-01-04 09:24:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:16 AI_Player.update()	Search took126ms
2017-01-04 09:24:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:16 AI_Player.update()		110,	1101,	111,	1010,	111,	1100,	11
2017-01-04 09:24:16 AI_Player.update()		1010,	1100,	101,	110,	101,	1010,	1010
2017-01-04 09:24:16 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-04 09:24:16 AI_Player.update()		110,	1010,	1110,	110,	110,	110,	1010
2017-01-04 09:24:16 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-04 09:24:16 AI_Player.update()		11,	1100,	1010,	1100,	1010,	101,	110
2017-01-04 09:24:16 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:16 AI_Player.update()	update
2017-01-04 09:24:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:16 AI_Player.update()	update
2017-01-04 09:24:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:16 AI_Player.update()	Search took249ms
2017-01-04 09:24:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:16 AI_Player.update()		110,	1101,	111,	110,	111,	1100,	11
2017-01-04 09:24:16 AI_Player.update()		1010,	1100,	101,	101,	101,	1010,	1010
2017-01-04 09:24:16 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 09:24:16 AI_Player.update()		110,	1010,	1110,	1001,	110,	110,	1010
2017-01-04 09:24:16 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 09:24:16 AI_Player.update()		11,	1100,	1010,	1010,	1010,	101,	110
2017-01-04 09:24:16 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:16 AI_Player.update()	update
2017-01-04 09:24:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:24:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:16 AI_Player.update()	update
2017-01-04 09:24:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:17 AI_Player.update()	Search took169ms
2017-01-04 09:24:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:17 AI_Player.update()		110,	1101,	111,	110,	111,	1100,	11
2017-01-04 09:24:17 AI_Player.update()		1010,	1100,	101,	101,	101,	1010,	1010
2017-01-04 09:24:17 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 09:24:17 AI_Player.update()		1010,	110,	1010,	1110,	1001,	110,	110
2017-01-04 09:24:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 09:24:17 AI_Player.update()		11,	1100,	1010,	1010,	1010,	101,	110
2017-01-04 09:24:17 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:24:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:17 AI_Player.update()	update
2017-01-04 09:24:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:17 AI_Player.update()	update
2017-01-04 09:24:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:17 AI_Player.update()	Search took151ms
2017-01-04 09:24:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:17 AI_Player.update()		110,	1101,	111,	110,	111,	1100,	11
2017-01-04 09:24:17 AI_Player.update()		1010,	1100,	101,	101,	101,	1010,	1010
2017-01-04 09:24:17 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 09:24:17 AI_Player.update()		110,	1010,	1110,	1001,	110,	110,	1010
2017-01-04 09:24:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 09:24:17 AI_Player.update()		11,	1100,	1010,	1010,	1010,	101,	110
2017-01-04 09:24:17 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:17 AI_Player.update()	update
2017-01-04 09:24:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:17 AI_Player.update()	update
2017-01-04 09:24:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:17 AI_Player.update()	Search took52ms
2017-01-04 09:24:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:17 AI_Player.update()		110,	1101,	111,	110,	111,	1100,	11
2017-01-04 09:24:17 AI_Player.update()		1010,	1100,	101,	101,	101,	1010,	1010
2017-01-04 09:24:17 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 09:24:17 AI_Player.update()		1010,	1110,	1001,	110,	110,	1010,	110
2017-01-04 09:24:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 09:24:17 AI_Player.update()		11,	1100,	1010,	1010,	1010,	101,	110
2017-01-04 09:24:17 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:17 AI_Player.update()	update
2017-01-04 09:24:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:17 AI_Player.update()	update
2017-01-04 09:24:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:18 AI_Player.update()	Search took98ms
2017-01-04 09:24:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:18 AI_Player.update()		110,	1101,	111,	110,	111,	1100,	11
2017-01-04 09:24:18 AI_Player.update()		1010,	1100,	101,	101,	101,	1010,	1010
2017-01-04 09:24:18 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 09:24:18 AI_Player.update()		1110,	1001,	110,	110,	1010,	110,	1010
2017-01-04 09:24:18 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 09:24:18 AI_Player.update()		11,	1100,	1010,	1010,	1010,	101,	110
2017-01-04 09:24:18 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:18 AI_Player.update()	update
2017-01-04 09:24:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:24:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:18 AI_Player.update()	update
2017-01-04 09:24:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:18 AI_Player.update()	Search took181ms
2017-01-04 09:24:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:18 AI_Player.update()		110,	1101,	111,	110,	111,	1100,	11
2017-01-04 09:24:18 AI_Player.update()		1100,	101,	101,	101,	1010,	1010,	1010
2017-01-04 09:24:18 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-04 09:24:18 AI_Player.update()		1110,	1001,	110,	110,	1010,	110,	1010
2017-01-04 09:24:18 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 09:24:18 AI_Player.update()		11,	1100,	1010,	1010,	1010,	101,	110
2017-01-04 09:24:18 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:24:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:18 AI_Player.update()	update
2017-01-04 09:24:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:18 AI_Player.update()	update
2017-01-04 09:24:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:18 AI_Player.update()	Search took282ms
2017-01-04 09:24:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:18 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-04 09:24:18 AI_Player.update()		1100,	11,	101,	101,	1010,	1010,	1010
2017-01-04 09:24:18 AI_Player.update()		1110,	1001,	1110,	110,	111,	1110,	1011
2017-01-04 09:24:18 AI_Player.update()		1110,	1100,	110,	110,	1010,	110,	1010
2017-01-04 09:24:18 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 09:24:18 AI_Player.update()		11,	110,	1010,	1010,	1010,	101,	110
2017-01-04 09:24:18 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:19 AI_Player.update()	update
2017-01-04 09:24:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:19 AI_Player.update()	update
2017-01-04 09:24:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:19 AI_Player.update()	Search took200ms
2017-01-04 09:24:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:19 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-04 09:24:19 AI_Player.update()		1100,	11,	101,	101,	1010,	1010,	1010
2017-01-04 09:24:19 AI_Player.update()		1110,	1001,	1110,	110,	111,	1110,	1011
2017-01-04 09:24:19 AI_Player.update()		1100,	110,	110,	1010,	110,	1010,	1110
2017-01-04 09:24:19 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 09:24:19 AI_Player.update()		11,	110,	1010,	1010,	1010,	101,	110
2017-01-04 09:24:19 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:19 AI_Player.update()	update
2017-01-04 09:24:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:19 AI_Player.update()	update
2017-01-04 09:24:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:19 AI_Player.update()	Search took241ms
2017-01-04 09:24:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:19 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:24:19 AI_Player.update()		1100,	11,	101,	101,	1010,	1100,	1010
2017-01-04 09:24:19 AI_Player.update()		1110,	1001,	1110,	110,	111,	1010,	1011
2017-01-04 09:24:19 AI_Player.update()		1100,	110,	110,	1010,	110,	1110,	1110
2017-01-04 09:24:19 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:24:19 AI_Player.update()		11,	110,	1010,	1010,	1010,	110,	110
2017-01-04 09:24:19 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:19 AI_Player.update()	update
2017-01-04 09:24:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:24:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:20 AI_Player.update()	update
2017-01-04 09:24:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:20 AI_Player.update()	Search took98ms
2017-01-04 09:24:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:20 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:24:20 AI_Player.update()		1100,	1001,	101,	101,	1010,	1100,	1010
2017-01-04 09:24:20 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-04 09:24:20 AI_Player.update()		1100,	1100,	110,	1010,	110,	1110,	1110
2017-01-04 09:24:20 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:24:20 AI_Player.update()		11,	1101,	1010,	1010,	1010,	110,	110
2017-01-04 09:24:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:24:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:20 AI_Player.update()	update
2017-01-04 09:24:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:24:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:20 AI_Player.update()	update
2017-01-04 09:24:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:20 AI_Player.update()	Search took182ms
2017-01-04 09:24:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:20 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:24:20 AI_Player.update()		1001,	101,	101,	1010,	1100,	1010,	1100
2017-01-04 09:24:20 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-04 09:24:20 AI_Player.update()		1100,	1100,	110,	1010,	110,	1110,	1110
2017-01-04 09:24:20 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:24:20 AI_Player.update()		11,	1101,	1010,	1010,	1010,	110,	110
2017-01-04 09:24:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:24:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:20 AI_Player.update()	update
2017-01-04 09:24:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:24:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:20 AI_Player.update()	update
2017-01-04 09:24:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:20 AI_Player.update()	Search took99ms
2017-01-04 09:24:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:20 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:24:20 AI_Player.update()		1001,	101,	101,	1010,	1100,	1010,	1100
2017-01-04 09:24:20 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-04 09:24:20 AI_Player.update()		1100,	110,	1010,	110,	1110,	1110,	1100
2017-01-04 09:24:20 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:24:20 AI_Player.update()		11,	1101,	1010,	1010,	1010,	110,	110
2017-01-04 09:24:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:24:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:20 AI_Player.update()	update
2017-01-04 09:24:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:21 AI_Player.update()	update
2017-01-04 09:24:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:21 AI_Player.update()	Search took145ms
2017-01-04 09:24:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:21 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-04 09:24:21 AI_Player.update()		101,	101,	1010,	1100,	1010,	1100,	1001
2017-01-04 09:24:21 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-04 09:24:21 AI_Player.update()		1100,	110,	1010,	110,	1110,	1110,	1100
2017-01-04 09:24:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:24:21 AI_Player.update()		11,	1101,	1010,	1010,	1010,	110,	110
2017-01-04 09:24:21 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:21 AI_Player.update()	update
2017-01-04 09:24:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:24:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:21 AI_Player.update()	update
2017-01-04 09:24:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:21 AI_Player.update()	Search took336ms
2017-01-04 09:24:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:21 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 09:24:21 AI_Player.update()		101,	110,	1010,	1100,	1010,	1100,	1001
2017-01-04 09:24:21 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-04 09:24:21 AI_Player.update()		1100,	110,	1010,	110,	1110,	1110,	1100
2017-01-04 09:24:21 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1010,	1011
2017-01-04 09:24:21 AI_Player.update()		11,	101,	1010,	1010,	1010,	110,	110
2017-01-04 09:24:21 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 09:24:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:24:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:21 AI_Player.update()	update
2017-01-04 09:24:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:24:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:21 AI_Player.update()	update
2017-01-04 09:24:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:22 AI_Player.update()	Search took135ms
2017-01-04 09:24:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:22 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:22 AI_Player.update()		101,	110,	1010,	110,	1010,	1100,	1001
2017-01-04 09:24:22 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-04 09:24:22 AI_Player.update()		1100,	110,	1010,	1100,	1110,	1110,	1100
2017-01-04 09:24:22 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:24:22 AI_Player.update()		11,	101,	1010,	1010,	1010,	110,	110
2017-01-04 09:24:22 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 09:24:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:24:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:22 AI_Player.update()	update
2017-01-04 09:24:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:22 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:24:22 AI_Player.update()	Player a has won!
2017-01-04 09:24:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:24:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:22 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:24:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:22 AI_Player.update()	update
2017-01-04 09:24:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:22 AI_Player.update()	Search took75ms
2017-01-04 09:24:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:22 AI_Player.update()		110,	110,	111,	1010,	111,	1100,	11
2017-01-04 09:24:22 AI_Player.update()		1010,	1010,	1110,	1010,	1010,	1011,	1110
2017-01-04 09:24:22 AI_Player.update()		1110,	1011,	1110,	110,	111,	1010,	1011
2017-01-04 09:24:22 AI_Player.update()		1001,	11,	11,	1010,	11,	1100,	101
2017-01-04 09:24:22 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1001,	1011
2017-01-04 09:24:22 AI_Player.update()		1011,	1100,	1101,	1100,	1100,	101,	110
2017-01-04 09:24:22 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1011,	1001
2017-01-04 09:24:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:22 AI_Player.update()	update
2017-01-04 09:24:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:22 AI_Player.update()	update
2017-01-04 09:24:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:22 AI_Player.update()	Search took74ms
2017-01-04 09:24:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:22 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-04 09:24:22 AI_Player.update()		1010,	1011,	1110,	1010,	1010,	1011,	1110
2017-01-04 09:24:22 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-04 09:24:22 AI_Player.update()		1001,	111,	11,	1010,	11,	1100,	101
2017-01-04 09:24:22 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-04 09:24:22 AI_Player.update()		1011,	1010,	1101,	1100,	1100,	101,	110
2017-01-04 09:24:22 AI_Player.update()		1100,	110,	1101,	111,	1101,	1011,	1001
2017-01-04 09:24:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:22 AI_Player.update()	update
2017-01-04 09:24:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:22 AI_Player.update()	update
2017-01-04 09:24:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:22 AI_Player.update()	Search took113ms
2017-01-04 09:24:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:22 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-04 09:24:22 AI_Player.update()		1010,	11,	1110,	1010,	1010,	1011,	1110
2017-01-04 09:24:22 AI_Player.update()		1110,	111,	1110,	110,	111,	1010,	1011
2017-01-04 09:24:22 AI_Player.update()		1001,	1100,	11,	1010,	11,	1100,	101
2017-01-04 09:24:22 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-04 09:24:22 AI_Player.update()		1011,	110,	1101,	1100,	1100,	101,	110
2017-01-04 09:24:22 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1011,	1001
2017-01-04 09:24:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:22 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:23 AI_Player.update()	update
2017-01-04 09:24:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:23 AI_Player.update()	update
2017-01-04 09:24:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:23 AI_Player.update()	Search took89ms
2017-01-04 09:24:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:23 AI_Player.update()		110,	1011,	111,	1010,	111,	1011,	11
2017-01-04 09:24:23 AI_Player.update()		1010,	11,	1110,	1010,	1010,	1010,	1110
2017-01-04 09:24:23 AI_Player.update()		1110,	111,	1110,	110,	111,	1100,	1011
2017-01-04 09:24:23 AI_Player.update()		1001,	1100,	11,	1010,	11,	1001,	101
2017-01-04 09:24:23 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-04 09:24:23 AI_Player.update()		1011,	110,	1101,	1100,	1100,	1011,	110
2017-01-04 09:24:23 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1100,	1001
2017-01-04 09:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:23 AI_Player.update()	update
2017-01-04 09:24:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:23 AI_Player.update()	update
2017-01-04 09:24:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:23 AI_Player.update()	Search took205ms
2017-01-04 09:24:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:23 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 09:24:23 AI_Player.update()		1010,	111,	1110,	1010,	1010,	1010,	1110
2017-01-04 09:24:23 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 09:24:23 AI_Player.update()		1001,	1010,	11,	1010,	11,	1001,	101
2017-01-04 09:24:23 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-04 09:24:23 AI_Player.update()		1011,	1010,	1101,	1100,	1100,	1011,	110
2017-01-04 09:24:23 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1100,	1001
2017-01-04 09:24:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:23 AI_Player.update()	update
2017-01-04 09:24:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:23 AI_Player.update()	update
2017-01-04 09:24:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:24 AI_Player.update()	Search took193ms
2017-01-04 09:24:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:24 AI_Player.update()		110,	11,	111,	1010,	111,	1010,	11
2017-01-04 09:24:24 AI_Player.update()		1010,	111,	1110,	1010,	1010,	1100,	1110
2017-01-04 09:24:24 AI_Player.update()		1110,	1100,	1110,	110,	111,	1001,	1011
2017-01-04 09:24:24 AI_Player.update()		1001,	1010,	11,	1010,	11,	101,	101
2017-01-04 09:24:24 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1011,	1011
2017-01-04 09:24:24 AI_Player.update()		1011,	1010,	1101,	1100,	1100,	1100,	110
2017-01-04 09:24:24 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1011,	1001
2017-01-04 09:24:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:24 AI_Player.update()	update
2017-01-04 09:24:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:24:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:24 AI_Player.update()	update
2017-01-04 09:24:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:24 AI_Player.update()	Search took293ms
2017-01-04 09:24:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:24 AI_Player.update()		110,	11,	111,	1010,	111,	1010,	11
2017-01-04 09:24:24 AI_Player.update()		1010,	111,	1110,	110,	1010,	1100,	1110
2017-01-04 09:24:24 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 09:24:24 AI_Player.update()		1001,	1010,	11,	1001,	11,	101,	101
2017-01-04 09:24:24 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1011,	1011
2017-01-04 09:24:24 AI_Player.update()		1011,	1010,	1101,	111,	1100,	1100,	110
2017-01-04 09:24:24 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1011,	1001
2017-01-04 09:24:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:24:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:24 AI_Player.update()	update
2017-01-04 09:24:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:24 AI_Player.update()	update
2017-01-04 09:24:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:24 AI_Player.update()	Search took43ms
2017-01-04 09:24:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:24 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-04 09:24:24 AI_Player.update()		1010,	111,	1110,	110,	1010,	1001,	1110
2017-01-04 09:24:24 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-04 09:24:24 AI_Player.update()		1001,	1010,	11,	1001,	11,	1011,	101
2017-01-04 09:24:24 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:24:24 AI_Player.update()		1011,	1010,	1101,	111,	1100,	1011,	110
2017-01-04 09:24:24 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1010,	1001
2017-01-04 09:24:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:24 AI_Player.update()	update
2017-01-04 09:24:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:24 AI_Player.update()	update
2017-01-04 09:24:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:25 AI_Player.update()	Search took280ms
2017-01-04 09:24:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:25 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-04 09:24:25 AI_Player.update()		1010,	11,	1110,	110,	1010,	1001,	1110
2017-01-04 09:24:25 AI_Player.update()		1110,	111,	1110,	1010,	111,	101,	1011
2017-01-04 09:24:25 AI_Player.update()		1001,	1100,	11,	1001,	11,	1011,	101
2017-01-04 09:24:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:24:25 AI_Player.update()		1011,	110,	1101,	111,	1100,	1011,	110
2017-01-04 09:24:25 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 09:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:25 AI_Player.update()	update
2017-01-04 09:24:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:24:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:25 AI_Player.update()	update
2017-01-04 09:24:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:25 AI_Player.update()	Search took29ms
2017-01-04 09:24:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:25 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-04 09:24:25 AI_Player.update()		1010,	11,	1110,	110,	1010,	1001,	1110
2017-01-04 09:24:25 AI_Player.update()		1110,	111,	1110,	1010,	111,	101,	1011
2017-01-04 09:24:25 AI_Player.update()		1001,	1100,	11,	1001,	11,	1011,	101
2017-01-04 09:24:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:24:25 AI_Player.update()		110,	1101,	111,	1100,	1011,	110,	1011
2017-01-04 09:24:25 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 09:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:25 AI_Player.update()	update
2017-01-04 09:24:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:25 AI_Player.update()	update
2017-01-04 09:24:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:25 AI_Player.update()	Search took268ms
2017-01-04 09:24:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:25 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-04 09:24:25 AI_Player.update()		1010,	11,	1110,	1010,	1010,	1001,	1110
2017-01-04 09:24:25 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-04 09:24:25 AI_Player.update()		1001,	1100,	11,	1010,	11,	1011,	101
2017-01-04 09:24:25 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:24:25 AI_Player.update()		110,	1101,	111,	1100,	1011,	110,	1011
2017-01-04 09:24:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:24:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:25 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:26 AI_Player.update()	update
2017-01-04 09:24:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:26 AI_Player.update()	update
2017-01-04 09:24:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:26 AI_Player.update()	Search took248ms
2017-01-04 09:24:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:26 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-04 09:24:26 AI_Player.update()		1010,	111,	1110,	1010,	1010,	1001,	1110
2017-01-04 09:24:26 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-04 09:24:26 AI_Player.update()		1001,	1010,	11,	1010,	11,	1011,	101
2017-01-04 09:24:26 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:24:26 AI_Player.update()		110,	1010,	111,	1100,	1011,	110,	1011
2017-01-04 09:24:26 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:24:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:26 AI_Player.update()	update
2017-01-04 09:24:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:26 AI_Player.update()	update
2017-01-04 09:24:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:27 AI_Player.update()	Search took389ms
2017-01-04 09:24:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:27 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-04 09:24:27 AI_Player.update()		1010,	111,	1110,	1010,	1010,	101,	1110
2017-01-04 09:24:27 AI_Player.update()		1110,	1100,	1110,	110,	111,	1011,	1011
2017-01-04 09:24:27 AI_Player.update()		1001,	1010,	11,	1010,	11,	1100,	101
2017-01-04 09:24:27 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	110,	1011
2017-01-04 09:24:27 AI_Player.update()		110,	1010,	111,	1100,	1011,	1010,	1011
2017-01-04 09:24:27 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1100,	1001
2017-01-04 09:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:27 AI_Player.update()	update
2017-01-04 09:24:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:24:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:27 AI_Player.update()	update
2017-01-04 09:24:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:27 AI_Player.update()	Search took154ms
2017-01-04 09:24:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:27 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-04 09:24:27 AI_Player.update()		1010,	111,	1110,	1010,	1010,	101,	1110
2017-01-04 09:24:27 AI_Player.update()		1110,	1100,	1110,	110,	111,	1011,	1011
2017-01-04 09:24:27 AI_Player.update()		1010,	11,	1010,	11,	1100,	101,	1001
2017-01-04 09:24:27 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	110,	1011
2017-01-04 09:24:27 AI_Player.update()		110,	1010,	111,	1100,	1011,	1010,	1011
2017-01-04 09:24:27 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1100,	1001
2017-01-04 09:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:27 AI_Player.update()	update
2017-01-04 09:24:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:24:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:27 AI_Player.update()	update
2017-01-04 09:24:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:27 AI_Player.update()	Search took195ms
2017-01-04 09:24:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:27 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 09:24:27 AI_Player.update()		1010,	111,	1110,	1010,	1010,	1011,	1110
2017-01-04 09:24:27 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-04 09:24:27 AI_Player.update()		1010,	11,	1010,	11,	1100,	110,	1001
2017-01-04 09:24:27 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:24:27 AI_Player.update()		110,	1010,	111,	1100,	1011,	1100,	1011
2017-01-04 09:24:27 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:24:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:27 AI_Player.update()	update
2017-01-04 09:24:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:24:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:27 AI_Player.update()	update
2017-01-04 09:24:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:28 AI_Player.update()	Search took375ms
2017-01-04 09:24:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:28 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-04 09:24:28 AI_Player.update()		1010,	111,	1110,	1010,	1010,	1011,	1110
2017-01-04 09:24:28 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-04 09:24:28 AI_Player.update()		1010,	11,	1010,	110,	1100,	110,	1001
2017-01-04 09:24:28 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:24:28 AI_Player.update()		110,	1010,	111,	1001,	1011,	1100,	1011
2017-01-04 09:24:28 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:24:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:24:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:28 AI_Player.update()	update
2017-01-04 09:24:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:24:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:28 AI_Player.update()	update
2017-01-04 09:24:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:29 AI_Player.update()	Search took618ms
2017-01-04 09:24:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:29 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-04 09:24:29 AI_Player.update()		1010,	111,	1110,	1010,	1010,	1011,	1110
2017-01-04 09:24:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-04 09:24:29 AI_Player.update()		1010,	11,	1010,	110,	1100,	110,	1001
2017-01-04 09:24:29 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:24:29 AI_Player.update()		1010,	111,	1001,	1011,	1100,	1011,	110
2017-01-04 09:24:29 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:29 AI_Player.update()	update
2017-01-04 09:24:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:29 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:24:29 AI_Player.update()	Player a has won!
2017-01-04 09:24:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:29 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:24:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:29 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:24:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:29 AI_Player.update()	update
2017-01-04 09:24:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:29 AI_Player.update()	Search took25ms
2017-01-04 09:24:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:29 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-04 09:24:29 AI_Player.update()		1100,	101,	110,	101,	1010,	1001,	11
2017-01-04 09:24:29 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 09:24:29 AI_Player.update()		1100,	1100,	101,	1101,	1011,	1101,	1110
2017-01-04 09:24:29 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	1110,	1011
2017-01-04 09:24:29 AI_Player.update()		101,	1101,	1100,	1100,	1010,	1101,	110
2017-01-04 09:24:29 AI_Player.update()		1100,	110,	1101,	101,	1101,	110,	1001
2017-01-04 09:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:29 AI_Player.update()	update
2017-01-04 09:24:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:29 AI_Player.update()	update
2017-01-04 09:24:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:29 AI_Player.update()	Search took91ms
2017-01-04 09:24:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:29 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 09:24:29 AI_Player.update()		1100,	101,	110,	101,	1010,	1001,	11
2017-01-04 09:24:29 AI_Player.update()		1110,	1010,	1110,	1101,	111,	110,	1011
2017-01-04 09:24:29 AI_Player.update()		1100,	1100,	101,	1110,	1011,	1101,	1110
2017-01-04 09:24:29 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1110,	1011
2017-01-04 09:24:29 AI_Player.update()		101,	1101,	1100,	101,	1010,	1101,	110
2017-01-04 09:24:29 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:29 AI_Player.update()	update
2017-01-04 09:24:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:29 AI_Player.update()	update
2017-01-04 09:24:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:30 AI_Player.update()	Search took87ms
2017-01-04 09:24:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:30 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 09:24:30 AI_Player.update()		11,	1100,	101,	110,	101,	1010,	1001
2017-01-04 09:24:30 AI_Player.update()		1110,	1010,	1110,	1101,	111,	110,	1011
2017-01-04 09:24:30 AI_Player.update()		1100,	1100,	101,	1110,	1011,	1101,	1110
2017-01-04 09:24:30 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1110,	1011
2017-01-04 09:24:30 AI_Player.update()		101,	1101,	1100,	101,	1010,	1101,	110
2017-01-04 09:24:30 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:30 AI_Player.update()	update
2017-01-04 09:24:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:30 AI_Player.update()	update
2017-01-04 09:24:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:30 AI_Player.update()	Search took157ms
2017-01-04 09:24:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:30 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 09:24:30 AI_Player.update()		11,	1010,	101,	110,	101,	1010,	1001
2017-01-04 09:24:30 AI_Player.update()		1110,	1100,	1110,	1101,	111,	110,	1011
2017-01-04 09:24:30 AI_Player.update()		1100,	1110,	101,	1110,	1011,	1101,	1110
2017-01-04 09:24:30 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1110,	1011
2017-01-04 09:24:30 AI_Player.update()		101,	110,	1100,	101,	1010,	1101,	110
2017-01-04 09:24:30 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-04 09:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:30 AI_Player.update()	update
2017-01-04 09:24:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:30 AI_Player.update()	update
2017-01-04 09:24:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:30 AI_Player.update()	Search took258ms
2017-01-04 09:24:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:30 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:24:30 AI_Player.update()		11,	1010,	101,	110,	101,	110,	1001
2017-01-04 09:24:30 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1101,	1011
2017-01-04 09:24:30 AI_Player.update()		1100,	1110,	101,	1110,	1011,	1110,	1110
2017-01-04 09:24:30 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1101,	1011
2017-01-04 09:24:30 AI_Player.update()		101,	110,	1100,	101,	1010,	110,	110
2017-01-04 09:24:30 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 09:24:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:24:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:30 AI_Player.update()	update
2017-01-04 09:24:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:31 AI_Player.update()	update
2017-01-04 09:24:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:31 AI_Player.update()	Search took265ms
2017-01-04 09:24:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:31 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-04 09:24:31 AI_Player.update()		11,	1010,	101,	101,	101,	110,	1001
2017-01-04 09:24:31 AI_Player.update()		1110,	1100,	1110,	110,	111,	1101,	1011
2017-01-04 09:24:31 AI_Player.update()		1100,	1110,	101,	1101,	1011,	1110,	1110
2017-01-04 09:24:31 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1101,	1011
2017-01-04 09:24:31 AI_Player.update()		101,	110,	1100,	1100,	1010,	110,	110
2017-01-04 09:24:31 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 09:24:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:31 AI_Player.update()	update
2017-01-04 09:24:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:24:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:31 AI_Player.update()	update
2017-01-04 09:24:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:32 AI_Player.update()	Search took1088ms
2017-01-04 09:24:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:32 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:24:32 AI_Player.update()		11,	1010,	101,	1100,	101,	110,	1001
2017-01-04 09:24:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:32 AI_Player.update()		1100,	1110,	101,	110,	1011,	1110,	1110
2017-01-04 09:24:32 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-04 09:24:32 AI_Player.update()		101,	110,	1100,	1110,	1010,	110,	110
2017-01-04 09:24:32 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 09:24:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:24:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:32 AI_Player.update()	update
2017-01-04 09:24:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:24:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:32 AI_Player.update()	update
2017-01-04 09:24:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:34 AI_Player.update()	Search took1345ms
2017-01-04 09:24:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:34 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:24:34 AI_Player.update()		11,	1010,	101,	1100,	101,	110,	1001
2017-01-04 09:24:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:34 AI_Player.update()		1110,	101,	110,	1011,	1110,	1110,	1100
2017-01-04 09:24:34 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-04 09:24:34 AI_Player.update()		101,	110,	1100,	1110,	1010,	110,	110
2017-01-04 09:24:34 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 09:24:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:24:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:34 AI_Player.update()	update
2017-01-04 09:24:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:24:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:34 AI_Player.update()	update
2017-01-04 09:24:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:35 AI_Player.update()	Search took1019ms
2017-01-04 09:24:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:35 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:24:35 AI_Player.update()		1001,	11,	1010,	101,	1100,	101,	110
2017-01-04 09:24:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:35 AI_Player.update()		1110,	101,	110,	1011,	1110,	1110,	1100
2017-01-04 09:24:35 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-04 09:24:35 AI_Player.update()		101,	110,	1100,	1110,	1010,	110,	110
2017-01-04 09:24:35 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 09:24:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:24:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:35 AI_Player.update()	update
2017-01-04 09:24:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:24:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:35 AI_Player.update()	update
2017-01-04 09:24:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:36 AI_Player.update()	Search took1007ms
2017-01-04 09:24:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:36 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:24:36 AI_Player.update()		110,	1001,	11,	1010,	101,	1100,	101
2017-01-04 09:24:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:36 AI_Player.update()		1110,	101,	110,	1011,	1110,	1110,	1100
2017-01-04 09:24:36 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-04 09:24:36 AI_Player.update()		101,	110,	1100,	1110,	1010,	110,	110
2017-01-04 09:24:36 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 09:24:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:36 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:24:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:36 AI_Player.update()	update
2017-01-04 09:24:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:36 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:24:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:36 AI_Player.update()	update
2017-01-04 09:24:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:37 AI_Player.update()	Search took348ms
2017-01-04 09:24:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:37 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:24:37 AI_Player.update()		1001,	11,	1010,	101,	1100,	101,	110
2017-01-04 09:24:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:37 AI_Player.update()		1110,	101,	110,	1011,	1110,	1110,	1100
2017-01-04 09:24:37 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-04 09:24:37 AI_Player.update()		101,	110,	1100,	1110,	1010,	110,	110
2017-01-04 09:24:37 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 09:24:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:24:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:37 AI_Player.update()	update
2017-01-04 09:24:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:37 AI_Player.update()	update
2017-01-04 09:24:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:38 AI_Player.update()	Search took962ms
2017-01-04 09:24:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:38 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:24:38 AI_Player.update()		1001,	11,	1010,	101,	1100,	101,	110
2017-01-04 09:24:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:38 AI_Player.update()		101,	110,	1011,	1110,	1110,	1100,	1110
2017-01-04 09:24:38 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-04 09:24:38 AI_Player.update()		101,	110,	1100,	1110,	1010,	110,	110
2017-01-04 09:24:38 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 09:24:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:38 AI_Player.update()	update
2017-01-04 09:24:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:38 AI_Player.update()	update
2017-01-04 09:24:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:40 AI_Player.update()	Search took1575ms
2017-01-04 09:24:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:40 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-04 09:24:40 AI_Player.update()		1001,	1100,	1010,	101,	1100,	101,	110
2017-01-04 09:24:40 AI_Player.update()		1110,	110,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:40 AI_Player.update()		101,	1101,	1011,	1110,	1110,	1100,	1110
2017-01-04 09:24:40 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1101,	1011
2017-01-04 09:24:40 AI_Player.update()		101,	110,	1100,	1110,	1010,	110,	110
2017-01-04 09:24:40 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:24:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:40 AI_Player.update()	update
2017-01-04 09:24:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:24:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:40 AI_Player.update()	update
2017-01-04 09:24:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:41 AI_Player.update()	Search took1182ms
2017-01-04 09:24:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:41 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 09:24:41 AI_Player.update()		1001,	110,	1010,	101,	1100,	101,	110
2017-01-04 09:24:41 AI_Player.update()		1110,	1101,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:41 AI_Player.update()		101,	110,	1011,	1110,	1110,	1100,	1110
2017-01-04 09:24:41 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1101,	1011
2017-01-04 09:24:41 AI_Player.update()		101,	1100,	1100,	1110,	1010,	110,	110
2017-01-04 09:24:41 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 09:24:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:24:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:41 AI_Player.update()	update
2017-01-04 09:24:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:41 AI_Player.update()	update
2017-01-04 09:24:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:43 AI_Player.update()	Search took1440ms
2017-01-04 09:24:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:43 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-04 09:24:43 AI_Player.update()		1001,	110,	1010,	101,	1100,	101,	110
2017-01-04 09:24:43 AI_Player.update()		1110,	1101,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:43 AI_Player.update()		101,	110,	1011,	101,	1110,	1100,	1110
2017-01-04 09:24:43 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1101,	1011
2017-01-04 09:24:43 AI_Player.update()		101,	1100,	1100,	1101,	1010,	110,	110
2017-01-04 09:24:43 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-04 09:24:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:43 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:43 AI_Player.update()	update
2017-01-04 09:24:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:43 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:43 AI_Player.update()	update
2017-01-04 09:24:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:44 AI_Player.update()	Search took926ms
2017-01-04 09:24:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:44 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 09:24:44 AI_Player.update()		1001,	1101,	1010,	101,	1100,	101,	110
2017-01-04 09:24:44 AI_Player.update()		1110,	110,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:44 AI_Player.update()		101,	110,	1011,	101,	1110,	1100,	1110
2017-01-04 09:24:44 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1101,	1011
2017-01-04 09:24:44 AI_Player.update()		101,	11,	1100,	1101,	1010,	110,	110
2017-01-04 09:24:44 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-04 09:24:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:44 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:44 AI_Player.update()	update
2017-01-04 09:24:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:44 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:44 AI_Player.update()	update
2017-01-04 09:24:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:44 AI_Player.update()	Search took351ms
2017-01-04 09:24:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:44 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-04 09:24:44 AI_Player.update()		1001,	110,	1010,	101,	1100,	101,	110
2017-01-04 09:24:44 AI_Player.update()		1110,	1101,	1110,	101,	111,	1101,	1011
2017-01-04 09:24:44 AI_Player.update()		101,	110,	1011,	101,	1110,	1100,	1110
2017-01-04 09:24:44 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1101,	1011
2017-01-04 09:24:44 AI_Player.update()		101,	1100,	1100,	1101,	1010,	110,	110
2017-01-04 09:24:44 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-04 09:24:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:44 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:44 AI_Player.update()	update
2017-01-04 09:24:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:44 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:45 AI_Player.update()	update
2017-01-04 09:24:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:46 AI_Player.update()	Search took1053ms
2017-01-04 09:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:46 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-04 09:24:46 AI_Player.update()		1001,	110,	1010,	101,	1100,	1101,	110
2017-01-04 09:24:46 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 09:24:46 AI_Player.update()		101,	110,	1011,	101,	1110,	1101,	1110
2017-01-04 09:24:46 AI_Player.update()		1110,	110,	1101,	1110,	1011,	110,	1011
2017-01-04 09:24:46 AI_Player.update()		101,	1100,	1100,	1101,	1010,	101,	110
2017-01-04 09:24:46 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:46 AI_Player.update()	update
2017-01-04 09:24:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:24:46 AI_Player.update()	Player b has won!
2017-01-04 09:24:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:46 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:24:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:46 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:46 AI_Player.update()	update
2017-01-04 09:24:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:46 AI_Player.update()	Search took9ms
2017-01-04 09:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:46 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:24:46 AI_Player.update()		1010,	111,	101,	110,	1010,	1010,	101
2017-01-04 09:24:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:24:46 AI_Player.update()		11,	11,	101,	1001,	1010,	101,	1010
2017-01-04 09:24:46 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	111,	1011
2017-01-04 09:24:46 AI_Player.update()		1100,	1001,	110,	1100,	1010,	1110,	11
2017-01-04 09:24:46 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-04 09:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:46 AI_Player.update()	update
2017-01-04 09:24:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:46 AI_Player.update()	update
2017-01-04 09:24:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:46 AI_Player.update()	Search took97ms
2017-01-04 09:24:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:46 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:24:46 AI_Player.update()		111,	101,	110,	1010,	1010,	101,	1010
2017-01-04 09:24:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:24:46 AI_Player.update()		11,	11,	101,	1001,	1010,	101,	1010
2017-01-04 09:24:46 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	111,	1011
2017-01-04 09:24:46 AI_Player.update()		1100,	1001,	110,	1100,	1010,	1110,	11
2017-01-04 09:24:46 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-04 09:24:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:46 AI_Player.update()	update
2017-01-04 09:24:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:46 AI_Player.update()	update
2017-01-04 09:24:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:47 AI_Player.update()	Search took305ms
2017-01-04 09:24:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:47 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:24:47 AI_Player.update()		111,	101,	110,	1010,	1010,	101,	1010
2017-01-04 09:24:47 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-04 09:24:47 AI_Player.update()		11,	101,	1001,	1010,	101,	1010,	11
2017-01-04 09:24:47 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	111,	1011
2017-01-04 09:24:47 AI_Player.update()		1100,	1001,	110,	1100,	1010,	1110,	11
2017-01-04 09:24:47 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1110,	1001
2017-01-04 09:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:47 AI_Player.update()	update
2017-01-04 09:24:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:47 AI_Player.update()	update
2017-01-04 09:24:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:47 AI_Player.update()	Search took170ms
2017-01-04 09:24:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:47 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:24:47 AI_Player.update()		111,	101,	110,	1010,	1010,	101,	1010
2017-01-04 09:24:47 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-04 09:24:47 AI_Player.update()		11,	101,	1001,	1001,	101,	1010,	11
2017-01-04 09:24:47 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	111,	1011
2017-01-04 09:24:47 AI_Player.update()		1100,	1001,	110,	1101,	1010,	1110,	11
2017-01-04 09:24:47 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:47 AI_Player.update()	update
2017-01-04 09:24:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:47 AI_Player.update()	update
2017-01-04 09:24:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:47 AI_Player.update()	Search took81ms
2017-01-04 09:24:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:47 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:24:47 AI_Player.update()		111,	101,	110,	1010,	1010,	101,	1010
2017-01-04 09:24:47 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-04 09:24:47 AI_Player.update()		11,	11,	101,	1001,	1001,	101,	1010
2017-01-04 09:24:47 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	111,	1011
2017-01-04 09:24:47 AI_Player.update()		1100,	1001,	110,	1101,	1010,	1110,	11
2017-01-04 09:24:47 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:24:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:47 AI_Player.update()	update
2017-01-04 09:24:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:48 AI_Player.update()	update
2017-01-04 09:24:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:48 AI_Player.update()	Search took271ms
2017-01-04 09:24:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:48 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:24:48 AI_Player.update()		111,	101,	110,	1010,	1010,	101,	1010
2017-01-04 09:24:48 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-04 09:24:48 AI_Player.update()		11,	11,	101,	1001,	1001,	101,	1010
2017-01-04 09:24:48 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	111,	1011
2017-01-04 09:24:48 AI_Player.update()		1001,	110,	1101,	1010,	1110,	11,	1100
2017-01-04 09:24:48 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:48 AI_Player.update()	update
2017-01-04 09:24:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:48 AI_Player.update()	update
2017-01-04 09:24:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:48 AI_Player.update()	Search took203ms
2017-01-04 09:24:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:48 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:24:48 AI_Player.update()		111,	101,	110,	1010,	1010,	101,	1010
2017-01-04 09:24:48 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-04 09:24:48 AI_Player.update()		1010,	11,	11,	101,	1001,	1001,	101
2017-01-04 09:24:48 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	111,	1011
2017-01-04 09:24:48 AI_Player.update()		1001,	110,	1101,	1010,	1110,	11,	1100
2017-01-04 09:24:48 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:24:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:48 AI_Player.update()	update
2017-01-04 09:24:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:24:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:48 AI_Player.update()	update
2017-01-04 09:24:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:49 AI_Player.update()	Search took134ms
2017-01-04 09:24:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:49 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 09:24:49 AI_Player.update()		111,	101,	110,	1010,	1010,	101,	1010
2017-01-04 09:24:49 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-04 09:24:49 AI_Player.update()		1010,	11,	11,	101,	1001,	1001,	101
2017-01-04 09:24:49 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	111,	1011
2017-01-04 09:24:49 AI_Player.update()		110,	1101,	1010,	1110,	11,	1100,	1001
2017-01-04 09:24:49 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:49 AI_Player.update()	update
2017-01-04 09:24:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:49 AI_Player.update()	update
2017-01-04 09:24:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:49 AI_Player.update()	Search took170ms
2017-01-04 09:24:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:49 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 09:24:49 AI_Player.update()		111,	101,	110,	1010,	1010,	1100,	1010
2017-01-04 09:24:49 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-04 09:24:49 AI_Player.update()		1010,	11,	11,	101,	1001,	111,	101
2017-01-04 09:24:49 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1100,	1011
2017-01-04 09:24:49 AI_Player.update()		110,	1101,	1010,	1110,	11,	1110,	1001
2017-01-04 09:24:49 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:49 AI_Player.update()	update
2017-01-04 09:24:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:49 AI_Player.update()	update
2017-01-04 09:24:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:49 AI_Player.update()	Search took65ms
2017-01-04 09:24:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:49 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:24:49 AI_Player.update()		111,	101,	110,	1010,	1010,	1100,	1010
2017-01-04 09:24:49 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-04 09:24:49 AI_Player.update()		1010,	11,	11,	1010,	1001,	111,	101
2017-01-04 09:24:49 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1100,	1011
2017-01-04 09:24:49 AI_Player.update()		110,	1101,	1010,	1010,	11,	1110,	1001
2017-01-04 09:24:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:24:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:49 AI_Player.update()	update
2017-01-04 09:24:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:49 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:49 AI_Player.update()	update
2017-01-04 09:24:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:50 AI_Player.update()	Search took187ms
2017-01-04 09:24:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:50 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:24:50 AI_Player.update()		111,	101,	110,	1010,	1010,	1100,	1010
2017-01-04 09:24:50 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-04 09:24:50 AI_Player.update()		11,	11,	1010,	1001,	111,	101,	1010
2017-01-04 09:24:50 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1100,	1011
2017-01-04 09:24:50 AI_Player.update()		110,	1101,	1010,	1010,	11,	1110,	1001
2017-01-04 09:24:50 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:50 AI_Player.update()	update
2017-01-04 09:24:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:24:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:50 AI_Player.update()	update
2017-01-04 09:24:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:50 AI_Player.update()	Search took74ms
2017-01-04 09:24:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:50 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:24:50 AI_Player.update()		111,	101,	110,	1010,	1010,	1100,	1010
2017-01-04 09:24:50 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-04 09:24:50 AI_Player.update()		11,	11,	1010,	1001,	111,	101,	1010
2017-01-04 09:24:50 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1100,	1011
2017-01-04 09:24:50 AI_Player.update()		1001,	110,	1101,	1010,	1010,	11,	1110
2017-01-04 09:24:50 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:50 AI_Player.update()	update
2017-01-04 09:24:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:50 AI_Player.update()	update
2017-01-04 09:24:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:50 AI_Player.update()	Search took197ms
2017-01-04 09:24:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:50 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 09:24:50 AI_Player.update()		111,	101,	110,	1010,	1010,	1100,	1010
2017-01-04 09:24:50 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-04 09:24:50 AI_Player.update()		11,	11,	1010,	1001,	111,	101,	1010
2017-01-04 09:24:50 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1100,	1011
2017-01-04 09:24:50 AI_Player.update()		110,	1101,	1010,	1010,	11,	1110,	1001
2017-01-04 09:24:50 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:24:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:50 AI_Player.update()	update
2017-01-04 09:24:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:50 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:50 AI_Player.update()	update
2017-01-04 09:24:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:51 AI_Player.update()	Search took185ms
2017-01-04 09:24:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:51 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:51 AI_Player.update()		111,	110,	110,	1010,	1010,	1100,	1010
2017-01-04 09:24:51 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-04 09:24:51 AI_Player.update()		11,	1011,	1010,	1001,	111,	101,	1010
2017-01-04 09:24:51 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:24:51 AI_Player.update()		110,	110,	1010,	1010,	11,	1110,	1001
2017-01-04 09:24:51 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:51 AI_Player.update()	update
2017-01-04 09:24:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:24:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:51 AI_Player.update()	update
2017-01-04 09:24:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:51 AI_Player.update()	Search took263ms
2017-01-04 09:24:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:51 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:51 AI_Player.update()		111,	110,	110,	1010,	1010,	1100,	1010
2017-01-04 09:24:51 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-04 09:24:51 AI_Player.update()		11,	1011,	1010,	1001,	111,	101,	1010
2017-01-04 09:24:51 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:24:51 AI_Player.update()		110,	1010,	1010,	11,	1110,	1001,	110
2017-01-04 09:24:51 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:24:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:51 AI_Player.update()	update
2017-01-04 09:24:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:51 AI_Player.update()	update
2017-01-04 09:24:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:52 AI_Player.update()	Search took596ms
2017-01-04 09:24:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:52 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:52 AI_Player.update()		110,	110,	1010,	1010,	1100,	1010,	111
2017-01-04 09:24:52 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-04 09:24:52 AI_Player.update()		11,	1011,	1010,	1001,	111,	101,	1010
2017-01-04 09:24:52 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:24:52 AI_Player.update()		110,	1010,	1010,	11,	1110,	1001,	110
2017-01-04 09:24:52 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:24:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:52 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:52 AI_Player.update()	update
2017-01-04 09:24:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:52 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:52 AI_Player.update()	update
2017-01-04 09:24:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:53 AI_Player.update()	Search took694ms
2017-01-04 09:24:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:53 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:24:53 AI_Player.update()		110,	110,	1010,	1010,	1100,	101,	111
2017-01-04 09:24:53 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 09:24:53 AI_Player.update()		11,	1011,	1010,	1001,	111,	1001,	1010
2017-01-04 09:24:53 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-04 09:24:53 AI_Player.update()		110,	1010,	1010,	11,	1110,	1100,	110
2017-01-04 09:24:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 09:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:53 AI_Player.update()	update
2017-01-04 09:24:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:53 AI_Player.update()	update
2017-01-04 09:24:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:53 AI_Player.update()	Search took281ms
2017-01-04 09:24:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:53 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:24:53 AI_Player.update()		110,	110,	1010,	1010,	1100,	101,	111
2017-01-04 09:24:53 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 09:24:53 AI_Player.update()		1010,	11,	1011,	1010,	1001,	111,	1001
2017-01-04 09:24:53 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-04 09:24:53 AI_Player.update()		110,	1010,	1010,	11,	1110,	1100,	110
2017-01-04 09:24:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 09:24:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:24:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:53 AI_Player.update()	update
2017-01-04 09:24:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:54 AI_Player.update()	update
2017-01-04 09:24:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:54 AI_Player.update()	Search took112ms
2017-01-04 09:24:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:54 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:54 AI_Player.update()		110,	110,	1010,	1010,	1100,	1010,	111
2017-01-04 09:24:54 AI_Player.update()		1110,	11,	1110,	1010,	111,	111,	1011
2017-01-04 09:24:54 AI_Player.update()		1010,	11,	1011,	1010,	1001,	101,	1001
2017-01-04 09:24:54 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:24:54 AI_Player.update()		110,	1010,	1010,	11,	1110,	1001,	110
2017-01-04 09:24:54 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:54 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:54 AI_Player.update()	update
2017-01-04 09:24:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:54 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:54 AI_Player.update()	update
2017-01-04 09:24:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:54 AI_Player.update()	Search took67ms
2017-01-04 09:24:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:54 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:24:54 AI_Player.update()		110,	110,	1010,	1010,	1100,	101,	111
2017-01-04 09:24:54 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-04 09:24:54 AI_Player.update()		1010,	11,	1011,	1010,	1001,	111,	1001
2017-01-04 09:24:54 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-04 09:24:54 AI_Player.update()		110,	1010,	1010,	11,	1110,	1100,	110
2017-01-04 09:24:54 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 09:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:54 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:54 AI_Player.update()	update
2017-01-04 09:24:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:54 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:54 AI_Player.update()	update
2017-01-04 09:24:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:54 AI_Player.update()	Search took116ms
2017-01-04 09:24:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:54 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:24:54 AI_Player.update()		110,	110,	1010,	1010,	1100,	1010,	111
2017-01-04 09:24:54 AI_Player.update()		1110,	11,	1110,	1010,	111,	111,	1011
2017-01-04 09:24:54 AI_Player.update()		1010,	11,	1011,	1010,	1001,	101,	1001
2017-01-04 09:24:54 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-04 09:24:54 AI_Player.update()		110,	1010,	1010,	11,	1110,	1001,	110
2017-01-04 09:24:54 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1010,	1001
2017-01-04 09:24:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:54 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:55 AI_Player.update()	update
2017-01-04 09:24:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:55 AI_Player.update()	update
2017-01-04 09:24:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:55 AI_Player.update()	Search took207ms
2017-01-04 09:24:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:55 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:24:55 AI_Player.update()		110,	110,	1010,	1010,	1100,	111,	111
2017-01-04 09:24:55 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 09:24:55 AI_Player.update()		1010,	11,	1011,	1010,	1001,	1100,	1001
2017-01-04 09:24:55 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:24:55 AI_Player.update()		110,	1010,	1010,	11,	1110,	1010,	110
2017-01-04 09:24:55 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 09:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:55 AI_Player.update()	update
2017-01-04 09:24:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:55 AI_Player.update()	update
2017-01-04 09:24:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:55 AI_Player.update()	Search took29ms
2017-01-04 09:24:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:55 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:24:55 AI_Player.update()		111,	110,	110,	1010,	1010,	1100,	111
2017-01-04 09:24:55 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 09:24:55 AI_Player.update()		1010,	11,	1011,	1010,	1001,	1100,	1001
2017-01-04 09:24:55 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:24:55 AI_Player.update()		110,	1010,	1010,	11,	1110,	1010,	110
2017-01-04 09:24:55 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 09:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:55 AI_Player.update()	update
2017-01-04 09:24:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:24:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:24:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:55 AI_Player.update()	update
2017-01-04 09:24:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:55 AI_Player.update()	Search took118ms
2017-01-04 09:24:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:55 AI_Player.update()		110,	101,	111,	1110,	111,	1010,	11
2017-01-04 09:24:55 AI_Player.update()		111,	110,	110,	1100,	1010,	1100,	111
2017-01-04 09:24:55 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 09:24:55 AI_Player.update()		1010,	11,	1011,	1010,	1001,	1100,	1001
2017-01-04 09:24:55 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:24:55 AI_Player.update()		110,	1010,	1010,	101,	1110,	1010,	110
2017-01-04 09:24:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 09:24:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:56 AI_Player.update()	update
2017-01-04 09:24:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:56 AI_Player.update()	update
2017-01-04 09:24:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:56 AI_Player.update()	Search took253ms
2017-01-04 09:24:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:56 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 09:24:56 AI_Player.update()		111,	110,	110,	1110,	1010,	1100,	111
2017-01-04 09:24:56 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:24:56 AI_Player.update()		1010,	11,	1011,	1010,	1001,	1100,	1001
2017-01-04 09:24:56 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1001,	1011
2017-01-04 09:24:56 AI_Player.update()		110,	1010,	1010,	1010,	1110,	1010,	110
2017-01-04 09:24:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:56 AI_Player.update()	update
2017-01-04 09:24:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:56 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:24:56 AI_Player.update()	Player a has won!
2017-01-04 09:24:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:56 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:24:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:24:56 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:24:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:56 AI_Player.update()	update
2017-01-04 09:24:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:56 AI_Player.update()	Search took152ms
2017-01-04 09:24:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:56 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:24:56 AI_Player.update()		1010,	101,	111,	111,	101,	1010,	1100
2017-01-04 09:24:56 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-04 09:24:56 AI_Player.update()		1011,	1110,	11,	1100,	1101,	1001,	1101
2017-01-04 09:24:56 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-04 09:24:56 AI_Player.update()		101,	110,	1001,	1100,	11,	11,	101
2017-01-04 09:24:56 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1001,	1001
2017-01-04 09:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:56 AI_Player.update()	update
2017-01-04 09:24:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:56 AI_Player.update()	update
2017-01-04 09:24:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:56 AI_Player.update()	Search took35ms
2017-01-04 09:24:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:56 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:24:56 AI_Player.update()		101,	111,	111,	101,	1010,	1100,	1010
2017-01-04 09:24:56 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-04 09:24:56 AI_Player.update()		1011,	1110,	11,	1100,	1101,	1001,	1101
2017-01-04 09:24:56 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-04 09:24:56 AI_Player.update()		101,	110,	1001,	1100,	11,	11,	101
2017-01-04 09:24:56 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1001,	1001
2017-01-04 09:24:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:57 AI_Player.update()	update
2017-01-04 09:24:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:57 AI_Player.update()	update
2017-01-04 09:24:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:57 AI_Player.update()	Search took286ms
2017-01-04 09:24:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:57 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:24:57 AI_Player.update()		101,	111,	111,	110,	1010,	1100,	1010
2017-01-04 09:24:57 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:24:57 AI_Player.update()		1011,	1110,	11,	11,	1101,	1001,	1101
2017-01-04 09:24:57 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:24:57 AI_Player.update()		101,	110,	1001,	1011,	11,	11,	101
2017-01-04 09:24:57 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:57 AI_Player.update()	update
2017-01-04 09:24:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:57 AI_Player.update()	update
2017-01-04 09:24:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:57 AI_Player.update()	Search took138ms
2017-01-04 09:24:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:57 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:24:57 AI_Player.update()		1010,	101,	111,	111,	110,	1010,	1100
2017-01-04 09:24:57 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:24:57 AI_Player.update()		1011,	1110,	11,	11,	1101,	1001,	1101
2017-01-04 09:24:57 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:24:57 AI_Player.update()		101,	110,	1001,	1011,	11,	11,	101
2017-01-04 09:24:57 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:24:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:57 AI_Player.update()	update
2017-01-04 09:24:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:58 AI_Player.update()	update
2017-01-04 09:24:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:58 AI_Player.update()	Search took110ms
2017-01-04 09:24:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:58 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:24:58 AI_Player.update()		1010,	101,	111,	111,	110,	1010,	1100
2017-01-04 09:24:58 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:24:58 AI_Player.update()		1101,	1011,	1110,	11,	11,	1101,	1001
2017-01-04 09:24:58 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:24:58 AI_Player.update()		101,	110,	1001,	1011,	11,	11,	101
2017-01-04 09:24:58 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:58 AI_Player.update()	update
2017-01-04 09:24:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:58 AI_Player.update()	update
2017-01-04 09:24:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:58 AI_Player.update()	Search took139ms
2017-01-04 09:24:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:58 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:24:58 AI_Player.update()		1010,	101,	111,	111,	110,	1010,	1100
2017-01-04 09:24:58 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:24:58 AI_Player.update()		1011,	1110,	11,	11,	1101,	1001,	1101
2017-01-04 09:24:58 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:24:58 AI_Player.update()		101,	110,	1001,	1011,	11,	11,	101
2017-01-04 09:24:58 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:58 AI_Player.update()	update
2017-01-04 09:24:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:24:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:58 AI_Player.update()	update
2017-01-04 09:24:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:58 AI_Player.update()	Search took274ms
2017-01-04 09:24:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:58 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:24:58 AI_Player.update()		1010,	101,	111,	111,	110,	1010,	1100
2017-01-04 09:24:58 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:24:58 AI_Player.update()		1110,	11,	11,	1101,	1001,	1101,	1011
2017-01-04 09:24:58 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:24:58 AI_Player.update()		101,	110,	1001,	1011,	11,	11,	101
2017-01-04 09:24:58 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:58 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:59 AI_Player.update()	update
2017-01-04 09:24:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:24:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:24:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:24:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:24:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:59 AI_Player.update()	update
2017-01-04 09:24:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:24:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:24:59 AI_Player.update()	Search took197ms
2017-01-04 09:24:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:59 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:24:59 AI_Player.update()		1010,	101,	111,	111,	110,	1010,	1100
2017-01-04 09:24:59 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:24:59 AI_Player.update()		1110,	11,	11,	1101,	1001,	1101,	1011
2017-01-04 09:24:59 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:24:59 AI_Player.update()		110,	1001,	1011,	11,	11,	101,	101
2017-01-04 09:24:59 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:59 AI_Player.update()	update
2017-01-04 09:24:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:24:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:24:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:24:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:24:59 AI_Player.update()	update
2017-01-04 09:24:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:24:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:24:59 AI_Player.update()	Search took337ms
2017-01-04 09:24:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:59 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:24:59 AI_Player.update()		1010,	101,	111,	111,	110,	1010,	1100
2017-01-04 09:24:59 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:24:59 AI_Player.update()		11,	11,	1101,	1001,	1101,	1011,	1110
2017-01-04 09:24:59 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:24:59 AI_Player.update()		110,	1001,	1011,	11,	11,	101,	101
2017-01-04 09:24:59 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:24:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:24:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:24:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:24:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:24:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:24:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:24:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:24:59 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:00 AI_Player.update()	update
2017-01-04 09:25:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:25:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:00 AI_Player.update()	update
2017-01-04 09:25:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:00 AI_Player.update()	Search took124ms
2017-01-04 09:25:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:00 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 09:25:00 AI_Player.update()		1010,	1100,	111,	111,	110,	1010,	1100
2017-01-04 09:25:00 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-04 09:25:00 AI_Player.update()		11,	11,	1101,	1001,	1101,	1011,	1110
2017-01-04 09:25:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 09:25:00 AI_Player.update()		110,	101,	1011,	11,	11,	101,	101
2017-01-04 09:25:00 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:25:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:25:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:00 AI_Player.update()	update
2017-01-04 09:25:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:00 AI_Player.update()	update
2017-01-04 09:25:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:00 AI_Player.update()	Search took120ms
2017-01-04 09:25:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:00 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 09:25:00 AI_Player.update()		1100,	111,	111,	110,	1010,	1100,	1010
2017-01-04 09:25:00 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-04 09:25:00 AI_Player.update()		11,	11,	1101,	1001,	1101,	1011,	1110
2017-01-04 09:25:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 09:25:00 AI_Player.update()		110,	101,	1011,	11,	11,	101,	101
2017-01-04 09:25:00 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:25:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:00 AI_Player.update()	update
2017-01-04 09:25:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:00 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:00 AI_Player.update()	update
2017-01-04 09:25:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:01 AI_Player.update()	Search took213ms
2017-01-04 09:25:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:01 AI_Player.update()		110,	111,	111,	101,	111,	11,	11
2017-01-04 09:25:01 AI_Player.update()		1100,	101,	111,	110,	1010,	1100,	1010
2017-01-04 09:25:01 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:25:01 AI_Player.update()		11,	11,	1101,	1001,	1101,	1011,	1110
2017-01-04 09:25:01 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:25:01 AI_Player.update()		110,	1001,	1011,	11,	11,	101,	101
2017-01-04 09:25:01 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:01 AI_Player.update()	update
2017-01-04 09:25:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:25:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:01 AI_Player.update()	update
2017-01-04 09:25:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:01 AI_Player.update()	Search took184ms
2017-01-04 09:25:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:01 AI_Player.update()		110,	111,	111,	101,	111,	11,	11
2017-01-04 09:25:01 AI_Player.update()		1010,	1100,	101,	111,	110,	1010,	1100
2017-01-04 09:25:01 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:25:01 AI_Player.update()		11,	11,	1101,	1001,	1101,	1011,	1110
2017-01-04 09:25:01 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:25:01 AI_Player.update()		110,	1001,	1011,	11,	11,	101,	101
2017-01-04 09:25:01 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:01 AI_Player.update()	update
2017-01-04 09:25:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:25:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:01 AI_Player.update()	update
2017-01-04 09:25:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:01 AI_Player.update()	Search took161ms
2017-01-04 09:25:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:01 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 09:25:01 AI_Player.update()		1010,	11,	101,	111,	110,	1010,	1100
2017-01-04 09:25:01 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:25:01 AI_Player.update()		11,	101,	1101,	1001,	1101,	1011,	1110
2017-01-04 09:25:01 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-04 09:25:01 AI_Player.update()		110,	1001,	1011,	11,	11,	101,	101
2017-01-04 09:25:01 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-04 09:25:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:01 AI_Player.update()	update
2017-01-04 09:25:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:01 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:25:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:01 AI_Player.update()	update
2017-01-04 09:25:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:02 AI_Player.update()	Search took142ms
2017-01-04 09:25:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:02 AI_Player.update()		110,	111,	111,	101,	111,	11,	11
2017-01-04 09:25:02 AI_Player.update()		1010,	1100,	101,	111,	110,	1010,	1100
2017-01-04 09:25:02 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 09:25:02 AI_Player.update()		11,	11,	1101,	1001,	1101,	1011,	1110
2017-01-04 09:25:02 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 09:25:02 AI_Player.update()		110,	1001,	1011,	11,	11,	101,	101
2017-01-04 09:25:02 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 09:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:02 AI_Player.update()	update
2017-01-04 09:25:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:02 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:25:02 AI_Player.update()	Player a has won!
2017-01-04 09:25:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:25:02 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:25:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:25:02 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:25:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:02 AI_Player.update()	update
2017-01-04 09:25:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:02 AI_Player.update()	Search took281ms
2017-01-04 09:25:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:02 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:25:02 AI_Player.update()		1011,	110,	1010,	1010,	110,	101,	101
2017-01-04 09:25:02 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1010,	1011
2017-01-04 09:25:02 AI_Player.update()		1101,	111,	1101,	1101,	1100,	1010,	1001
2017-01-04 09:25:02 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:25:02 AI_Player.update()		1001,	1011,	111,	11,	101,	1110,	11
2017-01-04 09:25:02 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:02 AI_Player.update()	update
2017-01-04 09:25:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:02 AI_Player.update()	update
2017-01-04 09:25:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:02 AI_Player.update()	Search took140ms
2017-01-04 09:25:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:02 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:25:02 AI_Player.update()		110,	1010,	1010,	110,	101,	101,	1011
2017-01-04 09:25:02 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1010,	1011
2017-01-04 09:25:02 AI_Player.update()		1101,	111,	1101,	1101,	1100,	1010,	1001
2017-01-04 09:25:02 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:25:02 AI_Player.update()		1001,	1011,	111,	11,	101,	1110,	11
2017-01-04 09:25:02 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:25:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:03 AI_Player.update()	update
2017-01-04 09:25:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:25:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:03 AI_Player.update()	update
2017-01-04 09:25:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:04 AI_Player.update()	Search took831ms
2017-01-04 09:25:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:04 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:25:04 AI_Player.update()		110,	1010,	1010,	110,	101,	101,	1011
2017-01-04 09:25:04 AI_Player.update()		1110,	111,	1110,	1101,	111,	1010,	1011
2017-01-04 09:25:04 AI_Player.update()		1101,	101,	1101,	1101,	1100,	1010,	1001
2017-01-04 09:25:04 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1010,	1011
2017-01-04 09:25:04 AI_Player.update()		1001,	101,	111,	11,	101,	1110,	11
2017-01-04 09:25:04 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:25:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:25:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:04 AI_Player.update()	update
2017-01-04 09:25:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:25:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:04 AI_Player.update()	update
2017-01-04 09:25:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:04 AI_Player.update()	Search took701ms
2017-01-04 09:25:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:04 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 09:25:04 AI_Player.update()		110,	1010,	1010,	110,	101,	101,	1011
2017-01-04 09:25:04 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1010,	1011
2017-01-04 09:25:04 AI_Player.update()		1101,	111,	1101,	1101,	1100,	1010,	1001
2017-01-04 09:25:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:25:04 AI_Player.update()		1001,	1011,	111,	11,	101,	1110,	11
2017-01-04 09:25:04 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:25:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:04 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:25:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:05 AI_Player.update()	update
2017-01-04 09:25:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:25:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:05 AI_Player.update()	update
2017-01-04 09:25:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:05 AI_Player.update()	Search took685ms
2017-01-04 09:25:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:05 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:25:05 AI_Player.update()		110,	1010,	1010,	110,	101,	101,	1011
2017-01-04 09:25:05 AI_Player.update()		1110,	111,	1110,	1101,	111,	1010,	1011
2017-01-04 09:25:05 AI_Player.update()		1101,	101,	1101,	1101,	1100,	1010,	1001
2017-01-04 09:25:05 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1010,	1011
2017-01-04 09:25:05 AI_Player.update()		1001,	101,	111,	11,	101,	1110,	11
2017-01-04 09:25:05 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:25:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:25:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:05 AI_Player.update()	update
2017-01-04 09:25:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:05 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:25:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:06 AI_Player.update()	update
2017-01-04 09:25:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:06 AI_Player.update()	Search took672ms
2017-01-04 09:25:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:06 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:25:06 AI_Player.update()		110,	1010,	1010,	110,	101,	101,	1011
2017-01-04 09:25:06 AI_Player.update()		1110,	111,	1110,	1101,	111,	1010,	1011
2017-01-04 09:25:06 AI_Player.update()		1001,	1101,	101,	1101,	1101,	1100,	1010
2017-01-04 09:25:06 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1010,	1011
2017-01-04 09:25:06 AI_Player.update()		1001,	101,	111,	11,	101,	1110,	11
2017-01-04 09:25:06 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:25:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:25:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:06 AI_Player.update()	update
2017-01-04 09:25:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:25:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:06 AI_Player.update()	update
2017-01-04 09:25:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:07 AI_Player.update()	Search took670ms
2017-01-04 09:25:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:07 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-04 09:25:07 AI_Player.update()		110,	1010,	1010,	110,	101,	1010,	1011
2017-01-04 09:25:07 AI_Player.update()		1110,	111,	1110,	1101,	111,	1100,	1011
2017-01-04 09:25:07 AI_Player.update()		1001,	1101,	101,	1101,	1101,	1010,	1010
2017-01-04 09:25:07 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1110,	1011
2017-01-04 09:25:07 AI_Player.update()		1001,	101,	111,	11,	101,	101,	11
2017-01-04 09:25:07 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:25:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	2 4
2017-01-04 09:25:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:07 AI_Player.update()	update
2017-01-04 09:25:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:25:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:07 AI_Player.update()	update
2017-01-04 09:25:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:08 AI_Player.update()	Search took331ms
2017-01-04 09:25:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:08 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-04 09:25:08 AI_Player.update()		110,	1010,	1010,	110,	101,	1100,	1011
2017-01-04 09:25:08 AI_Player.update()		1110,	111,	1110,	1101,	111,	1010,	1011
2017-01-04 09:25:08 AI_Player.update()		1001,	1101,	101,	1101,	1101,	1110,	1010
2017-01-04 09:25:08 AI_Player.update()		1110,	1011,	1101,	101,	1011,	101,	1011
2017-01-04 09:25:08 AI_Player.update()		1001,	101,	111,	11,	101,	101,	11
2017-01-04 09:25:08 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:25:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:08 AI_Player.update()	update
2017-01-04 09:25:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:25:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:08 AI_Player.update()	update
2017-01-04 09:25:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:08 AI_Player.update()	Search took185ms
2017-01-04 09:25:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:08 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-04 09:25:08 AI_Player.update()		110,	1010,	1010,	110,	101,	1100,	1011
2017-01-04 09:25:08 AI_Player.update()		1110,	111,	1110,	1101,	111,	1010,	1011
2017-01-04 09:25:08 AI_Player.update()		1010,	1001,	1101,	101,	1101,	1101,	1110
2017-01-04 09:25:08 AI_Player.update()		1110,	1011,	1101,	101,	1011,	101,	1011
2017-01-04 09:25:08 AI_Player.update()		1001,	101,	111,	11,	101,	101,	11
2017-01-04 09:25:08 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 09:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:25:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:08 AI_Player.update()	update
2017-01-04 09:25:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:25:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:08 AI_Player.update()	update
2017-01-04 09:25:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:08 AI_Player.update()	Search took218ms
2017-01-04 09:25:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:08 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-04 09:25:08 AI_Player.update()		110,	1010,	1010,	110,	101,	1010,	1011
2017-01-04 09:25:08 AI_Player.update()		1110,	111,	1110,	1101,	111,	1101,	1011
2017-01-04 09:25:08 AI_Player.update()		1010,	1001,	1101,	101,	1101,	101,	1110
2017-01-04 09:25:08 AI_Player.update()		1110,	1011,	1101,	101,	1011,	101,	1011
2017-01-04 09:25:08 AI_Player.update()		1001,	101,	111,	11,	101,	101,	11
2017-01-04 09:25:08 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 09:25:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:08 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:25:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:09 AI_Player.update()	update
2017-01-04 09:25:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:25:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:09 AI_Player.update()	update
2017-01-04 09:25:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:09 AI_Player.update()	Search took691ms
2017-01-04 09:25:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:09 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-04 09:25:09 AI_Player.update()		1010,	1010,	110,	101,	1010,	1011,	110
2017-01-04 09:25:09 AI_Player.update()		1110,	111,	1110,	1101,	111,	1101,	1011
2017-01-04 09:25:09 AI_Player.update()		1010,	1001,	1101,	101,	1101,	101,	1110
2017-01-04 09:25:09 AI_Player.update()		1110,	1011,	1101,	101,	1011,	101,	1011
2017-01-04 09:25:09 AI_Player.update()		1001,	101,	111,	11,	101,	101,	11
2017-01-04 09:25:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 09:25:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	3 5
2017-01-04 09:25:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:09 AI_Player.update()	update
2017-01-04 09:25:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:25:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:10 AI_Player.update()	update
2017-01-04 09:25:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:10 AI_Player.update()	Search took499ms
2017-01-04 09:25:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:10 AI_Player.update()		110,	1010,	111,	110,	111,	1100,	11
2017-01-04 09:25:10 AI_Player.update()		1010,	1010,	110,	1001,	1010,	1011,	110
2017-01-04 09:25:10 AI_Player.update()		1110,	111,	1110,	101,	111,	1101,	1011
2017-01-04 09:25:10 AI_Player.update()		1010,	1001,	1101,	1101,	1101,	101,	1110
2017-01-04 09:25:10 AI_Player.update()		1110,	1011,	1101,	101,	1011,	101,	1011
2017-01-04 09:25:10 AI_Player.update()		1001,	101,	111,	101,	101,	101,	11
2017-01-04 09:25:10 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 09:25:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:10 AI_Player.update()	update
2017-01-04 09:25:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:25:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:10 AI_Player.update()	update
2017-01-04 09:25:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:11 AI_Player.update()	Search took757ms
2017-01-04 09:25:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:11 AI_Player.update()		110,	1010,	111,	110,	111,	1100,	11
2017-01-04 09:25:11 AI_Player.update()		1010,	111,	110,	1001,	1010,	1011,	110
2017-01-04 09:25:11 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-04 09:25:11 AI_Player.update()		1010,	1011,	1101,	1101,	1101,	101,	1110
2017-01-04 09:25:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 09:25:11 AI_Player.update()		1001,	101,	111,	101,	101,	101,	11
2017-01-04 09:25:11 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 09:25:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:11 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:25:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:11 AI_Player.update()	update
2017-01-04 09:25:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:11 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:25:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:11 AI_Player.update()	update
2017-01-04 09:25:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:12 AI_Player.update()	Search took390ms
2017-01-04 09:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:12 AI_Player.update()		110,	1010,	111,	110,	111,	1100,	11
2017-01-04 09:25:12 AI_Player.update()		1010,	111,	110,	1001,	1010,	1011,	110
2017-01-04 09:25:12 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-04 09:25:12 AI_Player.update()		1110,	1010,	1011,	1101,	1101,	1101,	101
2017-01-04 09:25:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 09:25:12 AI_Player.update()		1001,	101,	111,	101,	101,	101,	11
2017-01-04 09:25:12 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 09:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:12 AI_Player.update()	update
2017-01-04 09:25:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:12 AI_Player.update()	update
2017-01-04 09:25:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:12 AI_Player.update()	Search took230ms
2017-01-04 09:25:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:12 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 09:25:12 AI_Player.update()		1010,	111,	110,	1001,	1010,	1100,	110
2017-01-04 09:25:12 AI_Player.update()		1110,	1001,	1110,	101,	111,	1011,	1011
2017-01-04 09:25:12 AI_Player.update()		1110,	1010,	1011,	1101,	1101,	1101,	101
2017-01-04 09:25:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-04 09:25:12 AI_Player.update()		1001,	101,	111,	101,	101,	101,	11
2017-01-04 09:25:12 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 09:25:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	4 6
2017-01-04 09:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:12 AI_Player.update()	update
2017-01-04 09:25:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:25:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:12 AI_Player.update()	update
2017-01-04 09:25:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:13 AI_Player.update()	Search took388ms
2017-01-04 09:25:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:13 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-04 09:25:13 AI_Player.update()		1010,	1001,	110,	1001,	1010,	1100,	110
2017-01-04 09:25:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	1011,	1011
2017-01-04 09:25:13 AI_Player.update()		1110,	101,	1011,	1101,	1101,	1101,	101
2017-01-04 09:25:13 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-04 09:25:13 AI_Player.update()		1001,	1010,	111,	101,	101,	101,	11
2017-01-04 09:25:13 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 09:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:13 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:13 AI_Player.update()	update
2017-01-04 09:25:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:13 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:13 AI_Player.update()	update
2017-01-04 09:25:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:13 AI_Player.update()	Search took209ms
2017-01-04 09:25:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:13 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 09:25:13 AI_Player.update()		1010,	111,	110,	1001,	1010,	1100,	110
2017-01-04 09:25:13 AI_Player.update()		1110,	1001,	1110,	101,	111,	1011,	1011
2017-01-04 09:25:13 AI_Player.update()		1110,	1010,	1011,	1101,	1101,	1101,	101
2017-01-04 09:25:13 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-04 09:25:13 AI_Player.update()		1001,	101,	111,	101,	101,	101,	11
2017-01-04 09:25:13 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 09:25:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:13 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:13 AI_Player.update()	update
2017-01-04 09:25:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:13 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:25:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:13 AI_Player.update()	update
2017-01-04 09:25:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:14 AI_Player.update()	Search took242ms
2017-01-04 09:25:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:14 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 09:25:14 AI_Player.update()		111,	110,	1001,	1010,	1100,	110,	1010
2017-01-04 09:25:14 AI_Player.update()		1110,	1001,	1110,	101,	111,	1011,	1011
2017-01-04 09:25:14 AI_Player.update()		1110,	1010,	1011,	1101,	1101,	1101,	101
2017-01-04 09:25:14 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-04 09:25:14 AI_Player.update()		1001,	101,	111,	101,	101,	101,	11
2017-01-04 09:25:14 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 09:25:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:14 GameBoard.setupTreasurePanel()	5 6
2017-01-04 09:25:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:14 AI_Player.update()	update
2017-01-04 09:25:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:14 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:25:14 AI_Player.update()	Player b has won!
2017-01-04 09:25:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:25:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:25:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:25:22 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:25:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:22 AI_Player.update()	update
2017-01-04 09:25:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:22 AI_Player.update()	Search took139ms
2017-01-04 09:25:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:22 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-04 09:25:22 AI_Player.update()		1100,	1001,	11,	1010,	110,	11,	11
2017-01-04 09:25:22 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1001,	1011
2017-01-04 09:25:22 AI_Player.update()		101,	110,	1011,	1001,	11,	110,	1001
2017-01-04 09:25:22 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:22 AI_Player.update()		1010,	110,	110,	1100,	111,	1010,	11
2017-01-04 09:25:22 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:22 AI_Player.update()	update
2017-01-04 09:25:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:22 AI_Player.update()	update
2017-01-04 09:25:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:22 AI_Player.update()	Search took35ms
2017-01-04 09:25:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:22 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-04 09:25:22 AI_Player.update()		1100,	1001,	11,	1010,	110,	11,	11
2017-01-04 09:25:22 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1001,	1011
2017-01-04 09:25:22 AI_Player.update()		101,	110,	1011,	1001,	11,	110,	1001
2017-01-04 09:25:22 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:22 AI_Player.update()		110,	110,	1100,	111,	1010,	11,	1010
2017-01-04 09:25:22 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:25:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:22 AI_Player.update()	update
2017-01-04 09:25:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:22 AI_Player.update()	update
2017-01-04 09:25:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:23 AI_Player.update()	Search took377ms
2017-01-04 09:25:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:23 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 09:25:23 AI_Player.update()		1100,	1001,	11,	1110,	110,	11,	11
2017-01-04 09:25:23 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-04 09:25:23 AI_Player.update()		101,	110,	1011,	11,	11,	110,	1001
2017-01-04 09:25:23 AI_Player.update()		1110,	1101,	1101,	111,	1011,	101,	1011
2017-01-04 09:25:23 AI_Player.update()		110,	110,	1100,	1010,	1010,	11,	1010
2017-01-04 09:25:23 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-04 09:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:23 AI_Player.update()	update
2017-01-04 09:25:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:25:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:23 AI_Player.update()	update
2017-01-04 09:25:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:23 AI_Player.update()	Search took138ms
2017-01-04 09:25:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:23 AI_Player.update()		110,	110,	111,	1010,	111,	11,	11
2017-01-04 09:25:23 AI_Player.update()		1100,	1001,	11,	1110,	110,	1001,	11
2017-01-04 09:25:23 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-04 09:25:23 AI_Player.update()		101,	110,	1011,	11,	11,	101,	1001
2017-01-04 09:25:23 AI_Player.update()		1110,	1101,	1101,	111,	1011,	11,	1011
2017-01-04 09:25:23 AI_Player.update()		110,	110,	1100,	1010,	1010,	101,	1010
2017-01-04 09:25:23 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-04 09:25:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:23 AI_Player.update()	update
2017-01-04 09:25:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:25:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:23 AI_Player.update()	update
2017-01-04 09:25:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:24 AI_Player.update()	Search took447ms
2017-01-04 09:25:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:24 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:25:24 AI_Player.update()		1100,	1001,	11,	1001,	110,	1001,	11
2017-01-04 09:25:24 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-04 09:25:24 AI_Player.update()		101,	110,	1011,	111,	11,	101,	1001
2017-01-04 09:25:24 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	11,	1011
2017-01-04 09:25:24 AI_Player.update()		110,	110,	1100,	11,	1010,	101,	1010
2017-01-04 09:25:24 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:24 AI_Player.update()	update
2017-01-04 09:25:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:24 AI_Player.update()	update
2017-01-04 09:25:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:24 AI_Player.update()	Search took341ms
2017-01-04 09:25:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:24 AI_Player.update()		110,	110,	111,	1001,	111,	11,	11
2017-01-04 09:25:24 AI_Player.update()		1100,	1001,	11,	11,	110,	1001,	11
2017-01-04 09:25:24 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:25:24 AI_Player.update()		101,	110,	1011,	1010,	11,	101,	1001
2017-01-04 09:25:24 AI_Player.update()		1110,	1101,	1101,	11,	1011,	11,	1011
2017-01-04 09:25:24 AI_Player.update()		110,	110,	1100,	1010,	1010,	101,	1010
2017-01-04 09:25:24 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	101,	1001
2017-01-04 09:25:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:24 AI_Player.update()	update
2017-01-04 09:25:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:24 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:25 AI_Player.update()	update
2017-01-04 09:25:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:25 AI_Player.update()	Search took706ms
2017-01-04 09:25:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:25 AI_Player.update()		110,	1001,	111,	1001,	111,	11,	11
2017-01-04 09:25:25 AI_Player.update()		1100,	1001,	11,	11,	110,	1001,	11
2017-01-04 09:25:25 AI_Player.update()		1110,	110,	1110,	111,	111,	110,	1011
2017-01-04 09:25:25 AI_Player.update()		101,	1101,	1011,	1010,	11,	101,	1001
2017-01-04 09:25:25 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-04 09:25:25 AI_Player.update()		110,	1110,	1100,	1010,	1010,	101,	1010
2017-01-04 09:25:25 AI_Player.update()		1100,	110,	1101,	1110,	1101,	101,	1001
2017-01-04 09:25:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:25 AI_Player.update()	update
2017-01-04 09:25:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:25:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:25 AI_Player.update()	update
2017-01-04 09:25:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:26 AI_Player.update()	Search took694ms
2017-01-04 09:25:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:26 AI_Player.update()		110,	1001,	111,	1001,	111,	1001,	11
2017-01-04 09:25:26 AI_Player.update()		1100,	1001,	11,	11,	110,	110,	11
2017-01-04 09:25:26 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-04 09:25:26 AI_Player.update()		101,	1101,	1011,	1010,	11,	11,	1001
2017-01-04 09:25:26 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:26 AI_Player.update()		110,	1110,	1100,	1010,	1010,	101,	1010
2017-01-04 09:25:26 AI_Player.update()		1100,	110,	1101,	1110,	1101,	11,	1001
2017-01-04 09:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:26 AI_Player.update()	update
2017-01-04 09:25:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:26 AI_Player.update()	update
2017-01-04 09:25:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:26 AI_Player.update()	Search took126ms
2017-01-04 09:25:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:26 AI_Player.update()		110,	1001,	111,	1001,	111,	11,	11
2017-01-04 09:25:26 AI_Player.update()		1100,	1001,	11,	11,	110,	1001,	11
2017-01-04 09:25:26 AI_Player.update()		1110,	110,	1110,	111,	111,	110,	1011
2017-01-04 09:25:26 AI_Player.update()		101,	1101,	1011,	1010,	11,	101,	1001
2017-01-04 09:25:26 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-04 09:25:26 AI_Player.update()		110,	1110,	1100,	1010,	1010,	101,	1010
2017-01-04 09:25:26 AI_Player.update()		1100,	110,	1101,	1110,	1101,	101,	1001
2017-01-04 09:25:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:26 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:27 AI_Player.update()	update
2017-01-04 09:25:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:27 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:27 AI_Player.update()	update
2017-01-04 09:25:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:27 AI_Player.update()	Search took147ms
2017-01-04 09:25:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:27 AI_Player.update()		110,	1001,	111,	1001,	111,	1001,	11
2017-01-04 09:25:27 AI_Player.update()		1100,	1001,	11,	11,	110,	110,	11
2017-01-04 09:25:27 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-04 09:25:27 AI_Player.update()		101,	1101,	1011,	1010,	11,	11,	1001
2017-01-04 09:25:27 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:27 AI_Player.update()		110,	1110,	1100,	1010,	1010,	101,	1010
2017-01-04 09:25:27 AI_Player.update()		1100,	110,	1101,	1110,	1101,	11,	1001
2017-01-04 09:25:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:27 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:27 AI_Player.update()	update
2017-01-04 09:25:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:27 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:27 AI_Player.update()	update
2017-01-04 09:25:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:28 AI_Player.update()	Search took565ms
2017-01-04 09:25:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:28 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 09:25:28 AI_Player.update()		1100,	1001,	11,	11,	110,	110,	11
2017-01-04 09:25:28 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-04 09:25:28 AI_Player.update()		101,	110,	1011,	1010,	11,	11,	1001
2017-01-04 09:25:28 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:28 AI_Player.update()		110,	110,	1100,	1010,	1010,	101,	1010
2017-01-04 09:25:28 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	11,	1001
2017-01-04 09:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:28 AI_Player.update()	update
2017-01-04 09:25:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:25:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:28 AI_Player.update()	update
2017-01-04 09:25:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:28 AI_Player.update()	Search took659ms
2017-01-04 09:25:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:28 AI_Player.update()		110,	110,	111,	1110,	111,	1001,	11
2017-01-04 09:25:28 AI_Player.update()		1100,	1001,	11,	1001,	110,	110,	11
2017-01-04 09:25:28 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 09:25:28 AI_Player.update()		101,	110,	1011,	111,	11,	11,	1001
2017-01-04 09:25:28 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-04 09:25:28 AI_Player.update()		110,	110,	1100,	11,	1010,	101,	1010
2017-01-04 09:25:28 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-04 09:25:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:28 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:29 AI_Player.update()	update
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:29 AI_Player.update()	update
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:29 AI_Player.update()	Search took73ms
2017-01-04 09:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:29 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 09:25:29 AI_Player.update()		1100,	1001,	11,	11,	110,	110,	11
2017-01-04 09:25:29 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-04 09:25:29 AI_Player.update()		101,	110,	1011,	1010,	11,	11,	1001
2017-01-04 09:25:29 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:29 AI_Player.update()		110,	110,	1100,	1010,	1010,	101,	1010
2017-01-04 09:25:29 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	11,	1001
2017-01-04 09:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:29 AI_Player.update()	update
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:29 AI_Player.update()	update
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:29 AI_Player.update()	Search took51ms
2017-01-04 09:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:29 AI_Player.update()		110,	1110,	111,	1001,	111,	1001,	11
2017-01-04 09:25:29 AI_Player.update()		1100,	110,	11,	11,	110,	110,	11
2017-01-04 09:25:29 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-04 09:25:29 AI_Player.update()		101,	1001,	1011,	1010,	11,	11,	1001
2017-01-04 09:25:29 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:29 AI_Player.update()		110,	1101,	1100,	1010,	1010,	101,	1010
2017-01-04 09:25:29 AI_Player.update()		1100,	110,	1101,	1110,	1101,	11,	1001
2017-01-04 09:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:29 AI_Player.update()	update
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:29 AI_Player.update()	update
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:29 AI_Player.update()	Search took106ms
2017-01-04 09:25:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:29 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 09:25:29 AI_Player.update()		1100,	1110,	11,	11,	110,	110,	11
2017-01-04 09:25:29 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-04 09:25:29 AI_Player.update()		101,	1001,	1011,	1010,	11,	11,	1001
2017-01-04 09:25:29 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:29 AI_Player.update()		110,	110,	1100,	1010,	1010,	101,	1010
2017-01-04 09:25:29 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	11,	1001
2017-01-04 09:25:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:29 AI_Player.update()	update
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:25:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:30 AI_Player.update()	update
2017-01-04 09:25:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:30 AI_Player.update()	Search took104ms
2017-01-04 09:25:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:30 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 09:25:30 AI_Player.update()		1100,	1110,	11,	11,	110,	101,	11
2017-01-04 09:25:30 AI_Player.update()		1110,	110,	1110,	111,	111,	11,	1011
2017-01-04 09:25:30 AI_Player.update()		101,	1001,	1011,	1010,	11,	101,	1001
2017-01-04 09:25:30 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:30 AI_Player.update()		110,	110,	1100,	1010,	1010,	11,	1010
2017-01-04 09:25:30 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1001,	1001
2017-01-04 09:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:30 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:30 AI_Player.update()	update
2017-01-04 09:25:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:30 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:25:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:30 AI_Player.update()	update
2017-01-04 09:25:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:30 AI_Player.update()	Search took656ms
2017-01-04 09:25:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:30 AI_Player.update()		110,	1110,	111,	1001,	111,	110,	11
2017-01-04 09:25:30 AI_Player.update()		1100,	110,	11,	11,	110,	101,	11
2017-01-04 09:25:30 AI_Player.update()		1110,	1001,	1110,	111,	111,	11,	1011
2017-01-04 09:25:30 AI_Player.update()		101,	1001,	1011,	1010,	11,	101,	1001
2017-01-04 09:25:30 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:30 AI_Player.update()		110,	1101,	1100,	1010,	1010,	11,	1010
2017-01-04 09:25:30 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1001,	1001
2017-01-04 09:25:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:30 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:31 AI_Player.update()	update
2017-01-04 09:25:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:31 AI_Player.update()	update
2017-01-04 09:25:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:31 AI_Player.update()	Search took544ms
2017-01-04 09:25:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:31 AI_Player.update()		110,	1110,	111,	1001,	111,	110,	11
2017-01-04 09:25:31 AI_Player.update()		1100,	110,	11,	11,	110,	101,	11
2017-01-04 09:25:31 AI_Player.update()		1110,	1001,	1110,	111,	111,	11,	1011
2017-01-04 09:25:31 AI_Player.update()		101,	1001,	1011,	1010,	11,	101,	1001
2017-01-04 09:25:31 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:31 AI_Player.update()		1101,	1100,	1010,	1010,	11,	1010,	110
2017-01-04 09:25:31 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1001,	1001
2017-01-04 09:25:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:31 AI_Player.update()	update
2017-01-04 09:25:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:25:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:31 AI_Player.update()	update
2017-01-04 09:25:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:32 AI_Player.update()	Search took381ms
2017-01-04 09:25:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:32 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 09:25:32 AI_Player.update()		1100,	1001,	11,	11,	110,	101,	11
2017-01-04 09:25:32 AI_Player.update()		1110,	1001,	1110,	111,	111,	11,	1011
2017-01-04 09:25:32 AI_Player.update()		101,	110,	1011,	1010,	11,	101,	1001
2017-01-04 09:25:32 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-04 09:25:32 AI_Player.update()		1101,	110,	1010,	1010,	11,	1010,	110
2017-01-04 09:25:32 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	1001,	1001
2017-01-04 09:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:32 AI_Player.update()	update
2017-01-04 09:25:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:32 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:25:32 AI_Player.update()	Player a has won!
2017-01-04 09:25:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:25:32 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:25:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:25:32 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:25:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:32 AI_Player.update()	update
2017-01-04 09:25:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:32 AI_Player.update()	Search took189ms
2017-01-04 09:25:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:32 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 09:25:32 AI_Player.update()		1101,	11,	1001,	110,	1101,	101,	101
2017-01-04 09:25:32 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:32 AI_Player.update()		1110,	101,	101,	1010,	1010,	1110,	1001
2017-01-04 09:25:32 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-04 09:25:32 AI_Player.update()		1001,	110,	101,	1100,	1010,	110,	1010
2017-01-04 09:25:32 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:25:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:32 AI_Player.update()	update
2017-01-04 09:25:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:25:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:32 AI_Player.update()	update
2017-01-04 09:25:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:33 AI_Player.update()	Search took340ms
2017-01-04 09:25:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:33 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 09:25:33 AI_Player.update()		1101,	11,	1001,	110,	1101,	1110,	101
2017-01-04 09:25:33 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:33 AI_Player.update()		1110,	101,	101,	1010,	1010,	11,	1001
2017-01-04 09:25:33 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	110,	1011
2017-01-04 09:25:33 AI_Player.update()		1001,	110,	101,	1100,	1010,	1101,	1010
2017-01-04 09:25:33 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-04 09:25:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:25:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:33 AI_Player.update()	update
2017-01-04 09:25:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:25:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:33 AI_Player.update()	update
2017-01-04 09:25:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:34 AI_Player.update()	Search took988ms
2017-01-04 09:25:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:34 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 09:25:34 AI_Player.update()		1101,	1001,	1001,	110,	1101,	1110,	101
2017-01-04 09:25:34 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:34 AI_Player.update()		1110,	1101,	101,	1010,	1010,	11,	1001
2017-01-04 09:25:34 AI_Player.update()		1110,	110,	1101,	1101,	1011,	110,	1011
2017-01-04 09:25:34 AI_Player.update()		1001,	1100,	101,	1100,	1010,	1101,	1010
2017-01-04 09:25:34 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-04 09:25:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:25:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:34 AI_Player.update()	update
2017-01-04 09:25:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:34 AI_Player.update()	update
2017-01-04 09:25:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:34 AI_Player.update()	Search took256ms
2017-01-04 09:25:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:34 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 09:25:34 AI_Player.update()		1101,	11,	1001,	110,	1101,	1110,	101
2017-01-04 09:25:34 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:34 AI_Player.update()		1110,	101,	101,	1010,	1010,	11,	1001
2017-01-04 09:25:34 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	110,	1011
2017-01-04 09:25:34 AI_Player.update()		1001,	110,	101,	1100,	1010,	1101,	1010
2017-01-04 09:25:34 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-04 09:25:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:35 AI_Player.update()	update
2017-01-04 09:25:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:25:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:35 AI_Player.update()	update
2017-01-04 09:25:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:35 AI_Player.update()	Search took779ms
2017-01-04 09:25:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:35 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 09:25:35 AI_Player.update()		1101,	11,	1001,	110,	1101,	101,	101
2017-01-04 09:25:35 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:35 AI_Player.update()		1110,	101,	101,	1010,	1010,	1110,	1001
2017-01-04 09:25:35 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-04 09:25:35 AI_Player.update()		1001,	110,	101,	1100,	1010,	110,	1010
2017-01-04 09:25:35 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:25:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:35 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:25:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:36 AI_Player.update()	update
2017-01-04 09:25:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:36 AI_Player.update()	update
2017-01-04 09:25:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:37 AI_Player.update()	Search took1123ms
2017-01-04 09:25:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:37 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 09:25:37 AI_Player.update()		1101,	11,	1001,	110,	1101,	101,	101
2017-01-04 09:25:37 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:37 AI_Player.update()		101,	101,	1010,	1010,	1110,	1001,	1110
2017-01-04 09:25:37 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-04 09:25:37 AI_Player.update()		1001,	110,	101,	1100,	1010,	110,	1010
2017-01-04 09:25:37 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:25:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:37 AI_Player.update()	update
2017-01-04 09:25:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:25:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:37 AI_Player.update()	update
2017-01-04 09:25:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:38 AI_Player.update()	Search took1371ms
2017-01-04 09:25:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:38 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 09:25:38 AI_Player.update()		1101,	1001,	1001,	110,	1101,	101,	101
2017-01-04 09:25:38 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:38 AI_Player.update()		101,	1101,	1010,	1010,	1110,	1001,	1110
2017-01-04 09:25:38 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-04 09:25:38 AI_Player.update()		1001,	1100,	101,	1100,	1010,	110,	1010
2017-01-04 09:25:38 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:25:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:25:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:38 AI_Player.update()	update
2017-01-04 09:25:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:39 AI_Player.update()	update
2017-01-04 09:25:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:39 AI_Player.update()	Search took225ms
2017-01-04 09:25:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:39 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-04 09:25:39 AI_Player.update()		1101,	11,	1001,	110,	1101,	101,	101
2017-01-04 09:25:39 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:39 AI_Player.update()		101,	101,	1010,	1010,	1110,	1001,	1110
2017-01-04 09:25:39 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-04 09:25:39 AI_Player.update()		1001,	110,	101,	1100,	1010,	110,	1010
2017-01-04 09:25:39 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:25:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:25:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:39 AI_Player.update()	update
2017-01-04 09:25:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:25:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:39 AI_Player.update()	update
2017-01-04 09:25:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:40 AI_Player.update()	Search took1183ms
2017-01-04 09:25:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:40 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 09:25:40 AI_Player.update()		1101,	1001,	1001,	110,	1101,	101,	101
2017-01-04 09:25:40 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:40 AI_Player.update()		101,	1101,	1010,	1010,	1110,	1001,	1110
2017-01-04 09:25:40 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-04 09:25:40 AI_Player.update()		1001,	1100,	101,	1100,	1010,	110,	1010
2017-01-04 09:25:40 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:25:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:40 AI_Player.update()	update
2017-01-04 09:25:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:25:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:40 AI_Player.update()	update
2017-01-04 09:25:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:42 AI_Player.update()	Search took1349ms
2017-01-04 09:25:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:42 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 09:25:42 AI_Player.update()		1001,	1001,	110,	1101,	101,	101,	1101
2017-01-04 09:25:42 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:42 AI_Player.update()		101,	1101,	1010,	1010,	1110,	1001,	1110
2017-01-04 09:25:42 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-04 09:25:42 AI_Player.update()		1001,	1100,	101,	1100,	1010,	110,	1010
2017-01-04 09:25:42 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:25:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:42 AI_Player.update()	update
2017-01-04 09:25:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:25:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:42 AI_Player.update()	update
2017-01-04 09:25:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:43 AI_Player.update()	Search took1322ms
2017-01-04 09:25:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:43 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 09:25:43 AI_Player.update()		1101,	1001,	1001,	110,	1101,	101,	101
2017-01-04 09:25:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:43 AI_Player.update()		101,	1101,	1010,	1010,	1110,	1001,	1110
2017-01-04 09:25:43 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-04 09:25:43 AI_Player.update()		1001,	1100,	101,	1100,	1010,	110,	1010
2017-01-04 09:25:43 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:25:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:43 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:25:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:43 AI_Player.update()	update
2017-01-04 09:25:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:43 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:25:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:43 AI_Player.update()	update
2017-01-04 09:25:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:45 AI_Player.update()	Search took1093ms
2017-01-04 09:25:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:45 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 09:25:45 AI_Player.update()		1001,	1001,	110,	1101,	101,	101,	1101
2017-01-04 09:25:45 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-04 09:25:45 AI_Player.update()		101,	1101,	1010,	1010,	1110,	1001,	1110
2017-01-04 09:25:45 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-04 09:25:45 AI_Player.update()		1001,	1100,	101,	1100,	1010,	110,	1010
2017-01-04 09:25:45 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1101,	1001
2017-01-04 09:25:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:25:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:45 AI_Player.update()	update
2017-01-04 09:25:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:25:45 AI_Player.update()	Player b has won!
2017-01-04 09:25:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:25:45 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:25:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:25:45 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-04 09:25:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:45 AI_Player.update()	update
2017-01-04 09:25:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:45 AI_Player.update()	Search took135ms
2017-01-04 09:25:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:45 AI_Player.update()		110,	101,	111,	111,	111,	1011,	11
2017-01-04 09:25:45 AI_Player.update()		1001,	1100,	110,	1010,	1001,	1010,	1001
2017-01-04 09:25:45 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-04 09:25:45 AI_Player.update()		1010,	1100,	1001,	101,	1101,	111,	1001
2017-01-04 09:25:45 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-04 09:25:45 AI_Player.update()		101,	110,	1100,	1100,	101,	1110,	101
2017-01-04 09:25:45 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-04 09:25:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:45 AI_Player.update()	update
2017-01-04 09:25:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:45 AI_Player.update()	update
2017-01-04 09:25:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:45 AI_Player.update()	Search took50ms
2017-01-04 09:25:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:45 AI_Player.update()		110,	101,	111,	111,	111,	1011,	11
2017-01-04 09:25:45 AI_Player.update()		1001,	1001,	1100,	110,	1010,	1001,	1010
2017-01-04 09:25:45 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-04 09:25:45 AI_Player.update()		1010,	1100,	1001,	101,	1101,	111,	1001
2017-01-04 09:25:45 AI_Player.update()		1110,	110,	1101,	1100,	1011,	111,	1011
2017-01-04 09:25:45 AI_Player.update()		101,	110,	1100,	1100,	101,	1110,	101
2017-01-04 09:25:45 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-04 09:25:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:45 AI_Player.update()	update
2017-01-04 09:25:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:45 AI_Player.update()	update
2017-01-04 09:25:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:46 AI_Player.update()	Search took268ms
2017-01-04 09:25:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:46 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 09:25:46 AI_Player.update()		1001,	1001,	1100,	111,	1010,	1001,	1010
2017-01-04 09:25:46 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-04 09:25:46 AI_Player.update()		1010,	1100,	1001,	11,	1101,	111,	1001
2017-01-04 09:25:46 AI_Player.update()		1110,	110,	1101,	101,	1011,	111,	1011
2017-01-04 09:25:46 AI_Player.update()		101,	110,	1100,	1100,	101,	1110,	101
2017-01-04 09:25:46 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-04 09:25:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:25:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:46 AI_Player.update()	update
2017-01-04 09:25:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:25:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:46 AI_Player.update()	update
2017-01-04 09:25:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:46 AI_Player.update()	Search took148ms
2017-01-04 09:25:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:46 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 09:25:46 AI_Player.update()		1001,	1001,	1100,	1100,	1010,	1001,	1010
2017-01-04 09:25:46 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:25:46 AI_Player.update()		1010,	1100,	1001,	110,	1101,	111,	1001
2017-01-04 09:25:46 AI_Player.update()		1110,	110,	1101,	11,	1011,	111,	1011
2017-01-04 09:25:46 AI_Player.update()		101,	110,	1100,	101,	101,	1110,	101
2017-01-04 09:25:46 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-04 09:25:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:25:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:46 AI_Player.update()	update
2017-01-04 09:25:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:25:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:46 AI_Player.update()	update
2017-01-04 09:25:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:47 AI_Player.update()	Search took359ms
2017-01-04 09:25:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:47 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 09:25:47 AI_Player.update()		1001,	1001,	1100,	1100,	1010,	1001,	1010
2017-01-04 09:25:47 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:25:47 AI_Player.update()		1100,	1001,	110,	1101,	111,	1001,	1010
2017-01-04 09:25:47 AI_Player.update()		1110,	110,	1101,	11,	1011,	111,	1011
2017-01-04 09:25:47 AI_Player.update()		101,	110,	1100,	101,	101,	1110,	101
2017-01-04 09:25:47 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-04 09:25:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:25:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:47 AI_Player.update()	update
2017-01-04 09:25:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:25:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:47 AI_Player.update()	update
2017-01-04 09:25:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:47 AI_Player.update()	Search took296ms
2017-01-04 09:25:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:47 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 09:25:47 AI_Player.update()		1001,	1001,	1100,	1100,	1010,	1001,	1010
2017-01-04 09:25:47 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:47 AI_Player.update()		1100,	1001,	110,	111,	111,	1001,	1010
2017-01-04 09:25:47 AI_Player.update()		1110,	110,	1101,	1101,	1011,	111,	1011
2017-01-04 09:25:47 AI_Player.update()		101,	110,	1100,	11,	101,	1110,	101
2017-01-04 09:25:47 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:25:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:47 AI_Player.update()	update
2017-01-04 09:25:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:25:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:47 AI_Player.update()	update
2017-01-04 09:25:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:48 AI_Player.update()	Search took463ms
2017-01-04 09:25:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:48 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 09:25:48 AI_Player.update()		1001,	1001,	1100,	1100,	1010,	1001,	1010
2017-01-04 09:25:48 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:48 AI_Player.update()		1100,	1001,	110,	111,	111,	1001,	1010
2017-01-04 09:25:48 AI_Player.update()		1110,	110,	1101,	1101,	1011,	111,	1011
2017-01-04 09:25:48 AI_Player.update()		110,	1100,	11,	101,	1110,	101,	101
2017-01-04 09:25:48 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:25:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:48 AI_Player.update()	update
2017-01-04 09:25:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:48 AI_Player.update()	update
2017-01-04 09:25:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:49 AI_Player.update()	Search took974ms
2017-01-04 09:25:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:49 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 09:25:49 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:49 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:49 AI_Player.update()		1100,	1001,	110,	111,	111,	1001,	1010
2017-01-04 09:25:49 AI_Player.update()		1110,	110,	1101,	1101,	1011,	111,	1011
2017-01-04 09:25:49 AI_Player.update()		110,	1100,	11,	101,	1110,	101,	101
2017-01-04 09:25:49 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:49 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:49 AI_Player.update()	update
2017-01-04 09:25:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:49 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:49 AI_Player.update()	update
2017-01-04 09:25:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:50 AI_Player.update()	Search took939ms
2017-01-04 09:25:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:50 AI_Player.update()		110,	1001,	111,	1100,	111,	1011,	11
2017-01-04 09:25:50 AI_Player.update()		1010,	1010,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:50 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:50 AI_Player.update()		1100,	110,	110,	111,	111,	1001,	1010
2017-01-04 09:25:50 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	111,	1011
2017-01-04 09:25:50 AI_Player.update()		110,	111,	11,	101,	1110,	101,	101
2017-01-04 09:25:50 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:50 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:50 AI_Player.update()	update
2017-01-04 09:25:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:50 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:50 AI_Player.update()	update
2017-01-04 09:25:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:51 AI_Player.update()	Search took904ms
2017-01-04 09:25:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:51 AI_Player.update()		110,	1010,	111,	1100,	111,	1011,	11
2017-01-04 09:25:51 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:51 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:51 AI_Player.update()		1100,	1100,	110,	111,	111,	1001,	1010
2017-01-04 09:25:51 AI_Player.update()		1110,	111,	1101,	1101,	1011,	111,	1011
2017-01-04 09:25:51 AI_Player.update()		110,	101,	11,	101,	1110,	101,	101
2017-01-04 09:25:51 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:51 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:51 AI_Player.update()	update
2017-01-04 09:25:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:51 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:51 AI_Player.update()	update
2017-01-04 09:25:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:52 AI_Player.update()	Search took734ms
2017-01-04 09:25:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:52 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-04 09:25:52 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:52 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:52 AI_Player.update()		1100,	1100,	110,	1100,	111,	1001,	1010
2017-01-04 09:25:52 AI_Player.update()		1110,	111,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:52 AI_Player.update()		110,	101,	11,	1101,	1110,	101,	101
2017-01-04 09:25:52 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:25:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:52 AI_Player.update()	update
2017-01-04 09:25:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:25:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:52 AI_Player.update()	update
2017-01-04 09:25:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:53 AI_Player.update()	Search took825ms
2017-01-04 09:25:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:53 AI_Player.update()		110,	1001,	111,	101,	111,	1011,	11
2017-01-04 09:25:53 AI_Player.update()		1010,	110,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:53 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:53 AI_Player.update()		1100,	111,	110,	1100,	111,	1001,	1010
2017-01-04 09:25:53 AI_Player.update()		1110,	101,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:53 AI_Player.update()		110,	1001,	11,	1101,	1110,	101,	101
2017-01-04 09:25:53 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:25:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:53 AI_Player.update()	update
2017-01-04 09:25:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:53 AI_Player.update()	update
2017-01-04 09:25:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:54 AI_Player.update()	Search took156ms
2017-01-04 09:25:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:54 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-04 09:25:54 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:54 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:54 AI_Player.update()		1100,	1100,	110,	1100,	111,	1001,	1010
2017-01-04 09:25:54 AI_Player.update()		1110,	111,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:54 AI_Player.update()		110,	101,	11,	1101,	1110,	101,	101
2017-01-04 09:25:54 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:54 AI_Player.update()	update
2017-01-04 09:25:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:54 AI_Player.update()	update
2017-01-04 09:25:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:54 AI_Player.update()	Search took112ms
2017-01-04 09:25:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:54 AI_Player.update()		110,	1001,	111,	101,	111,	1011,	11
2017-01-04 09:25:54 AI_Player.update()		1010,	1010,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:54 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:54 AI_Player.update()		1100,	110,	110,	1100,	111,	1001,	1010
2017-01-04 09:25:54 AI_Player.update()		1110,	1100,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:54 AI_Player.update()		110,	111,	11,	1101,	1110,	101,	101
2017-01-04 09:25:54 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:54 AI_Player.update()	update
2017-01-04 09:25:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:54 AI_Player.update()	update
2017-01-04 09:25:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:54 AI_Player.update()	Search took217ms
2017-01-04 09:25:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:54 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 09:25:54 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:54 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:54 AI_Player.update()		1100,	1001,	110,	1100,	111,	1001,	1010
2017-01-04 09:25:54 AI_Player.update()		1110,	110,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:54 AI_Player.update()		110,	1100,	11,	1101,	1110,	101,	101
2017-01-04 09:25:54 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:54 AI_Player.update()	update
2017-01-04 09:25:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:54 AI_Player.update()	update
2017-01-04 09:25:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:55 AI_Player.update()	Search took174ms
2017-01-04 09:25:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:55 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 09:25:55 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:55 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:55 AI_Player.update()		1010,	1100,	1001,	110,	1100,	111,	1001
2017-01-04 09:25:55 AI_Player.update()		1110,	110,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:55 AI_Player.update()		110,	1100,	11,	1101,	1110,	101,	101
2017-01-04 09:25:55 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:25:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:55 AI_Player.update()	update
2017-01-04 09:25:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:25:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:55 AI_Player.update()	update
2017-01-04 09:25:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:55 AI_Player.update()	Search took128ms
2017-01-04 09:25:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:55 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 09:25:55 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:55 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:55 AI_Player.update()		1100,	1001,	110,	1100,	111,	1001,	1010
2017-01-04 09:25:55 AI_Player.update()		1110,	110,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:55 AI_Player.update()		110,	1100,	11,	1101,	1110,	101,	101
2017-01-04 09:25:55 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:25:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:55 AI_Player.update()	update
2017-01-04 09:25:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:25:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:55 AI_Player.update()	update
2017-01-04 09:25:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:55 AI_Player.update()	Search took39ms
2017-01-04 09:25:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:55 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 09:25:55 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:55 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:55 AI_Player.update()		1001,	110,	1100,	111,	1001,	1010,	1100
2017-01-04 09:25:55 AI_Player.update()		1110,	110,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:55 AI_Player.update()		110,	1100,	11,	1101,	1110,	101,	101
2017-01-04 09:25:55 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:25:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:55 AI_Player.update()	update
2017-01-04 09:25:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:55 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:25:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:55 AI_Player.update()	update
2017-01-04 09:25:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:56 AI_Player.update()	Search took175ms
2017-01-04 09:25:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:56 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 09:25:56 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:56 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:56 AI_Player.update()		1100,	1001,	110,	1100,	111,	1001,	1010
2017-01-04 09:25:56 AI_Player.update()		1110,	110,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:56 AI_Player.update()		110,	1100,	11,	1101,	1110,	101,	101
2017-01-04 09:25:56 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:56 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:25:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:56 AI_Player.update()	update
2017-01-04 09:25:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:56 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:25:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:56 AI_Player.update()	update
2017-01-04 09:25:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:25:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:25:57 AI_Player.update()	Search took729ms
2017-01-04 09:25:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:57 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 09:25:57 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:57 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:57 AI_Player.update()		1010,	1100,	1001,	110,	1100,	111,	1001
2017-01-04 09:25:57 AI_Player.update()		1110,	110,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:57 AI_Player.update()		110,	1100,	11,	1101,	1110,	101,	101
2017-01-04 09:25:57 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:25:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:57 AI_Player.update()	update
2017-01-04 09:25:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:25:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:25:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:25:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:25:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:25:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:25:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:25:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:57 AI_Player.update()	update
2017-01-04 09:25:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:25:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 09:25:57 AI_Player.update()	Search took138ms
2017-01-04 09:25:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:25:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:57 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 09:25:57 AI_Player.update()		1010,	1001,	1001,	1100,	1100,	1010,	1001
2017-01-04 09:25:57 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 09:25:57 AI_Player.update()		1100,	1001,	110,	1100,	111,	1001,	1010
2017-01-04 09:25:57 AI_Player.update()		1110,	110,	1101,	111,	1011,	111,	1011
2017-01-04 09:25:57 AI_Player.update()		110,	1100,	11,	1101,	1110,	101,	101
2017-01-04 09:25:57 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-04 09:25:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:25:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:25:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:25:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:57 AI_Player.update()	update
2017-01-04 09:25:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:25:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:25:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 09:25:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:25:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:25:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:25:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:25:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:25:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:25:57 GameBoard.setupTreasurePanel()	4 5
2017-01-04 09:25:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:25:57 AI_Player.update()	update
2017-01-04 09:25:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
