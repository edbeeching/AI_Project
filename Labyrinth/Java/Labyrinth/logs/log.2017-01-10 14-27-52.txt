2017-01-10 14:27:52 GameBoard.<init>()	Hello World!
2017-01-10 14:27:52 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-10 14:27:52 QueryProlog.initialise()	setup(h5/h3). suceeded
2017-01-10 14:27:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:27:52 GameBoard.setupBoardFromString()	Board created
2017-01-10 14:27:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:27:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:27:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:27:52 GameBoard.initialise()	[chest, crown, gem, helmet, sword]
2017-01-10 14:27:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:27:52 GameBoard.initialise()	[candle, book, map, keys, ring]
2017-01-10 14:27:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:27:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:27:52 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-10 14:27:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:27:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	1 1
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	null
2017-01-10 14:27:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:27:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 14:27:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:27:52 AI_Player.update()	update
2017-01-10 14:27:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:27:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:27:52 AI_Player.update()	Search took240ms
2017-01-10 14:27:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:27:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:27:52 AI_Player.update()		110,	1100,	111,	1101,	111,	1101,	11
2017-01-10 14:27:52 AI_Player.update()		1010,	111,	111,	11,	1010,	1100,	110
2017-01-10 14:27:52 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-10 14:27:52 AI_Player.update()		1010,	110,	111,	101,	1001,	1010,	111
2017-01-10 14:27:52 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	11,	1011
2017-01-10 14:27:52 AI_Player.update()		1010,	1100,	101,	1010,	1010,	1101,	101
2017-01-10 14:27:52 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-10 14:27:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:27:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:27:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:27:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:27:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:27:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:27:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	1 1
2017-01-10 14:27:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:27:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 14:27:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 14:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:27:53 AI_Player.update()	update
2017-01-10 14:27:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:27:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:27:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:27:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:27:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:27:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:27:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:27:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:27:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:27:53 GameBoard.setupTreasurePanel()	1 1
2017-01-10 14:27:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:27:53 AI_Player.update()	update
2017-01-10 14:27:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:27:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:27:54 AI_Player.update()	Search took319ms
2017-01-10 14:27:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:27:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:27:54 AI_Player.update()		110,	111,	111,	1101,	111,	1101,	11
2017-01-10 14:27:54 AI_Player.update()		1010,	1100,	111,	11,	1010,	1100,	110
2017-01-10 14:27:54 AI_Player.update()		1110,	110,	1110,	1101,	111,	1010,	1011
2017-01-10 14:27:54 AI_Player.update()		1010,	1101,	111,	101,	1001,	1010,	111
2017-01-10 14:27:54 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-10 14:27:54 AI_Player.update()		1010,	1100,	101,	1010,	1010,	1101,	101
2017-01-10 14:27:54 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-10 14:27:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:27:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:27:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:27:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:27:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:27:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:27:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:27:54 GameBoard.setupTreasurePanel()	1 1
2017-01-10 14:27:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:27:54 AI_Player.update()	update
2017-01-10 14:27:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:27:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:27:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:27:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:27:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:27:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:27:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:27:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:27:54 GameBoard.setupTreasurePanel()	1 1
2017-01-10 14:27:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:27:55 AI_Player.update()	update
2017-01-10 14:27:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:27:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:27:56 AI_Player.update()	Search took1021ms
2017-01-10 14:27:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:27:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:27:56 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-10 14:27:56 AI_Player.update()		1010,	1100,	111,	1101,	1010,	1100,	110
2017-01-10 14:27:56 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-10 14:27:56 AI_Player.update()		1010,	1101,	111,	1101,	1001,	1010,	111
2017-01-10 14:27:56 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-10 14:27:56 AI_Player.update()		1010,	1100,	101,	1010,	1010,	1101,	101
2017-01-10 14:27:56 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:27:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:27:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:27:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:27:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:27:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:27:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:27:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	1 1
2017-01-10 14:27:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:27:56 AI_Player.update()	update
2017-01-10 14:27:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:27:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:27:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:27:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:27:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:27:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:27:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:27:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:27:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:27:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:27:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 14:27:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 14:27:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:27:57 AI_Player.update()	update
2017-01-10 14:27:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:27:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:27:58 AI_Player.update()	Search took862ms
2017-01-10 14:27:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:27:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:27:58 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-10 14:27:58 AI_Player.update()		1010,	1100,	111,	1101,	1010,	1100,	110
2017-01-10 14:27:58 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-10 14:27:58 AI_Player.update()		1101,	111,	1101,	1001,	1010,	111,	1010
2017-01-10 14:27:58 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-10 14:27:58 AI_Player.update()		1010,	1100,	101,	1010,	1010,	1101,	101
2017-01-10 14:27:58 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:27:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:27:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:27:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:27:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:27:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:27:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:27:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:27:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:27:58 AI_Player.update()	update
2017-01-10 14:27:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:27:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:27:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:27:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:27:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:27:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:27:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:27:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	2 2
2017-01-10 14:27:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:27:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 14:27:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 14:27:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:27:59 AI_Player.update()	update
2017-01-10 14:27:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:00 AI_Player.update()	Search took924ms
2017-01-10 14:28:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:00 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-10 14:28:00 AI_Player.update()		1010,	1100,	111,	1101,	1010,	1100,	110
2017-01-10 14:28:00 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-10 14:28:00 AI_Player.update()		1010,	1101,	111,	1101,	1001,	1010,	111
2017-01-10 14:28:00 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-10 14:28:00 AI_Player.update()		1010,	1100,	101,	1010,	1010,	1101,	101
2017-01-10 14:28:00 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:28:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	2 2
2017-01-10 14:28:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:00 AI_Player.update()	update
2017-01-10 14:28:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	3 2
2017-01-10 14:28:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 14:28:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 14:28:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:01 AI_Player.update()	update
2017-01-10 14:28:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:01 AI_Player.update()	Search took70ms
2017-01-10 14:28:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:01 AI_Player.update()		110,	1100,	111,	110,	111,	1101,	11
2017-01-10 14:28:01 AI_Player.update()		1010,	110,	111,	1101,	1010,	1100,	110
2017-01-10 14:28:01 AI_Player.update()		1110,	1101,	1110,	11,	111,	1010,	1011
2017-01-10 14:28:01 AI_Player.update()		1010,	1100,	111,	1101,	1001,	1010,	111
2017-01-10 14:28:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-10 14:28:01 AI_Player.update()		1010,	1100,	101,	1010,	1010,	1101,	101
2017-01-10 14:28:01 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:28:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:01 GameBoard.setupTreasurePanel()	3 2
2017-01-10 14:28:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:01 AI_Player.update()	update
2017-01-10 14:28:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:01 GameBoard.setupTreasurePanel()	3 2
2017-01-10 14:28:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:02 AI_Player.update()	update
2017-01-10 14:28:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:03 AI_Player.update()	Search took880ms
2017-01-10 14:28:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:03 AI_Player.update()		110,	1100,	111,	110,	111,	1101,	11
2017-01-10 14:28:03 AI_Player.update()		1010,	110,	111,	1101,	1010,	1100,	110
2017-01-10 14:28:03 AI_Player.update()		1110,	1101,	1110,	11,	111,	1010,	1011
2017-01-10 14:28:03 AI_Player.update()		1010,	1100,	111,	1101,	1001,	1010,	111
2017-01-10 14:28:03 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-10 14:28:03 AI_Player.update()		101,	1010,	1100,	101,	1010,	1010,	1101
2017-01-10 14:28:03 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:28:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	3 2
2017-01-10 14:28:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:03 AI_Player.update()	update
2017-01-10 14:28:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	4 2
2017-01-10 14:28:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 14:28:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 14:28:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:04 AI_Player.update()	update
2017-01-10 14:28:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:04 AI_Player.update()	Search took76ms
2017-01-10 14:28:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:04 AI_Player.update()		110,	110,	111,	110,	111,	1101,	11
2017-01-10 14:28:04 AI_Player.update()		1010,	1101,	111,	1101,	1010,	1100,	110
2017-01-10 14:28:04 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-10 14:28:04 AI_Player.update()		1010,	1100,	111,	1101,	1001,	1010,	111
2017-01-10 14:28:04 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-10 14:28:04 AI_Player.update()		101,	111,	1100,	101,	1010,	1010,	1101
2017-01-10 14:28:04 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:28:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:04 GameBoard.setupTreasurePanel()	4 2
2017-01-10 14:28:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:04 AI_Player.update()	update
2017-01-10 14:28:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:04 GameBoard.setupTreasurePanel()	4 2
2017-01-10 14:28:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:05 AI_Player.update()	update
2017-01-10 14:28:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:05 AI_Player.update()	Search took743ms
2017-01-10 14:28:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:05 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-10 14:28:05 AI_Player.update()		1010,	1100,	111,	1101,	1010,	1100,	110
2017-01-10 14:28:05 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-10 14:28:05 AI_Player.update()		1010,	1010,	111,	1101,	1001,	1010,	111
2017-01-10 14:28:05 AI_Player.update()		1110,	111,	1101,	101,	1011,	11,	1011
2017-01-10 14:28:05 AI_Player.update()		101,	1100,	1100,	101,	1010,	1010,	1101
2017-01-10 14:28:05 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:28:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:05 GameBoard.setupTreasurePanel()	4 2
2017-01-10 14:28:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:06 AI_Player.update()	update
2017-01-10 14:28:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	5 2
2017-01-10 14:28:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 14:28:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 14:28:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:06 AI_Player.update()	update
2017-01-10 14:28:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:07 AI_Player.update()	Search took168ms
2017-01-10 14:28:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:07 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-10 14:28:07 AI_Player.update()		1010,	1100,	111,	1101,	1010,	1100,	110
2017-01-10 14:28:07 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-10 14:28:07 AI_Player.update()		1010,	1010,	111,	1101,	1001,	1010,	111
2017-01-10 14:28:07 AI_Player.update()		1110,	111,	1101,	101,	1011,	11,	1011
2017-01-10 14:28:07 AI_Player.update()		1101,	101,	1100,	1100,	101,	1010,	1010
2017-01-10 14:28:07 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:28:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:07 GameBoard.setupTreasurePanel()	5 2
2017-01-10 14:28:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:07 AI_Player.update()	update
2017-01-10 14:28:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:07 GameBoard.setupTreasurePanel()	5 2
2017-01-10 14:28:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:08 AI_Player.update()	update
2017-01-10 14:28:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:08 AI_Player.update()	Search took839ms
2017-01-10 14:28:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:08 AI_Player.update()		110,	110,	111,	110,	111,	1101,	11
2017-01-10 14:28:08 AI_Player.update()		1010,	1101,	111,	1101,	1010,	1100,	110
2017-01-10 14:28:08 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-10 14:28:08 AI_Player.update()		1010,	1100,	111,	1101,	1001,	1010,	111
2017-01-10 14:28:08 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-10 14:28:08 AI_Player.update()		1101,	111,	1100,	1100,	101,	1010,	1010
2017-01-10 14:28:08 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:28:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:08 GameBoard.setupTreasurePanel()	5 2
2017-01-10 14:28:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:09 AI_Player.update()	update
2017-01-10 14:28:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	6 2
2017-01-10 14:28:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 14:28:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-10 14:28:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:09 AI_Player.update()	update
2017-01-10 14:28:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:10 AI_Player.update()	Search took631ms
2017-01-10 14:28:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:10 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-10 14:28:10 AI_Player.update()		1010,	1100,	111,	1101,	1010,	1100,	110
2017-01-10 14:28:10 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-10 14:28:10 AI_Player.update()		1010,	1010,	111,	1101,	1001,	1010,	111
2017-01-10 14:28:10 AI_Player.update()		1110,	111,	1101,	101,	1011,	11,	1011
2017-01-10 14:28:10 AI_Player.update()		1101,	101,	1100,	1100,	101,	1010,	1010
2017-01-10 14:28:10 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:28:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:10 GameBoard.setupTreasurePanel()	6 2
2017-01-10 14:28:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:11 AI_Player.update()	update
2017-01-10 14:28:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:11 GameBoard.setupTreasurePanel()	6 2
2017-01-10 14:28:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:11 AI_Player.update()	update
2017-01-10 14:28:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:12 AI_Player.update()	Search took725ms
2017-01-10 14:28:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:12 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-10 14:28:12 AI_Player.update()		110,	1010,	1100,	111,	1101,	1010,	1100
2017-01-10 14:28:12 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-10 14:28:12 AI_Player.update()		1010,	1010,	111,	1101,	1001,	1010,	111
2017-01-10 14:28:12 AI_Player.update()		1110,	111,	1101,	101,	1011,	11,	1011
2017-01-10 14:28:12 AI_Player.update()		1101,	101,	1100,	1100,	101,	1010,	1010
2017-01-10 14:28:12 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-10 14:28:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	6 2
2017-01-10 14:28:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:12 AI_Player.update()	update
2017-01-10 14:28:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:12 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-10 14:28:12 AI_Player.update()	Player a has won!
2017-01-10 14:28:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-10 14:28:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-10 14:28:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-10 14:28:12 QueryProlog.reset()	setup(h5/h3). suceeded
2017-01-10 14:28:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	1 1
2017-01-10 14:28:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:13 AI_Player.update()	update
2017-01-10 14:28:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:13 AI_Player.update()	Search took113ms
2017-01-10 14:28:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:13 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-10 14:28:13 AI_Player.update()		1010,	1100,	111,	1001,	110,	1001,	11
2017-01-10 14:28:13 AI_Player.update()		1110,	1011,	1110,	1010,	111,	11,	1011
2017-01-10 14:28:13 AI_Player.update()		110,	1010,	1100,	1010,	101,	1110,	11
2017-01-10 14:28:13 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-10 14:28:13 AI_Player.update()		101,	110,	111,	1001,	1100,	11,	1011
2017-01-10 14:28:13 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-10 14:28:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:13 GameBoard.setupTreasurePanel()	1 1
2017-01-10 14:28:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:14 AI_Player.update()	update
2017-01-10 14:28:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:14 AI_Player.update()	update
2017-01-10 14:28:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:14 AI_Player.update()	Search took30ms
2017-01-10 14:28:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:14 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-10 14:28:14 AI_Player.update()		1100,	111,	1001,	110,	1001,	11,	1010
2017-01-10 14:28:14 AI_Player.update()		1110,	1011,	1110,	1010,	111,	11,	1011
2017-01-10 14:28:14 AI_Player.update()		110,	1010,	1100,	1010,	101,	1110,	11
2017-01-10 14:28:14 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-10 14:28:14 AI_Player.update()		101,	110,	111,	1001,	1100,	11,	1011
2017-01-10 14:28:14 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-10 14:28:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:14 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:15 AI_Player.update()	update
2017-01-10 14:28:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:15 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:15 AI_Player.update()	update
2017-01-10 14:28:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:15 AI_Player.update()	Search took350ms
2017-01-10 14:28:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:15 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-10 14:28:15 AI_Player.update()		1100,	111,	1001,	110,	1001,	11,	1010
2017-01-10 14:28:15 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1110,	1011
2017-01-10 14:28:15 AI_Player.update()		110,	1010,	1100,	1010,	101,	101,	11
2017-01-10 14:28:15 AI_Player.update()		1110,	1110,	1101,	11,	1011,	11,	1011
2017-01-10 14:28:15 AI_Player.update()		101,	110,	111,	1001,	1100,	110,	1011
2017-01-10 14:28:15 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-10 14:28:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:15 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:16 AI_Player.update()	update
2017-01-10 14:28:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:16 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:16 AI_Player.update()	update
2017-01-10 14:28:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:17 AI_Player.update()	Search took123ms
2017-01-10 14:28:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:17 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-10 14:28:17 AI_Player.update()		1010,	1100,	111,	1001,	110,	1001,	11
2017-01-10 14:28:17 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1110,	1011
2017-01-10 14:28:17 AI_Player.update()		110,	1010,	1100,	1010,	101,	101,	11
2017-01-10 14:28:17 AI_Player.update()		1110,	1110,	1101,	11,	1011,	11,	1011
2017-01-10 14:28:17 AI_Player.update()		101,	110,	111,	1001,	1100,	110,	1011
2017-01-10 14:28:17 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-10 14:28:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:17 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:17 AI_Player.update()	update
2017-01-10 14:28:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:17 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:18 AI_Player.update()	update
2017-01-10 14:28:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:18 AI_Player.update()	Search took222ms
2017-01-10 14:28:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:18 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-10 14:28:18 AI_Player.update()		1010,	1100,	111,	1001,	110,	1001,	11
2017-01-10 14:28:18 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1110,	1011
2017-01-10 14:28:18 AI_Player.update()		110,	1010,	1100,	1010,	101,	101,	11
2017-01-10 14:28:18 AI_Player.update()		1110,	1110,	1101,	11,	1011,	11,	1011
2017-01-10 14:28:18 AI_Player.update()		110,	111,	1001,	1100,	110,	1011,	101
2017-01-10 14:28:18 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-10 14:28:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:18 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:18 AI_Player.update()	update
2017-01-10 14:28:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:18 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:19 AI_Player.update()	update
2017-01-10 14:28:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:19 AI_Player.update()	Search took97ms
2017-01-10 14:28:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:19 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-10 14:28:19 AI_Player.update()		1010,	1011,	111,	1001,	110,	1001,	11
2017-01-10 14:28:19 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-10 14:28:19 AI_Player.update()		110,	1110,	1100,	1010,	101,	101,	11
2017-01-10 14:28:19 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-10 14:28:19 AI_Player.update()		110,	110,	1001,	1100,	110,	1011,	101
2017-01-10 14:28:19 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-10 14:28:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:19 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:19 AI_Player.update()	update
2017-01-10 14:28:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:19 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:20 AI_Player.update()	update
2017-01-10 14:28:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:20 AI_Player.update()	Search took137ms
2017-01-10 14:28:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:20 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-10 14:28:20 AI_Player.update()		1010,	1100,	111,	1001,	110,	1001,	11
2017-01-10 14:28:20 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1110,	1011
2017-01-10 14:28:20 AI_Player.update()		110,	1010,	1100,	1010,	101,	101,	11
2017-01-10 14:28:20 AI_Player.update()		1110,	1110,	1101,	11,	1011,	11,	1011
2017-01-10 14:28:20 AI_Player.update()		110,	111,	1001,	1100,	110,	1011,	101
2017-01-10 14:28:20 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-10 14:28:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:20 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:21 AI_Player.update()	update
2017-01-10 14:28:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:21 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:21 AI_Player.update()	update
2017-01-10 14:28:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:21 AI_Player.update()	Search took92ms
2017-01-10 14:28:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:21 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-10 14:28:21 AI_Player.update()		1010,	1011,	111,	1001,	110,	1001,	11
2017-01-10 14:28:21 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-10 14:28:21 AI_Player.update()		110,	1110,	1100,	1010,	101,	101,	11
2017-01-10 14:28:21 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-10 14:28:21 AI_Player.update()		110,	110,	1001,	1100,	110,	1011,	101
2017-01-10 14:28:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-10 14:28:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:21 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:22 AI_Player.update()	update
2017-01-10 14:28:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:22 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:22 AI_Player.update()	update
2017-01-10 14:28:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:22 AI_Player.update()	Search took136ms
2017-01-10 14:28:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:22 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-10 14:28:22 AI_Player.update()		11,	1010,	1011,	111,	1001,	110,	1001
2017-01-10 14:28:22 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-10 14:28:22 AI_Player.update()		110,	1110,	1100,	1010,	101,	101,	11
2017-01-10 14:28:22 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-10 14:28:22 AI_Player.update()		110,	110,	1001,	1100,	110,	1011,	101
2017-01-10 14:28:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-10 14:28:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:22 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:23 AI_Player.update()	update
2017-01-10 14:28:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	3 1
2017-01-10 14:28:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:23 AI_Player.update()	update
2017-01-10 14:28:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:23 AI_Player.update()	Search took31ms
2017-01-10 14:28:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:23 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-10 14:28:23 AI_Player.update()		11,	1010,	1011,	111,	1001,	110,	1001
2017-01-10 14:28:23 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-10 14:28:23 AI_Player.update()		110,	1110,	1100,	1010,	101,	101,	11
2017-01-10 14:28:23 AI_Player.update()		1110,	111,	1101,	11,	1011,	11,	1011
2017-01-10 14:28:23 AI_Player.update()		110,	1001,	1100,	110,	1011,	101,	110
2017-01-10 14:28:23 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-10 14:28:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:23 GameBoard.setupTreasurePanel()	3 1
2017-01-10 14:28:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:24 AI_Player.update()	update
2017-01-10 14:28:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	3 2
2017-01-10 14:28:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:24 AI_Player.update()	update
2017-01-10 14:28:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:24 AI_Player.update()	Search took117ms
2017-01-10 14:28:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:24 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-10 14:28:24 AI_Player.update()		11,	1010,	1011,	111,	1001,	11,	1001
2017-01-10 14:28:24 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-10 14:28:24 AI_Player.update()		110,	1110,	1100,	1010,	101,	1110,	11
2017-01-10 14:28:24 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-10 14:28:24 AI_Player.update()		110,	1001,	1100,	110,	1011,	11,	110
2017-01-10 14:28:24 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-10 14:28:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:24 GameBoard.setupTreasurePanel()	3 2
2017-01-10 14:28:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:25 AI_Player.update()	update
2017-01-10 14:28:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:25 GameBoard.setupTreasurePanel()	3 2
2017-01-10 14:28:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:25 AI_Player.update()	update
2017-01-10 14:28:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:26 AI_Player.update()	Search took257ms
2017-01-10 14:28:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:26 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-10 14:28:26 AI_Player.update()		11,	1010,	1011,	111,	1001,	11,	1001
2017-01-10 14:28:26 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-10 14:28:26 AI_Player.update()		110,	111,	1100,	1010,	101,	1110,	11
2017-01-10 14:28:26 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-10 14:28:26 AI_Player.update()		110,	1100,	1100,	110,	1011,	11,	110
2017-01-10 14:28:26 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-10 14:28:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:26 GameBoard.setupTreasurePanel()	3 2
2017-01-10 14:28:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:26 AI_Player.update()	update
2017-01-10 14:28:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:26 GameBoard.setupTreasurePanel()	3 2
2017-01-10 14:28:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:27 AI_Player.update()	update
2017-01-10 14:28:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:27 AI_Player.update()	Search took169ms
2017-01-10 14:28:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:27 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-10 14:28:27 AI_Player.update()		11,	1010,	1011,	111,	1001,	11,	1001
2017-01-10 14:28:27 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-10 14:28:27 AI_Player.update()		11,	110,	111,	1100,	1010,	101,	1110
2017-01-10 14:28:27 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-10 14:28:27 AI_Player.update()		110,	1100,	1100,	110,	1011,	11,	110
2017-01-10 14:28:27 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-10 14:28:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	3 2
2017-01-10 14:28:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:27 AI_Player.update()	update
2017-01-10 14:28:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	4 2
2017-01-10 14:28:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:28 AI_Player.update()	update
2017-01-10 14:28:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:28 AI_Player.update()	Search took143ms
2017-01-10 14:28:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:28 AI_Player.update()		110,	1010,	111,	111,	111,	1001,	11
2017-01-10 14:28:28 AI_Player.update()		11,	1010,	1011,	1010,	1001,	11,	1001
2017-01-10 14:28:28 AI_Player.update()		1110,	1110,	1110,	1100,	111,	110,	1011
2017-01-10 14:28:28 AI_Player.update()		11,	110,	111,	11,	1010,	101,	1110
2017-01-10 14:28:28 AI_Player.update()		1110,	1001,	1101,	110,	1011,	101,	1011
2017-01-10 14:28:28 AI_Player.update()		110,	1100,	1100,	1010,	1011,	11,	110
2017-01-10 14:28:28 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-10 14:28:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:28 GameBoard.setupTreasurePanel()	4 2
2017-01-10 14:28:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:29 AI_Player.update()	update
2017-01-10 14:28:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:29 GameBoard.setupTreasurePanel()	4 2
2017-01-10 14:28:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:29 AI_Player.update()	update
2017-01-10 14:28:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:29 AI_Player.update()	Search took213ms
2017-01-10 14:28:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:29 AI_Player.update()		110,	1100,	111,	111,	111,	1001,	11
2017-01-10 14:28:29 AI_Player.update()		11,	1010,	1011,	1010,	1001,	11,	1001
2017-01-10 14:28:29 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-10 14:28:29 AI_Player.update()		11,	1110,	111,	11,	1010,	101,	1110
2017-01-10 14:28:29 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-10 14:28:29 AI_Player.update()		110,	1001,	1100,	1010,	1011,	11,	110
2017-01-10 14:28:29 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-10 14:28:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:29 GameBoard.setupTreasurePanel()	4 2
2017-01-10 14:28:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:30 AI_Player.update()	update
2017-01-10 14:28:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:30 GameBoard.setupTreasurePanel()	4 2
2017-01-10 14:28:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:30 AI_Player.update()	update
2017-01-10 14:28:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:30 AI_Player.update()	Search took65ms
2017-01-10 14:28:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:30 AI_Player.update()		110,	1100,	111,	111,	111,	1001,	11
2017-01-10 14:28:30 AI_Player.update()		11,	1010,	1011,	1010,	1001,	11,	1001
2017-01-10 14:28:30 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-10 14:28:30 AI_Player.update()		1110,	111,	11,	1010,	101,	1110,	11
2017-01-10 14:28:30 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-10 14:28:30 AI_Player.update()		110,	1001,	1100,	1010,	1011,	11,	110
2017-01-10 14:28:30 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-10 14:28:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:30 GameBoard.setupTreasurePanel()	4 2
2017-01-10 14:28:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:31 AI_Player.update()	update
2017-01-10 14:28:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	4 3
2017-01-10 14:28:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:31 AI_Player.update()	update
2017-01-10 14:28:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:32 AI_Player.update()	Search took325ms
2017-01-10 14:28:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:32 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-10 14:28:32 AI_Player.update()		11,	1010,	1011,	1100,	1001,	11,	1001
2017-01-10 14:28:32 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-10 14:28:32 AI_Player.update()		1110,	111,	11,	110,	101,	1110,	11
2017-01-10 14:28:32 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-10 14:28:32 AI_Player.update()		110,	1001,	1100,	101,	1011,	11,	110
2017-01-10 14:28:32 AI_Player.update()		1100,	1100,	1101,	111,	1101,	101,	1001
2017-01-10 14:28:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	4 3
2017-01-10 14:28:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:32 AI_Player.update()	update
2017-01-10 14:28:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	5 3
2017-01-10 14:28:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:33 AI_Player.update()	update
2017-01-10 14:28:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:33 AI_Player.update()	Search took130ms
2017-01-10 14:28:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:33 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-10 14:28:33 AI_Player.update()		11,	1010,	1011,	1100,	1001,	11,	1001
2017-01-10 14:28:33 AI_Player.update()		1110,	111,	1110,	1010,	111,	110,	1011
2017-01-10 14:28:33 AI_Player.update()		1110,	110,	11,	110,	101,	1110,	11
2017-01-10 14:28:33 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-10 14:28:33 AI_Player.update()		110,	1100,	1100,	101,	1011,	11,	110
2017-01-10 14:28:33 AI_Player.update()		1100,	1100,	1101,	111,	1101,	101,	1001
2017-01-10 14:28:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:33 GameBoard.setupTreasurePanel()	5 3
2017-01-10 14:28:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:33 AI_Player.update()	update
2017-01-10 14:28:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:33 GameBoard.setupTreasurePanel()	5 3
2017-01-10 14:28:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:34 AI_Player.update()	update
2017-01-10 14:28:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:34 AI_Player.update()	Search took251ms
2017-01-10 14:28:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:34 AI_Player.update()		110,	1010,	111,	1100,	111,	1001,	11
2017-01-10 14:28:34 AI_Player.update()		11,	1010,	1011,	1010,	1001,	11,	1001
2017-01-10 14:28:34 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-10 14:28:34 AI_Player.update()		1110,	110,	11,	1010,	101,	1110,	11
2017-01-10 14:28:34 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-10 14:28:34 AI_Player.update()		110,	1100,	1100,	111,	1011,	11,	110
2017-01-10 14:28:34 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-10 14:28:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:34 GameBoard.setupTreasurePanel()	5 3
2017-01-10 14:28:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:35 AI_Player.update()	update
2017-01-10 14:28:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	6 3
2017-01-10 14:28:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:35 AI_Player.update()	update
2017-01-10 14:28:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:35 AI_Player.update()	Search took151ms
2017-01-10 14:28:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:35 AI_Player.update()		110,	1010,	111,	1100,	111,	1001,	11
2017-01-10 14:28:35 AI_Player.update()		11,	1010,	1011,	1010,	1001,	11,	1001
2017-01-10 14:28:35 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-10 14:28:35 AI_Player.update()		110,	11,	1010,	101,	1110,	11,	1110
2017-01-10 14:28:35 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-10 14:28:35 AI_Player.update()		110,	1100,	1100,	111,	1011,	11,	110
2017-01-10 14:28:35 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-10 14:28:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:35 GameBoard.setupTreasurePanel()	6 3
2017-01-10 14:28:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:36 AI_Player.update()	update
2017-01-10 14:28:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	6 4
2017-01-10 14:28:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:36 AI_Player.update()	update
2017-01-10 14:28:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:37 AI_Player.update()	Search took687ms
2017-01-10 14:28:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:37 AI_Player.update()		110,	1010,	111,	1100,	111,	1001,	11
2017-01-10 14:28:37 AI_Player.update()		11,	111,	1011,	1010,	1001,	11,	1001
2017-01-10 14:28:37 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-10 14:28:37 AI_Player.update()		110,	1001,	1010,	101,	1110,	11,	1110
2017-01-10 14:28:37 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-10 14:28:37 AI_Player.update()		110,	1100,	1100,	111,	1011,	11,	110
2017-01-10 14:28:37 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-10 14:28:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:37 GameBoard.setupTreasurePanel()	6 4
2017-01-10 14:28:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:37 AI_Player.update()	update
2017-01-10 14:28:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:37 GameBoard.setupTreasurePanel()	6 4
2017-01-10 14:28:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:38 AI_Player.update()	update
2017-01-10 14:28:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:39 AI_Player.update()	Search took665ms
2017-01-10 14:28:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:39 AI_Player.update()		110,	111,	111,	1100,	111,	1001,	11
2017-01-10 14:28:39 AI_Player.update()		11,	11,	1011,	1010,	1001,	11,	1001
2017-01-10 14:28:39 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-10 14:28:39 AI_Player.update()		110,	1100,	1010,	101,	1110,	11,	1110
2017-01-10 14:28:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-10 14:28:39 AI_Player.update()		110,	1010,	1100,	111,	1011,	11,	110
2017-01-10 14:28:39 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-10 14:28:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	6 4
2017-01-10 14:28:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:39 AI_Player.update()	update
2017-01-10 14:28:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	6 5
2017-01-10 14:28:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:40 AI_Player.update()	update
2017-01-10 14:28:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:40 AI_Player.update()	Search took621ms
2017-01-10 14:28:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:40 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-10 14:28:40 AI_Player.update()		11,	11,	1011,	110,	1001,	11,	1001
2017-01-10 14:28:40 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-10 14:28:40 AI_Player.update()		110,	1100,	1010,	101,	1110,	11,	1110
2017-01-10 14:28:40 AI_Player.update()		1110,	1100,	1101,	111,	1011,	101,	1011
2017-01-10 14:28:40 AI_Player.update()		110,	1010,	1100,	1010,	1011,	11,	110
2017-01-10 14:28:40 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-10 14:28:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:40 GameBoard.setupTreasurePanel()	6 5
2017-01-10 14:28:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:41 AI_Player.update()	update
2017-01-10 14:28:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:41 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-10 14:28:41 AI_Player.update()	Player a has won!
2017-01-10 14:28:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-10 14:28:41 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-10 14:28:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-10 14:28:41 QueryProlog.reset()	setup(h5/h3). suceeded
2017-01-10 14:28:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	1 1
2017-01-10 14:28:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:41 AI_Player.update()	update
2017-01-10 14:28:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:42 AI_Player.update()	Search took345ms
2017-01-10 14:28:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:42 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-10 14:28:42 AI_Player.update()		1110,	1001,	101,	1010,	1010,	111,	1101
2017-01-10 14:28:42 AI_Player.update()		1110,	1001,	1110,	1001,	111,	11,	1011
2017-01-10 14:28:42 AI_Player.update()		1010,	11,	1100,	1100,	110,	1110,	111
2017-01-10 14:28:42 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1011,	1011
2017-01-10 14:28:42 AI_Player.update()		11,	1010,	1010,	11,	110,	1010,	1011
2017-01-10 14:28:42 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-10 14:28:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	1 1
2017-01-10 14:28:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:42 AI_Player.update()	update
2017-01-10 14:28:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	adding map
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	adding book
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-10 14:28:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-10 14:28:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-10 14:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:43 AI_Player.update()	update
2017-01-10 14:28:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:43 AI_Player.update()	Search took74ms
2017-01-10 14:28:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:43 AI_Player.update()		110,	101,	111,	110,	111,	111,	11
2017-01-10 14:28:43 AI_Player.update()		1110,	1001,	101,	1010,	1010,	11,	1101
2017-01-10 14:28:43 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1110,	1011
2017-01-10 14:28:43 AI_Player.update()		1010,	11,	1100,	1100,	110,	1011,	111
2017-01-10 14:28:43 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-10 14:28:43 AI_Player.update()		11,	1010,	1010,	11,	110,	1010,	1011
2017-01-10 14:28:43 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-10 14:28:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:43 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:43 AI_Player.update()	update
2017-01-10 14:28:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-10 14:28:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-10 14:28:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-10 14:28:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:43 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:44 AI_Player.update()	update
2017-01-10 14:28:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-10 14:28:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h5). suceeded
2017-01-10 14:28:44 AI_Player.update()	Search took277ms
2017-01-10 14:28:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:44 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-10 14:28:44 AI_Player.update()		1110,	1001,	101,	110,	1010,	11,	1101
2017-01-10 14:28:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-10 14:28:44 AI_Player.update()		1010,	11,	1100,	1001,	110,	1011,	111
2017-01-10 14:28:44 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-10 14:28:44 AI_Player.update()		11,	1010,	1010,	1110,	110,	1010,	1011
2017-01-10 14:28:44 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-10 14:28:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:44 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:45 AI_Player.update()	update
2017-01-10 14:28:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-10 14:28:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-10 14:28:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h5). suceeded
2017-01-10 14:28:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-10 14:28:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-10 14:28:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:45 GameBoard.setupTreasurePanel()	2 1
2017-01-10 14:28:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-10 14:28:45 AI_Player.update()	update
2017-01-10 14:28:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-10 14:28:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-10 14:28:45 AI_Player.update()	Search took110ms
2017-01-10 14:28:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-10 14:28:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:45 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-10 14:28:45 AI_Player.update()		1110,	1001,	101,	110,	1010,	11,	1101
2017-01-10 14:28:45 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-10 14:28:45 AI_Player.update()		111,	1010,	11,	1100,	1001,	110,	1011
2017-01-10 14:28:45 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-10 14:28:45 AI_Player.update()		11,	1010,	1010,	1110,	110,	1010,	1011
2017-01-10 14:28:45 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-10 14:28:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-10 14:28:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-10 14:28:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-10 14:28:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-10 14:28:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-10 14:28:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-10 14:28:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-10 14:28:45 GameBoard.setupTreasurePanel()	2 1
