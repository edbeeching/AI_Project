2017-01-09 18:23:05 GameBoard.<init>()	Hello World!
2017-01-09 18:23:05 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-09 18:23:05 QueryProlog.initialise()	setup(h2/h5). suceeded
2017-01-09 18:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:05 GameBoard.setupBoardFromString()	Board created
2017-01-09 18:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:05 GameBoard.initialise()	[crown, ring, keys, sword, map]
2017-01-09 18:23:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:05 GameBoard.initialise()	[helmet, gem, fairy, candle, chest]
2017-01-09 18:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:05 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-09 18:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	null
2017-01-09 18:23:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:05 AI_Player.update()	update
2017-01-09 18:23:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:05 AI_Player.update()	Search took27ms
2017-01-09 18:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:05 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-09 18:23:05 AI_Player.update()		11,	110,	1100,	101,	11,	11,	101
2017-01-09 18:23:05 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-09 18:23:05 AI_Player.update()		101,	1110,	1001,	1100,	1010,	101,	1001
2017-01-09 18:23:05 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:05 AI_Player.update()		111,	101,	1010,	1001,	101,	1100,	1001
2017-01-09 18:23:05 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1101,	1001
2017-01-09 18:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:05 AI_Player.update()	update
2017-01-09 18:23:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:05 AI_Player.update()	update
2017-01-09 18:23:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:05 AI_Player.update()	Search took41ms
2017-01-09 18:23:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:05 AI_Player.update()		110,	110,	111,	1010,	111,	11,	11
2017-01-09 18:23:05 AI_Player.update()		11,	110,	1100,	101,	11,	1010,	101
2017-01-09 18:23:05 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-09 18:23:05 AI_Player.update()		101,	1110,	1001,	1100,	1010,	101,	1001
2017-01-09 18:23:05 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-09 18:23:05 AI_Player.update()		111,	101,	1010,	1001,	101,	1101,	1001
2017-01-09 18:23:05 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1010,	1001
2017-01-09 18:23:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:05 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:06 AI_Player.update()	update
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:06 AI_Player.update()	update
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:06 AI_Player.update()	Search took29ms
2017-01-09 18:23:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:06 AI_Player.update()		110,	1101,	111,	1010,	111,	11,	11
2017-01-09 18:23:06 AI_Player.update()		11,	110,	1100,	101,	11,	1010,	101
2017-01-09 18:23:06 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-09 18:23:06 AI_Player.update()		101,	1010,	1001,	1100,	1010,	101,	1001
2017-01-09 18:23:06 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1100,	1011
2017-01-09 18:23:06 AI_Player.update()		111,	1010,	1010,	1001,	101,	1101,	1001
2017-01-09 18:23:06 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-09 18:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:06 AI_Player.update()	update
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:06 AI_Player.update()	update
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:06 AI_Player.update()	Search took50ms
2017-01-09 18:23:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:06 AI_Player.update()		110,	1101,	111,	1010,	111,	11,	11
2017-01-09 18:23:06 AI_Player.update()		101,	11,	110,	1100,	101,	11,	1010
2017-01-09 18:23:06 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-09 18:23:06 AI_Player.update()		101,	1010,	1001,	1100,	1010,	101,	1001
2017-01-09 18:23:06 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1100,	1011
2017-01-09 18:23:06 AI_Player.update()		111,	1010,	1010,	1001,	101,	1101,	1001
2017-01-09 18:23:06 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-09 18:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:06 AI_Player.update()	update
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:23:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:06 AI_Player.update()	update
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:06 AI_Player.update()	Search took132ms
2017-01-09 18:23:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:06 AI_Player.update()		110,	1101,	111,	1010,	111,	11,	11
2017-01-09 18:23:06 AI_Player.update()		1010,	101,	11,	110,	1100,	101,	11
2017-01-09 18:23:06 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-09 18:23:06 AI_Player.update()		101,	1010,	1001,	1100,	1010,	101,	1001
2017-01-09 18:23:06 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1100,	1011
2017-01-09 18:23:06 AI_Player.update()		111,	1010,	1010,	1001,	101,	1101,	1001
2017-01-09 18:23:06 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-09 18:23:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:23:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:06 AI_Player.update()	update
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:06 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:07 AI_Player.update()	update
2017-01-09 18:23:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:07 AI_Player.update()	Search took411ms
2017-01-09 18:23:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:07 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-09 18:23:07 AI_Player.update()		1010,	101,	11,	110,	1100,	11,	11
2017-01-09 18:23:07 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-09 18:23:07 AI_Player.update()		101,	1010,	1001,	1100,	1010,	101,	1001
2017-01-09 18:23:07 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:07 AI_Player.update()		111,	1010,	1010,	1001,	101,	1100,	1001
2017-01-09 18:23:07 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1101,	1001
2017-01-09 18:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:07 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:07 AI_Player.update()	update
2017-01-09 18:23:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:07 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:23:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:07 AI_Player.update()	update
2017-01-09 18:23:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:07 AI_Player.update()	Search took202ms
2017-01-09 18:23:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:07 AI_Player.update()		110,	1101,	111,	1110,	111,	1010,	11
2017-01-09 18:23:07 AI_Player.update()		1010,	101,	11,	1010,	1100,	11,	11
2017-01-09 18:23:07 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-09 18:23:07 AI_Player.update()		101,	1010,	1001,	1010,	1010,	101,	1001
2017-01-09 18:23:07 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	101,	1011
2017-01-09 18:23:07 AI_Player.update()		111,	1010,	1010,	1001,	101,	1100,	1001
2017-01-09 18:23:07 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1101,	1001
2017-01-09 18:23:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:07 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:08 AI_Player.update()	update
2017-01-09 18:23:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:08 AI_Player.update()	update
2017-01-09 18:23:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:08 AI_Player.update()	Search took319ms
2017-01-09 18:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:08 AI_Player.update()		110,	101,	111,	1110,	111,	1010,	11
2017-01-09 18:23:08 AI_Player.update()		1010,	110,	11,	1010,	1100,	11,	11
2017-01-09 18:23:08 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-09 18:23:08 AI_Player.update()		101,	1110,	1001,	1010,	1010,	101,	1001
2017-01-09 18:23:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-09 18:23:08 AI_Player.update()		111,	101,	1010,	1001,	101,	1100,	1001
2017-01-09 18:23:08 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1101,	1001
2017-01-09 18:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:08 AI_Player.update()	update
2017-01-09 18:23:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:08 AI_Player.update()	update
2017-01-09 18:23:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:08 AI_Player.update()	Search took151ms
2017-01-09 18:23:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-09 18:23:08 AI_Player.update()		1010,	110,	11,	110,	1100,	11,	11
2017-01-09 18:23:08 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-09 18:23:08 AI_Player.update()		101,	1110,	1001,	1100,	1010,	101,	1001
2017-01-09 18:23:08 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:08 AI_Player.update()		111,	101,	1010,	1001,	101,	1100,	1001
2017-01-09 18:23:08 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1101,	1001
2017-01-09 18:23:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:23:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:08 AI_Player.update()	update
2017-01-09 18:23:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:09 AI_Player.update()	update
2017-01-09 18:23:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:09 AI_Player.update()	Search took171ms
2017-01-09 18:23:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-09 18:23:09 AI_Player.update()		1010,	110,	11,	110,	1100,	11,	11
2017-01-09 18:23:09 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-09 18:23:09 AI_Player.update()		1110,	1001,	1100,	1010,	101,	1001,	101
2017-01-09 18:23:09 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:09 AI_Player.update()		111,	101,	1010,	1001,	101,	1100,	1001
2017-01-09 18:23:09 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1101,	1001
2017-01-09 18:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:09 AI_Player.update()	update
2017-01-09 18:23:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:09 AI_Player.update()	update
2017-01-09 18:23:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:09 AI_Player.update()	Search took72ms
2017-01-09 18:23:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:09 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-09 18:23:09 AI_Player.update()		1010,	101,	11,	110,	1100,	11,	11
2017-01-09 18:23:09 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-09 18:23:09 AI_Player.update()		1110,	1010,	1100,	1010,	101,	1001,	101
2017-01-09 18:23:09 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:09 AI_Player.update()		111,	1010,	1010,	1001,	101,	1100,	1001
2017-01-09 18:23:09 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1101,	1001
2017-01-09 18:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:09 AI_Player.update()	update
2017-01-09 18:23:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:09 AI_Player.update()	update
2017-01-09 18:23:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:09 AI_Player.update()	Search took110ms
2017-01-09 18:23:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:09 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-09 18:23:09 AI_Player.update()		1010,	101,	11,	110,	1100,	11,	11
2017-01-09 18:23:09 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-09 18:23:09 AI_Player.update()		101,	1110,	1010,	1100,	1010,	101,	1001
2017-01-09 18:23:09 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:09 AI_Player.update()		111,	1010,	1010,	1001,	101,	1100,	1001
2017-01-09 18:23:09 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1101,	1001
2017-01-09 18:23:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:09 AI_Player.update()	update
2017-01-09 18:23:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:09 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:10 AI_Player.update()	update
2017-01-09 18:23:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:10 AI_Player.update()	Search took75ms
2017-01-09 18:23:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-09 18:23:10 AI_Player.update()		1010,	1101,	11,	110,	1100,	11,	11
2017-01-09 18:23:10 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-09 18:23:10 AI_Player.update()		101,	110,	1010,	1100,	1010,	101,	1001
2017-01-09 18:23:10 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:10 AI_Player.update()		111,	1001,	1010,	1001,	101,	1100,	1001
2017-01-09 18:23:10 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1101,	1001
2017-01-09 18:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:10 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:10 AI_Player.update()	update
2017-01-09 18:23:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:10 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:10 AI_Player.update()	update
2017-01-09 18:23:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:10 AI_Player.update()	Search took254ms
2017-01-09 18:23:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:10 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-09 18:23:10 AI_Player.update()		1010,	1101,	11,	1010,	1100,	11,	11
2017-01-09 18:23:10 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:10 AI_Player.update()		101,	110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:10 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:10 AI_Player.update()		111,	1001,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:10 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:10 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:10 AI_Player.update()	update
2017-01-09 18:23:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:10 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:10 AI_Player.update()	update
2017-01-09 18:23:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:10 AI_Player.update()	Search took155ms
2017-01-09 18:23:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:10 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-09 18:23:10 AI_Player.update()		1010,	1101,	11,	1010,	1100,	11,	11
2017-01-09 18:23:10 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:10 AI_Player.update()		101,	110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:10 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:10 AI_Player.update()		1001,	111,	1001,	1010,	1110,	101,	1100
2017-01-09 18:23:10 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:10 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:11 AI_Player.update()	update
2017-01-09 18:23:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	3 3
2017-01-09 18:23:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:11 AI_Player.update()	update
2017-01-09 18:23:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:11 AI_Player.update()	Search took95ms
2017-01-09 18:23:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:11 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-09 18:23:11 AI_Player.update()		1010,	1101,	11,	1010,	1100,	11,	11
2017-01-09 18:23:11 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:11 AI_Player.update()		101,	110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:11 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:11 AI_Player.update()		111,	1001,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:11 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	3 3
2017-01-09 18:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:11 AI_Player.update()	update
2017-01-09 18:23:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	3 3
2017-01-09 18:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:11 AI_Player.update()	update
2017-01-09 18:23:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:11 AI_Player.update()	Search took322ms
2017-01-09 18:23:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:11 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-09 18:23:11 AI_Player.update()		1010,	101,	11,	1010,	1100,	11,	11
2017-01-09 18:23:11 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:11 AI_Player.update()		101,	1110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:11 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:11 AI_Player.update()		111,	1010,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	3 3
2017-01-09 18:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:11 AI_Player.update()	update
2017-01-09 18:23:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:11 GameBoard.setupTreasurePanel()	3 3
2017-01-09 18:23:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:11 AI_Player.update()	update
2017-01-09 18:23:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:12 AI_Player.update()	Search took144ms
2017-01-09 18:23:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:12 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-09 18:23:12 AI_Player.update()		1010,	101,	11,	1100,	1100,	11,	11
2017-01-09 18:23:12 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-09 18:23:12 AI_Player.update()		101,	1110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:12 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	101,	1011
2017-01-09 18:23:12 AI_Player.update()		111,	1010,	1010,	1010,	101,	1100,	1001
2017-01-09 18:23:12 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-09 18:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	3 3
2017-01-09 18:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:12 AI_Player.update()	update
2017-01-09 18:23:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:12 AI_Player.update()	update
2017-01-09 18:23:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:12 AI_Player.update()	Search took75ms
2017-01-09 18:23:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:12 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-09 18:23:12 AI_Player.update()		1010,	101,	11,	1010,	1100,	11,	11
2017-01-09 18:23:12 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:12 AI_Player.update()		101,	1110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:12 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:12 AI_Player.update()		111,	1010,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:12 AI_Player.update()	update
2017-01-09 18:23:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:12 AI_Player.update()	update
2017-01-09 18:23:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:12 AI_Player.update()	Search took111ms
2017-01-09 18:23:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:12 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-09 18:23:12 AI_Player.update()		11,	1010,	101,	11,	1010,	1100,	11
2017-01-09 18:23:12 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:12 AI_Player.update()		101,	1110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:12 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:12 AI_Player.update()		111,	1010,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:12 AI_Player.update()	update
2017-01-09 18:23:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:12 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:12 AI_Player.update()	update
2017-01-09 18:23:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:13 AI_Player.update()	Search took79ms
2017-01-09 18:23:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:13 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-09 18:23:13 AI_Player.update()		1010,	101,	11,	1010,	1100,	11,	11
2017-01-09 18:23:13 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:13 AI_Player.update()		101,	1110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:13 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:13 AI_Player.update()		111,	1010,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:13 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:13 AI_Player.update()	update
2017-01-09 18:23:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:13 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:13 AI_Player.update()	update
2017-01-09 18:23:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:13 AI_Player.update()	Search took154ms
2017-01-09 18:23:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:13 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-09 18:23:13 AI_Player.update()		11,	1010,	101,	11,	1010,	1100,	11
2017-01-09 18:23:13 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:13 AI_Player.update()		101,	1110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:13 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:13 AI_Player.update()		111,	1010,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:13 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:13 AI_Player.update()	update
2017-01-09 18:23:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:13 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:13 AI_Player.update()	update
2017-01-09 18:23:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:13 AI_Player.update()	Search took86ms
2017-01-09 18:23:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:13 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-09 18:23:13 AI_Player.update()		1010,	101,	11,	1010,	1100,	11,	11
2017-01-09 18:23:13 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:13 AI_Player.update()		101,	1110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:13 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:13 AI_Player.update()		111,	1010,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:13 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:13 AI_Player.update()	update
2017-01-09 18:23:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:13 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:13 AI_Player.update()	update
2017-01-09 18:23:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:14 AI_Player.update()	Search took150ms
2017-01-09 18:23:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-09 18:23:14 AI_Player.update()		11,	1010,	101,	11,	1010,	1100,	11
2017-01-09 18:23:14 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:14 AI_Player.update()		101,	1110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:14 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-09 18:23:14 AI_Player.update()		111,	1010,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:14 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()	update
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()	update
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:14 AI_Player.update()	Search took47ms
2017-01-09 18:23:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-09 18:23:14 AI_Player.update()		11,	1010,	101,	1100,	1010,	1100,	11
2017-01-09 18:23:14 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-09 18:23:14 AI_Player.update()		101,	1110,	1010,	1001,	1010,	101,	1001
2017-01-09 18:23:14 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	101,	1011
2017-01-09 18:23:14 AI_Player.update()		111,	1010,	1010,	1010,	101,	1100,	1001
2017-01-09 18:23:14 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-09 18:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()	update
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()	update
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:14 AI_Player.update()	Search took90ms
2017-01-09 18:23:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-09 18:23:14 AI_Player.update()		11,	1010,	101,	1100,	1010,	1100,	11
2017-01-09 18:23:14 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-09 18:23:14 AI_Player.update()		1110,	1010,	1001,	1010,	101,	1001,	101
2017-01-09 18:23:14 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	101,	1011
2017-01-09 18:23:14 AI_Player.update()		111,	1010,	1010,	1010,	101,	1100,	1001
2017-01-09 18:23:14 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-09 18:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()	update
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()	update
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:14 AI_Player.update()	Search took80ms
2017-01-09 18:23:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-09 18:23:14 AI_Player.update()		1010,	101,	1100,	1010,	1100,	11,	11
2017-01-09 18:23:14 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-09 18:23:14 AI_Player.update()		1110,	1010,	1001,	1010,	101,	1001,	101
2017-01-09 18:23:14 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	101,	1011
2017-01-09 18:23:14 AI_Player.update()		111,	1010,	1010,	1010,	101,	1100,	1001
2017-01-09 18:23:14 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-09 18:23:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:14 AI_Player.update()	update
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	4 4
2017-01-09 18:23:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:15 AI_Player.update()	update
2017-01-09 18:23:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:15 AI_Player.update()	Search took406ms
2017-01-09 18:23:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:15 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-09 18:23:15 AI_Player.update()		1010,	101,	1100,	1010,	1100,	11,	11
2017-01-09 18:23:15 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-09 18:23:15 AI_Player.update()		1010,	1001,	1010,	101,	1001,	101,	1110
2017-01-09 18:23:15 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	101,	1011
2017-01-09 18:23:15 AI_Player.update()		111,	1010,	1010,	1010,	101,	1100,	1001
2017-01-09 18:23:15 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-09 18:23:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	4 4
2017-01-09 18:23:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:15 AI_Player.update()	update
2017-01-09 18:23:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	4 5
2017-01-09 18:23:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:15 AI_Player.update()	update
2017-01-09 18:23:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:16 AI_Player.update()	Search took475ms
2017-01-09 18:23:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:16 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-09 18:23:16 AI_Player.update()		1010,	110,	1100,	1010,	1100,	11,	11
2017-01-09 18:23:16 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-09 18:23:16 AI_Player.update()		1010,	1001,	1010,	101,	1001,	101,	1110
2017-01-09 18:23:16 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	101,	1011
2017-01-09 18:23:16 AI_Player.update()		111,	101,	1010,	1010,	101,	1100,	1001
2017-01-09 18:23:16 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1101,	1001
2017-01-09 18:23:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	4 5
2017-01-09 18:23:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:16 AI_Player.update()	update
2017-01-09 18:23:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:16 AI_Player.update()	update
2017-01-09 18:23:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:16 AI_Player.update()	Search took387ms
2017-01-09 18:23:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:16 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-09 18:23:16 AI_Player.update()		1010,	1001,	1100,	1010,	1100,	11,	11
2017-01-09 18:23:16 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-09 18:23:16 AI_Player.update()		1010,	1010,	1010,	101,	1001,	101,	1110
2017-01-09 18:23:16 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-09 18:23:16 AI_Player.update()		111,	1101,	1010,	1010,	101,	1100,	1001
2017-01-09 18:23:16 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-09 18:23:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:16 AI_Player.update()	update
2017-01-09 18:23:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:16 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:16 AI_Player.update()	update
2017-01-09 18:23:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:17 AI_Player.update()	Search took428ms
2017-01-09 18:23:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:17 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-09 18:23:17 AI_Player.update()		1001,	1100,	1010,	1100,	11,	11,	1010
2017-01-09 18:23:17 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-09 18:23:17 AI_Player.update()		1010,	1010,	1010,	101,	1001,	101,	1110
2017-01-09 18:23:17 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-09 18:23:17 AI_Player.update()		111,	1101,	1010,	1010,	101,	1100,	1001
2017-01-09 18:23:17 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-09 18:23:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:17 AI_Player.update()	update
2017-01-09 18:23:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	6 5
2017-01-09 18:23:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:17 AI_Player.update()	update
2017-01-09 18:23:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:18 AI_Player.update()	Search took413ms
2017-01-09 18:23:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:18 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-09 18:23:18 AI_Player.update()		1001,	1100,	1010,	11,	11,	11,	1010
2017-01-09 18:23:18 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:18 AI_Player.update()		1010,	1010,	1010,	1001,	1001,	101,	1110
2017-01-09 18:23:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-09 18:23:18 AI_Player.update()		111,	1101,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:18 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	6 5
2017-01-09 18:23:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:18 AI_Player.update()	update
2017-01-09 18:23:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	6 6
2017-01-09 18:23:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:18 AI_Player.update()	update
2017-01-09 18:23:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:18 AI_Player.update()	Search took471ms
2017-01-09 18:23:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:18 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-09 18:23:18 AI_Player.update()		1010,	1001,	1100,	1010,	11,	11,	11
2017-01-09 18:23:18 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-09 18:23:18 AI_Player.update()		1010,	1010,	1010,	1001,	1001,	101,	1110
2017-01-09 18:23:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-09 18:23:18 AI_Player.update()		111,	1101,	1010,	1110,	101,	1100,	1001
2017-01-09 18:23:18 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-09 18:23:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:18 GameBoard.setupTreasurePanel()	6 6
2017-01-09 18:23:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:18 AI_Player.update()	update
2017-01-09 18:23:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:18 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-09 18:23:18 AI_Player.update()	Player a has won!
2017-01-09 18:23:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 18:23:20 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-09 18:23:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 18:23:20 QueryProlog.reset()	setup(h2/h5). suceeded
2017-01-09 18:23:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:20 AI_Player.update()	update
2017-01-09 18:23:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:20 AI_Player.update()	Search took303ms
2017-01-09 18:23:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:20 AI_Player.update()		110,	1001,	111,	1101,	111,	1001,	11
2017-01-09 18:23:20 AI_Player.update()		1010,	1110,	101,	101,	11,	1001,	1001
2017-01-09 18:23:20 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-09 18:23:20 AI_Player.update()		1010,	101,	11,	110,	1100,	1011,	1010
2017-01-09 18:23:20 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-09 18:23:20 AI_Player.update()		1100,	1011,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:20 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-09 18:23:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:20 AI_Player.update()	update
2017-01-09 18:23:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	2 1
2017-01-09 18:23:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:20 AI_Player.update()	update
2017-01-09 18:23:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:20 AI_Player.update()	Search took53ms
2017-01-09 18:23:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:20 AI_Player.update()		110,	1001,	111,	1101,	111,	1001,	11
2017-01-09 18:23:20 AI_Player.update()		1110,	101,	101,	11,	1001,	1001,	1010
2017-01-09 18:23:20 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-09 18:23:20 AI_Player.update()		1010,	101,	11,	110,	1100,	1011,	1010
2017-01-09 18:23:20 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-09 18:23:20 AI_Player.update()		1100,	1011,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:20 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-09 18:23:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	2 1
2017-01-09 18:23:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:20 AI_Player.update()	update
2017-01-09 18:23:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:20 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:21 AI_Player.update()	update
2017-01-09 18:23:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:21 AI_Player.update()	Search took401ms
2017-01-09 18:23:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:21 AI_Player.update()		110,	1001,	111,	11,	111,	1001,	11
2017-01-09 18:23:21 AI_Player.update()		1110,	101,	101,	11,	1001,	1001,	1010
2017-01-09 18:23:21 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-09 18:23:21 AI_Player.update()		1010,	101,	11,	1011,	1100,	1011,	1010
2017-01-09 18:23:21 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:21 AI_Player.update()		1100,	1011,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:21 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:21 AI_Player.update()	update
2017-01-09 18:23:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:21 AI_Player.update()	update
2017-01-09 18:23:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:21 AI_Player.update()	Search took196ms
2017-01-09 18:23:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:21 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-09 18:23:21 AI_Player.update()		1110,	101,	101,	11,	1001,	1001,	1010
2017-01-09 18:23:21 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-09 18:23:21 AI_Player.update()		1010,	101,	11,	1011,	1100,	1010,	1010
2017-01-09 18:23:21 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-09 18:23:21 AI_Player.update()		1100,	1011,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:21 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1010,	1001
2017-01-09 18:23:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:21 AI_Player.update()	update
2017-01-09 18:23:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:21 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:22 AI_Player.update()	update
2017-01-09 18:23:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:22 AI_Player.update()	Search took168ms
2017-01-09 18:23:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:22 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-09 18:23:22 AI_Player.update()		1110,	101,	101,	11,	1001,	1001,	1010
2017-01-09 18:23:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-09 18:23:22 AI_Player.update()		1010,	1010,	101,	11,	1011,	1100,	1010
2017-01-09 18:23:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-09 18:23:22 AI_Player.update()		1100,	1011,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:22 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1010,	1001
2017-01-09 18:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:22 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:22 AI_Player.update()	update
2017-01-09 18:23:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:22 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:22 AI_Player.update()	update
2017-01-09 18:23:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:22 AI_Player.update()	Search took166ms
2017-01-09 18:23:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:22 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-09 18:23:22 AI_Player.update()		1110,	101,	101,	11,	1001,	1001,	1010
2017-01-09 18:23:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-09 18:23:22 AI_Player.update()		1010,	1010,	101,	11,	1011,	1100,	1010
2017-01-09 18:23:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-09 18:23:22 AI_Player.update()		1011,	1010,	1010,	1100,	1010,	1010,	1100
2017-01-09 18:23:22 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1010,	1001
2017-01-09 18:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:22 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:22 AI_Player.update()	update
2017-01-09 18:23:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:22 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:22 AI_Player.update()	update
2017-01-09 18:23:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:22 AI_Player.update()	Search took110ms
2017-01-09 18:23:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:22 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-09 18:23:22 AI_Player.update()		101,	101,	11,	1001,	1001,	1010,	1110
2017-01-09 18:23:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-09 18:23:22 AI_Player.update()		1010,	1010,	101,	11,	1011,	1100,	1010
2017-01-09 18:23:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-09 18:23:22 AI_Player.update()		1011,	1010,	1010,	1100,	1010,	1010,	1100
2017-01-09 18:23:22 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1010,	1001
2017-01-09 18:23:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:22 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:23 AI_Player.update()	update
2017-01-09 18:23:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:23 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:23 AI_Player.update()	update
2017-01-09 18:23:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:23 AI_Player.update()	Search took426ms
2017-01-09 18:23:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:23 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-09 18:23:23 AI_Player.update()		101,	101,	11,	1001,	1001,	1010,	1110
2017-01-09 18:23:23 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-09 18:23:23 AI_Player.update()		1010,	1010,	101,	11,	1011,	1100,	1010
2017-01-09 18:23:23 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-09 18:23:23 AI_Player.update()		1100,	1011,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:23 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1010,	1001
2017-01-09 18:23:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:23 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:23 AI_Player.update()	update
2017-01-09 18:23:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:23 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:23 AI_Player.update()	update
2017-01-09 18:23:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:23 AI_Player.update()	Search took174ms
2017-01-09 18:23:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:23 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-09 18:23:23 AI_Player.update()		101,	101,	11,	1001,	1001,	1010,	1110
2017-01-09 18:23:23 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-09 18:23:23 AI_Player.update()		1010,	1010,	101,	11,	1011,	1100,	1010
2017-01-09 18:23:23 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-09 18:23:23 AI_Player.update()		1100,	1110,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:23 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1010,	1001
2017-01-09 18:23:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:23 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:24 AI_Player.update()	update
2017-01-09 18:23:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:24 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:24 AI_Player.update()	update
2017-01-09 18:23:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:24 AI_Player.update()	Search took351ms
2017-01-09 18:23:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:24 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-09 18:23:24 AI_Player.update()		101,	101,	11,	1001,	1001,	1001,	1110
2017-01-09 18:23:24 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:24 AI_Player.update()		1010,	1010,	101,	11,	1011,	1011,	1010
2017-01-09 18:23:24 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:24 AI_Player.update()		1100,	1110,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:24 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:24 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:24 AI_Player.update()	update
2017-01-09 18:23:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:24 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:24 AI_Player.update()	update
2017-01-09 18:23:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:24 AI_Player.update()	Search took224ms
2017-01-09 18:23:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:24 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-09 18:23:24 AI_Player.update()		101,	1010,	11,	1001,	1001,	1001,	1110
2017-01-09 18:23:24 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:24 AI_Player.update()		1010,	1011,	101,	11,	1011,	1011,	1010
2017-01-09 18:23:24 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:24 AI_Player.update()		1100,	1001,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:24 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:24 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:25 AI_Player.update()	update
2017-01-09 18:23:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:25 AI_Player.update()	update
2017-01-09 18:23:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:25 AI_Player.update()	Search took335ms
2017-01-09 18:23:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:25 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-09 18:23:25 AI_Player.update()		101,	1010,	11,	1001,	1001,	1001,	1110
2017-01-09 18:23:25 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:25 AI_Player.update()		1011,	101,	11,	1011,	1011,	1010,	1010
2017-01-09 18:23:25 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:25 AI_Player.update()		1100,	1001,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:25 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	2 3
2017-01-09 18:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:25 AI_Player.update()	update
2017-01-09 18:23:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	2 4
2017-01-09 18:23:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:25 AI_Player.update()	update
2017-01-09 18:23:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:25 AI_Player.update()	Search took234ms
2017-01-09 18:23:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:25 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-09 18:23:25 AI_Player.update()		101,	1010,	11,	1001,	1001,	1001,	1110
2017-01-09 18:23:25 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:25 AI_Player.update()		1011,	101,	11,	1011,	1011,	1010,	1010
2017-01-09 18:23:25 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:25 AI_Player.update()		1010,	1100,	1001,	1010,	1010,	1100,	1010
2017-01-09 18:23:25 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:25 GameBoard.setupTreasurePanel()	2 4
2017-01-09 18:23:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:26 AI_Player.update()	update
2017-01-09 18:23:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:26 AI_Player.update()	update
2017-01-09 18:23:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:26 AI_Player.update()	Search took727ms
2017-01-09 18:23:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:26 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-09 18:23:26 AI_Player.update()		101,	1010,	11,	1001,	1001,	1001,	1110
2017-01-09 18:23:26 AI_Player.update()		1110,	101,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:26 AI_Player.update()		1011,	1110,	11,	1011,	1011,	1010,	1010
2017-01-09 18:23:26 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:26 AI_Player.update()		1010,	101,	1001,	1010,	1010,	1100,	1010
2017-01-09 18:23:26 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:26 AI_Player.update()	update
2017-01-09 18:23:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:26 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:27 AI_Player.update()	update
2017-01-09 18:23:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:27 AI_Player.update()	Search took791ms
2017-01-09 18:23:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:27 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-09 18:23:27 AI_Player.update()		101,	1010,	11,	1001,	1001,	1001,	1110
2017-01-09 18:23:27 AI_Player.update()		1110,	101,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:27 AI_Player.update()		1011,	1110,	11,	1011,	1011,	1010,	1010
2017-01-09 18:23:27 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:27 AI_Player.update()		101,	1001,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:27 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:27 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:27 AI_Player.update()	update
2017-01-09 18:23:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:27 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:28 AI_Player.update()	update
2017-01-09 18:23:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:28 AI_Player.update()	Search took532ms
2017-01-09 18:23:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:28 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-09 18:23:28 AI_Player.update()		101,	101,	11,	1001,	1001,	1001,	1110
2017-01-09 18:23:28 AI_Player.update()		1110,	1110,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:28 AI_Player.update()		1011,	1100,	11,	1011,	1011,	1010,	1010
2017-01-09 18:23:28 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:28 AI_Player.update()		101,	101,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:28 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:28 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:28 AI_Player.update()	update
2017-01-09 18:23:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:28 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:28 AI_Player.update()	update
2017-01-09 18:23:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:28 AI_Player.update()	Search took110ms
2017-01-09 18:23:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:28 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-09 18:23:28 AI_Player.update()		101,	1010,	11,	1001,	1001,	1001,	1110
2017-01-09 18:23:28 AI_Player.update()		1110,	101,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:28 AI_Player.update()		1011,	1110,	11,	1011,	1011,	1010,	1010
2017-01-09 18:23:28 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:28 AI_Player.update()		101,	1001,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:28 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:28 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:29 AI_Player.update()	update
2017-01-09 18:23:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:29 AI_Player.update()	update
2017-01-09 18:23:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:29 AI_Player.update()	Search took554ms
2017-01-09 18:23:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:29 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-09 18:23:29 AI_Player.update()		101,	1010,	11,	1001,	1001,	1001,	1110
2017-01-09 18:23:29 AI_Player.update()		1110,	101,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:29 AI_Player.update()		1010,	1011,	1110,	11,	1011,	1011,	1010
2017-01-09 18:23:29 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:29 AI_Player.update()		101,	1001,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:29 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	3 4
2017-01-09 18:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:29 AI_Player.update()	update
2017-01-09 18:23:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	3 5
2017-01-09 18:23:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:29 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:29 AI_Player.update()	update
2017-01-09 18:23:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:30 AI_Player.update()	Search took440ms
2017-01-09 18:23:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:30 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-09 18:23:30 AI_Player.update()		1110,	101,	1010,	11,	1001,	1001,	1001
2017-01-09 18:23:30 AI_Player.update()		1110,	101,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:30 AI_Player.update()		1010,	1011,	1110,	11,	1011,	1011,	1010
2017-01-09 18:23:30 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:30 AI_Player.update()		101,	1001,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:30 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	3 5
2017-01-09 18:23:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:30 AI_Player.update()	update
2017-01-09 18:23:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	4 5
2017-01-09 18:23:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:30 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:30 AI_Player.update()	update
2017-01-09 18:23:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:31 AI_Player.update()	Search took669ms
2017-01-09 18:23:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:31 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-09 18:23:31 AI_Player.update()		1110,	101,	1010,	11,	1001,	1001,	1001
2017-01-09 18:23:31 AI_Player.update()		1110,	1011,	1110,	110,	111,	1100,	1011
2017-01-09 18:23:31 AI_Player.update()		1010,	1100,	1110,	11,	1011,	1011,	1010
2017-01-09 18:23:31 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:31 AI_Player.update()		101,	101,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:31 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-09 18:23:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	4 5
2017-01-09 18:23:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:31 AI_Player.update()	update
2017-01-09 18:23:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	4 6
2017-01-09 18:23:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:31 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:31 AI_Player.update()	update
2017-01-09 18:23:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:32 AI_Player.update()	Search took734ms
2017-01-09 18:23:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:32 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-09 18:23:32 AI_Player.update()		1110,	101,	1010,	11,	1001,	1001,	1001
2017-01-09 18:23:32 AI_Player.update()		1110,	1011,	1110,	11,	111,	1100,	1011
2017-01-09 18:23:32 AI_Player.update()		1010,	1100,	1110,	110,	1011,	1011,	1010
2017-01-09 18:23:32 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-09 18:23:32 AI_Player.update()		101,	101,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:32 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-09 18:23:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	4 6
2017-01-09 18:23:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:32 AI_Player.update()	update
2017-01-09 18:23:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	5 6
2017-01-09 18:23:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:32 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:32 AI_Player.update()	update
2017-01-09 18:23:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:33 AI_Player.update()	Search took758ms
2017-01-09 18:23:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:33 AI_Player.update()		110,	101,	111,	1101,	111,	1001,	11
2017-01-09 18:23:33 AI_Player.update()		1110,	101,	1010,	11,	1001,	1100,	1001
2017-01-09 18:23:33 AI_Player.update()		1110,	1011,	1110,	11,	111,	1011,	1011
2017-01-09 18:23:33 AI_Player.update()		1010,	1100,	1110,	110,	1011,	1010,	1010
2017-01-09 18:23:33 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-09 18:23:33 AI_Player.update()		101,	101,	1010,	1010,	1100,	11,	1010
2017-01-09 18:23:33 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-09 18:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:33 GameBoard.setupTreasurePanel()	5 6
2017-01-09 18:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:33 AI_Player.update()	update
2017-01-09 18:23:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:33 GameBoard.setupTreasurePanel()	5 6
2017-01-09 18:23:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:33 AI_Player.update()	update
2017-01-09 18:23:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:33 AI_Player.update()	Search took594ms
2017-01-09 18:23:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:33 AI_Player.update()		110,	101,	111,	1101,	111,	1001,	11
2017-01-09 18:23:33 AI_Player.update()		101,	1010,	11,	1001,	1100,	1001,	1110
2017-01-09 18:23:33 AI_Player.update()		1110,	1011,	1110,	11,	111,	1011,	1011
2017-01-09 18:23:33 AI_Player.update()		1010,	1100,	1110,	110,	1011,	1010,	1010
2017-01-09 18:23:33 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-09 18:23:33 AI_Player.update()		101,	101,	1010,	1010,	1100,	11,	1010
2017-01-09 18:23:33 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-09 18:23:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:33 GameBoard.setupTreasurePanel()	5 6
2017-01-09 18:23:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:34 AI_Player.update()	update
2017-01-09 18:23:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:34 GameBoard.setupTreasurePanel()	5 6
2017-01-09 18:23:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:34 AI_Player.update()	update
2017-01-09 18:23:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:34 AI_Player.update()	Search took253ms
2017-01-09 18:23:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:34 AI_Player.update()		110,	101,	111,	1101,	111,	1001,	11
2017-01-09 18:23:34 AI_Player.update()		101,	1010,	11,	1001,	1100,	1011,	1110
2017-01-09 18:23:34 AI_Player.update()		1110,	1011,	1110,	11,	111,	1010,	1011
2017-01-09 18:23:34 AI_Player.update()		1010,	1100,	1110,	110,	1011,	1010,	1010
2017-01-09 18:23:34 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-09 18:23:34 AI_Player.update()		101,	101,	1010,	1010,	1100,	1010,	1010
2017-01-09 18:23:34 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-09 18:23:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:34 GameBoard.setupTreasurePanel()	5 6
2017-01-09 18:23:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:34 AI_Player.update()	update
2017-01-09 18:23:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:34 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-09 18:23:34 AI_Player.update()	Player b has won!
2017-01-09 18:23:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 18:23:36 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-09 18:23:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 18:23:36 QueryProlog.reset()	setup(h2/h5). suceeded
2017-01-09 18:23:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:36 AI_Player.update()	update
2017-01-09 18:23:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:36 AI_Player.update()	Search took394ms
2017-01-09 18:23:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:36 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-09 18:23:36 AI_Player.update()		1100,	111,	101,	1101,	1101,	11,	1101
2017-01-09 18:23:36 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1010,	1011
2017-01-09 18:23:36 AI_Player.update()		110,	1011,	101,	1010,	101,	1001,	1010
2017-01-09 18:23:36 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-09 18:23:36 AI_Player.update()		1110,	101,	1100,	101,	111,	1011,	1010
2017-01-09 18:23:36 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	111,	1001
2017-01-09 18:23:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:23:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:36 AI_Player.update()	update
2017-01-09 18:23:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	2 1
2017-01-09 18:23:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:36 AI_Player.update()	update
2017-01-09 18:23:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:37 AI_Player.update()	Search took641ms
2017-01-09 18:23:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:37 AI_Player.update()		110,	1100,	111,	110,	111,	111,	11
2017-01-09 18:23:37 AI_Player.update()		1100,	111,	101,	1101,	1101,	101,	1101
2017-01-09 18:23:37 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:37 AI_Player.update()		110,	1011,	101,	1010,	101,	1010,	1010
2017-01-09 18:23:37 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1001,	1011
2017-01-09 18:23:37 AI_Player.update()		1110,	101,	1100,	101,	111,	101,	1010
2017-01-09 18:23:37 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1011,	1001
2017-01-09 18:23:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	2 1
2017-01-09 18:23:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:37 AI_Player.update()	update
2017-01-09 18:23:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:37 AI_Player.update()	update
2017-01-09 18:23:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:38 AI_Player.update()	Search took507ms
2017-01-09 18:23:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:38 AI_Player.update()		110,	1010,	111,	110,	111,	111,	11
2017-01-09 18:23:38 AI_Player.update()		1100,	1100,	101,	1101,	1101,	101,	1101
2017-01-09 18:23:38 AI_Player.update()		1110,	111,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:38 AI_Player.update()		110,	1101,	101,	1010,	101,	1010,	1010
2017-01-09 18:23:38 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1001,	1011
2017-01-09 18:23:38 AI_Player.update()		1110,	1101,	1100,	101,	111,	101,	1010
2017-01-09 18:23:38 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1011,	1001
2017-01-09 18:23:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:38 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:38 AI_Player.update()	update
2017-01-09 18:23:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:38 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:38 AI_Player.update()	update
2017-01-09 18:23:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:38 AI_Player.update()	Search took451ms
2017-01-09 18:23:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:38 AI_Player.update()		110,	1010,	111,	1101,	111,	111,	11
2017-01-09 18:23:38 AI_Player.update()		1100,	1100,	101,	1010,	1101,	101,	1101
2017-01-09 18:23:38 AI_Player.update()		1110,	111,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:38 AI_Player.update()		110,	1101,	101,	1010,	101,	1010,	1010
2017-01-09 18:23:38 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:38 AI_Player.update()		1110,	1101,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:38 AI_Player.update()		1100,	101,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:38 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:38 AI_Player.update()	update
2017-01-09 18:23:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:38 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:39 AI_Player.update()	update
2017-01-09 18:23:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:39 AI_Player.update()	Search took268ms
2017-01-09 18:23:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:39 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-09 18:23:39 AI_Player.update()		1100,	111,	101,	1010,	1101,	101,	1101
2017-01-09 18:23:39 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:39 AI_Player.update()		110,	1011,	101,	1010,	101,	1010,	1010
2017-01-09 18:23:39 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:39 AI_Player.update()		1110,	101,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	2 2
2017-01-09 18:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:39 AI_Player.update()	update
2017-01-09 18:23:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:39 AI_Player.update()	update
2017-01-09 18:23:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:39 AI_Player.update()	Search took400ms
2017-01-09 18:23:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:39 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-09 18:23:39 AI_Player.update()		1100,	111,	101,	1010,	1101,	101,	1101
2017-01-09 18:23:39 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:39 AI_Player.update()		1011,	101,	1010,	101,	1010,	1010,	110
2017-01-09 18:23:39 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:39 AI_Player.update()		1110,	101,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:39 AI_Player.update()	update
2017-01-09 18:23:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:39 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:40 AI_Player.update()	update
2017-01-09 18:23:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:40 AI_Player.update()	Search took207ms
2017-01-09 18:23:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:40 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-09 18:23:40 AI_Player.update()		1101,	1100,	111,	101,	1010,	1101,	101
2017-01-09 18:23:40 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:40 AI_Player.update()		1011,	101,	1010,	101,	1010,	1010,	110
2017-01-09 18:23:40 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:40 AI_Player.update()		1110,	101,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:40 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:40 AI_Player.update()	update
2017-01-09 18:23:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:40 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:40 AI_Player.update()	update
2017-01-09 18:23:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:40 AI_Player.update()	Search took220ms
2017-01-09 18:23:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:40 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-09 18:23:40 AI_Player.update()		101,	1101,	1100,	111,	101,	1010,	1101
2017-01-09 18:23:40 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:40 AI_Player.update()		1011,	101,	1010,	101,	1010,	1010,	110
2017-01-09 18:23:40 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:40 AI_Player.update()		1110,	101,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:40 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:40 AI_Player.update()	update
2017-01-09 18:23:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:40 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:40 AI_Player.update()	update
2017-01-09 18:23:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:41 AI_Player.update()	Search took170ms
2017-01-09 18:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:41 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-09 18:23:41 AI_Player.update()		1101,	1100,	111,	101,	1010,	1101,	101
2017-01-09 18:23:41 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:41 AI_Player.update()		1011,	101,	1010,	101,	1010,	1010,	110
2017-01-09 18:23:41 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:41 AI_Player.update()		1110,	101,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:41 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:41 AI_Player.update()	update
2017-01-09 18:23:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:41 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:41 AI_Player.update()	update
2017-01-09 18:23:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:41 AI_Player.update()	Search took221ms
2017-01-09 18:23:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:41 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-09 18:23:41 AI_Player.update()		1100,	111,	101,	1010,	1101,	101,	1101
2017-01-09 18:23:41 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:41 AI_Player.update()		1011,	101,	1010,	101,	1010,	1010,	110
2017-01-09 18:23:41 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:41 AI_Player.update()		1110,	101,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:41 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:41 AI_Player.update()	update
2017-01-09 18:23:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:41 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:41 AI_Player.update()	update
2017-01-09 18:23:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:42 AI_Player.update()	Search took305ms
2017-01-09 18:23:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:42 AI_Player.update()		110,	1100,	111,	110,	111,	111,	11
2017-01-09 18:23:42 AI_Player.update()		1100,	111,	101,	1101,	1101,	101,	1101
2017-01-09 18:23:42 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:42 AI_Player.update()		1011,	101,	1010,	1010,	1010,	1010,	110
2017-01-09 18:23:42 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:42 AI_Player.update()		1110,	101,	1100,	101,	111,	101,	1010
2017-01-09 18:23:42 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1011,	1001
2017-01-09 18:23:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	3 2
2017-01-09 18:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:42 AI_Player.update()	update
2017-01-09 18:23:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	4 2
2017-01-09 18:23:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:42 AI_Player.update()	update
2017-01-09 18:23:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:43 AI_Player.update()	Search took1320ms
2017-01-09 18:23:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:43 AI_Player.update()		110,	111,	111,	110,	111,	111,	11
2017-01-09 18:23:43 AI_Player.update()		1100,	1101,	101,	1101,	1101,	101,	1101
2017-01-09 18:23:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:43 AI_Player.update()		1011,	1101,	1010,	1010,	1010,	1010,	110
2017-01-09 18:23:43 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:43 AI_Player.update()		1110,	1010,	1100,	101,	111,	101,	1010
2017-01-09 18:23:43 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1011,	1001
2017-01-09 18:23:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	4 2
2017-01-09 18:23:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:43 AI_Player.update()	update
2017-01-09 18:23:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	4 3
2017-01-09 18:23:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:43 AI_Player.update()	update
2017-01-09 18:23:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:44 AI_Player.update()	Search took692ms
2017-01-09 18:23:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:44 AI_Player.update()		110,	111,	111,	1101,	111,	111,	11
2017-01-09 18:23:44 AI_Player.update()		1100,	1101,	101,	1010,	1101,	101,	1101
2017-01-09 18:23:44 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:44 AI_Player.update()		1011,	1101,	1010,	101,	1010,	1010,	110
2017-01-09 18:23:44 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:44 AI_Player.update()		1110,	1010,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:44 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:44 GameBoard.setupTreasurePanel()	4 3
2017-01-09 18:23:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:44 AI_Player.update()	update
2017-01-09 18:23:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:44 GameBoard.setupTreasurePanel()	4 3
2017-01-09 18:23:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:44 AI_Player.update()	update
2017-01-09 18:23:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:45 AI_Player.update()	Search took532ms
2017-01-09 18:23:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:45 AI_Player.update()		110,	111,	111,	1101,	111,	111,	11
2017-01-09 18:23:45 AI_Player.update()		1101,	101,	1010,	1101,	101,	1101,	1100
2017-01-09 18:23:45 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:45 AI_Player.update()		1011,	1101,	1010,	101,	1010,	1010,	110
2017-01-09 18:23:45 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:45 AI_Player.update()		1110,	1010,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:45 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:45 GameBoard.setupTreasurePanel()	4 3
2017-01-09 18:23:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:45 AI_Player.update()	update
2017-01-09 18:23:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:45 GameBoard.setupTreasurePanel()	4 3
2017-01-09 18:23:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:45 AI_Player.update()	update
2017-01-09 18:23:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:46 AI_Player.update()	Search took1160ms
2017-01-09 18:23:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:46 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-09 18:23:46 AI_Player.update()		1101,	101,	1010,	1101,	101,	1101,	1100
2017-01-09 18:23:46 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:46 AI_Player.update()		1011,	101,	1010,	101,	1010,	1010,	110
2017-01-09 18:23:46 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:46 AI_Player.update()		1110,	1100,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:46 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	4 3
2017-01-09 18:23:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:46 AI_Player.update()	update
2017-01-09 18:23:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	5 3
2017-01-09 18:23:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:46 AI_Player.update()	update
2017-01-09 18:23:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:47 AI_Player.update()	Search took820ms
2017-01-09 18:23:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:47 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-09 18:23:47 AI_Player.update()		1101,	101,	1010,	1101,	101,	1101,	1100
2017-01-09 18:23:47 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:47 AI_Player.update()		101,	1010,	101,	1010,	1010,	110,	1011
2017-01-09 18:23:47 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:47 AI_Player.update()		1110,	1100,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:47 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	5 3
2017-01-09 18:23:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:47 AI_Player.update()	update
2017-01-09 18:23:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	5 4
2017-01-09 18:23:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:47 AI_Player.update()	update
2017-01-09 18:23:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:47 AI_Player.update()	Search took157ms
2017-01-09 18:23:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:47 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-09 18:23:47 AI_Player.update()		1101,	101,	1010,	1101,	101,	1101,	1100
2017-01-09 18:23:47 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:47 AI_Player.update()		1010,	101,	1010,	1010,	110,	1011,	101
2017-01-09 18:23:47 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:47 AI_Player.update()		1110,	1100,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:47 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:47 GameBoard.setupTreasurePanel()	5 4
2017-01-09 18:23:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:48 AI_Player.update()	update
2017-01-09 18:23:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	5 4
2017-01-09 18:23:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:48 AI_Player.update()	update
2017-01-09 18:23:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:48 AI_Player.update()	Search took84ms
2017-01-09 18:23:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:48 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-09 18:23:48 AI_Player.update()		1101,	101,	1010,	1101,	101,	1101,	1100
2017-01-09 18:23:48 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:48 AI_Player.update()		101,	1010,	1010,	110,	1011,	101,	1010
2017-01-09 18:23:48 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:48 AI_Player.update()		1110,	1100,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:48 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	5 4
2017-01-09 18:23:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:48 AI_Player.update()	update
2017-01-09 18:23:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:48 AI_Player.update()	update
2017-01-09 18:23:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:48 AI_Player.update()	Search took180ms
2017-01-09 18:23:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:48 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-09 18:23:48 AI_Player.update()		1101,	101,	1010,	1101,	101,	1101,	1100
2017-01-09 18:23:48 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:48 AI_Player.update()		1010,	1010,	110,	1011,	101,	1010,	101
2017-01-09 18:23:48 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:48 AI_Player.update()		1110,	1100,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:48 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:48 AI_Player.update()	update
2017-01-09 18:23:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:48 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:48 AI_Player.update()	update
2017-01-09 18:23:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:49 AI_Player.update()	Search took143ms
2017-01-09 18:23:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:49 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-09 18:23:49 AI_Player.update()		1101,	101,	1010,	1101,	101,	1101,	1100
2017-01-09 18:23:49 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:49 AI_Player.update()		1010,	110,	1011,	101,	1010,	101,	1010
2017-01-09 18:23:49 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:49 AI_Player.update()		1110,	1100,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:49 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:49 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:49 AI_Player.update()	update
2017-01-09 18:23:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:49 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:49 AI_Player.update()	update
2017-01-09 18:23:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:49 AI_Player.update()	Search took448ms
2017-01-09 18:23:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:49 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-09 18:23:49 AI_Player.update()		1101,	101,	1010,	1101,	101,	1101,	1100
2017-01-09 18:23:49 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:49 AI_Player.update()		110,	1011,	101,	1010,	101,	1010,	1010
2017-01-09 18:23:49 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:49 AI_Player.update()		1110,	1100,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:49 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:49 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:49 AI_Player.update()	update
2017-01-09 18:23:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:49 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:49 AI_Player.update()	update
2017-01-09 18:23:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:50 AI_Player.update()	Search took219ms
2017-01-09 18:23:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:50 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-09 18:23:50 AI_Player.update()		101,	1010,	1101,	101,	1101,	1100,	1101
2017-01-09 18:23:50 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-09 18:23:50 AI_Player.update()		110,	1011,	101,	1010,	101,	1010,	1010
2017-01-09 18:23:50 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-09 18:23:50 AI_Player.update()		1110,	1100,	1100,	1001,	111,	101,	1010
2017-01-09 18:23:50 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-09 18:23:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:50 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:50 AI_Player.update()	update
2017-01-09 18:23:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:50 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:50 AI_Player.update()	update
2017-01-09 18:23:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:50 AI_Player.update()	Search took181ms
2017-01-09 18:23:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:50 AI_Player.update()		110,	101,	111,	1101,	111,	1011,	11
2017-01-09 18:23:50 AI_Player.update()		101,	1010,	1101,	101,	1101,	111,	1101
2017-01-09 18:23:50 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1100,	1011
2017-01-09 18:23:50 AI_Player.update()		110,	1011,	101,	1010,	101,	11,	1010
2017-01-09 18:23:50 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-09 18:23:50 AI_Player.update()		1110,	1100,	1100,	1001,	111,	1001,	1010
2017-01-09 18:23:50 AI_Player.update()		1100,	111,	1101,	110,	1101,	101,	1001
2017-01-09 18:23:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:50 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:50 AI_Player.update()	update
2017-01-09 18:23:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:50 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:50 AI_Player.update()	update
2017-01-09 18:23:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:51 AI_Player.update()	Search took944ms
2017-01-09 18:23:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:51 AI_Player.update()		110,	1010,	111,	1101,	111,	1011,	11
2017-01-09 18:23:51 AI_Player.update()		101,	1101,	1101,	101,	1101,	111,	1101
2017-01-09 18:23:51 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1100,	1011
2017-01-09 18:23:51 AI_Player.update()		110,	1010,	101,	1010,	101,	11,	1010
2017-01-09 18:23:51 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-09 18:23:51 AI_Player.update()		1110,	111,	1100,	1001,	111,	1001,	1010
2017-01-09 18:23:51 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-09 18:23:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:51 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:51 AI_Player.update()	update
2017-01-09 18:23:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:51 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:51 AI_Player.update()	update
2017-01-09 18:23:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:52 AI_Player.update()	Search took647ms
2017-01-09 18:23:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:52 AI_Player.update()		110,	1010,	111,	1101,	111,	1011,	11
2017-01-09 18:23:52 AI_Player.update()		101,	1101,	1101,	101,	1101,	111,	1101
2017-01-09 18:23:52 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1100,	1011
2017-01-09 18:23:52 AI_Player.update()		110,	1010,	101,	1010,	101,	11,	1010
2017-01-09 18:23:52 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-09 18:23:52 AI_Player.update()		1010,	1110,	111,	1100,	1001,	111,	1001
2017-01-09 18:23:52 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-09 18:23:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:52 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:52 AI_Player.update()	update
2017-01-09 18:23:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:52 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:52 AI_Player.update()	update
2017-01-09 18:23:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:53 AI_Player.update()	Search took519ms
2017-01-09 18:23:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:53 AI_Player.update()		110,	1010,	111,	1101,	111,	1011,	11
2017-01-09 18:23:53 AI_Player.update()		1101,	101,	1101,	1101,	101,	1101,	111
2017-01-09 18:23:53 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1100,	1011
2017-01-09 18:23:53 AI_Player.update()		110,	1010,	101,	1010,	101,	11,	1010
2017-01-09 18:23:53 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-09 18:23:53 AI_Player.update()		1010,	1110,	111,	1100,	1001,	111,	1001
2017-01-09 18:23:53 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-09 18:23:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:53 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:53 AI_Player.update()	update
2017-01-09 18:23:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:53 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:53 AI_Player.update()	update
2017-01-09 18:23:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:54 AI_Player.update()	Search took723ms
2017-01-09 18:23:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:54 AI_Player.update()		110,	101,	111,	1101,	111,	1011,	11
2017-01-09 18:23:54 AI_Player.update()		1101,	1011,	1101,	1101,	101,	1101,	111
2017-01-09 18:23:54 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-09 18:23:54 AI_Player.update()		110,	1100,	101,	1010,	101,	11,	1010
2017-01-09 18:23:54 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-09 18:23:54 AI_Player.update()		1010,	101,	111,	1100,	1001,	111,	1001
2017-01-09 18:23:54 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-09 18:23:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:54 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:54 AI_Player.update()	update
2017-01-09 18:23:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:54 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:54 AI_Player.update()	update
2017-01-09 18:23:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:55 AI_Player.update()	Search took842ms
2017-01-09 18:23:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:55 AI_Player.update()		110,	101,	111,	1101,	111,	1011,	11
2017-01-09 18:23:55 AI_Player.update()		1011,	1101,	1101,	101,	1101,	111,	1101
2017-01-09 18:23:55 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-09 18:23:55 AI_Player.update()		110,	1100,	101,	1010,	101,	11,	1010
2017-01-09 18:23:55 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-09 18:23:55 AI_Player.update()		1010,	101,	111,	1100,	1001,	111,	1001
2017-01-09 18:23:55 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-09 18:23:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:55 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:55 AI_Player.update()	update
2017-01-09 18:23:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:55 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:55 AI_Player.update()	update
2017-01-09 18:23:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:56 AI_Player.update()	Search took842ms
2017-01-09 18:23:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:56 AI_Player.update()		110,	101,	111,	1101,	111,	1011,	11
2017-01-09 18:23:56 AI_Player.update()		1011,	1101,	1101,	101,	1101,	111,	1101
2017-01-09 18:23:56 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-09 18:23:56 AI_Player.update()		110,	1100,	101,	1010,	101,	11,	1010
2017-01-09 18:23:56 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-09 18:23:56 AI_Player.update()		101,	111,	1100,	1001,	111,	1001,	1010
2017-01-09 18:23:56 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-09 18:23:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:56 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:56 AI_Player.update()	update
2017-01-09 18:23:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:56 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:56 AI_Player.update()	update
2017-01-09 18:23:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:23:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:23:57 AI_Player.update()	Search took1184ms
2017-01-09 18:23:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:57 AI_Player.update()		110,	1101,	111,	1101,	111,	1011,	11
2017-01-09 18:23:57 AI_Player.update()		1011,	1010,	1101,	101,	1101,	111,	1101
2017-01-09 18:23:57 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-09 18:23:57 AI_Player.update()		110,	1110,	101,	1010,	101,	11,	1010
2017-01-09 18:23:57 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-09 18:23:57 AI_Player.update()		101,	1010,	1100,	1001,	111,	1001,	1010
2017-01-09 18:23:57 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-09 18:23:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:57 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:57 AI_Player.update()	update
2017-01-09 18:23:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:23:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:23:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:23:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:23:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:57 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:57 AI_Player.update()	update
2017-01-09 18:23:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:23:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:23:59 AI_Player.update()	Search took1168ms
2017-01-09 18:23:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:59 AI_Player.update()		110,	1101,	111,	110,	111,	1011,	11
2017-01-09 18:23:59 AI_Player.update()		1011,	1010,	1101,	1101,	1101,	111,	1101
2017-01-09 18:23:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-09 18:23:59 AI_Player.update()		110,	1110,	101,	1010,	101,	11,	1010
2017-01-09 18:23:59 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:23:59 AI_Player.update()		101,	1010,	1100,	101,	111,	1001,	1010
2017-01-09 18:23:59 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-09 18:23:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:23:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	5 5
2017-01-09 18:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:59 AI_Player.update()	update
2017-01-09 18:23:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:23:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:23:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:23:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:23:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:23:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:23:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:23:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:23:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	6 5
2017-01-09 18:23:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:23:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:23:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:23:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:23:59 AI_Player.update()	update
2017-01-09 18:23:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:24:00 AI_Player.update()	Search took855ms
2017-01-09 18:24:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:00 AI_Player.update()		110,	1101,	111,	110,	111,	1011,	11
2017-01-09 18:24:00 AI_Player.update()		1011,	1010,	1101,	1101,	1101,	111,	1101
2017-01-09 18:24:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-09 18:24:00 AI_Player.update()		1110,	101,	1010,	101,	11,	1010,	110
2017-01-09 18:24:00 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:24:00 AI_Player.update()		101,	1010,	1100,	101,	111,	1001,	1010
2017-01-09 18:24:00 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-09 18:24:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	6 5
2017-01-09 18:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:00 AI_Player.update()	update
2017-01-09 18:24:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:24:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	6 6
2017-01-09 18:24:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 18:24:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:24:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:24:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:00 AI_Player.update()	update
2017-01-09 18:24:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:24:01 AI_Player.update()	Search took1153ms
2017-01-09 18:24:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:01 AI_Player.update()		110,	1101,	111,	110,	111,	1011,	11
2017-01-09 18:24:01 AI_Player.update()		1101,	1011,	1010,	1101,	1101,	1101,	111
2017-01-09 18:24:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-09 18:24:01 AI_Player.update()		1110,	101,	1010,	101,	11,	1010,	110
2017-01-09 18:24:01 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:24:01 AI_Player.update()		101,	1010,	1100,	101,	111,	1001,	1010
2017-01-09 18:24:01 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-09 18:24:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:01 GameBoard.setupTreasurePanel()	6 6
2017-01-09 18:24:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:01 AI_Player.update()	update
2017-01-09 18:24:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:24:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:01 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-09 18:24:01 AI_Player.update()	Player a has won!
2017-01-09 18:24:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 18:24:03 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-09 18:24:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 18:24:03 QueryProlog.reset()	setup(h2/h5). suceeded
2017-01-09 18:24:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:24:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 18:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:03 AI_Player.update()	update
2017-01-09 18:24:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 18:24:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 18:24:03 AI_Player.update()	Search took34ms
2017-01-09 18:24:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:03 AI_Player.update()		110,	1100,	111,	110,	111,	111,	11
2017-01-09 18:24:03 AI_Player.update()		1010,	101,	101,	1110,	101,	101,	110
2017-01-09 18:24:03 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-09 18:24:03 AI_Player.update()		110,	1010,	1110,	1010,	1001,	11,	1001
2017-01-09 18:24:03 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-09 18:24:03 AI_Player.update()		1010,	110,	101,	11,	101,	101,	101
2017-01-09 18:24:03 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1011,	1001
2017-01-09 18:24:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:03 AI_Player.update()	update
2017-01-09 18:24:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 18:24:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 18:24:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 18:24:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 18:24:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 18:24:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:03 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:03 AI_Player.update()	update
2017-01-09 18:24:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 18:24:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h5). suceeded
2017-01-09 18:24:04 AI_Player.update()	Search took446ms
2017-01-09 18:24:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 18:24:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:04 AI_Player.update()		110,	1100,	111,	111,	111,	111,	11
2017-01-09 18:24:04 AI_Player.update()		1010,	101,	101,	110,	101,	101,	110
2017-01-09 18:24:04 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1001,	1011
2017-01-09 18:24:04 AI_Player.update()		110,	1010,	1110,	1101,	1001,	11,	1001
2017-01-09 18:24:04 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-09 18:24:04 AI_Player.update()		1010,	110,	101,	101,	101,	101,	101
2017-01-09 18:24:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1011,	1001
2017-01-09 18:24:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 18:24:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 18:24:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	1 1
2017-01-09 18:24:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 18:24:04 AI_Player.update()	update
2017-01-09 18:24:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 18:24:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 18:24:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h5). suceeded
2017-01-09 18:24:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 18:24:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 18:24:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 18:24:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 18:24:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	1 2
2017-01-09 18:24:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	adding book
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 18:24:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	adding map
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 18:24:04 GameBoard.setupTreasurePanel()	adding chest
