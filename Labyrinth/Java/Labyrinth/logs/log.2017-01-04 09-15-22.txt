2017-01-04 09:15:22 GameBoard.<init>()	Hello World!
2017-01-04 09:15:22 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-04 09:15:22 QueryProlog.initialise()	setup(h2/h3). suceeded
2017-01-04 09:15:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:22 GameBoard.setupBoardFromString()	Board created
2017-01-04 09:15:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:22 GameBoard.initialise()	[sword, map, crown, ring, keys]
2017-01-04 09:15:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:22 GameBoard.initialise()	[fairy, gold, chest, gem, candle]
2017-01-04 09:15:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:22 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-04 09:15:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	null
2017-01-04 09:15:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:22 AI_Player.update()	update
2017-01-04 09:15:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:22 AI_Player.update()	Search took234ms
2017-01-04 09:15:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:22 AI_Player.update()		110,	1010,	111,	1101,	111,	110,	11
2017-01-04 09:15:22 AI_Player.update()		1100,	1010,	110,	1101,	1001,	101,	1110
2017-01-04 09:15:22 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-04 09:15:22 AI_Player.update()		1010,	1100,	110,	11,	110,	110,	11
2017-01-04 09:15:22 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:15:22 AI_Player.update()		1101,	1010,	1001,	1010,	1110,	110,	110
2017-01-04 09:15:22 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 09:15:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:22 AI_Player.update()	update
2017-01-04 09:15:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:22 AI_Player.update()	update
2017-01-04 09:15:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:23 AI_Player.update()	Search took200ms
2017-01-04 09:15:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:23 AI_Player.update()		110,	1010,	111,	1101,	111,	110,	11
2017-01-04 09:15:23 AI_Player.update()		1110,	1100,	1010,	110,	1101,	1001,	101
2017-01-04 09:15:23 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-04 09:15:23 AI_Player.update()		1010,	1100,	110,	11,	110,	110,	11
2017-01-04 09:15:23 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:15:23 AI_Player.update()		1101,	1010,	1001,	1010,	1110,	110,	110
2017-01-04 09:15:23 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 09:15:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:23 AI_Player.update()	update
2017-01-04 09:15:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:23 AI_Player.update()	update
2017-01-04 09:15:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:23 AI_Player.update()	Search took56ms
2017-01-04 09:15:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:23 AI_Player.update()		110,	1100,	111,	1101,	111,	110,	11
2017-01-04 09:15:23 AI_Player.update()		1110,	1110,	1010,	110,	1101,	1001,	101
2017-01-04 09:15:23 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-04 09:15:23 AI_Player.update()		1010,	101,	110,	11,	110,	110,	11
2017-01-04 09:15:23 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 09:15:23 AI_Player.update()		1101,	101,	1001,	1010,	1110,	110,	110
2017-01-04 09:15:23 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 09:15:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:23 AI_Player.update()	update
2017-01-04 09:15:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:23 AI_Player.update()	update
2017-01-04 09:15:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:23 AI_Player.update()	Search took199ms
2017-01-04 09:15:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:23 AI_Player.update()		110,	1110,	111,	1101,	111,	110,	11
2017-01-04 09:15:23 AI_Player.update()		1110,	1100,	1010,	110,	1101,	1001,	101
2017-01-04 09:15:23 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 09:15:23 AI_Player.update()		1010,	1010,	110,	11,	110,	110,	11
2017-01-04 09:15:23 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:15:23 AI_Player.update()		1101,	1010,	1001,	1010,	1110,	110,	110
2017-01-04 09:15:23 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-04 09:15:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:23 AI_Player.update()	update
2017-01-04 09:15:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:24 AI_Player.update()	update
2017-01-04 09:15:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:24 AI_Player.update()	Search took317ms
2017-01-04 09:15:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:24 AI_Player.update()		110,	1110,	111,	1101,	111,	110,	11
2017-01-04 09:15:24 AI_Player.update()		1100,	1010,	110,	1101,	1001,	101,	1110
2017-01-04 09:15:24 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 09:15:24 AI_Player.update()		1010,	1010,	110,	11,	110,	110,	11
2017-01-04 09:15:24 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 09:15:24 AI_Player.update()		1101,	1010,	1001,	1010,	1110,	110,	110
2017-01-04 09:15:24 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-04 09:15:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:24 AI_Player.update()	update
2017-01-04 09:15:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:24 AI_Player.update()	update
2017-01-04 09:15:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:24 AI_Player.update()	Search took205ms
2017-01-04 09:15:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:24 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-04 09:15:24 AI_Player.update()		1100,	1010,	110,	1101,	1001,	101,	1110
2017-01-04 09:15:24 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 09:15:24 AI_Player.update()		1010,	1010,	110,	11,	110,	1010,	11
2017-01-04 09:15:24 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 09:15:24 AI_Player.update()		1101,	1010,	1001,	1010,	1110,	101,	110
2017-01-04 09:15:24 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 09:15:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:24 AI_Player.update()	update
2017-01-04 09:15:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:25 AI_Player.update()	update
2017-01-04 09:15:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:25 AI_Player.update()	Search took383ms
2017-01-04 09:15:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:25 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-04 09:15:25 AI_Player.update()		1100,	1110,	110,	1101,	1001,	101,	1110
2017-01-04 09:15:25 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:15:25 AI_Player.update()		1010,	101,	110,	11,	110,	1010,	11
2017-01-04 09:15:25 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 09:15:25 AI_Player.update()		1101,	101,	1001,	1010,	1110,	101,	110
2017-01-04 09:15:25 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 09:15:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:25 AI_Player.update()	update
2017-01-04 09:15:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:25 AI_Player.update()	update
2017-01-04 09:15:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:25 AI_Player.update()	Search took112ms
2017-01-04 09:15:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:25 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-04 09:15:25 AI_Player.update()		1100,	1100,	110,	1101,	1001,	101,	1110
2017-01-04 09:15:25 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-04 09:15:25 AI_Player.update()		1010,	1010,	110,	11,	110,	1010,	11
2017-01-04 09:15:25 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 09:15:25 AI_Player.update()		1101,	1010,	1001,	1010,	1110,	101,	110
2017-01-04 09:15:25 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 09:15:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:25 AI_Player.update()	update
2017-01-04 09:15:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:25 AI_Player.update()	update
2017-01-04 09:15:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:26 AI_Player.update()	Search took72ms
2017-01-04 09:15:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:26 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-04 09:15:26 AI_Player.update()		1100,	1110,	110,	1101,	1001,	101,	1110
2017-01-04 09:15:26 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:15:26 AI_Player.update()		1010,	101,	110,	11,	110,	1010,	11
2017-01-04 09:15:26 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 09:15:26 AI_Player.update()		1101,	101,	1001,	1010,	1110,	101,	110
2017-01-04 09:15:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 09:15:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:26 AI_Player.update()	update
2017-01-04 09:15:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:26 AI_Player.update()	update
2017-01-04 09:15:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:26 AI_Player.update()	Search took71ms
2017-01-04 09:15:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:26 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-04 09:15:26 AI_Player.update()		1100,	1110,	110,	1101,	1001,	101,	1110
2017-01-04 09:15:26 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:15:26 AI_Player.update()		11,	1010,	101,	110,	11,	110,	1010
2017-01-04 09:15:26 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 09:15:26 AI_Player.update()		1101,	101,	1001,	1010,	1110,	101,	110
2017-01-04 09:15:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 09:15:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:26 AI_Player.update()	update
2017-01-04 09:15:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:26 AI_Player.update()	update
2017-01-04 09:15:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:26 AI_Player.update()	Search took179ms
2017-01-04 09:15:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:26 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-04 09:15:26 AI_Player.update()		1110,	110,	1101,	1001,	101,	1110,	1100
2017-01-04 09:15:26 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:15:26 AI_Player.update()		11,	1010,	101,	110,	11,	110,	1010
2017-01-04 09:15:26 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 09:15:26 AI_Player.update()		1101,	101,	1001,	1010,	1110,	101,	110
2017-01-04 09:15:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 09:15:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:26 AI_Player.update()	update
2017-01-04 09:15:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:15:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:26 AI_Player.update()	update
2017-01-04 09:15:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:27 AI_Player.update()	Search took215ms
2017-01-04 09:15:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:27 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-04 09:15:27 AI_Player.update()		1110,	110,	1101,	1001,	101,	1110,	1100
2017-01-04 09:15:27 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 09:15:27 AI_Player.update()		1010,	101,	110,	11,	110,	1010,	11
2017-01-04 09:15:27 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 09:15:27 AI_Player.update()		1101,	101,	1001,	1010,	1110,	101,	110
2017-01-04 09:15:27 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 09:15:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	3 1
2017-01-04 09:15:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:27 AI_Player.update()	update
2017-01-04 09:15:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:15:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:27 AI_Player.update()	update
2017-01-04 09:15:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:27 AI_Player.update()	Search took182ms
2017-01-04 09:15:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:27 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-04 09:15:27 AI_Player.update()		1110,	110,	1101,	1010,	101,	1110,	1100
2017-01-04 09:15:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-04 09:15:27 AI_Player.update()		1010,	101,	110,	11,	110,	1010,	11
2017-01-04 09:15:27 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-04 09:15:27 AI_Player.update()		1101,	101,	1001,	101,	1110,	101,	110
2017-01-04 09:15:27 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	110,	1001
2017-01-04 09:15:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:15:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:27 AI_Player.update()	update
2017-01-04 09:15:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:15:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:27 AI_Player.update()	update
2017-01-04 09:15:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:27 AI_Player.update()	Search took127ms
2017-01-04 09:15:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:27 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 09:15:27 AI_Player.update()		1110,	1010,	1101,	1010,	101,	1110,	1100
2017-01-04 09:15:27 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-04 09:15:27 AI_Player.update()		1010,	1010,	110,	11,	110,	1010,	11
2017-01-04 09:15:27 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 09:15:27 AI_Player.update()		1101,	1010,	1001,	101,	1110,	101,	110
2017-01-04 09:15:27 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	110,	1001
2017-01-04 09:15:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:15:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:27 AI_Player.update()	update
2017-01-04 09:15:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:15:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:28 AI_Player.update()	update
2017-01-04 09:15:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:28 AI_Player.update()	Search took288ms
2017-01-04 09:15:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:28 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 09:15:28 AI_Player.update()		1110,	1010,	1101,	1010,	101,	1110,	1100
2017-01-04 09:15:28 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-04 09:15:28 AI_Player.update()		1010,	1010,	110,	11,	110,	1010,	11
2017-01-04 09:15:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 09:15:28 AI_Player.update()		1010,	1001,	101,	1110,	101,	110,	1101
2017-01-04 09:15:28 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	110,	1001
2017-01-04 09:15:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:15:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:28 AI_Player.update()	update
2017-01-04 09:15:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:15:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:28 AI_Player.update()	update
2017-01-04 09:15:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:28 AI_Player.update()	Search took318ms
2017-01-04 09:15:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:28 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 09:15:28 AI_Player.update()		1010,	1101,	1010,	101,	1110,	1100,	1110
2017-01-04 09:15:28 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-04 09:15:28 AI_Player.update()		1010,	1010,	110,	11,	110,	1010,	11
2017-01-04 09:15:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 09:15:28 AI_Player.update()		1010,	1001,	101,	1110,	101,	110,	1101
2017-01-04 09:15:28 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	110,	1001
2017-01-04 09:15:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:28 GameBoard.setupTreasurePanel()	4 2
2017-01-04 09:15:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:29 AI_Player.update()	update
2017-01-04 09:15:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:29 AI_Player.update()	update
2017-01-04 09:15:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:29 AI_Player.update()	Search took424ms
2017-01-04 09:15:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:29 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-04 09:15:29 AI_Player.update()		1010,	1101,	1010,	101,	1110,	110,	1110
2017-01-04 09:15:29 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 09:15:29 AI_Player.update()		1010,	1010,	110,	11,	110,	110,	11
2017-01-04 09:15:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 09:15:29 AI_Player.update()		1010,	1001,	101,	1110,	101,	110,	1101
2017-01-04 09:15:29 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-04 09:15:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:29 AI_Player.update()	update
2017-01-04 09:15:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:29 AI_Player.update()	update
2017-01-04 09:15:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:29 AI_Player.update()	Search took91ms
2017-01-04 09:15:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:29 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-04 09:15:29 AI_Player.update()		1010,	1101,	1010,	101,	1110,	110,	1110
2017-01-04 09:15:29 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 09:15:29 AI_Player.update()		1010,	110,	11,	110,	110,	11,	1010
2017-01-04 09:15:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 09:15:29 AI_Player.update()		1010,	1001,	101,	1110,	101,	110,	1101
2017-01-04 09:15:29 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-04 09:15:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:29 AI_Player.update()	update
2017-01-04 09:15:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:29 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:30 AI_Player.update()	update
2017-01-04 09:15:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:30 AI_Player.update()	Search took287ms
2017-01-04 09:15:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:30 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 09:15:30 AI_Player.update()		1010,	1101,	1010,	101,	1110,	1100,	1110
2017-01-04 09:15:30 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-04 09:15:30 AI_Player.update()		1010,	110,	11,	110,	110,	1010,	1010
2017-01-04 09:15:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 09:15:30 AI_Player.update()		1010,	1001,	101,	1110,	101,	110,	1101
2017-01-04 09:15:30 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	110,	1001
2017-01-04 09:15:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:30 AI_Player.update()	update
2017-01-04 09:15:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:30 AI_Player.update()	update
2017-01-04 09:15:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:30 AI_Player.update()	Search took113ms
2017-01-04 09:15:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:30 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-04 09:15:30 AI_Player.update()		1010,	1101,	1010,	101,	1110,	110,	1110
2017-01-04 09:15:30 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 09:15:30 AI_Player.update()		1010,	110,	11,	110,	110,	11,	1010
2017-01-04 09:15:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-04 09:15:30 AI_Player.update()		1010,	1001,	101,	1110,	101,	110,	1101
2017-01-04 09:15:30 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-04 09:15:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:30 AI_Player.update()	update
2017-01-04 09:15:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:30 AI_Player.update()	update
2017-01-04 09:15:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:31 AI_Player.update()	Search took288ms
2017-01-04 09:15:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:31 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 09:15:31 AI_Player.update()		1010,	1101,	1010,	101,	1110,	1100,	1110
2017-01-04 09:15:31 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-04 09:15:31 AI_Player.update()		1010,	110,	11,	110,	110,	1010,	1010
2017-01-04 09:15:31 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 09:15:31 AI_Player.update()		1010,	1001,	101,	1110,	101,	110,	1101
2017-01-04 09:15:31 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	110,	1001
2017-01-04 09:15:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:31 AI_Player.update()	update
2017-01-04 09:15:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:31 AI_Player.update()	update
2017-01-04 09:15:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:31 AI_Player.update()	Search took88ms
2017-01-04 09:15:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:31 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 09:15:31 AI_Player.update()		1010,	1101,	1010,	101,	1110,	1100,	1110
2017-01-04 09:15:31 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-04 09:15:31 AI_Player.update()		1010,	110,	11,	110,	110,	1010,	1010
2017-01-04 09:15:31 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 09:15:31 AI_Player.update()		1101,	1010,	1001,	101,	1110,	101,	110
2017-01-04 09:15:31 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	110,	1001
2017-01-04 09:15:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:31 AI_Player.update()	update
2017-01-04 09:15:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:31 AI_Player.update()	update
2017-01-04 09:15:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:31 AI_Player.update()	Search took247ms
2017-01-04 09:15:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:31 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 09:15:31 AI_Player.update()		1101,	1010,	101,	1110,	1100,	1110,	1010
2017-01-04 09:15:31 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-04 09:15:31 AI_Player.update()		1010,	110,	11,	110,	110,	1010,	1010
2017-01-04 09:15:31 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 09:15:31 AI_Player.update()		1101,	1010,	1001,	101,	1110,	101,	110
2017-01-04 09:15:31 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	110,	1001
2017-01-04 09:15:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 09:15:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:32 AI_Player.update()	update
2017-01-04 09:15:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:15:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:32 AI_Player.update()	update
2017-01-04 09:15:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:32 AI_Player.update()	Search took138ms
2017-01-04 09:15:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:32 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 09:15:32 AI_Player.update()		1101,	1010,	101,	1110,	1100,	101,	1010
2017-01-04 09:15:32 AI_Player.update()		1110,	101,	1110,	11,	111,	1110,	1011
2017-01-04 09:15:32 AI_Player.update()		1010,	110,	11,	110,	110,	110,	1010
2017-01-04 09:15:32 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 09:15:32 AI_Player.update()		1101,	1010,	1001,	101,	1110,	11,	110
2017-01-04 09:15:32 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-04 09:15:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	5 3
2017-01-04 09:15:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:32 AI_Player.update()	update
2017-01-04 09:15:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:32 AI_Player.update()	update
2017-01-04 09:15:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:32 AI_Player.update()	Search took149ms
2017-01-04 09:15:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:32 AI_Player.update()		110,	110,	111,	1101,	111,	110,	11
2017-01-04 09:15:32 AI_Player.update()		1101,	1010,	101,	1001,	1100,	101,	1010
2017-01-04 09:15:32 AI_Player.update()		1110,	101,	1110,	1110,	111,	1110,	1011
2017-01-04 09:15:32 AI_Player.update()		1010,	110,	11,	11,	110,	110,	1010
2017-01-04 09:15:32 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:15:32 AI_Player.update()		1101,	1010,	1001,	1010,	1110,	11,	110
2017-01-04 09:15:32 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-04 09:15:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:32 AI_Player.update()	update
2017-01-04 09:15:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:32 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:32 AI_Player.update()	update
2017-01-04 09:15:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:33 AI_Player.update()	Search took400ms
2017-01-04 09:15:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:33 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-04 09:15:33 AI_Player.update()		1101,	1010,	101,	1001,	1100,	1110,	1010
2017-01-04 09:15:33 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-04 09:15:33 AI_Player.update()		1010,	110,	11,	11,	110,	1010,	1010
2017-01-04 09:15:33 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 09:15:33 AI_Player.update()		1101,	1010,	1001,	1010,	1110,	101,	110
2017-01-04 09:15:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 09:15:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:33 AI_Player.update()	update
2017-01-04 09:15:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:33 AI_Player.update()	update
2017-01-04 09:15:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:33 AI_Player.update()	Search took264ms
2017-01-04 09:15:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:33 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-04 09:15:33 AI_Player.update()		1101,	110,	101,	1001,	1100,	1110,	1010
2017-01-04 09:15:33 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-04 09:15:33 AI_Player.update()		1010,	101,	11,	11,	110,	1010,	1010
2017-01-04 09:15:33 AI_Player.update()		1110,	110,	1101,	110,	1011,	11,	1011
2017-01-04 09:15:33 AI_Player.update()		1101,	101,	1001,	1010,	1110,	101,	110
2017-01-04 09:15:33 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-04 09:15:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:33 AI_Player.update()	update
2017-01-04 09:15:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:33 AI_Player.update()	update
2017-01-04 09:15:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:33 AI_Player.update()	Search took42ms
2017-01-04 09:15:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:33 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-04 09:15:33 AI_Player.update()		1101,	1010,	101,	1001,	1100,	1110,	1010
2017-01-04 09:15:33 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-04 09:15:33 AI_Player.update()		1010,	110,	11,	11,	110,	1010,	1010
2017-01-04 09:15:33 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 09:15:33 AI_Player.update()		1101,	1010,	1001,	1010,	1110,	101,	110
2017-01-04 09:15:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 09:15:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:34 AI_Player.update()	update
2017-01-04 09:15:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:34 AI_Player.update()	update
2017-01-04 09:15:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:34 AI_Player.update()	Search took104ms
2017-01-04 09:15:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:34 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 09:15:34 AI_Player.update()		1101,	1010,	101,	1101,	1100,	1110,	1010
2017-01-04 09:15:34 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-04 09:15:34 AI_Player.update()		1010,	110,	11,	1110,	110,	1010,	1010
2017-01-04 09:15:34 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 09:15:34 AI_Player.update()		1101,	1010,	1001,	110,	1110,	101,	110
2017-01-04 09:15:34 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-04 09:15:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:34 AI_Player.update()	update
2017-01-04 09:15:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:15:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:34 AI_Player.update()	update
2017-01-04 09:15:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:34 AI_Player.update()	Search took98ms
2017-01-04 09:15:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:34 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 09:15:34 AI_Player.update()		1101,	1010,	101,	1101,	1100,	1110,	1010
2017-01-04 09:15:34 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-04 09:15:34 AI_Player.update()		1010,	110,	11,	1110,	110,	1010,	1010
2017-01-04 09:15:34 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 09:15:34 AI_Player.update()		1010,	1001,	110,	1110,	101,	110,	1101
2017-01-04 09:15:34 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-04 09:15:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:15:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:34 AI_Player.update()	update
2017-01-04 09:15:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:15:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:34 AI_Player.update()	update
2017-01-04 09:15:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:34 AI_Player.update()	Search took145ms
2017-01-04 09:15:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:34 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 09:15:34 AI_Player.update()		1101,	101,	101,	1101,	1100,	1110,	1010
2017-01-04 09:15:34 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-04 09:15:34 AI_Player.update()		1010,	101,	11,	1110,	110,	1010,	1010
2017-01-04 09:15:34 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-04 09:15:34 AI_Player.update()		1010,	1100,	110,	1110,	101,	110,	1101
2017-01-04 09:15:34 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-04 09:15:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:34 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:15:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:35 AI_Player.update()	update
2017-01-04 09:15:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:15:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:35 AI_Player.update()	update
2017-01-04 09:15:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:35 AI_Player.update()	Search took129ms
2017-01-04 09:15:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:35 AI_Player.update()		110,	1010,	111,	101,	111,	1110,	11
2017-01-04 09:15:35 AI_Player.update()		1101,	101,	101,	1101,	1100,	110,	1010
2017-01-04 09:15:35 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 09:15:35 AI_Player.update()		1010,	101,	11,	1110,	110,	11,	1010
2017-01-04 09:15:35 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 09:15:35 AI_Player.update()		1010,	1100,	110,	1110,	101,	110,	1101
2017-01-04 09:15:35 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 09:15:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:15:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:35 AI_Player.update()	update
2017-01-04 09:15:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:15:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:35 AI_Player.update()	update
2017-01-04 09:15:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:35 AI_Player.update()	Search took59ms
2017-01-04 09:15:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:35 AI_Player.update()		110,	1010,	111,	1101,	111,	1110,	11
2017-01-04 09:15:35 AI_Player.update()		1101,	101,	101,	1001,	1100,	110,	1010
2017-01-04 09:15:35 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-04 09:15:35 AI_Player.update()		1010,	101,	11,	11,	110,	11,	1010
2017-01-04 09:15:35 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	110,	1011
2017-01-04 09:15:35 AI_Player.update()		1010,	1100,	110,	1010,	101,	110,	1101
2017-01-04 09:15:35 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-04 09:15:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:15:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:35 AI_Player.update()	update
2017-01-04 09:15:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:35 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:15:35 AI_Player.update()	Player a has won!
2017-01-04 09:15:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:15:35 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:15:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:15:35 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 09:15:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:35 AI_Player.update()	update
2017-01-04 09:15:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:36 AI_Player.update()	Search took326ms
2017-01-04 09:15:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:36 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 09:15:36 AI_Player.update()		1100,	101,	11,	111,	11,	110,	1110
2017-01-04 09:15:36 AI_Player.update()		1110,	1011,	1110,	110,	111,	1101,	1011
2017-01-04 09:15:36 AI_Player.update()		1100,	1010,	1101,	1010,	1100,	1010,	101
2017-01-04 09:15:36 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1001,	1011
2017-01-04 09:15:36 AI_Player.update()		1001,	1100,	1101,	101,	11,	101,	1110
2017-01-04 09:15:36 AI_Player.update()		1100,	110,	1101,	11,	1101,	111,	1001
2017-01-04 09:15:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:36 AI_Player.update()	update
2017-01-04 09:15:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:36 AI_Player.update()	update
2017-01-04 09:15:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:36 AI_Player.update()	Search took519ms
2017-01-04 09:15:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:36 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 09:15:36 AI_Player.update()		1100,	101,	11,	111,	11,	1010,	1110
2017-01-04 09:15:36 AI_Player.update()		1110,	1011,	1110,	110,	111,	110,	1011
2017-01-04 09:15:36 AI_Player.update()		1100,	1010,	1101,	1010,	1100,	1101,	101
2017-01-04 09:15:36 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:15:36 AI_Player.update()		1001,	1100,	1101,	101,	11,	1001,	1110
2017-01-04 09:15:36 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 09:15:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:36 AI_Player.update()	update
2017-01-04 09:15:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:37 AI_Player.update()	update
2017-01-04 09:15:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:37 AI_Player.update()	Search took414ms
2017-01-04 09:15:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:37 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 09:15:37 AI_Player.update()		1100,	101,	11,	111,	11,	1010,	1110
2017-01-04 09:15:37 AI_Player.update()		1110,	1011,	1110,	110,	111,	110,	1011
2017-01-04 09:15:37 AI_Player.update()		1010,	1101,	1010,	1100,	1101,	101,	1100
2017-01-04 09:15:37 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1010,	1011
2017-01-04 09:15:37 AI_Player.update()		1001,	1100,	1101,	101,	11,	1001,	1110
2017-01-04 09:15:37 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 09:15:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:37 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:37 AI_Player.update()	update
2017-01-04 09:15:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:37 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:37 AI_Player.update()	update
2017-01-04 09:15:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:38 AI_Player.update()	Search took756ms
2017-01-04 09:15:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:38 AI_Player.update()		110,	1010,	111,	111,	111,	111,	11
2017-01-04 09:15:38 AI_Player.update()		1100,	101,	11,	110,	11,	1010,	1110
2017-01-04 09:15:38 AI_Player.update()		1110,	1011,	1110,	1100,	111,	110,	1011
2017-01-04 09:15:38 AI_Player.update()		1010,	1101,	1010,	1001,	1101,	101,	1100
2017-01-04 09:15:38 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-04 09:15:38 AI_Player.update()		1001,	1100,	1101,	11,	11,	1001,	1110
2017-01-04 09:15:38 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 09:15:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:38 AI_Player.update()	update
2017-01-04 09:15:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:15:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:38 AI_Player.update()	update
2017-01-04 09:15:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:39 AI_Player.update()	Search took729ms
2017-01-04 09:15:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:39 AI_Player.update()		110,	1010,	111,	111,	111,	111,	11
2017-01-04 09:15:39 AI_Player.update()		1110,	1100,	101,	11,	110,	11,	1010
2017-01-04 09:15:39 AI_Player.update()		1110,	1011,	1110,	1100,	111,	110,	1011
2017-01-04 09:15:39 AI_Player.update()		1010,	1101,	1010,	1001,	1101,	101,	1100
2017-01-04 09:15:39 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-04 09:15:39 AI_Player.update()		1001,	1100,	1101,	11,	11,	1001,	1110
2017-01-04 09:15:39 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 09:15:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	2 3
2017-01-04 09:15:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:39 AI_Player.update()	update
2017-01-04 09:15:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:15:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:39 AI_Player.update()	update
2017-01-04 09:15:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:40 AI_Player.update()	Search took675ms
2017-01-04 09:15:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:40 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 09:15:40 AI_Player.update()		1110,	1010,	101,	11,	110,	11,	1010
2017-01-04 09:15:40 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-04 09:15:40 AI_Player.update()		1010,	1011,	1010,	1001,	1101,	101,	1100
2017-01-04 09:15:40 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:15:40 AI_Player.update()		1001,	111,	1101,	11,	11,	1001,	1110
2017-01-04 09:15:40 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:15:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:15:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:40 AI_Player.update()	update
2017-01-04 09:15:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:40 AI_Player.update()	update
2017-01-04 09:15:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:40 AI_Player.update()	Search took419ms
2017-01-04 09:15:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:40 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 09:15:40 AI_Player.update()		1110,	1010,	101,	11,	110,	11,	1010
2017-01-04 09:15:40 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-04 09:15:40 AI_Player.update()		1100,	1010,	1011,	1010,	1001,	1101,	101
2017-01-04 09:15:40 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:15:40 AI_Player.update()		1001,	111,	1101,	11,	11,	1001,	1110
2017-01-04 09:15:40 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:15:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:40 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:41 AI_Player.update()	update
2017-01-04 09:15:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:41 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:41 AI_Player.update()	update
2017-01-04 09:15:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:41 AI_Player.update()	Search took320ms
2017-01-04 09:15:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:41 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 09:15:41 AI_Player.update()		1010,	101,	11,	110,	11,	1010,	1110
2017-01-04 09:15:41 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-04 09:15:41 AI_Player.update()		1100,	1010,	1011,	1010,	1001,	1101,	101
2017-01-04 09:15:41 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:15:41 AI_Player.update()		1001,	111,	1101,	11,	11,	1001,	1110
2017-01-04 09:15:41 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:15:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:41 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:41 AI_Player.update()	update
2017-01-04 09:15:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:41 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:41 AI_Player.update()	update
2017-01-04 09:15:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:42 AI_Player.update()	Search took558ms
2017-01-04 09:15:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:42 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 09:15:42 AI_Player.update()		1010,	101,	11,	110,	11,	1010,	1110
2017-01-04 09:15:42 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-04 09:15:42 AI_Player.update()		101,	1100,	1010,	1011,	1010,	1001,	1101
2017-01-04 09:15:42 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:15:42 AI_Player.update()		1001,	111,	1101,	11,	11,	1001,	1110
2017-01-04 09:15:42 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:15:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:42 AI_Player.update()	update
2017-01-04 09:15:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:42 AI_Player.update()	update
2017-01-04 09:15:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:42 AI_Player.update()	Search took397ms
2017-01-04 09:15:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:42 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 09:15:42 AI_Player.update()		1010,	101,	11,	110,	11,	1010,	1110
2017-01-04 09:15:42 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-04 09:15:42 AI_Player.update()		101,	1100,	1010,	1011,	1010,	1001,	1101
2017-01-04 09:15:42 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:15:42 AI_Player.update()		111,	1101,	11,	11,	1001,	1110,	1001
2017-01-04 09:15:42 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:15:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:42 AI_Player.update()	update
2017-01-04 09:15:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:43 AI_Player.update()	update
2017-01-04 09:15:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:43 AI_Player.update()	Search took453ms
2017-01-04 09:15:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:43 AI_Player.update()		110,	110,	111,	111,	111,	101,	11
2017-01-04 09:15:43 AI_Player.update()		1010,	101,	11,	110,	11,	111,	1110
2017-01-04 09:15:43 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:15:43 AI_Player.update()		101,	1100,	1010,	1011,	1010,	110,	1101
2017-01-04 09:15:43 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:15:43 AI_Player.update()		111,	1101,	11,	11,	1001,	1010,	1001
2017-01-04 09:15:43 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:15:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:43 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:43 AI_Player.update()	update
2017-01-04 09:15:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:43 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:43 AI_Player.update()	update
2017-01-04 09:15:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:43 AI_Player.update()	Search took118ms
2017-01-04 09:15:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:43 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 09:15:43 AI_Player.update()		1010,	101,	11,	110,	11,	1010,	1110
2017-01-04 09:15:43 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-04 09:15:43 AI_Player.update()		101,	1100,	1010,	1011,	1010,	1001,	1101
2017-01-04 09:15:43 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-04 09:15:43 AI_Player.update()		111,	1101,	11,	11,	1001,	1110,	1001
2017-01-04 09:15:43 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 09:15:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:43 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:43 AI_Player.update()	update
2017-01-04 09:15:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:43 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:43 AI_Player.update()	update
2017-01-04 09:15:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:44 AI_Player.update()	Search took387ms
2017-01-04 09:15:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:44 AI_Player.update()		110,	110,	111,	111,	111,	101,	11
2017-01-04 09:15:44 AI_Player.update()		1010,	101,	11,	110,	11,	111,	1110
2017-01-04 09:15:44 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:15:44 AI_Player.update()		101,	1100,	1010,	1011,	1010,	110,	1101
2017-01-04 09:15:44 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:15:44 AI_Player.update()		111,	1101,	11,	11,	1001,	1010,	1001
2017-01-04 09:15:44 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:15:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:44 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:44 AI_Player.update()	update
2017-01-04 09:15:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:44 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:44 AI_Player.update()	update
2017-01-04 09:15:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:44 AI_Player.update()	Search took36ms
2017-01-04 09:15:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:44 AI_Player.update()		110,	110,	111,	111,	111,	101,	11
2017-01-04 09:15:44 AI_Player.update()		1010,	101,	11,	110,	11,	111,	1110
2017-01-04 09:15:44 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:15:44 AI_Player.update()		1101,	101,	1100,	1010,	1011,	1010,	110
2017-01-04 09:15:44 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:15:44 AI_Player.update()		111,	1101,	11,	11,	1001,	1010,	1001
2017-01-04 09:15:44 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:15:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:44 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:44 AI_Player.update()	update
2017-01-04 09:15:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:44 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:44 AI_Player.update()	update
2017-01-04 09:15:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:45 AI_Player.update()	Search took184ms
2017-01-04 09:15:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:45 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 09:15:45 AI_Player.update()		1010,	1100,	11,	110,	11,	111,	1110
2017-01-04 09:15:45 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-04 09:15:45 AI_Player.update()		1101,	1101,	1100,	1010,	1011,	1010,	110
2017-01-04 09:15:45 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:15:45 AI_Player.update()		111,	1100,	11,	11,	1001,	1010,	1001
2017-01-04 09:15:45 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:15:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:45 AI_Player.update()	update
2017-01-04 09:15:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:45 AI_Player.update()	update
2017-01-04 09:15:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:45 AI_Player.update()	Search took139ms
2017-01-04 09:15:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:45 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 09:15:45 AI_Player.update()		1010,	1100,	11,	110,	11,	111,	1110
2017-01-04 09:15:45 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-04 09:15:45 AI_Player.update()		1101,	1100,	1010,	1011,	1010,	110,	1101
2017-01-04 09:15:45 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:15:45 AI_Player.update()		111,	1100,	11,	11,	1001,	1010,	1001
2017-01-04 09:15:45 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:15:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:15:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:45 AI_Player.update()	update
2017-01-04 09:15:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:15:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:45 AI_Player.update()	update
2017-01-04 09:15:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:46 AI_Player.update()	Search took457ms
2017-01-04 09:15:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:46 AI_Player.update()		110,	101,	111,	111,	111,	1110,	11
2017-01-04 09:15:46 AI_Player.update()		1010,	1100,	11,	110,	11,	101,	1110
2017-01-04 09:15:46 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-04 09:15:46 AI_Player.update()		1101,	1100,	1010,	1011,	1010,	1010,	1101
2017-01-04 09:15:46 AI_Player.update()		1110,	1101,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:46 AI_Player.update()		111,	1100,	11,	11,	1001,	1001,	1001
2017-01-04 09:15:46 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 09:15:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	5 5
2017-01-04 09:15:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:46 AI_Player.update()	update
2017-01-04 09:15:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:15:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:46 AI_Player.update()	update
2017-01-04 09:15:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:47 AI_Player.update()	Search took861ms
2017-01-04 09:15:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:47 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 09:15:47 AI_Player.update()		1010,	1100,	11,	110,	11,	111,	1110
2017-01-04 09:15:47 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-04 09:15:47 AI_Player.update()		1101,	1100,	1010,	1011,	1010,	110,	1101
2017-01-04 09:15:47 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:15:47 AI_Player.update()		111,	1100,	11,	11,	1001,	1010,	1001
2017-01-04 09:15:47 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:15:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	6 5
2017-01-04 09:15:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:47 AI_Player.update()	update
2017-01-04 09:15:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:15:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:47 AI_Player.update()	update
2017-01-04 09:15:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:47 AI_Player.update()	Search took463ms
2017-01-04 09:15:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:47 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 09:15:47 AI_Player.update()		1100,	11,	110,	11,	111,	1110,	1010
2017-01-04 09:15:47 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-04 09:15:47 AI_Player.update()		1101,	1100,	1010,	1011,	1010,	110,	1101
2017-01-04 09:15:47 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-04 09:15:47 AI_Player.update()		111,	1100,	11,	11,	1001,	1010,	1001
2017-01-04 09:15:47 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-04 09:15:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	6 6
2017-01-04 09:15:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:47 AI_Player.update()	update
2017-01-04 09:15:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:47 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:15:47 AI_Player.update()	Player a has won!
2017-01-04 09:15:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:15:47 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:15:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:15:47 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 09:15:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:48 AI_Player.update()	update
2017-01-04 09:15:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:48 AI_Player.update()	Search took62ms
2017-01-04 09:15:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:48 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:48 AI_Player.update()		1100,	11,	1011,	1001,	101,	1110,	11
2017-01-04 09:15:48 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:48 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:48 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:48 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1110
2017-01-04 09:15:48 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:48 AI_Player.update()	update
2017-01-04 09:15:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:48 AI_Player.update()	update
2017-01-04 09:15:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:48 AI_Player.update()	Search took35ms
2017-01-04 09:15:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:48 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:48 AI_Player.update()		11,	1100,	11,	1011,	1001,	101,	1110
2017-01-04 09:15:48 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:48 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:48 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:48 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1110
2017-01-04 09:15:48 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:48 AI_Player.update()	update
2017-01-04 09:15:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:48 AI_Player.update()	update
2017-01-04 09:15:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:48 AI_Player.update()	Search took385ms
2017-01-04 09:15:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:48 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:48 AI_Player.update()		1100,	11,	1011,	1001,	101,	1110,	11
2017-01-04 09:15:48 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:48 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:48 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:48 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1110
2017-01-04 09:15:48 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:49 AI_Player.update()	update
2017-01-04 09:15:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:49 AI_Player.update()	update
2017-01-04 09:15:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:49 AI_Player.update()	Search took279ms
2017-01-04 09:15:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:49 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:49 AI_Player.update()		1100,	110,	1011,	1001,	101,	1110,	11
2017-01-04 09:15:49 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:49 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:49 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:49 AI_Player.update()		1010,	110,	11,	101,	1001,	11,	1110
2017-01-04 09:15:49 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:49 AI_Player.update()	update
2017-01-04 09:15:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:49 AI_Player.update()	update
2017-01-04 09:15:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:49 AI_Player.update()	Search took84ms
2017-01-04 09:15:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:49 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:49 AI_Player.update()		1100,	11,	1011,	1001,	101,	1110,	11
2017-01-04 09:15:49 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:49 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:49 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:49 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1110
2017-01-04 09:15:49 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:49 AI_Player.update()	update
2017-01-04 09:15:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:49 AI_Player.update()	update
2017-01-04 09:15:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:50 AI_Player.update()	Search took240ms
2017-01-04 09:15:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:50 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:50 AI_Player.update()		11,	1100,	11,	1011,	1001,	101,	1110
2017-01-04 09:15:50 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:50 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:50 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:50 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1110
2017-01-04 09:15:50 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:15:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:50 AI_Player.update()	update
2017-01-04 09:15:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:15:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:50 AI_Player.update()	update
2017-01-04 09:15:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:50 AI_Player.update()	Search took371ms
2017-01-04 09:15:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:50 AI_Player.update()		110,	1100,	111,	1110,	111,	11,	11
2017-01-04 09:15:50 AI_Player.update()		11,	110,	11,	1011,	1001,	101,	1110
2017-01-04 09:15:50 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:50 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:50 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:50 AI_Player.update()		1010,	110,	11,	101,	1001,	11,	1110
2017-01-04 09:15:50 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:15:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:50 AI_Player.update()	update
2017-01-04 09:15:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:50 AI_Player.update()	update
2017-01-04 09:15:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:50 AI_Player.update()	Search took29ms
2017-01-04 09:15:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:50 AI_Player.update()		110,	1100,	111,	1110,	111,	11,	11
2017-01-04 09:15:50 AI_Player.update()		110,	11,	1011,	1001,	101,	1110,	11
2017-01-04 09:15:50 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:50 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:50 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:50 AI_Player.update()		1010,	110,	11,	101,	1001,	11,	1110
2017-01-04 09:15:50 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:50 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:51 AI_Player.update()	update
2017-01-04 09:15:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:51 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:51 AI_Player.update()	update
2017-01-04 09:15:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:51 AI_Player.update()	Search took379ms
2017-01-04 09:15:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:51 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:51 AI_Player.update()		110,	110,	1011,	1001,	101,	1110,	11
2017-01-04 09:15:51 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:51 AI_Player.update()		101,	11,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:51 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:51 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1110
2017-01-04 09:15:51 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:51 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:51 AI_Player.update()	update
2017-01-04 09:15:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:51 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:51 AI_Player.update()	update
2017-01-04 09:15:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:51 AI_Player.update()	Search took32ms
2017-01-04 09:15:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:51 AI_Player.update()		110,	1100,	111,	1110,	111,	11,	11
2017-01-04 09:15:51 AI_Player.update()		110,	11,	1011,	1001,	101,	1110,	11
2017-01-04 09:15:51 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:51 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:51 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:51 AI_Player.update()		1010,	110,	11,	101,	1001,	11,	1110
2017-01-04 09:15:51 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:51 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:51 AI_Player.update()	update
2017-01-04 09:15:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:51 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:51 AI_Player.update()	update
2017-01-04 09:15:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:52 AI_Player.update()	Search took404ms
2017-01-04 09:15:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:52 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:52 AI_Player.update()		110,	110,	1011,	1001,	101,	1110,	11
2017-01-04 09:15:52 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:52 AI_Player.update()		101,	11,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:52 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:52 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1110
2017-01-04 09:15:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:52 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:52 AI_Player.update()	update
2017-01-04 09:15:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:52 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:52 AI_Player.update()	update
2017-01-04 09:15:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:52 AI_Player.update()	Search took59ms
2017-01-04 09:15:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:52 AI_Player.update()		110,	1100,	111,	1110,	111,	11,	11
2017-01-04 09:15:52 AI_Player.update()		110,	11,	1011,	1001,	101,	1110,	11
2017-01-04 09:15:52 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:52 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:52 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:52 AI_Player.update()		1010,	110,	11,	101,	1001,	11,	1110
2017-01-04 09:15:52 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:52 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:52 AI_Player.update()	update
2017-01-04 09:15:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:52 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:52 AI_Player.update()	update
2017-01-04 09:15:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:52 AI_Player.update()	Search took92ms
2017-01-04 09:15:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:52 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:52 AI_Player.update()		110,	110,	1011,	1001,	101,	1110,	11
2017-01-04 09:15:52 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:52 AI_Player.update()		101,	11,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:52 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:52 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1110
2017-01-04 09:15:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:52 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:53 AI_Player.update()	update
2017-01-04 09:15:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:53 AI_Player.update()	update
2017-01-04 09:15:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:53 AI_Player.update()	Search took39ms
2017-01-04 09:15:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:53 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:53 AI_Player.update()		110,	1011,	1001,	101,	1110,	11,	110
2017-01-04 09:15:53 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:53 AI_Player.update()		101,	11,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:53 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:53 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1110
2017-01-04 09:15:53 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:53 AI_Player.update()	update
2017-01-04 09:15:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:53 AI_Player.update()	update
2017-01-04 09:15:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:53 AI_Player.update()	Search took351ms
2017-01-04 09:15:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:53 AI_Player.update()		110,	1011,	111,	1110,	111,	11,	11
2017-01-04 09:15:53 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:15:53 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 09:15:53 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:53 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:53 AI_Player.update()		1010,	1100,	11,	101,	1001,	11,	1110
2017-01-04 09:15:53 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:53 AI_Player.update()	update
2017-01-04 09:15:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:53 AI_Player.update()	update
2017-01-04 09:15:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:54 AI_Player.update()	Search took87ms
2017-01-04 09:15:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:54 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:15:54 AI_Player.update()		110,	11,	1001,	101,	1110,	11,	110
2017-01-04 09:15:54 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-04 09:15:54 AI_Player.update()		101,	11,	110,	1001,	1011,	1010,	1010
2017-01-04 09:15:54 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-04 09:15:54 AI_Player.update()		1010,	11,	11,	101,	1001,	11,	1110
2017-01-04 09:15:54 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1100,	1001
2017-01-04 09:15:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:54 AI_Player.update()	update
2017-01-04 09:15:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:54 AI_Player.update()	update
2017-01-04 09:15:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:54 AI_Player.update()	Search took354ms
2017-01-04 09:15:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:54 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:15:54 AI_Player.update()		110,	11,	1001,	101,	1110,	11,	110
2017-01-04 09:15:54 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:54 AI_Player.update()		101,	11,	110,	1001,	1011,	110,	1010
2017-01-04 09:15:54 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:54 AI_Player.update()		1010,	11,	11,	101,	1001,	1100,	1110
2017-01-04 09:15:54 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	2 2
2017-01-04 09:15:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:54 AI_Player.update()	update
2017-01-04 09:15:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:15:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:54 AI_Player.update()	update
2017-01-04 09:15:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:54 AI_Player.update()	Search took77ms
2017-01-04 09:15:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:54 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:15:54 AI_Player.update()		110,	110,	11,	1001,	101,	1110,	11
2017-01-04 09:15:54 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:54 AI_Player.update()		101,	11,	110,	1001,	1011,	110,	1010
2017-01-04 09:15:54 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:54 AI_Player.update()		1010,	11,	11,	101,	1001,	1100,	1110
2017-01-04 09:15:54 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:54 GameBoard.setupTreasurePanel()	3 2
2017-01-04 09:15:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:55 AI_Player.update()	update
2017-01-04 09:15:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:15:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:55 AI_Player.update()	update
2017-01-04 09:15:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:55 AI_Player.update()	Search took212ms
2017-01-04 09:15:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:55 AI_Player.update()		110,	1011,	111,	1110,	111,	11,	11
2017-01-04 09:15:55 AI_Player.update()		110,	110,	11,	1001,	101,	1110,	11
2017-01-04 09:15:55 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:55 AI_Player.update()		101,	110,	110,	1001,	1011,	110,	1010
2017-01-04 09:15:55 AI_Player.update()		1110,	11,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:55 AI_Player.update()		1010,	1100,	11,	101,	1001,	1100,	1110
2017-01-04 09:15:55 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:15:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:55 AI_Player.update()	update
2017-01-04 09:15:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:15:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:55 AI_Player.update()	update
2017-01-04 09:15:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:55 AI_Player.update()	Search took252ms
2017-01-04 09:15:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:55 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:15:55 AI_Player.update()		110,	110,	11,	1001,	101,	1110,	11
2017-01-04 09:15:55 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:55 AI_Player.update()		101,	11,	110,	1001,	1011,	110,	1010
2017-01-04 09:15:55 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:55 AI_Player.update()		1010,	11,	11,	101,	1001,	1100,	1110
2017-01-04 09:15:55 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:15:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:55 AI_Player.update()	update
2017-01-04 09:15:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:55 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:15:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:55 AI_Player.update()	update
2017-01-04 09:15:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:56 AI_Player.update()	Search took272ms
2017-01-04 09:15:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:56 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:15:56 AI_Player.update()		110,	110,	11,	1001,	101,	1110,	11
2017-01-04 09:15:56 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:56 AI_Player.update()		1010,	101,	11,	110,	1001,	1011,	110
2017-01-04 09:15:56 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:56 AI_Player.update()		1010,	11,	11,	101,	1001,	1100,	1110
2017-01-04 09:15:56 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:15:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:56 AI_Player.update()	update
2017-01-04 09:15:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:15:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:56 AI_Player.update()	update
2017-01-04 09:15:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:56 AI_Player.update()	Search took192ms
2017-01-04 09:15:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:56 AI_Player.update()		110,	1011,	111,	1110,	111,	11,	11
2017-01-04 09:15:56 AI_Player.update()		110,	110,	11,	1001,	101,	1110,	11
2017-01-04 09:15:56 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:56 AI_Player.update()		1010,	110,	11,	110,	1001,	1011,	110
2017-01-04 09:15:56 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:56 AI_Player.update()		1010,	1100,	11,	101,	1001,	1100,	1110
2017-01-04 09:15:56 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	3 3
2017-01-04 09:15:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:56 AI_Player.update()	update
2017-01-04 09:15:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:56 AI_Player.update()	update
2017-01-04 09:15:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:57 AI_Player.update()	Search took405ms
2017-01-04 09:15:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:57 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:15:57 AI_Player.update()		110,	110,	11,	1001,	101,	1110,	11
2017-01-04 09:15:57 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:57 AI_Player.update()		1010,	101,	11,	110,	1001,	1011,	110
2017-01-04 09:15:57 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:57 AI_Player.update()		1010,	11,	11,	101,	1001,	1100,	1110
2017-01-04 09:15:57 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:57 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:57 AI_Player.update()	update
2017-01-04 09:15:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:57 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:57 AI_Player.update()	update
2017-01-04 09:15:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:57 AI_Player.update()	Search took163ms
2017-01-04 09:15:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:57 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:15:57 AI_Player.update()		110,	11,	1001,	101,	1110,	11,	110
2017-01-04 09:15:57 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:57 AI_Player.update()		1010,	101,	11,	110,	1001,	1011,	110
2017-01-04 09:15:57 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:57 AI_Player.update()		1010,	11,	11,	101,	1001,	1100,	1110
2017-01-04 09:15:57 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:57 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:57 AI_Player.update()	update
2017-01-04 09:15:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:57 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:57 AI_Player.update()	update
2017-01-04 09:15:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:58 AI_Player.update()	Search took175ms
2017-01-04 09:15:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:58 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:15:58 AI_Player.update()		110,	11,	1001,	101,	1110,	11,	110
2017-01-04 09:15:58 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:58 AI_Player.update()		1010,	101,	11,	110,	1001,	1011,	110
2017-01-04 09:15:58 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:58 AI_Player.update()		1110,	1010,	11,	11,	101,	1001,	1100
2017-01-04 09:15:58 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	3 4
2017-01-04 09:15:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:58 AI_Player.update()	update
2017-01-04 09:15:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:15:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:15:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:58 AI_Player.update()	update
2017-01-04 09:15:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:58 AI_Player.update()	Search took133ms
2017-01-04 09:15:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:58 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:58 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:15:58 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:58 AI_Player.update()		1010,	1100,	11,	110,	1001,	1011,	110
2017-01-04 09:15:58 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:58 AI_Player.update()		1110,	1011,	11,	11,	101,	1001,	1100
2017-01-04 09:15:58 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:58 AI_Player.update()	update
2017-01-04 09:15:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:58 AI_Player.update()	update
2017-01-04 09:15:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:58 AI_Player.update()	Search took69ms
2017-01-04 09:15:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:58 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:58 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:15:58 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:58 AI_Player.update()		1010,	1100,	11,	110,	1001,	1011,	110
2017-01-04 09:15:58 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:58 AI_Player.update()		1100,	1110,	1011,	11,	11,	101,	1001
2017-01-04 09:15:58 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:58 AI_Player.update()	update
2017-01-04 09:15:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:58 AI_Player.update()	update
2017-01-04 09:15:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:58 AI_Player.update()	Search took57ms
2017-01-04 09:15:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:58 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:58 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:15:58 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:58 AI_Player.update()		1010,	1100,	11,	110,	1001,	1011,	110
2017-01-04 09:15:58 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:58 AI_Player.update()		1110,	1011,	11,	11,	101,	1001,	1100
2017-01-04 09:15:58 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:58 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:59 AI_Player.update()	update
2017-01-04 09:15:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:59 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:59 AI_Player.update()	update
2017-01-04 09:15:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:59 AI_Player.update()	Search took158ms
2017-01-04 09:15:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:59 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:59 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:15:59 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:59 AI_Player.update()		110,	1010,	1100,	11,	110,	1001,	1011
2017-01-04 09:15:59 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:59 AI_Player.update()		1110,	1011,	11,	11,	101,	1001,	1100
2017-01-04 09:15:59 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:59 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:59 AI_Player.update()	update
2017-01-04 09:15:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:59 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:59 AI_Player.update()	update
2017-01-04 09:15:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:15:59 AI_Player.update()	Search took42ms
2017-01-04 09:15:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:59 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:59 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:15:59 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:59 AI_Player.update()		1010,	1100,	11,	110,	1001,	1011,	110
2017-01-04 09:15:59 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:59 AI_Player.update()		1110,	1011,	11,	11,	101,	1001,	1100
2017-01-04 09:15:59 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:59 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:59 AI_Player.update()	update
2017-01-04 09:15:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:59 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:15:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:59 AI_Player.update()	update
2017-01-04 09:15:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:59 AI_Player.update()	Search took176ms
2017-01-04 09:15:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:59 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:15:59 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:15:59 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:59 AI_Player.update()		110,	1010,	1100,	11,	110,	1001,	1011
2017-01-04 09:15:59 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:15:59 AI_Player.update()		1110,	1011,	11,	11,	101,	1001,	1100
2017-01-04 09:15:59 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:15:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:59 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:16:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:00 AI_Player.update()	update
2017-01-04 09:16:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:16:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:00 AI_Player.update()	update
2017-01-04 09:16:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:00 AI_Player.update()	Search took42ms
2017-01-04 09:16:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:00 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:16:00 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:16:00 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:16:00 AI_Player.update()		1011,	110,	1010,	1100,	11,	110,	1001
2017-01-04 09:16:00 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:16:00 AI_Player.update()		1110,	1011,	11,	11,	101,	1001,	1100
2017-01-04 09:16:00 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:16:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:16:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:00 AI_Player.update()	update
2017-01-04 09:16:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:16:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:00 AI_Player.update()	update
2017-01-04 09:16:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:00 AI_Player.update()	Search took239ms
2017-01-04 09:16:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:00 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:16:00 AI_Player.update()		110,	11,	1001,	101,	1110,	11,	110
2017-01-04 09:16:00 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:16:00 AI_Player.update()		1011,	101,	1010,	1100,	11,	110,	1001
2017-01-04 09:16:00 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-04 09:16:00 AI_Player.update()		1110,	1010,	11,	11,	101,	1001,	1100
2017-01-04 09:16:00 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 09:16:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	4 4
2017-01-04 09:16:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:00 AI_Player.update()	update
2017-01-04 09:16:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:16:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:16:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:16:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:16:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:00 AI_Player.update()	update
2017-01-04 09:16:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:01 AI_Player.update()	Search took340ms
2017-01-04 09:16:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:01 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:16:01 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:16:01 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:16:01 AI_Player.update()		1011,	110,	1010,	1100,	11,	110,	1001
2017-01-04 09:16:01 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:16:01 AI_Player.update()		1110,	1011,	11,	11,	101,	1001,	1100
2017-01-04 09:16:01 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:16:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:16:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:01 AI_Player.update()	update
2017-01-04 09:16:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:16:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:01 AI_Player.update()	update
2017-01-04 09:16:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:01 AI_Player.update()	Search took263ms
2017-01-04 09:16:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:01 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:16:01 AI_Player.update()		110,	11,	1001,	101,	1110,	11,	110
2017-01-04 09:16:01 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:16:01 AI_Player.update()		1011,	101,	1010,	1100,	11,	110,	1001
2017-01-04 09:16:01 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-04 09:16:01 AI_Player.update()		1110,	1010,	11,	11,	101,	1001,	1100
2017-01-04 09:16:01 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 09:16:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	5 4
2017-01-04 09:16:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:01 AI_Player.update()	update
2017-01-04 09:16:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:16:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:16:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:16:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:16:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:01 AI_Player.update()	update
2017-01-04 09:16:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:02 AI_Player.update()	Search took327ms
2017-01-04 09:16:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:02 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:16:02 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:16:02 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:16:02 AI_Player.update()		1011,	110,	1010,	1100,	11,	110,	1001
2017-01-04 09:16:02 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:16:02 AI_Player.update()		1110,	1011,	11,	11,	101,	1001,	1100
2017-01-04 09:16:02 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:16:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:02 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:16:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:02 AI_Player.update()	update
2017-01-04 09:16:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:02 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:16:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:02 AI_Player.update()	update
2017-01-04 09:16:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:02 AI_Player.update()	Search took284ms
2017-01-04 09:16:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:02 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-04 09:16:02 AI_Player.update()		110,	11,	1001,	101,	1110,	11,	110
2017-01-04 09:16:02 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 09:16:02 AI_Player.update()		1011,	101,	1010,	1100,	11,	110,	1001
2017-01-04 09:16:02 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-04 09:16:02 AI_Player.update()		1110,	1010,	11,	11,	101,	1001,	1100
2017-01-04 09:16:02 AI_Player.update()		1100,	1011,	1101,	11,	1101,	11,	1001
2017-01-04 09:16:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:02 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:16:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:02 AI_Player.update()	update
2017-01-04 09:16:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:02 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:16:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:02 AI_Player.update()	update
2017-01-04 09:16:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:03 AI_Player.update()	Search took318ms
2017-01-04 09:16:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:03 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:16:03 AI_Player.update()		110,	110,	1001,	101,	1110,	11,	110
2017-01-04 09:16:03 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:16:03 AI_Player.update()		1011,	110,	1010,	1100,	11,	110,	1001
2017-01-04 09:16:03 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:16:03 AI_Player.update()		1110,	1011,	11,	11,	101,	1001,	1100
2017-01-04 09:16:03 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:16:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:03 AI_Player.update()	update
2017-01-04 09:16:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:03 AI_Player.update()	update
2017-01-04 09:16:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:03 AI_Player.update()	Search took121ms
2017-01-04 09:16:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:03 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 09:16:03 AI_Player.update()		110,	1001,	101,	1110,	11,	110,	110
2017-01-04 09:16:03 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-04 09:16:03 AI_Player.update()		1011,	110,	1010,	1100,	11,	110,	1001
2017-01-04 09:16:03 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 09:16:03 AI_Player.update()		1110,	1011,	11,	11,	101,	1001,	1100
2017-01-04 09:16:03 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-04 09:16:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	6 4
2017-01-04 09:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:03 AI_Player.update()	update
2017-01-04 09:16:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:03 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 09:16:03 AI_Player.update()	Player a has won!
2017-01-04 09:16:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:16:03 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:16:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:16:03 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 09:16:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:16:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:03 AI_Player.update()	update
2017-01-04 09:16:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:03 AI_Player.update()	Search took39ms
2017-01-04 09:16:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:03 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 09:16:03 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:03 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:03 AI_Player.update()		1010,	1001,	11,	11,	1100,	1100,	11
2017-01-04 09:16:03 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:03 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:03 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:03 AI_Player.update()	update
2017-01-04 09:16:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:03 AI_Player.update()	update
2017-01-04 09:16:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:04 AI_Player.update()	Search took143ms
2017-01-04 09:16:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:04 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:04 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:04 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:04 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:04 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:04 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:04 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:04 AI_Player.update()	update
2017-01-04 09:16:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:04 AI_Player.update()	update
2017-01-04 09:16:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:04 AI_Player.update()	Search took165ms
2017-01-04 09:16:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:04 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:04 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:04 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:04 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:04 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:04 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:04 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:04 AI_Player.update()	update
2017-01-04 09:16:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:04 AI_Player.update()	update
2017-01-04 09:16:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:04 AI_Player.update()	Search took46ms
2017-01-04 09:16:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:04 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:04 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:04 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:04 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:04 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:04 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:04 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:04 AI_Player.update()	update
2017-01-04 09:16:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:04 AI_Player.update()	update
2017-01-04 09:16:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:05 AI_Player.update()	Search took135ms
2017-01-04 09:16:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:05 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:05 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:05 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:05 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:05 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:05 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:05 AI_Player.update()	update
2017-01-04 09:16:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:05 AI_Player.update()	update
2017-01-04 09:16:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:05 AI_Player.update()	Search took34ms
2017-01-04 09:16:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:05 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:05 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:05 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:05 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:05 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:05 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:05 AI_Player.update()	update
2017-01-04 09:16:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:05 AI_Player.update()	update
2017-01-04 09:16:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:05 AI_Player.update()	Search took128ms
2017-01-04 09:16:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:05 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:05 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:05 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:05 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:05 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:05 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:05 AI_Player.update()	update
2017-01-04 09:16:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:05 AI_Player.update()	update
2017-01-04 09:16:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:05 AI_Player.update()	Search took66ms
2017-01-04 09:16:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:05 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:05 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:05 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:05 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:05 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:05 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:06 AI_Player.update()	update
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:06 AI_Player.update()	update
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:06 AI_Player.update()	Search took141ms
2017-01-04 09:16:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:06 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:06 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:06 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:06 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:06 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:06 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:06 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:06 AI_Player.update()	update
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:06 AI_Player.update()	update
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:06 AI_Player.update()	Search took36ms
2017-01-04 09:16:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:06 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:06 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:06 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:06 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:06 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:06 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:06 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:06 AI_Player.update()	update
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:06 AI_Player.update()	update
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:06 AI_Player.update()	Search took132ms
2017-01-04 09:16:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:06 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:06 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:06 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:06 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:06 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:06 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:06 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:06 AI_Player.update()	update
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:07 AI_Player.update()	update
2017-01-04 09:16:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:07 AI_Player.update()	Search took65ms
2017-01-04 09:16:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:07 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:07 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:07 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:07 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:07 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:07 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:07 AI_Player.update()	update
2017-01-04 09:16:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:07 AI_Player.update()	update
2017-01-04 09:16:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:07 AI_Player.update()	Search took140ms
2017-01-04 09:16:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:07 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:07 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:07 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:07 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:07 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:07 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:07 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:07 AI_Player.update()	update
2017-01-04 09:16:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:07 AI_Player.update()	update
2017-01-04 09:16:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:07 AI_Player.update()	Search took62ms
2017-01-04 09:16:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:07 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:07 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:07 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:07 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:07 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:07 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:07 AI_Player.update()	update
2017-01-04 09:16:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:07 AI_Player.update()	update
2017-01-04 09:16:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:08 AI_Player.update()	Search took133ms
2017-01-04 09:16:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:08 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:08 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:08 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:08 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:08 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:08 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:08 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:08 AI_Player.update()	update
2017-01-04 09:16:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:08 AI_Player.update()	update
2017-01-04 09:16:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:08 AI_Player.update()	Search took45ms
2017-01-04 09:16:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:08 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:08 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:08 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:08 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:08 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:08 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:08 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:08 AI_Player.update()	update
2017-01-04 09:16:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:08 AI_Player.update()	update
2017-01-04 09:16:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:08 AI_Player.update()	Search took161ms
2017-01-04 09:16:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:08 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:08 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:08 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:08 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:08 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:08 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:08 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:08 AI_Player.update()	update
2017-01-04 09:16:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:08 AI_Player.update()	update
2017-01-04 09:16:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:08 AI_Player.update()	Search took36ms
2017-01-04 09:16:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:08 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:08 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:08 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:08 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:08 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:08 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:08 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:09 AI_Player.update()	update
2017-01-04 09:16:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:09 AI_Player.update()	update
2017-01-04 09:16:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:09 AI_Player.update()	Search took136ms
2017-01-04 09:16:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:09 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:09 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:09 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:09 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:09 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:09 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:09 AI_Player.update()	update
2017-01-04 09:16:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:09 AI_Player.update()	update
2017-01-04 09:16:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:09 AI_Player.update()	Search took59ms
2017-01-04 09:16:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:09 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:09 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:09 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:09 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:09 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:09 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:09 AI_Player.update()	update
2017-01-04 09:16:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:09 AI_Player.update()	update
2017-01-04 09:16:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:09 AI_Player.update()	Search took164ms
2017-01-04 09:16:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:09 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:09 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:09 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:09 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:09 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:09 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:10 AI_Player.update()	update
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:10 AI_Player.update()	update
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:10 AI_Player.update()	Search took39ms
2017-01-04 09:16:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:10 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:10 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:10 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:10 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:10 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:10 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:10 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:10 AI_Player.update()	update
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:10 AI_Player.update()	update
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:10 AI_Player.update()	Search took144ms
2017-01-04 09:16:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:10 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:10 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:10 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:10 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:10 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:10 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:10 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:10 AI_Player.update()	update
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:10 AI_Player.update()	update
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:10 AI_Player.update()	Search took44ms
2017-01-04 09:16:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:10 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:10 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:10 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:10 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:10 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:10 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:10 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:10 AI_Player.update()	update
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:11 AI_Player.update()	update
2017-01-04 09:16:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:11 AI_Player.update()	Search took160ms
2017-01-04 09:16:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:11 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:11 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:11 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:11 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:11 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:11 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:11 AI_Player.update()	update
2017-01-04 09:16:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:11 AI_Player.update()	update
2017-01-04 09:16:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:11 AI_Player.update()	Search took50ms
2017-01-04 09:16:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:11 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:11 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:11 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:11 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:11 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:11 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:11 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:11 AI_Player.update()	update
2017-01-04 09:16:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:11 AI_Player.update()	update
2017-01-04 09:16:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:11 AI_Player.update()	Search took158ms
2017-01-04 09:16:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:11 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:11 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:11 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:11 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:11 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:11 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:11 AI_Player.update()	update
2017-01-04 09:16:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:12 AI_Player.update()	update
2017-01-04 09:16:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:12 AI_Player.update()	Search took40ms
2017-01-04 09:16:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:12 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:12 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:12 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:12 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:12 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:12 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:12 AI_Player.update()	update
2017-01-04 09:16:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:12 AI_Player.update()	update
2017-01-04 09:16:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:12 AI_Player.update()	Search took167ms
2017-01-04 09:16:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:12 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:12 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:12 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:12 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:12 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:12 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:12 AI_Player.update()	update
2017-01-04 09:16:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:12 AI_Player.update()	update
2017-01-04 09:16:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:12 AI_Player.update()	Search took45ms
2017-01-04 09:16:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:12 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:12 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:12 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:12 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:12 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:12 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:12 AI_Player.update()	update
2017-01-04 09:16:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:12 AI_Player.update()	update
2017-01-04 09:16:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:13 AI_Player.update()	Search took130ms
2017-01-04 09:16:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:13 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:13 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:13 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:13 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:13 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()	update
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()	update
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:13 AI_Player.update()	Search took62ms
2017-01-04 09:16:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:13 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:13 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:13 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:13 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:13 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:13 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()	update
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()	update
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:13 AI_Player.update()	Search took163ms
2017-01-04 09:16:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:13 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:13 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:13 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:13 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:13 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()	update
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()	update
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:13 AI_Player.update()	Search took40ms
2017-01-04 09:16:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:13 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:13 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:13 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:13 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:13 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:13 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:13 AI_Player.update()	update
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:14 AI_Player.update()	update
2017-01-04 09:16:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:14 AI_Player.update()	Search took162ms
2017-01-04 09:16:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:14 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:14 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:14 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:14 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:14 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:14 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:14 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:14 AI_Player.update()	update
2017-01-04 09:16:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:14 AI_Player.update()	update
2017-01-04 09:16:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:14 AI_Player.update()	Search took38ms
2017-01-04 09:16:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:14 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:14 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:14 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:14 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:14 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:14 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:14 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:14 AI_Player.update()	update
2017-01-04 09:16:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:14 AI_Player.update()	update
2017-01-04 09:16:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:14 AI_Player.update()	Search took135ms
2017-01-04 09:16:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:14 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:14 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:14 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:14 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:14 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:14 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:14 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:14 AI_Player.update()	update
2017-01-04 09:16:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:15 AI_Player.update()	update
2017-01-04 09:16:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:15 AI_Player.update()	Search took37ms
2017-01-04 09:16:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:15 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:15 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:15 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:15 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:15 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:15 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:15 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:15 AI_Player.update()	update
2017-01-04 09:16:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:15 AI_Player.update()	update
2017-01-04 09:16:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:15 AI_Player.update()	Search took130ms
2017-01-04 09:16:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:15 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:15 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:15 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:15 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:15 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:15 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:15 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:15 AI_Player.update()	update
2017-01-04 09:16:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:15 AI_Player.update()	update
2017-01-04 09:16:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:15 AI_Player.update()	Search took39ms
2017-01-04 09:16:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:15 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:15 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:15 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:15 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:15 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:15 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:15 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:15 AI_Player.update()	update
2017-01-04 09:16:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:15 AI_Player.update()	update
2017-01-04 09:16:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:16 AI_Player.update()	Search took136ms
2017-01-04 09:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:16 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:16 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:16 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:16 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:16 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:16 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()	update
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()	update
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:16 AI_Player.update()	Search took61ms
2017-01-04 09:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:16 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:16 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:16 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:16 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:16 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:16 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()	update
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()	update
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:16 AI_Player.update()	Search took131ms
2017-01-04 09:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:16 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:16 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:16 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:16 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:16 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:16 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()	update
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()	update
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:16 AI_Player.update()	Search took44ms
2017-01-04 09:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:16 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:16 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:16 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:16 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:16 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:16 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:16 AI_Player.update()	update
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:17 AI_Player.update()	update
2017-01-04 09:16:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:17 AI_Player.update()	Search took164ms
2017-01-04 09:16:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:17 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:17 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:17 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:17 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:17 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:17 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:17 AI_Player.update()	update
2017-01-04 09:16:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:17 AI_Player.update()	update
2017-01-04 09:16:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:17 AI_Player.update()	Search took63ms
2017-01-04 09:16:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:17 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:17 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:17 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:17 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:17 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:17 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:17 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:17 AI_Player.update()	update
2017-01-04 09:16:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:17 AI_Player.update()	update
2017-01-04 09:16:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:17 AI_Player.update()	Search took164ms
2017-01-04 09:16:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:17 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:17 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:17 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:17 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:17 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:17 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:17 AI_Player.update()	update
2017-01-04 09:16:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:18 AI_Player.update()	update
2017-01-04 09:16:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:18 AI_Player.update()	Search took64ms
2017-01-04 09:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:18 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:18 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:18 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:18 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:18 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:18 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:18 AI_Player.update()	update
2017-01-04 09:16:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:18 AI_Player.update()	update
2017-01-04 09:16:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:18 AI_Player.update()	Search took173ms
2017-01-04 09:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:18 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:18 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:18 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:18 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:18 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:18 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:18 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:18 AI_Player.update()	update
2017-01-04 09:16:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:18 AI_Player.update()	update
2017-01-04 09:16:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:18 AI_Player.update()	Search took48ms
2017-01-04 09:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:18 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:18 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:18 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:18 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:18 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:18 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:18 AI_Player.update()	update
2017-01-04 09:16:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:18 AI_Player.update()	update
2017-01-04 09:16:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:19 AI_Player.update()	Search took131ms
2017-01-04 09:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:19 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:19 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:19 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:19 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:19 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:19 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:19 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:19 AI_Player.update()	update
2017-01-04 09:16:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:19 AI_Player.update()	update
2017-01-04 09:16:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:19 AI_Player.update()	Search took63ms
2017-01-04 09:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:19 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:19 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:19 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:19 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:19 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:19 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:19 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:19 AI_Player.update()	update
2017-01-04 09:16:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:19 AI_Player.update()	update
2017-01-04 09:16:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:19 AI_Player.update()	Search took137ms
2017-01-04 09:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:19 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:19 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:19 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:19 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:19 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:19 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:19 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:19 AI_Player.update()	update
2017-01-04 09:16:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:19 AI_Player.update()	update
2017-01-04 09:16:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:19 AI_Player.update()	Search took41ms
2017-01-04 09:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:19 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:19 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:19 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:19 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:19 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:19 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:19 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:20 AI_Player.update()	update
2017-01-04 09:16:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:20 AI_Player.update()	update
2017-01-04 09:16:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:20 AI_Player.update()	Search took143ms
2017-01-04 09:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:20 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:20 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:20 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:20 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:20 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:20 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:20 AI_Player.update()	update
2017-01-04 09:16:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:20 AI_Player.update()	update
2017-01-04 09:16:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:20 AI_Player.update()	Search took37ms
2017-01-04 09:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:20 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:20 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:20 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:20 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:20 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:20 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:20 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:20 AI_Player.update()	update
2017-01-04 09:16:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:20 AI_Player.update()	update
2017-01-04 09:16:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:20 AI_Player.update()	Search took138ms
2017-01-04 09:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:20 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:20 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:20 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:20 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:20 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:20 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()	update
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()	update
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:21 AI_Player.update()	Search took38ms
2017-01-04 09:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:21 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:21 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:21 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:21 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:21 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:21 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()	update
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()	update
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:21 AI_Player.update()	Search took150ms
2017-01-04 09:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:21 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:21 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:21 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:21 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:21 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:21 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()	update
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()	update
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:21 AI_Player.update()	Search took38ms
2017-01-04 09:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:21 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:21 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:21 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:21 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:21 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:21 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()	update
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:21 AI_Player.update()	update
2017-01-04 09:16:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:22 AI_Player.update()	Search took139ms
2017-01-04 09:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:22 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:22 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:22 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:22 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:22 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:22 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:22 AI_Player.update()	update
2017-01-04 09:16:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:22 AI_Player.update()	update
2017-01-04 09:16:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:22 AI_Player.update()	Search took38ms
2017-01-04 09:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:22 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:22 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:22 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:22 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:22 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:22 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:22 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:22 AI_Player.update()	update
2017-01-04 09:16:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:22 AI_Player.update()	update
2017-01-04 09:16:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:22 AI_Player.update()	Search took155ms
2017-01-04 09:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:22 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:22 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:22 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:22 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:22 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:22 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:22 AI_Player.update()	update
2017-01-04 09:16:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:22 AI_Player.update()	update
2017-01-04 09:16:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:22 AI_Player.update()	Search took38ms
2017-01-04 09:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:22 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:22 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:22 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:22 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:22 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:22 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:22 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:23 AI_Player.update()	update
2017-01-04 09:16:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:23 AI_Player.update()	update
2017-01-04 09:16:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:23 AI_Player.update()	Search took183ms
2017-01-04 09:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:23 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:23 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:23 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:23 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:23 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:23 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:23 AI_Player.update()	update
2017-01-04 09:16:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:23 AI_Player.update()	update
2017-01-04 09:16:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:23 AI_Player.update()	Search took78ms
2017-01-04 09:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:23 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:23 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:23 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:23 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:23 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:23 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:23 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:23 AI_Player.update()	update
2017-01-04 09:16:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:23 AI_Player.update()	update
2017-01-04 09:16:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:23 AI_Player.update()	Search took131ms
2017-01-04 09:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:23 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:23 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:23 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:23 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:23 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:23 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()	update
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()	update
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:24 AI_Player.update()	Search took37ms
2017-01-04 09:16:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:24 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:24 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:24 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:24 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:24 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:24 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()	update
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()	update
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:24 AI_Player.update()	Search took141ms
2017-01-04 09:16:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:24 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:24 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:24 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:24 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:24 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:24 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()	update
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()	update
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:24 AI_Player.update()	Search took37ms
2017-01-04 09:16:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:24 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:24 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:24 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:24 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:24 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:24 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()	update
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:24 AI_Player.update()	update
2017-01-04 09:16:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:25 AI_Player.update()	Search took158ms
2017-01-04 09:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:25 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:25 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:25 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:25 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:25 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:25 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:25 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:25 AI_Player.update()	update
2017-01-04 09:16:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:25 AI_Player.update()	update
2017-01-04 09:16:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:25 AI_Player.update()	Search took41ms
2017-01-04 09:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:25 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:25 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:25 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:25 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:25 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:25 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:25 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:25 AI_Player.update()	update
2017-01-04 09:16:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:25 AI_Player.update()	update
2017-01-04 09:16:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:25 AI_Player.update()	Search took137ms
2017-01-04 09:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:25 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:25 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:25 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:25 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:25 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:25 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:25 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:25 AI_Player.update()	update
2017-01-04 09:16:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:25 AI_Player.update()	update
2017-01-04 09:16:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:26 AI_Player.update()	Search took64ms
2017-01-04 09:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:26 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:26 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:26 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:26 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:26 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:26 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:26 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:26 AI_Player.update()	update
2017-01-04 09:16:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:26 AI_Player.update()	update
2017-01-04 09:16:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:26 AI_Player.update()	Search took134ms
2017-01-04 09:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:26 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:26 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:26 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:26 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:26 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:26 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:26 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:26 AI_Player.update()	update
2017-01-04 09:16:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:26 AI_Player.update()	update
2017-01-04 09:16:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:26 AI_Player.update()	Search took67ms
2017-01-04 09:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:26 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:26 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:26 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:26 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:26 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:26 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:26 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:26 AI_Player.update()	update
2017-01-04 09:16:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:26 AI_Player.update()	update
2017-01-04 09:16:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:26 AI_Player.update()	Search took138ms
2017-01-04 09:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:26 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:26 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:26 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:26 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:26 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:26 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:26 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:27 AI_Player.update()	update
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:27 AI_Player.update()	update
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:27 AI_Player.update()	Search took62ms
2017-01-04 09:16:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:27 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:27 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:27 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:27 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:27 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:27 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:27 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:27 AI_Player.update()	update
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:27 AI_Player.update()	update
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:27 AI_Player.update()	Search took132ms
2017-01-04 09:16:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:27 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:27 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:27 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:27 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:27 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:27 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:27 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:27 AI_Player.update()	update
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:27 AI_Player.update()	update
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:27 AI_Player.update()	Search took70ms
2017-01-04 09:16:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:27 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:27 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:27 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:27 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:27 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:27 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:27 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:27 AI_Player.update()	update
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:28 AI_Player.update()	update
2017-01-04 09:16:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:28 AI_Player.update()	Search took141ms
2017-01-04 09:16:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:28 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:28 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:28 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:28 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:28 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:28 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:28 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:28 AI_Player.update()	update
2017-01-04 09:16:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:28 AI_Player.update()	update
2017-01-04 09:16:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:28 AI_Player.update()	Search took39ms
2017-01-04 09:16:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:28 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:28 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:28 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:28 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:28 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:28 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:28 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:28 AI_Player.update()	update
2017-01-04 09:16:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:28 AI_Player.update()	update
2017-01-04 09:16:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:28 AI_Player.update()	Search took132ms
2017-01-04 09:16:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:28 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:28 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:28 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:28 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:28 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:28 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:28 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:28 AI_Player.update()	update
2017-01-04 09:16:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:28 AI_Player.update()	update
2017-01-04 09:16:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:29 AI_Player.update()	Search took39ms
2017-01-04 09:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:29 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:29 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:29 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:29 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:29 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:29 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:29 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:29 AI_Player.update()	update
2017-01-04 09:16:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:29 AI_Player.update()	update
2017-01-04 09:16:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:29 AI_Player.update()	Search took136ms
2017-01-04 09:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:29 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:29 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:29 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:29 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:29 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:29 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:29 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:29 AI_Player.update()	update
2017-01-04 09:16:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:29 AI_Player.update()	update
2017-01-04 09:16:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:29 AI_Player.update()	Search took67ms
2017-01-04 09:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:29 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:29 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:29 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:29 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:29 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:29 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:29 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:29 AI_Player.update()	update
2017-01-04 09:16:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:29 AI_Player.update()	update
2017-01-04 09:16:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:29 AI_Player.update()	Search took152ms
2017-01-04 09:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:29 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:29 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:29 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:29 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:29 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:29 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:29 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:30 AI_Player.update()	update
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:30 AI_Player.update()	update
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:30 AI_Player.update()	Search took39ms
2017-01-04 09:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:30 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:30 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:30 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:30 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:30 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:30 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:30 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:30 AI_Player.update()	update
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:30 AI_Player.update()	update
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:30 AI_Player.update()	Search took148ms
2017-01-04 09:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:30 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:30 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:30 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:30 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:30 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:30 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:30 AI_Player.update()	update
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:30 AI_Player.update()	update
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:30 AI_Player.update()	Search took65ms
2017-01-04 09:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:30 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:30 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:30 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:30 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:30 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:30 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:30 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:30 AI_Player.update()	update
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:31 AI_Player.update()	update
2017-01-04 09:16:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:31 AI_Player.update()	Search took133ms
2017-01-04 09:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:31 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:31 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:31 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:31 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:31 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:31 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:31 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:31 AI_Player.update()	update
2017-01-04 09:16:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:31 AI_Player.update()	update
2017-01-04 09:16:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:31 AI_Player.update()	Search took65ms
2017-01-04 09:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:31 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:31 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:31 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:31 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:31 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:31 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:31 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:31 AI_Player.update()	update
2017-01-04 09:16:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:31 AI_Player.update()	update
2017-01-04 09:16:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:31 AI_Player.update()	Search took161ms
2017-01-04 09:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:31 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:31 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:31 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:31 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:31 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:31 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:31 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:31 AI_Player.update()	update
2017-01-04 09:16:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:32 AI_Player.update()	update
2017-01-04 09:16:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:32 AI_Player.update()	Search took66ms
2017-01-04 09:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:32 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:32 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:32 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:32 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:32 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:32 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:32 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:32 AI_Player.update()	update
2017-01-04 09:16:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:32 AI_Player.update()	update
2017-01-04 09:16:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:32 AI_Player.update()	Search took138ms
2017-01-04 09:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:32 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:32 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:32 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:32 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:32 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:32 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:32 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:32 AI_Player.update()	update
2017-01-04 09:16:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:32 AI_Player.update()	update
2017-01-04 09:16:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:32 AI_Player.update()	Search took37ms
2017-01-04 09:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:32 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:32 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:32 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:32 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:32 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:32 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:32 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:32 AI_Player.update()	update
2017-01-04 09:16:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:32 AI_Player.update()	update
2017-01-04 09:16:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:33 AI_Player.update()	Search took139ms
2017-01-04 09:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:33 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:33 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:33 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:33 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:33 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:33 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()	update
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()	update
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:33 AI_Player.update()	Search took39ms
2017-01-04 09:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:33 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:33 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:33 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:33 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:33 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:33 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()	update
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()	update
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:33 AI_Player.update()	Search took133ms
2017-01-04 09:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:33 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:33 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:33 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:33 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:33 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:33 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()	update
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()	update
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:33 AI_Player.update()	Search took40ms
2017-01-04 09:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:33 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:33 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:33 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:33 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:33 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:33 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:33 AI_Player.update()	update
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:34 AI_Player.update()	update
2017-01-04 09:16:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:34 AI_Player.update()	Search took138ms
2017-01-04 09:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:34 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:34 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:34 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:34 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:34 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:34 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:34 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:34 AI_Player.update()	update
2017-01-04 09:16:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:34 AI_Player.update()	update
2017-01-04 09:16:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:34 AI_Player.update()	Search took66ms
2017-01-04 09:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:34 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:34 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:34 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:34 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:34 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:34 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:34 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:34 AI_Player.update()	update
2017-01-04 09:16:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:34 AI_Player.update()	update
2017-01-04 09:16:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:34 AI_Player.update()	Search took158ms
2017-01-04 09:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:34 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:34 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:34 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:34 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:34 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:34 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:34 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:34 AI_Player.update()	update
2017-01-04 09:16:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:35 AI_Player.update()	update
2017-01-04 09:16:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:35 AI_Player.update()	Search took63ms
2017-01-04 09:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:35 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:35 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:35 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:35 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:35 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:35 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:35 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:35 AI_Player.update()	update
2017-01-04 09:16:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:35 AI_Player.update()	update
2017-01-04 09:16:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:35 AI_Player.update()	Search took173ms
2017-01-04 09:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:35 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:35 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:35 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:35 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:35 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:35 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:35 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:35 AI_Player.update()	update
2017-01-04 09:16:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:35 AI_Player.update()	update
2017-01-04 09:16:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:35 AI_Player.update()	Search took65ms
2017-01-04 09:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:35 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:35 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:35 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:35 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:35 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:35 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:35 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:35 AI_Player.update()	update
2017-01-04 09:16:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:35 AI_Player.update()	update
2017-01-04 09:16:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:36 AI_Player.update()	Search took135ms
2017-01-04 09:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:36 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:36 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:36 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:36 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:36 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:36 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:36 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:36 AI_Player.update()	update
2017-01-04 09:16:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:36 AI_Player.update()	update
2017-01-04 09:16:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:36 AI_Player.update()	Search took39ms
2017-01-04 09:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:36 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:36 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:36 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:36 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:36 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:36 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:36 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:36 AI_Player.update()	update
2017-01-04 09:16:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:36 AI_Player.update()	update
2017-01-04 09:16:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:36 AI_Player.update()	Search took166ms
2017-01-04 09:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:36 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:36 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:36 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:36 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:36 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:36 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:36 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:36 AI_Player.update()	update
2017-01-04 09:16:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:36 AI_Player.update()	update
2017-01-04 09:16:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:36 AI_Player.update()	Search took66ms
2017-01-04 09:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:36 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:36 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:36 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:36 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:36 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:36 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:36 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:37 AI_Player.update()	update
2017-01-04 09:16:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:37 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:37 AI_Player.update()	update
2017-01-04 09:16:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:37 AI_Player.update()	Search took160ms
2017-01-04 09:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:37 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:37 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:37 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:37 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:37 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:37 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:37 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:37 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:37 AI_Player.update()	update
2017-01-04 09:16:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:37 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:37 AI_Player.update()	update
2017-01-04 09:16:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:37 AI_Player.update()	Search took40ms
2017-01-04 09:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:37 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:37 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:37 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:37 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:37 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:37 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:37 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:37 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:37 AI_Player.update()	update
2017-01-04 09:16:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:37 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:37 AI_Player.update()	update
2017-01-04 09:16:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:37 AI_Player.update()	Search took139ms
2017-01-04 09:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:37 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:37 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:37 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:37 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:37 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:37 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:37 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:37 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:38 AI_Player.update()	update
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:38 AI_Player.update()	update
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:38 AI_Player.update()	Search took68ms
2017-01-04 09:16:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:38 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:38 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:38 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:38 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:38 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:38 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:38 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:38 AI_Player.update()	update
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:38 AI_Player.update()	update
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:38 AI_Player.update()	Search took173ms
2017-01-04 09:16:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:38 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:38 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:38 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:38 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:38 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:38 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:38 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:38 AI_Player.update()	update
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:38 AI_Player.update()	update
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:38 AI_Player.update()	Search took41ms
2017-01-04 09:16:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:38 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:38 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:38 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:38 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:38 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:38 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:38 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:38 AI_Player.update()	update
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:39 AI_Player.update()	update
2017-01-04 09:16:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:39 AI_Player.update()	Search took140ms
2017-01-04 09:16:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:39 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:39 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:39 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:39 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:39 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:39 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:39 AI_Player.update()	update
2017-01-04 09:16:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:39 AI_Player.update()	update
2017-01-04 09:16:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:39 AI_Player.update()	Search took41ms
2017-01-04 09:16:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:39 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:39 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:39 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:39 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:39 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:39 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:39 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:39 AI_Player.update()	update
2017-01-04 09:16:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:39 AI_Player.update()	update
2017-01-04 09:16:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:39 AI_Player.update()	Search took134ms
2017-01-04 09:16:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:39 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:39 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:39 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:39 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:39 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:39 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:39 AI_Player.update()	update
2017-01-04 09:16:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:39 AI_Player.update()	update
2017-01-04 09:16:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:40 AI_Player.update()	Search took40ms
2017-01-04 09:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:40 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:40 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:40 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:40 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:40 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:40 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:40 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:40 AI_Player.update()	update
2017-01-04 09:16:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:40 AI_Player.update()	update
2017-01-04 09:16:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:40 AI_Player.update()	Search took140ms
2017-01-04 09:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:40 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:40 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:40 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:40 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:40 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:40 AI_Player.update()	update
2017-01-04 09:16:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:40 AI_Player.update()	update
2017-01-04 09:16:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:40 AI_Player.update()	Search took40ms
2017-01-04 09:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:40 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:40 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:40 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:40 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:40 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:40 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:40 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:40 AI_Player.update()	update
2017-01-04 09:16:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:40 AI_Player.update()	update
2017-01-04 09:16:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:40 AI_Player.update()	Search took155ms
2017-01-04 09:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:40 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:40 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:40 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:40 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:40 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:40 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:41 AI_Player.update()	update
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:41 AI_Player.update()	update
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:41 AI_Player.update()	Search took39ms
2017-01-04 09:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:41 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:41 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:41 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:41 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:41 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:41 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:41 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:41 AI_Player.update()	update
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:41 AI_Player.update()	update
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:41 AI_Player.update()	Search took142ms
2017-01-04 09:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:41 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:41 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:41 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:41 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:41 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:41 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:41 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:41 AI_Player.update()	update
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:41 AI_Player.update()	update
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:41 AI_Player.update()	Search took40ms
2017-01-04 09:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:41 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:41 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:41 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:41 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:41 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:41 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:41 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:41 AI_Player.update()	update
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:42 AI_Player.update()	update
2017-01-04 09:16:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:42 AI_Player.update()	Search took158ms
2017-01-04 09:16:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:42 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:42 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:42 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:42 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:42 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:42 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:42 AI_Player.update()	update
2017-01-04 09:16:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:42 AI_Player.update()	update
2017-01-04 09:16:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:42 AI_Player.update()	Search took39ms
2017-01-04 09:16:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:42 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:42 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:42 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:42 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:42 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:42 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:42 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:42 AI_Player.update()	update
2017-01-04 09:16:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:42 AI_Player.update()	update
2017-01-04 09:16:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:42 AI_Player.update()	Search took168ms
2017-01-04 09:16:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:42 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:42 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:42 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:42 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:42 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:42 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:42 AI_Player.update()	update
2017-01-04 09:16:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:42 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:43 AI_Player.update()	update
2017-01-04 09:16:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:43 AI_Player.update()	Search took41ms
2017-01-04 09:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:43 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:43 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:43 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:43 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:43 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:43 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:43 AI_Player.update()	update
2017-01-04 09:16:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:43 AI_Player.update()	update
2017-01-04 09:16:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:43 AI_Player.update()	Search took132ms
2017-01-04 09:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:43 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:43 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:43 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:43 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:43 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:43 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:43 AI_Player.update()	update
2017-01-04 09:16:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:43 AI_Player.update()	update
2017-01-04 09:16:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:43 AI_Player.update()	Search took38ms
2017-01-04 09:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:43 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:43 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:43 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:43 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:43 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:43 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:43 AI_Player.update()	update
2017-01-04 09:16:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:43 AI_Player.update()	update
2017-01-04 09:16:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:44 AI_Player.update()	Search took168ms
2017-01-04 09:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:44 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:44 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:44 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:44 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:44 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()	update
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()	update
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:44 AI_Player.update()	Search took66ms
2017-01-04 09:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:44 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:44 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:44 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:44 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:44 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()	update
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()	update
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:44 AI_Player.update()	Search took133ms
2017-01-04 09:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:44 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:44 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:44 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:44 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:44 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()	update
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()	update
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:44 AI_Player.update()	Search took40ms
2017-01-04 09:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:44 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:44 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:44 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:44 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:44 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:44 AI_Player.update()	update
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:45 AI_Player.update()	update
2017-01-04 09:16:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:45 AI_Player.update()	Search took167ms
2017-01-04 09:16:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:45 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:45 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:45 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:45 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:45 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:45 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:45 AI_Player.update()	update
2017-01-04 09:16:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:45 AI_Player.update()	update
2017-01-04 09:16:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:45 AI_Player.update()	Search took66ms
2017-01-04 09:16:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:45 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:45 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:45 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:45 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:45 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:45 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:45 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:45 AI_Player.update()	update
2017-01-04 09:16:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:45 AI_Player.update()	update
2017-01-04 09:16:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:45 AI_Player.update()	Search took162ms
2017-01-04 09:16:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:45 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:45 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:45 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:45 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:45 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:45 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:45 AI_Player.update()	update
2017-01-04 09:16:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:46 AI_Player.update()	update
2017-01-04 09:16:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:46 AI_Player.update()	Search took39ms
2017-01-04 09:16:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:46 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:46 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:46 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:46 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:46 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:46 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:46 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:46 AI_Player.update()	update
2017-01-04 09:16:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:46 AI_Player.update()	update
2017-01-04 09:16:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:46 AI_Player.update()	Search took167ms
2017-01-04 09:16:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:46 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:46 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:46 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:46 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:46 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:46 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:46 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:46 AI_Player.update()	update
2017-01-04 09:16:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:46 AI_Player.update()	update
2017-01-04 09:16:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:46 AI_Player.update()	Search took60ms
2017-01-04 09:16:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:46 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:46 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:46 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:46 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:46 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:46 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:46 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:46 AI_Player.update()	update
2017-01-04 09:16:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:46 AI_Player.update()	update
2017-01-04 09:16:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:47 AI_Player.update()	Search took148ms
2017-01-04 09:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:47 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:47 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:47 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:47 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:47 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:47 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:47 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:47 AI_Player.update()	update
2017-01-04 09:16:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:47 AI_Player.update()	update
2017-01-04 09:16:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:47 AI_Player.update()	Search took40ms
2017-01-04 09:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:47 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:47 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:47 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:47 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:47 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:47 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:47 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:47 AI_Player.update()	update
2017-01-04 09:16:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:47 AI_Player.update()	update
2017-01-04 09:16:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:47 AI_Player.update()	Search took138ms
2017-01-04 09:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:47 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:47 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:47 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:47 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:47 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:47 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:47 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:47 AI_Player.update()	update
2017-01-04 09:16:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:47 AI_Player.update()	update
2017-01-04 09:16:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:47 AI_Player.update()	Search took40ms
2017-01-04 09:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:47 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:47 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:47 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:47 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:47 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:47 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:47 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:48 AI_Player.update()	update
2017-01-04 09:16:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:48 AI_Player.update()	update
2017-01-04 09:16:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:48 AI_Player.update()	Search took159ms
2017-01-04 09:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:48 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:48 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:48 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:48 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:48 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:48 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:48 AI_Player.update()	update
2017-01-04 09:16:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:48 AI_Player.update()	update
2017-01-04 09:16:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:48 AI_Player.update()	Search took39ms
2017-01-04 09:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:48 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:48 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:48 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:48 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:48 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:48 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:48 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:48 AI_Player.update()	update
2017-01-04 09:16:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:48 AI_Player.update()	update
2017-01-04 09:16:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:48 AI_Player.update()	Search took167ms
2017-01-04 09:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:48 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:48 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:48 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:48 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:48 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:48 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:49 AI_Player.update()	update
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:49 AI_Player.update()	update
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:49 AI_Player.update()	Search took41ms
2017-01-04 09:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:49 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:49 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:49 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:49 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:49 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:49 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:49 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:49 AI_Player.update()	update
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:49 AI_Player.update()	update
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:49 AI_Player.update()	Search took134ms
2017-01-04 09:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:49 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:49 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:49 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:49 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:49 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:49 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:49 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:49 AI_Player.update()	update
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:49 AI_Player.update()	update
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:49 AI_Player.update()	Search took70ms
2017-01-04 09:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:49 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:49 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:49 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:49 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:49 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:49 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:49 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:49 AI_Player.update()	update
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:50 AI_Player.update()	update
2017-01-04 09:16:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:50 AI_Player.update()	Search took165ms
2017-01-04 09:16:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:50 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:50 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:50 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:50 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:50 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:50 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:50 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:50 AI_Player.update()	update
2017-01-04 09:16:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:50 AI_Player.update()	update
2017-01-04 09:16:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:50 AI_Player.update()	Search took67ms
2017-01-04 09:16:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:50 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:50 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:50 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:50 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:50 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:50 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:50 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:50 AI_Player.update()	update
2017-01-04 09:16:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:50 AI_Player.update()	update
2017-01-04 09:16:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:50 AI_Player.update()	Search took139ms
2017-01-04 09:16:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:50 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:50 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:50 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:50 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:50 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:50 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:50 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:50 AI_Player.update()	update
2017-01-04 09:16:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:50 AI_Player.update()	update
2017-01-04 09:16:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:51 AI_Player.update()	Search took41ms
2017-01-04 09:16:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:51 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:51 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:51 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:51 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:51 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:51 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:51 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:51 AI_Player.update()	update
2017-01-04 09:16:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:51 AI_Player.update()	update
2017-01-04 09:16:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:51 AI_Player.update()	Search took148ms
2017-01-04 09:16:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:51 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:51 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:51 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:51 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:51 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:51 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:51 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:51 AI_Player.update()	update
2017-01-04 09:16:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:51 AI_Player.update()	update
2017-01-04 09:16:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:51 AI_Player.update()	Search took66ms
2017-01-04 09:16:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:51 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:51 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:51 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:51 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:51 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:51 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:51 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:51 AI_Player.update()	update
2017-01-04 09:16:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:51 AI_Player.update()	update
2017-01-04 09:16:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:52 AI_Player.update()	Search took162ms
2017-01-04 09:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:52 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:52 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:52 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:52 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:52 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:52 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()	update
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()	update
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:52 AI_Player.update()	Search took71ms
2017-01-04 09:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:52 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:52 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:52 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:52 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:52 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:52 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()	update
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()	update
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:52 AI_Player.update()	Search took139ms
2017-01-04 09:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:52 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:52 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:52 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:52 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:52 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:52 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()	update
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()	update
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:52 AI_Player.update()	Search took42ms
2017-01-04 09:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:52 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:52 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:52 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:52 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:52 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:52 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:52 AI_Player.update()	update
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:53 AI_Player.update()	update
2017-01-04 09:16:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:53 AI_Player.update()	Search took159ms
2017-01-04 09:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:53 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:53 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:53 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:53 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:53 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:53 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:53 AI_Player.update()	update
2017-01-04 09:16:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:53 AI_Player.update()	update
2017-01-04 09:16:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:53 AI_Player.update()	Search took42ms
2017-01-04 09:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:53 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:53 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:53 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:53 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:53 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:53 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:53 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:53 AI_Player.update()	update
2017-01-04 09:16:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:53 AI_Player.update()	update
2017-01-04 09:16:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:53 AI_Player.update()	Search took166ms
2017-01-04 09:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:53 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:53 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:53 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:53 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:53 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:53 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:53 AI_Player.update()	update
2017-01-04 09:16:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:54 AI_Player.update()	update
2017-01-04 09:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:54 AI_Player.update()	Search took42ms
2017-01-04 09:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:54 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:54 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:54 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:54 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:54 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:54 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:54 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:54 AI_Player.update()	update
2017-01-04 09:16:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:54 AI_Player.update()	update
2017-01-04 09:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:54 AI_Player.update()	Search took135ms
2017-01-04 09:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:54 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:54 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:54 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:54 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:54 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:54 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:54 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:54 AI_Player.update()	update
2017-01-04 09:16:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:54 AI_Player.update()	update
2017-01-04 09:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:54 AI_Player.update()	Search took41ms
2017-01-04 09:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:54 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:54 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:54 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:54 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:54 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:54 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:54 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:54 AI_Player.update()	update
2017-01-04 09:16:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:54 AI_Player.update()	update
2017-01-04 09:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:55 AI_Player.update()	Search took169ms
2017-01-04 09:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:55 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:55 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:55 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:55 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:55 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:55 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:55 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:55 AI_Player.update()	update
2017-01-04 09:16:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:55 AI_Player.update()	update
2017-01-04 09:16:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:55 AI_Player.update()	Search took68ms
2017-01-04 09:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:55 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:55 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:55 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:55 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:55 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:55 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:55 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:55 AI_Player.update()	update
2017-01-04 09:16:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:55 AI_Player.update()	update
2017-01-04 09:16:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:55 AI_Player.update()	Search took136ms
2017-01-04 09:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:55 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:55 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:55 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:55 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:55 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:55 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:55 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:55 AI_Player.update()	update
2017-01-04 09:16:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:55 AI_Player.update()	update
2017-01-04 09:16:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:55 AI_Player.update()	Search took42ms
2017-01-04 09:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:55 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:55 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:55 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:55 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:55 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:55 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:55 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:56 AI_Player.update()	update
2017-01-04 09:16:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:56 AI_Player.update()	update
2017-01-04 09:16:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:56 AI_Player.update()	Search took170ms
2017-01-04 09:16:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:56 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:56 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:56 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:56 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:56 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:56 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:56 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:56 AI_Player.update()	update
2017-01-04 09:16:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:56 AI_Player.update()	update
2017-01-04 09:16:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:56 AI_Player.update()	Search took71ms
2017-01-04 09:16:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:56 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:56 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:56 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:56 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:56 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:56 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:56 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:56 AI_Player.update()	update
2017-01-04 09:16:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:56 AI_Player.update()	update
2017-01-04 09:16:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:56 AI_Player.update()	Search took138ms
2017-01-04 09:16:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:56 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:56 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:56 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:56 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:56 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:56 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:56 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:57 AI_Player.update()	update
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:57 AI_Player.update()	update
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:57 AI_Player.update()	Search took66ms
2017-01-04 09:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:57 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:57 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:57 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:57 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:57 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:57 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:57 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:57 AI_Player.update()	update
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:57 AI_Player.update()	update
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:57 AI_Player.update()	Search took142ms
2017-01-04 09:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:57 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:57 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:57 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:57 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:57 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:57 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:57 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:57 AI_Player.update()	update
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:57 AI_Player.update()	update
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:57 AI_Player.update()	Search took41ms
2017-01-04 09:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:57 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:57 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:57 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:57 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:57 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:57 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:57 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:57 AI_Player.update()	update
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:58 AI_Player.update()	update
2017-01-04 09:16:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:58 AI_Player.update()	Search took138ms
2017-01-04 09:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:58 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:58 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:58 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:58 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:58 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:58 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:58 AI_Player.update()	update
2017-01-04 09:16:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:58 AI_Player.update()	update
2017-01-04 09:16:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:58 AI_Player.update()	Search took41ms
2017-01-04 09:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:58 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:58 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:58 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:58 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:58 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:58 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:58 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:58 AI_Player.update()	update
2017-01-04 09:16:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:58 AI_Player.update()	update
2017-01-04 09:16:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:58 AI_Player.update()	Search took141ms
2017-01-04 09:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:58 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:58 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:58 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:58 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:58 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:58 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:58 AI_Player.update()	update
2017-01-04 09:16:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:58 AI_Player.update()	update
2017-01-04 09:16:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:59 AI_Player.update()	Search took56ms
2017-01-04 09:16:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:59 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:59 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:59 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:59 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:59 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:59 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:59 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:59 AI_Player.update()	update
2017-01-04 09:16:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:59 AI_Player.update()	update
2017-01-04 09:16:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:16:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:16:59 AI_Player.update()	Search took162ms
2017-01-04 09:16:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:59 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:16:59 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:59 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:16:59 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:16:59 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:16:59 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:16:59 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:59 AI_Player.update()	update
2017-01-04 09:16:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:16:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:16:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:16:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:59 AI_Player.update()	update
2017-01-04 09:16:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:16:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:16:59 AI_Player.update()	Search took72ms
2017-01-04 09:16:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:59 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:16:59 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:16:59 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:16:59 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:16:59 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:16:59 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:16:59 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:16:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:59 AI_Player.update()	update
2017-01-04 09:16:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:16:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:16:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:16:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:16:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:16:59 AI_Player.update()	update
2017-01-04 09:16:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:00 AI_Player.update()	Search took142ms
2017-01-04 09:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:00 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:00 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:00 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:00 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()	update
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()	update
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:00 AI_Player.update()	Search took71ms
2017-01-04 09:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:00 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:00 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:00 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:00 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:00 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:00 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()	update
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()	update
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:00 AI_Player.update()	Search took154ms
2017-01-04 09:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:00 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:00 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:00 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:00 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()	update
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()	update
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:00 AI_Player.update()	Search took42ms
2017-01-04 09:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:00 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:00 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:00 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:00 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:00 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:00 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:00 AI_Player.update()	update
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:01 AI_Player.update()	update
2017-01-04 09:17:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:01 AI_Player.update()	Search took168ms
2017-01-04 09:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:01 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:01 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:01 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:01 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:01 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:01 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:01 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:01 AI_Player.update()	update
2017-01-04 09:17:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:01 AI_Player.update()	update
2017-01-04 09:17:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:01 AI_Player.update()	Search took72ms
2017-01-04 09:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:01 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:01 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:01 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:01 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:01 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:01 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:01 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:01 AI_Player.update()	update
2017-01-04 09:17:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:01 AI_Player.update()	update
2017-01-04 09:17:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:01 AI_Player.update()	Search took162ms
2017-01-04 09:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:01 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:01 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:01 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:01 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:01 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:01 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:01 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()	update
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()	update
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:02 AI_Player.update()	Search took42ms
2017-01-04 09:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:02 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:02 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:02 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:02 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:02 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:02 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()	update
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()	update
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:02 AI_Player.update()	Search took141ms
2017-01-04 09:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:02 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:02 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:02 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:02 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:02 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:02 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()	update
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()	update
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:02 AI_Player.update()	Search took42ms
2017-01-04 09:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:02 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:02 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:02 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:02 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:02 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:02 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()	update
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:02 AI_Player.update()	update
2017-01-04 09:17:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:03 AI_Player.update()	Search took136ms
2017-01-04 09:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:03 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:03 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:03 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:03 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:03 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:03 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:03 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:03 AI_Player.update()	update
2017-01-04 09:17:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:03 AI_Player.update()	update
2017-01-04 09:17:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:03 AI_Player.update()	Search took76ms
2017-01-04 09:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:03 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:03 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:03 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:03 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:03 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:03 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:03 AI_Player.update()	update
2017-01-04 09:17:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:03 AI_Player.update()	update
2017-01-04 09:17:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:03 AI_Player.update()	Search took143ms
2017-01-04 09:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:03 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:03 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:03 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:03 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:03 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:03 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:03 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:03 AI_Player.update()	update
2017-01-04 09:17:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:03 AI_Player.update()	update
2017-01-04 09:17:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:03 AI_Player.update()	Search took72ms
2017-01-04 09:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:03 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:03 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:03 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:03 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:03 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:03 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:04 AI_Player.update()	update
2017-01-04 09:17:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:04 AI_Player.update()	update
2017-01-04 09:17:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:04 AI_Player.update()	Search took135ms
2017-01-04 09:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:04 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:04 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:04 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:04 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:04 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:04 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:04 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:04 AI_Player.update()	update
2017-01-04 09:17:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:04 AI_Player.update()	update
2017-01-04 09:17:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:04 AI_Player.update()	Search took41ms
2017-01-04 09:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:04 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:04 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:04 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:04 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:04 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:04 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:04 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:04 AI_Player.update()	update
2017-01-04 09:17:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:04 AI_Player.update()	update
2017-01-04 09:17:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:04 AI_Player.update()	Search took189ms
2017-01-04 09:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:04 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:04 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:04 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:04 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:04 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:04 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:04 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:05 AI_Player.update()	update
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:05 AI_Player.update()	update
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:05 AI_Player.update()	Search took73ms
2017-01-04 09:17:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:05 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:05 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:05 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:05 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:05 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:05 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:05 AI_Player.update()	update
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:05 AI_Player.update()	update
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:05 AI_Player.update()	Search took136ms
2017-01-04 09:17:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:05 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:05 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:05 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:05 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:05 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:05 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:05 AI_Player.update()	update
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:05 AI_Player.update()	update
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:05 AI_Player.update()	Search took42ms
2017-01-04 09:17:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:05 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:05 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:05 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:05 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:05 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:05 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:05 AI_Player.update()	update
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:06 AI_Player.update()	update
2017-01-04 09:17:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:06 AI_Player.update()	Search took142ms
2017-01-04 09:17:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:06 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:06 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:06 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:06 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:06 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:06 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:06 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:06 AI_Player.update()	update
2017-01-04 09:17:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:06 AI_Player.update()	update
2017-01-04 09:17:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:06 AI_Player.update()	Search took42ms
2017-01-04 09:17:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:06 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:06 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:06 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:06 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:06 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:06 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:06 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:06 AI_Player.update()	update
2017-01-04 09:17:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:06 AI_Player.update()	update
2017-01-04 09:17:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:06 AI_Player.update()	Search took138ms
2017-01-04 09:17:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:06 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:06 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:06 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:06 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:06 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:06 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:06 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:06 AI_Player.update()	update
2017-01-04 09:17:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()	update
2017-01-04 09:17:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:07 AI_Player.update()	Search took42ms
2017-01-04 09:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:07 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:07 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:07 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:07 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:07 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()	update
2017-01-04 09:17:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()	update
2017-01-04 09:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:07 AI_Player.update()	Search took142ms
2017-01-04 09:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:07 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:07 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:07 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:07 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:07 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:07 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()	update
2017-01-04 09:17:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()	update
2017-01-04 09:17:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:07 AI_Player.update()	Search took42ms
2017-01-04 09:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:07 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:07 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:07 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:07 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:07 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()	update
2017-01-04 09:17:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()	update
2017-01-04 09:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:07 AI_Player.update()	Search took137ms
2017-01-04 09:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:07 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:07 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:07 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:07 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:07 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:07 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:07 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:08 AI_Player.update()	update
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:08 AI_Player.update()	update
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:08 AI_Player.update()	Search took68ms
2017-01-04 09:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:08 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:08 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:08 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:08 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:08 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:08 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:08 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:08 AI_Player.update()	update
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:08 AI_Player.update()	update
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:08 AI_Player.update()	Search took144ms
2017-01-04 09:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:08 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:08 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:08 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:08 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:08 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:08 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:08 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:08 AI_Player.update()	update
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:08 AI_Player.update()	update
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:08 AI_Player.update()	Search took43ms
2017-01-04 09:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:08 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:08 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:08 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:08 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:08 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:08 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:08 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:08 AI_Player.update()	update
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:09 AI_Player.update()	update
2017-01-04 09:17:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:09 AI_Player.update()	Search took162ms
2017-01-04 09:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:09 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:09 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:09 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:09 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:09 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:09 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:09 AI_Player.update()	update
2017-01-04 09:17:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:09 AI_Player.update()	update
2017-01-04 09:17:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:09 AI_Player.update()	Search took43ms
2017-01-04 09:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:09 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:09 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:09 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:09 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:09 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:09 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:09 AI_Player.update()	update
2017-01-04 09:17:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:09 AI_Player.update()	update
2017-01-04 09:17:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:09 AI_Player.update()	Search took141ms
2017-01-04 09:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:09 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:09 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:09 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:09 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:09 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:09 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:09 AI_Player.update()	update
2017-01-04 09:17:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:10 AI_Player.update()	update
2017-01-04 09:17:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:10 AI_Player.update()	Search took64ms
2017-01-04 09:17:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:10 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:10 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:10 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:10 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:10 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:10 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:10 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:10 AI_Player.update()	update
2017-01-04 09:17:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:10 AI_Player.update()	update
2017-01-04 09:17:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:10 AI_Player.update()	Search took135ms
2017-01-04 09:17:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:10 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:10 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:10 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:10 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:10 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:10 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:10 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:10 AI_Player.update()	update
2017-01-04 09:17:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:10 AI_Player.update()	update
2017-01-04 09:17:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:10 AI_Player.update()	Search took43ms
2017-01-04 09:17:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:10 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:10 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:10 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:10 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:10 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:10 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:10 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:10 AI_Player.update()	update
2017-01-04 09:17:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:10 AI_Player.update()	update
2017-01-04 09:17:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:11 AI_Player.update()	Search took147ms
2017-01-04 09:17:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:11 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:11 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:11 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:11 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:11 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:11 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:11 AI_Player.update()	update
2017-01-04 09:17:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:11 AI_Player.update()	update
2017-01-04 09:17:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:11 AI_Player.update()	Search took44ms
2017-01-04 09:17:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:11 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:11 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:11 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:11 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:11 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:11 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:11 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:11 AI_Player.update()	update
2017-01-04 09:17:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:11 AI_Player.update()	update
2017-01-04 09:17:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:11 AI_Player.update()	Search took171ms
2017-01-04 09:17:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:11 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:11 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:11 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:11 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:11 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:11 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:11 AI_Player.update()	update
2017-01-04 09:17:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:11 AI_Player.update()	update
2017-01-04 09:17:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:11 AI_Player.update()	Search took63ms
2017-01-04 09:17:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:11 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:11 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:11 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:11 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:11 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:11 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:11 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:12 AI_Player.update()	update
2017-01-04 09:17:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:12 AI_Player.update()	update
2017-01-04 09:17:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:12 AI_Player.update()	Search took170ms
2017-01-04 09:17:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:12 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:12 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:12 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:12 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:12 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:12 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:12 AI_Player.update()	update
2017-01-04 09:17:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:12 AI_Player.update()	update
2017-01-04 09:17:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:12 AI_Player.update()	Search took70ms
2017-01-04 09:17:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:12 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:12 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:12 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:12 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:12 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:12 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:12 AI_Player.update()	update
2017-01-04 09:17:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:12 AI_Player.update()	update
2017-01-04 09:17:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:12 AI_Player.update()	Search took137ms
2017-01-04 09:17:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:12 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:12 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:12 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:12 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:12 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:12 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:13 AI_Player.update()	update
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:13 AI_Player.update()	update
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:13 AI_Player.update()	Search took63ms
2017-01-04 09:17:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:13 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:13 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:13 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:13 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:13 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:13 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:13 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:13 AI_Player.update()	update
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:13 AI_Player.update()	update
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:13 AI_Player.update()	Search took142ms
2017-01-04 09:17:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:13 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:13 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:13 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:13 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:13 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:13 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:13 AI_Player.update()	update
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:13 AI_Player.update()	update
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:13 AI_Player.update()	Search took68ms
2017-01-04 09:17:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:13 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:13 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:13 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:13 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:13 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:13 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:13 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:13 AI_Player.update()	update
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:14 AI_Player.update()	update
2017-01-04 09:17:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:14 AI_Player.update()	Search took138ms
2017-01-04 09:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:14 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:14 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:14 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:14 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:14 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:14 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:14 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:14 AI_Player.update()	update
2017-01-04 09:17:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:14 AI_Player.update()	update
2017-01-04 09:17:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:14 AI_Player.update()	Search took43ms
2017-01-04 09:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:14 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:14 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:14 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:14 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:14 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:14 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:14 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:14 AI_Player.update()	update
2017-01-04 09:17:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:14 AI_Player.update()	update
2017-01-04 09:17:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:14 AI_Player.update()	Search took169ms
2017-01-04 09:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:14 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:14 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:14 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:14 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:14 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:14 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:14 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:14 AI_Player.update()	update
2017-01-04 09:17:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:14 AI_Player.update()	update
2017-01-04 09:17:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:15 AI_Player.update()	Search took47ms
2017-01-04 09:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:15 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:15 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:15 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:15 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:15 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:15 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:15 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:15 AI_Player.update()	update
2017-01-04 09:17:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:15 AI_Player.update()	update
2017-01-04 09:17:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:15 AI_Player.update()	Search took136ms
2017-01-04 09:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:15 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:15 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:15 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:15 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:15 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:15 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:15 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:15 AI_Player.update()	update
2017-01-04 09:17:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:15 AI_Player.update()	update
2017-01-04 09:17:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:15 AI_Player.update()	Search took63ms
2017-01-04 09:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:15 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:15 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:15 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:15 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:15 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:15 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:15 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:15 AI_Player.update()	update
2017-01-04 09:17:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:15 AI_Player.update()	update
2017-01-04 09:17:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:15 AI_Player.update()	Search took145ms
2017-01-04 09:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:15 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:15 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:15 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:15 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:15 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:15 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:15 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:16 AI_Player.update()	update
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:16 AI_Player.update()	update
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:16 AI_Player.update()	Search took70ms
2017-01-04 09:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:16 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:16 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:16 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:16 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:16 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:16 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:16 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:16 AI_Player.update()	update
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:16 AI_Player.update()	update
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:16 AI_Player.update()	Search took164ms
2017-01-04 09:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:16 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:16 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:16 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:16 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:16 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:16 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:16 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:16 AI_Player.update()	update
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:16 AI_Player.update()	update
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:16 AI_Player.update()	Search took73ms
2017-01-04 09:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:16 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:16 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:16 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:16 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:16 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:16 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:16 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:16 AI_Player.update()	update
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:17 AI_Player.update()	update
2017-01-04 09:17:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:17 AI_Player.update()	Search took147ms
2017-01-04 09:17:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:17 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:17 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:17 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:17 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:17 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:17 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:17 AI_Player.update()	update
2017-01-04 09:17:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:17 AI_Player.update()	update
2017-01-04 09:17:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:17 AI_Player.update()	Search took44ms
2017-01-04 09:17:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:17 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:17 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:17 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:17 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:17 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:17 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:17 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:17 AI_Player.update()	update
2017-01-04 09:17:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:17 AI_Player.update()	update
2017-01-04 09:17:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:17 AI_Player.update()	Search took137ms
2017-01-04 09:17:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:17 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:17 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:17 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:17 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:17 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:17 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:17 AI_Player.update()	update
2017-01-04 09:17:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:18 AI_Player.update()	update
2017-01-04 09:17:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:18 AI_Player.update()	Search took46ms
2017-01-04 09:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:18 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:18 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:18 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:18 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:18 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:18 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:18 AI_Player.update()	update
2017-01-04 09:17:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:18 AI_Player.update()	update
2017-01-04 09:17:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:18 AI_Player.update()	Search took172ms
2017-01-04 09:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:18 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:18 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:18 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:18 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:18 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:18 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:18 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:18 AI_Player.update()	update
2017-01-04 09:17:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:18 AI_Player.update()	update
2017-01-04 09:17:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:18 AI_Player.update()	Search took43ms
2017-01-04 09:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:18 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:18 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:18 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:18 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:18 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:18 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:18 AI_Player.update()	update
2017-01-04 09:17:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:18 AI_Player.update()	update
2017-01-04 09:17:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:19 AI_Player.update()	Search took145ms
2017-01-04 09:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:19 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:19 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:19 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:19 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:19 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:19 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:19 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:19 AI_Player.update()	update
2017-01-04 09:17:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:19 AI_Player.update()	update
2017-01-04 09:17:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:19 AI_Player.update()	Search took45ms
2017-01-04 09:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:19 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:19 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:19 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:19 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:19 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:19 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:19 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:19 AI_Player.update()	update
2017-01-04 09:17:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:19 AI_Player.update()	update
2017-01-04 09:17:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:19 AI_Player.update()	Search took143ms
2017-01-04 09:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:19 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:19 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:19 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:19 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:19 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:19 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:19 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:19 AI_Player.update()	update
2017-01-04 09:17:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:19 AI_Player.update()	update
2017-01-04 09:17:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:19 AI_Player.update()	Search took43ms
2017-01-04 09:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:19 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:19 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:19 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:19 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:19 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:19 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:19 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:20 AI_Player.update()	update
2017-01-04 09:17:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:20 AI_Player.update()	update
2017-01-04 09:17:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:20 AI_Player.update()	Search took168ms
2017-01-04 09:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:20 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:20 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:20 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:20 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:20 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:20 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:20 AI_Player.update()	update
2017-01-04 09:17:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:20 AI_Player.update()	update
2017-01-04 09:17:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:20 AI_Player.update()	Search took74ms
2017-01-04 09:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:20 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:20 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:20 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:20 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:20 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:20 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:20 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:20 AI_Player.update()	update
2017-01-04 09:17:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:20 AI_Player.update()	update
2017-01-04 09:17:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:20 AI_Player.update()	Search took171ms
2017-01-04 09:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:20 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:20 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:20 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:20 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:20 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:20 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:20 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:21 AI_Player.update()	update
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:21 AI_Player.update()	update
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:21 AI_Player.update()	Search took80ms
2017-01-04 09:17:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:21 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:21 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:21 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:21 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:21 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:21 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:21 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:21 AI_Player.update()	update
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:21 AI_Player.update()	update
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:21 AI_Player.update()	Search took138ms
2017-01-04 09:17:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:21 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:21 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:21 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:21 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:21 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:21 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:21 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:21 AI_Player.update()	update
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:21 AI_Player.update()	update
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:21 AI_Player.update()	Search took61ms
2017-01-04 09:17:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:21 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:21 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:21 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:21 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:21 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:21 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:21 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:21 AI_Player.update()	update
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:22 AI_Player.update()	update
2017-01-04 09:17:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:22 AI_Player.update()	Search took196ms
2017-01-04 09:17:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:22 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:22 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:22 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:22 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:22 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:22 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:22 AI_Player.update()	update
2017-01-04 09:17:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:22 AI_Player.update()	update
2017-01-04 09:17:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:22 AI_Player.update()	Search took47ms
2017-01-04 09:17:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:22 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:22 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:22 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:22 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:22 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:22 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:22 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:22 AI_Player.update()	update
2017-01-04 09:17:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:22 AI_Player.update()	update
2017-01-04 09:17:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:22 AI_Player.update()	Search took177ms
2017-01-04 09:17:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:22 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:22 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:22 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:22 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:22 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:22 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:22 AI_Player.update()	update
2017-01-04 09:17:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:23 AI_Player.update()	update
2017-01-04 09:17:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:17:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 09:17:23 AI_Player.update()	Search took49ms
2017-01-04 09:17:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:23 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 09:17:23 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:23 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 09:17:23 AI_Player.update()		1010,	110,	11,	11,	1100,	1100,	11
2017-01-04 09:17:23 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 09:17:23 AI_Player.update()		1100,	1001,	11,	1010,	1110,	1010,	101
2017-01-04 09:17:23 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 09:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:23 AI_Player.update()	update
2017-01-04 09:17:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:17:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:17:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 09:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:23 AI_Player.update()	update
2017-01-04 09:17:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:17:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:17:23 AI_Player.update()	Search took168ms
2017-01-04 09:17:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:23 AI_Player.update()		110,	11,	111,	1101,	111,	111,	11
2017-01-04 09:17:23 AI_Player.update()		101,	11,	101,	101,	1100,	11,	110
2017-01-04 09:17:23 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-04 09:17:23 AI_Player.update()		1010,	110,	11,	1010,	1100,	1100,	11
2017-01-04 09:17:23 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 09:17:23 AI_Player.update()		1100,	1001,	11,	110,	1110,	1010,	101
2017-01-04 09:17:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 09:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:17:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:17:23 AI_Player.update()	update
2017-01-04 09:17:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:17:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:17:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:17:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:17:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:17:23 GameBoard.setupTreasurePanel()	1 1
