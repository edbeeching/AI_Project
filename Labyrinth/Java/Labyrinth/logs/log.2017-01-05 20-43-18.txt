2017-01-05 20:43:18 GameBoard.<init>()	Hello World!
2017-01-05 20:43:18 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 20:43:18 QueryProlog.initialise()	setup(h1/h2). suceeded
2017-01-05 20:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:18 GameBoard.setupBoardFromString()	Board created
2017-01-05 20:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:18 GameBoard.initialise()	[book, gold, gem, map, crown]
2017-01-05 20:43:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:18 GameBoard.initialise()	[fairy, candle, helmet, sword, chest]
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:18 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	null
2017-01-05 20:43:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:18 AI_Player.update()	update
2017-01-05 20:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:18 AI_Player.update()	Search took2ms
2017-01-05 20:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:18 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 20:43:18 AI_Player.update()		1010,	101,	1010,	110,	11,	1100,	1001
2017-01-05 20:43:18 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 20:43:18 AI_Player.update()		1010,	1101,	101,	101,	101,	111,	101
2017-01-05 20:43:18 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-05 20:43:18 AI_Player.update()		101,	101,	11,	111,	110,	1100,	1100
2017-01-05 20:43:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 20:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:18 AI_Player.update()	update
2017-01-05 20:43:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:18 AI_Player.update()	update
2017-01-05 20:43:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:18 AI_Player.update()	Search took126ms
2017-01-05 20:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:18 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 20:43:18 AI_Player.update()		101,	1010,	110,	11,	1100,	1001,	1010
2017-01-05 20:43:18 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 20:43:18 AI_Player.update()		1010,	1101,	101,	101,	101,	111,	101
2017-01-05 20:43:18 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-05 20:43:18 AI_Player.update()		101,	101,	11,	111,	110,	1100,	1100
2017-01-05 20:43:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 20:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:18 AI_Player.update()	update
2017-01-05 20:43:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:18 AI_Player.update()	update
2017-01-05 20:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:18 AI_Player.update()	Search took3ms
2017-01-05 20:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:18 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 20:43:18 AI_Player.update()		101,	1010,	110,	11,	1100,	1001,	1010
2017-01-05 20:43:18 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 20:43:18 AI_Player.update()		1010,	1101,	101,	101,	101,	111,	101
2017-01-05 20:43:18 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-05 20:43:18 AI_Player.update()		1100,	101,	101,	11,	111,	110,	1100
2017-01-05 20:43:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 20:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:19 AI_Player.update()	update
2017-01-05 20:43:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:19 AI_Player.update()	update
2017-01-05 20:43:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:19 AI_Player.update()	Search took253ms
2017-01-05 20:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:19 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:19 AI_Player.update()		101,	1010,	110,	1100,	1100,	1001,	1010
2017-01-05 20:43:19 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-05 20:43:19 AI_Player.update()		1010,	1101,	101,	1001,	101,	111,	101
2017-01-05 20:43:19 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:19 AI_Player.update()		1100,	101,	101,	1001,	111,	110,	1100
2017-01-05 20:43:19 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 20:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:19 AI_Player.update()	update
2017-01-05 20:43:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:19 AI_Player.update()	update
2017-01-05 20:43:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:19 AI_Player.update()	Search took9ms
2017-01-05 20:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:19 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:19 AI_Player.update()		101,	110,	110,	1100,	1100,	1001,	1010
2017-01-05 20:43:19 AI_Player.update()		1110,	1101,	1110,	11,	111,	101,	1011
2017-01-05 20:43:19 AI_Player.update()		1010,	111,	101,	1001,	101,	111,	101
2017-01-05 20:43:19 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:19 AI_Player.update()		1100,	101,	101,	1001,	111,	110,	1100
2017-01-05 20:43:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 20:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:19 AI_Player.update()	update
2017-01-05 20:43:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:19 AI_Player.update()	update
2017-01-05 20:43:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:20 AI_Player.update()	Search took273ms
2017-01-05 20:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:20 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:20 AI_Player.update()		101,	110,	110,	1100,	1100,	1001,	1010
2017-01-05 20:43:20 AI_Player.update()		1110,	1101,	1110,	11,	111,	101,	1011
2017-01-05 20:43:20 AI_Player.update()		101,	1010,	111,	101,	1001,	101,	111
2017-01-05 20:43:20 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:20 AI_Player.update()		1100,	101,	101,	1001,	111,	110,	1100
2017-01-05 20:43:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 20:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:20 AI_Player.update()	update
2017-01-05 20:43:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:20 AI_Player.update()	update
2017-01-05 20:43:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:20 AI_Player.update()	Search took5ms
2017-01-05 20:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:20 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 20:43:20 AI_Player.update()		101,	1101,	110,	1100,	1100,	1001,	1010
2017-01-05 20:43:20 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 20:43:20 AI_Player.update()		101,	101,	111,	101,	1001,	101,	111
2017-01-05 20:43:20 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:20 AI_Player.update()		1100,	1010,	101,	1001,	111,	110,	1100
2017-01-05 20:43:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 20:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:20 AI_Player.update()	update
2017-01-05 20:43:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:20 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:20 AI_Player.update()	update
2017-01-05 20:43:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:21 AI_Player.update()	Search took496ms
2017-01-05 20:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:21 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-05 20:43:21 AI_Player.update()		101,	1101,	110,	1100,	1100,	110,	1010
2017-01-05 20:43:21 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-05 20:43:21 AI_Player.update()		101,	101,	111,	101,	1001,	101,	111
2017-01-05 20:43:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:21 AI_Player.update()		1100,	1010,	101,	1001,	111,	101,	1100
2017-01-05 20:43:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-05 20:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:21 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:21 AI_Player.update()	update
2017-01-05 20:43:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:21 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:21 AI_Player.update()	update
2017-01-05 20:43:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:21 AI_Player.update()	Search took2ms
2017-01-05 20:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:21 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-05 20:43:21 AI_Player.update()		101,	1010,	110,	1100,	1100,	110,	1010
2017-01-05 20:43:21 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-05 20:43:21 AI_Player.update()		101,	101,	111,	101,	1001,	101,	111
2017-01-05 20:43:21 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:21 AI_Player.update()		1100,	1010,	101,	1001,	111,	101,	1100
2017-01-05 20:43:21 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-05 20:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:21 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:21 AI_Player.update()	update
2017-01-05 20:43:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:21 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:21 AI_Player.update()	update
2017-01-05 20:43:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:21 AI_Player.update()	Search took105ms
2017-01-05 20:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:21 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-05 20:43:21 AI_Player.update()		101,	1101,	110,	1100,	1100,	110,	1010
2017-01-05 20:43:21 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-05 20:43:21 AI_Player.update()		101,	101,	111,	101,	1001,	101,	111
2017-01-05 20:43:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:21 AI_Player.update()		1100,	1010,	101,	1001,	111,	101,	1100
2017-01-05 20:43:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-05 20:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:21 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:21 AI_Player.update()	update
2017-01-05 20:43:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:21 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:21 AI_Player.update()	update
2017-01-05 20:43:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:21 AI_Player.update()	Search took3ms
2017-01-05 20:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:21 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-05 20:43:21 AI_Player.update()		101,	110,	110,	1100,	1100,	110,	1010
2017-01-05 20:43:21 AI_Player.update()		1110,	1101,	1110,	11,	111,	1001,	1011
2017-01-05 20:43:21 AI_Player.update()		101,	1010,	111,	101,	1001,	101,	111
2017-01-05 20:43:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:21 AI_Player.update()		1100,	101,	101,	1001,	111,	101,	1100
2017-01-05 20:43:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-05 20:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:21 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:22 AI_Player.update()	update
2017-01-05 20:43:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:22 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:22 AI_Player.update()	update
2017-01-05 20:43:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:22 AI_Player.update()	Search took402ms
2017-01-05 20:43:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:22 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-05 20:43:22 AI_Player.update()		101,	1010,	110,	1100,	1100,	110,	1010
2017-01-05 20:43:22 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 20:43:22 AI_Player.update()		101,	1101,	111,	101,	1001,	101,	111
2017-01-05 20:43:22 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:22 AI_Player.update()		1100,	101,	101,	1001,	111,	101,	1100
2017-01-05 20:43:22 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-05 20:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:22 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:22 AI_Player.update()	update
2017-01-05 20:43:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:22 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:22 AI_Player.update()	update
2017-01-05 20:43:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:22 AI_Player.update()	Search took2ms
2017-01-05 20:43:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:22 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-05 20:43:22 AI_Player.update()		101,	1010,	110,	1100,	1100,	110,	1010
2017-01-05 20:43:22 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-05 20:43:22 AI_Player.update()		101,	110,	111,	101,	1001,	101,	111
2017-01-05 20:43:22 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:22 AI_Player.update()		1100,	1010,	101,	1001,	111,	101,	1100
2017-01-05 20:43:22 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-05 20:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:22 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:22 AI_Player.update()	update
2017-01-05 20:43:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:22 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:22 AI_Player.update()	update
2017-01-05 20:43:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:23 AI_Player.update()	Search took331ms
2017-01-05 20:43:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:23 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 20:43:23 AI_Player.update()		101,	1010,	110,	1100,	1100,	1010,	1010
2017-01-05 20:43:23 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-05 20:43:23 AI_Player.update()		101,	110,	111,	101,	1001,	1001,	111
2017-01-05 20:43:23 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:23 AI_Player.update()		1100,	1010,	101,	1001,	111,	101,	1100
2017-01-05 20:43:23 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 20:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:23 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:23 AI_Player.update()	update
2017-01-05 20:43:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:23 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:23 AI_Player.update()	update
2017-01-05 20:43:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:23 AI_Player.update()	Search took2ms
2017-01-05 20:43:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:23 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:23 AI_Player.update()		101,	1010,	110,	1100,	1100,	1010,	1010
2017-01-05 20:43:23 AI_Player.update()		1110,	110,	1110,	11,	111,	110,	1011
2017-01-05 20:43:23 AI_Player.update()		101,	1101,	111,	101,	1001,	1001,	111
2017-01-05 20:43:23 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:23 AI_Player.update()		1100,	101,	101,	1001,	111,	101,	1100
2017-01-05 20:43:23 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 20:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:23 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:23 AI_Player.update()	update
2017-01-05 20:43:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:23 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:23 AI_Player.update()	update
2017-01-05 20:43:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:23 AI_Player.update()	Search took244ms
2017-01-05 20:43:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:23 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:23 AI_Player.update()		101,	1010,	110,	1100,	1100,	1010,	1010
2017-01-05 20:43:23 AI_Player.update()		1110,	110,	1110,	11,	111,	110,	1011
2017-01-05 20:43:23 AI_Player.update()		101,	1101,	111,	101,	1001,	1001,	111
2017-01-05 20:43:23 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:23 AI_Player.update()		101,	101,	1001,	111,	101,	1100,	1100
2017-01-05 20:43:23 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 20:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:23 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()	update
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	1 3
2017-01-05 20:43:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()	update
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:24 AI_Player.update()	Search took1ms
2017-01-05 20:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 20:43:24 AI_Player.update()		101,	1010,	110,	1100,	1100,	1010,	1010
2017-01-05 20:43:24 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-05 20:43:24 AI_Player.update()		101,	110,	111,	101,	1001,	1001,	111
2017-01-05 20:43:24 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:24 AI_Player.update()		101,	1010,	1001,	111,	101,	1100,	1100
2017-01-05 20:43:24 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 20:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	1 3
2017-01-05 20:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()	update
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-05 20:43:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()	update
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:24 AI_Player.update()	Search took82ms
2017-01-05 20:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 20:43:24 AI_Player.update()		101,	1010,	110,	1100,	1100,	1010,	1010
2017-01-05 20:43:24 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-05 20:43:24 AI_Player.update()		101,	110,	111,	101,	1001,	1001,	111
2017-01-05 20:43:24 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:24 AI_Player.update()		1100,	101,	1010,	1001,	111,	101,	1100
2017-01-05 20:43:24 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 20:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-05 20:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()	update
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-05 20:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()	update
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:24 AI_Player.update()	Search took2ms
2017-01-05 20:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:24 AI_Player.update()		101,	1010,	110,	1100,	1100,	1010,	1010
2017-01-05 20:43:24 AI_Player.update()		1110,	110,	1110,	11,	111,	110,	1011
2017-01-05 20:43:24 AI_Player.update()		101,	1101,	111,	101,	1001,	1001,	111
2017-01-05 20:43:24 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:24 AI_Player.update()		1100,	101,	1010,	1001,	111,	101,	1100
2017-01-05 20:43:24 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 20:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-05 20:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()	update
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-05 20:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()	update
2017-01-05 20:43:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:24 AI_Player.update()	Search took122ms
2017-01-05 20:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:24 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:24 AI_Player.update()		101,	1010,	110,	1100,	1100,	1010,	1010
2017-01-05 20:43:24 AI_Player.update()		1110,	110,	1110,	11,	111,	110,	1011
2017-01-05 20:43:24 AI_Player.update()		101,	1101,	111,	101,	1001,	1001,	111
2017-01-05 20:43:24 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:24 AI_Player.update()		1100,	1100,	101,	1010,	1001,	111,	101
2017-01-05 20:43:24 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 20:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-05 20:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:25 AI_Player.update()	update
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:25 AI_Player.update()	update
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:25 AI_Player.update()	Search took3ms
2017-01-05 20:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:25 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:25 AI_Player.update()		101,	1010,	110,	11,	1100,	1010,	1010
2017-01-05 20:43:25 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-05 20:43:25 AI_Player.update()		101,	1101,	111,	11,	1001,	1001,	111
2017-01-05 20:43:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:25 AI_Player.update()		1100,	1100,	101,	101,	1001,	111,	101
2017-01-05 20:43:25 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 20:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:25 AI_Player.update()	update
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:25 AI_Player.update()	update
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:25 AI_Player.update()	Search took207ms
2017-01-05 20:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:25 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:25 AI_Player.update()		101,	110,	110,	11,	1100,	1010,	1010
2017-01-05 20:43:25 AI_Player.update()		1110,	1101,	1110,	1100,	111,	110,	1011
2017-01-05 20:43:25 AI_Player.update()		101,	101,	111,	11,	1001,	1001,	111
2017-01-05 20:43:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:25 AI_Player.update()		1100,	101,	101,	101,	1001,	111,	101
2017-01-05 20:43:25 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 20:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:25 AI_Player.update()	update
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:25 AI_Player.update()	update
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:25 AI_Player.update()	Search took4ms
2017-01-05 20:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:25 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 20:43:25 AI_Player.update()		101,	110,	110,	11,	1100,	1010,	1010
2017-01-05 20:43:25 AI_Player.update()		1110,	1101,	1110,	11,	111,	110,	1011
2017-01-05 20:43:25 AI_Player.update()		101,	101,	111,	1100,	1001,	1001,	111
2017-01-05 20:43:25 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:25 AI_Player.update()		1100,	101,	101,	101,	1001,	111,	101
2017-01-05 20:43:25 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 20:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:25 AI_Player.update()	update
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:25 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()	update
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:26 AI_Player.update()	Search took146ms
2017-01-05 20:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 20:43:26 AI_Player.update()		101,	110,	110,	11,	1100,	110,	1010
2017-01-05 20:43:26 AI_Player.update()		1110,	1101,	1110,	11,	111,	1010,	1011
2017-01-05 20:43:26 AI_Player.update()		101,	101,	111,	1100,	1001,	110,	111
2017-01-05 20:43:26 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-05 20:43:26 AI_Player.update()		1100,	101,	101,	101,	1001,	101,	101
2017-01-05 20:43:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-05 20:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()	update
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()	update
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:26 AI_Player.update()	Search took6ms
2017-01-05 20:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 20:43:26 AI_Player.update()		101,	110,	110,	11,	1100,	110,	1010
2017-01-05 20:43:26 AI_Player.update()		1110,	1101,	1110,	11,	111,	1010,	1011
2017-01-05 20:43:26 AI_Player.update()		111,	101,	101,	111,	1100,	1001,	110
2017-01-05 20:43:26 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-05 20:43:26 AI_Player.update()		1100,	101,	101,	101,	1001,	101,	101
2017-01-05 20:43:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-05 20:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()	update
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()	update
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:26 AI_Player.update()	Search took88ms
2017-01-05 20:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-05 20:43:26 AI_Player.update()		101,	110,	110,	11,	1100,	110,	1010
2017-01-05 20:43:26 AI_Player.update()		1110,	1101,	1110,	111,	111,	1010,	1011
2017-01-05 20:43:26 AI_Player.update()		111,	101,	101,	11,	1100,	1001,	110
2017-01-05 20:43:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 20:43:26 AI_Player.update()		1100,	101,	101,	101,	1001,	101,	101
2017-01-05 20:43:26 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	111,	1001
2017-01-05 20:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	2 4
2017-01-05 20:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()	update
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	2 5
2017-01-05 20:43:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()	update
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:26 AI_Player.update()	Search took3ms
2017-01-05 20:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:26 AI_Player.update()		101,	110,	110,	11,	1100,	1010,	1010
2017-01-05 20:43:26 AI_Player.update()		1110,	1101,	1110,	111,	111,	1001,	1011
2017-01-05 20:43:26 AI_Player.update()		111,	101,	101,	11,	1100,	1001,	110
2017-01-05 20:43:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:26 AI_Player.update()		1100,	101,	101,	101,	1001,	111,	101
2017-01-05 20:43:26 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 20:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:26 GameBoard.setupTreasurePanel()	2 5
2017-01-05 20:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:26 AI_Player.update()	update
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	3 5
2017-01-05 20:43:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()	update
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:27 AI_Player.update()	Search took51ms
2017-01-05 20:43:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:27 AI_Player.update()		101,	110,	110,	111,	1100,	1010,	1010
2017-01-05 20:43:27 AI_Player.update()		1110,	1101,	1110,	11,	111,	1001,	1011
2017-01-05 20:43:27 AI_Player.update()		111,	101,	101,	101,	1100,	1001,	110
2017-01-05 20:43:27 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-05 20:43:27 AI_Player.update()		1100,	101,	101,	1010,	1001,	111,	101
2017-01-05 20:43:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-05 20:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	3 5
2017-01-05 20:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()	update
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	3 5
2017-01-05 20:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()	update
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:27 AI_Player.update()	Search took10ms
2017-01-05 20:43:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()		110,	1010,	111,	111,	111,	110,	11
2017-01-05 20:43:27 AI_Player.update()		101,	110,	110,	11,	1100,	1010,	1010
2017-01-05 20:43:27 AI_Player.update()		1110,	1101,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:27 AI_Player.update()		111,	101,	101,	101,	1100,	1001,	110
2017-01-05 20:43:27 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 20:43:27 AI_Player.update()		1100,	101,	101,	11,	1001,	111,	101
2017-01-05 20:43:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-05 20:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	3 5
2017-01-05 20:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()	update
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	3 5
2017-01-05 20:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()	update
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:27 AI_Player.update()	Search took81ms
2017-01-05 20:43:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:27 AI_Player.update()		101,	110,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:27 AI_Player.update()		1110,	1101,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:27 AI_Player.update()		111,	101,	101,	1010,	1100,	1001,	110
2017-01-05 20:43:27 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:27 AI_Player.update()		1100,	101,	101,	11,	1001,	111,	101
2017-01-05 20:43:27 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	3 5
2017-01-05 20:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()	update
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	3 5
2017-01-05 20:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()	update
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:27 AI_Player.update()	Search took9ms
2017-01-05 20:43:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:27 AI_Player.update()		101,	110,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:27 AI_Player.update()		1110,	1101,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:27 AI_Player.update()		101,	101,	1010,	1100,	1001,	110,	111
2017-01-05 20:43:27 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:27 AI_Player.update()		1100,	101,	101,	11,	1001,	111,	101
2017-01-05 20:43:27 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	3 5
2017-01-05 20:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:27 AI_Player.update()	update
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:28 AI_Player.update()	update
2017-01-05 20:43:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:28 AI_Player.update()	Search took122ms
2017-01-05 20:43:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:28 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:28 AI_Player.update()		101,	1010,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:28 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:28 AI_Player.update()		101,	1101,	1010,	1100,	1001,	110,	111
2017-01-05 20:43:28 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:28 AI_Player.update()		1100,	1100,	101,	11,	1001,	111,	101
2017-01-05 20:43:28 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:28 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:28 AI_Player.update()	update
2017-01-05 20:43:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:28 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:28 AI_Player.update()	update
2017-01-05 20:43:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:28 AI_Player.update()	Search took8ms
2017-01-05 20:43:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:28 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:28 AI_Player.update()		101,	1010,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:28 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:28 AI_Player.update()		111,	101,	1101,	1010,	1100,	1001,	110
2017-01-05 20:43:28 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:28 AI_Player.update()		1100,	1100,	101,	11,	1001,	111,	101
2017-01-05 20:43:28 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:28 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:28 AI_Player.update()	update
2017-01-05 20:43:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:28 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:28 AI_Player.update()	update
2017-01-05 20:43:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:29 AI_Player.update()	Search took683ms
2017-01-05 20:43:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:29 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:29 AI_Player.update()		101,	1010,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:29 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:29 AI_Player.update()		111,	101,	1101,	1010,	1100,	1001,	110
2017-01-05 20:43:29 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:29 AI_Player.update()		101,	1100,	1100,	101,	11,	1001,	111
2017-01-05 20:43:29 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:29 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:29 AI_Player.update()	update
2017-01-05 20:43:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:29 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:29 AI_Player.update()	update
2017-01-05 20:43:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:29 AI_Player.update()	Search took10ms
2017-01-05 20:43:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:29 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:29 AI_Player.update()		101,	110,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:29 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:29 AI_Player.update()		111,	101,	1101,	1010,	1100,	1001,	110
2017-01-05 20:43:29 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:29 AI_Player.update()		101,	101,	1100,	101,	11,	1001,	111
2017-01-05 20:43:29 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:29 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:29 AI_Player.update()	update
2017-01-05 20:43:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:29 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:29 AI_Player.update()	update
2017-01-05 20:43:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:29 AI_Player.update()	Search took206ms
2017-01-05 20:43:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:29 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 20:43:29 AI_Player.update()		101,	110,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:29 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:29 AI_Player.update()		111,	101,	1101,	1010,	1100,	1001,	110
2017-01-05 20:43:29 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:29 AI_Player.update()		111,	101,	101,	1100,	101,	11,	1001
2017-01-05 20:43:29 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:29 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:30 AI_Player.update()	update
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:30 AI_Player.update()	update
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:30 AI_Player.update()	Search took5ms
2017-01-05 20:43:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:30 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 20:43:30 AI_Player.update()		101,	101,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:30 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:30 AI_Player.update()		111,	1100,	1101,	1010,	1100,	1001,	110
2017-01-05 20:43:30 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:30 AI_Player.update()		111,	1010,	101,	1100,	101,	11,	1001
2017-01-05 20:43:30 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:30 AI_Player.update()	update
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:30 AI_Player.update()	update
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:30 AI_Player.update()	Search took266ms
2017-01-05 20:43:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:30 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 20:43:30 AI_Player.update()		101,	101,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:30 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:30 AI_Player.update()		111,	1100,	1101,	1010,	1100,	1001,	110
2017-01-05 20:43:30 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:30 AI_Player.update()		1001,	111,	1010,	101,	1100,	101,	11
2017-01-05 20:43:30 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	4 5
2017-01-05 20:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:30 AI_Player.update()	update
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	4 6
2017-01-05 20:43:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:30 AI_Player.update()	update
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:30 AI_Player.update()	Search took9ms
2017-01-05 20:43:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:30 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 20:43:30 AI_Player.update()		101,	101,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:30 AI_Player.update()		111,	101,	1101,	1010,	1100,	1001,	110
2017-01-05 20:43:30 AI_Player.update()		1110,	111,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:30 AI_Player.update()		1001,	1010,	1010,	101,	1100,	101,	11
2017-01-05 20:43:30 AI_Player.update()		1100,	110,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	4 6
2017-01-05 20:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:30 AI_Player.update()	update
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:30 GameBoard.setupTreasurePanel()	4 6
2017-01-05 20:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:31 AI_Player.update()	update
2017-01-05 20:43:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:31 AI_Player.update()	Search took406ms
2017-01-05 20:43:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:31 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 20:43:31 AI_Player.update()		101,	1100,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:31 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:31 AI_Player.update()		111,	111,	1101,	1010,	1100,	1001,	110
2017-01-05 20:43:31 AI_Player.update()		1110,	1010,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:31 AI_Player.update()		1001,	110,	1010,	101,	1100,	101,	11
2017-01-05 20:43:31 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:31 GameBoard.setupTreasurePanel()	4 6
2017-01-05 20:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:31 AI_Player.update()	update
2017-01-05 20:43:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:31 GameBoard.setupTreasurePanel()	4 6
2017-01-05 20:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:31 AI_Player.update()	update
2017-01-05 20:43:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:31 AI_Player.update()	Search took5ms
2017-01-05 20:43:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:31 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 20:43:31 AI_Player.update()		101,	101,	110,	101,	1100,	1010,	1010
2017-01-05 20:43:31 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-05 20:43:31 AI_Player.update()		111,	1010,	1101,	1010,	1100,	1001,	110
2017-01-05 20:43:31 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-05 20:43:31 AI_Player.update()		1001,	101,	1010,	101,	1100,	101,	11
2017-01-05 20:43:31 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:31 GameBoard.setupTreasurePanel()	4 6
2017-01-05 20:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:31 AI_Player.update()	update
2017-01-05 20:43:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:31 GameBoard.setupTreasurePanel()	4 6
2017-01-05 20:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:31 AI_Player.update()	update
2017-01-05 20:43:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:32 AI_Player.update()	Search took378ms
2017-01-05 20:43:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:32 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-05 20:43:32 AI_Player.update()		101,	101,	110,	101,	1100,	110,	1010
2017-01-05 20:43:32 AI_Player.update()		1110,	111,	1110,	101,	111,	1010,	1011
2017-01-05 20:43:32 AI_Player.update()		111,	1010,	1101,	1010,	1100,	1001,	110
2017-01-05 20:43:32 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-05 20:43:32 AI_Player.update()		1001,	101,	1010,	101,	1100,	101,	11
2017-01-05 20:43:32 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 20:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:32 GameBoard.setupTreasurePanel()	4 6
2017-01-05 20:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:32 AI_Player.update()	update
2017-01-05 20:43:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:32 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 20:43:32 AI_Player.update()	Player b has won!
2017-01-05 20:43:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 20:43:35 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 20:43:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 20:43:35 QueryProlog.reset()	setup(h1/h2). suceeded
2017-01-05 20:43:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 20:43:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 20:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()	update
2017-01-05 20:43:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:36 AI_Player.update()	Search took2ms
2017-01-05 20:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()		110,	111,	111,	111,	111,	1110,	11
2017-01-05 20:43:36 AI_Player.update()		110,	110,	1010,	1001,	111,	101,	11
2017-01-05 20:43:36 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-05 20:43:36 AI_Player.update()		1010,	101,	1011,	1010,	101,	101,	11
2017-01-05 20:43:36 AI_Player.update()		1110,	11,	1101,	110,	1011,	11,	1011
2017-01-05 20:43:36 AI_Player.update()		101,	11,	1110,	1100,	1101,	1001,	110
2017-01-05 20:43:36 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-05 20:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()	update
2017-01-05 20:43:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()	update
2017-01-05 20:43:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:36 AI_Player.update()	Search took77ms
2017-01-05 20:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()		110,	111,	111,	111,	111,	110,	11
2017-01-05 20:43:36 AI_Player.update()		110,	110,	1010,	1001,	111,	1110,	11
2017-01-05 20:43:36 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 20:43:36 AI_Player.update()		1010,	101,	1011,	1010,	101,	11,	11
2017-01-05 20:43:36 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-05 20:43:36 AI_Player.update()		101,	11,	1110,	1100,	1101,	11,	110
2017-01-05 20:43:36 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-05 20:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()	update
2017-01-05 20:43:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()	update
2017-01-05 20:43:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:36 AI_Player.update()	Search took2ms
2017-01-05 20:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()		110,	110,	111,	111,	111,	110,	11
2017-01-05 20:43:36 AI_Player.update()		110,	1101,	1010,	1001,	111,	1110,	11
2017-01-05 20:43:36 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 20:43:36 AI_Player.update()		1010,	11,	1011,	1010,	101,	11,	11
2017-01-05 20:43:36 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-05 20:43:36 AI_Player.update()		101,	101,	1110,	1100,	1101,	11,	110
2017-01-05 20:43:36 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1001,	1001
2017-01-05 20:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()	update
2017-01-05 20:43:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()	update
2017-01-05 20:43:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:36 AI_Player.update()	Search took205ms
2017-01-05 20:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:36 AI_Player.update()		110,	110,	111,	111,	111,	1001,	11
2017-01-05 20:43:36 AI_Player.update()		110,	1101,	1010,	1001,	111,	110,	11
2017-01-05 20:43:36 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-05 20:43:36 AI_Player.update()		1010,	11,	1011,	1010,	101,	101,	11
2017-01-05 20:43:36 AI_Player.update()		1110,	11,	1101,	110,	1011,	11,	1011
2017-01-05 20:43:36 AI_Player.update()		101,	101,	1110,	1100,	1101,	101,	110
2017-01-05 20:43:36 AI_Player.update()		1100,	111,	1101,	1001,	1101,	11,	1001
2017-01-05 20:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()	update
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 20:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()	update
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:37 AI_Player.update()	Search took3ms
2017-01-05 20:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()		110,	1101,	111,	111,	111,	1001,	11
2017-01-05 20:43:37 AI_Player.update()		110,	101,	1010,	1001,	111,	110,	11
2017-01-05 20:43:37 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-05 20:43:37 AI_Player.update()		1010,	11,	1011,	1010,	101,	101,	11
2017-01-05 20:43:37 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 20:43:37 AI_Player.update()		101,	111,	1110,	1100,	1101,	101,	110
2017-01-05 20:43:37 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-05 20:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()	update
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()	update
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:37 AI_Player.update()	Search took129ms
2017-01-05 20:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()		110,	1101,	111,	1001,	111,	1001,	11
2017-01-05 20:43:37 AI_Player.update()		110,	101,	1010,	1010,	111,	110,	11
2017-01-05 20:43:37 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-05 20:43:37 AI_Player.update()		1010,	11,	1011,	110,	101,	101,	11
2017-01-05 20:43:37 AI_Player.update()		1110,	101,	1101,	1100,	1011,	11,	1011
2017-01-05 20:43:37 AI_Player.update()		101,	111,	1110,	1001,	1101,	101,	110
2017-01-05 20:43:37 AI_Player.update()		1100,	110,	1101,	111,	1101,	11,	1001
2017-01-05 20:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()	update
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()	update
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:37 AI_Player.update()	Search took3ms
2017-01-05 20:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 20:43:37 AI_Player.update()		110,	101,	1010,	1010,	111,	110,	11
2017-01-05 20:43:37 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-05 20:43:37 AI_Player.update()		1010,	11,	1011,	1100,	101,	101,	11
2017-01-05 20:43:37 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-05 20:43:37 AI_Player.update()		101,	111,	1110,	111,	1101,	101,	110
2017-01-05 20:43:37 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-05 20:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()	update
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:37 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:37 AI_Player.update()	update
2017-01-05 20:43:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:38 AI_Player.update()	Search took296ms
2017-01-05 20:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:38 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 20:43:38 AI_Player.update()		110,	1101,	1010,	1010,	111,	110,	11
2017-01-05 20:43:38 AI_Player.update()		1110,	101,	1110,	110,	111,	1110,	1011
2017-01-05 20:43:38 AI_Player.update()		1010,	11,	1011,	1100,	101,	101,	11
2017-01-05 20:43:38 AI_Player.update()		1110,	11,	1101,	1001,	1011,	11,	1011
2017-01-05 20:43:38 AI_Player.update()		101,	101,	1110,	111,	1101,	101,	110
2017-01-05 20:43:38 AI_Player.update()		1100,	111,	1101,	1001,	1101,	11,	1001
2017-01-05 20:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	1 2
2017-01-05 20:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:38 AI_Player.update()	update
2017-01-05 20:43:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	1 3
2017-01-05 20:43:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 20:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:38 AI_Player.update()	update
2017-01-05 20:43:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:38 AI_Player.update()	Search took8ms
2017-01-05 20:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:38 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 20:43:38 AI_Player.update()		110,	101,	1010,	1010,	111,	110,	11
2017-01-05 20:43:38 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-05 20:43:38 AI_Player.update()		1010,	11,	1011,	1100,	101,	101,	11
2017-01-05 20:43:38 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-05 20:43:38 AI_Player.update()		101,	111,	1110,	111,	1101,	101,	110
2017-01-05 20:43:38 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-05 20:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	1 3
2017-01-05 20:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:38 AI_Player.update()	update
2017-01-05 20:43:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	1 3
2017-01-05 20:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:38 AI_Player.update()	update
2017-01-05 20:43:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:38 AI_Player.update()	Search took319ms
2017-01-05 20:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:38 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 20:43:38 AI_Player.update()		110,	101,	1010,	110,	111,	110,	11
2017-01-05 20:43:38 AI_Player.update()		1110,	11,	1110,	1100,	111,	1110,	1011
2017-01-05 20:43:38 AI_Player.update()		1010,	11,	1011,	1001,	101,	101,	11
2017-01-05 20:43:38 AI_Player.update()		1110,	101,	1101,	111,	1011,	11,	1011
2017-01-05 20:43:38 AI_Player.update()		101,	111,	1110,	1001,	1101,	101,	110
2017-01-05 20:43:38 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 20:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:38 GameBoard.setupTreasurePanel()	1 3
2017-01-05 20:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:39 AI_Player.update()	update
2017-01-05 20:43:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	1 4
2017-01-05 20:43:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 20:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:39 AI_Player.update()	update
2017-01-05 20:43:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:39 AI_Player.update()	Search took6ms
2017-01-05 20:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:39 AI_Player.update()		110,	1101,	111,	110,	111,	1001,	11
2017-01-05 20:43:39 AI_Player.update()		110,	101,	1010,	1100,	111,	110,	11
2017-01-05 20:43:39 AI_Player.update()		1110,	11,	1110,	1001,	111,	1110,	1011
2017-01-05 20:43:39 AI_Player.update()		1010,	11,	1011,	111,	101,	101,	11
2017-01-05 20:43:39 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-05 20:43:39 AI_Player.update()		101,	111,	1110,	1010,	1101,	101,	110
2017-01-05 20:43:39 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 20:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	1 4
2017-01-05 20:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:39 AI_Player.update()	update
2017-01-05 20:43:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	1 4
2017-01-05 20:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:39 AI_Player.update()	update
2017-01-05 20:43:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:39 AI_Player.update()	Search took602ms
2017-01-05 20:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:39 AI_Player.update()		110,	1101,	111,	1100,	111,	1001,	11
2017-01-05 20:43:39 AI_Player.update()		110,	101,	1010,	1001,	111,	110,	11
2017-01-05 20:43:39 AI_Player.update()		1110,	11,	1110,	111,	111,	1110,	1011
2017-01-05 20:43:39 AI_Player.update()		1010,	11,	1011,	1001,	101,	101,	11
2017-01-05 20:43:39 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 20:43:39 AI_Player.update()		101,	111,	1110,	1010,	1101,	101,	110
2017-01-05 20:43:39 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-05 20:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:39 GameBoard.setupTreasurePanel()	1 4
2017-01-05 20:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:40 AI_Player.update()	update
2017-01-05 20:43:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 20:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:40 AI_Player.update()	update
2017-01-05 20:43:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:40 AI_Player.update()	Search took3ms
2017-01-05 20:43:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:40 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-05 20:43:40 AI_Player.update()		110,	11,	1010,	1001,	111,	110,	11
2017-01-05 20:43:40 AI_Player.update()		1110,	11,	1110,	111,	111,	1110,	1011
2017-01-05 20:43:40 AI_Player.update()		1010,	101,	1011,	1001,	101,	101,	11
2017-01-05 20:43:40 AI_Player.update()		1110,	111,	1101,	1010,	1011,	11,	1011
2017-01-05 20:43:40 AI_Player.update()		101,	110,	1110,	1010,	1101,	101,	110
2017-01-05 20:43:40 AI_Player.update()		1100,	1101,	1101,	110,	1101,	11,	1001
2017-01-05 20:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:40 AI_Player.update()	update
2017-01-05 20:43:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:40 AI_Player.update()	update
2017-01-05 20:43:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:40 AI_Player.update()	Search took543ms
2017-01-05 20:43:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:40 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 20:43:40 AI_Player.update()		110,	11,	1010,	111,	111,	110,	11
2017-01-05 20:43:40 AI_Player.update()		1110,	11,	1110,	1001,	111,	1110,	1011
2017-01-05 20:43:40 AI_Player.update()		1010,	101,	1011,	1010,	101,	101,	11
2017-01-05 20:43:40 AI_Player.update()		1110,	111,	1101,	1010,	1011,	11,	1011
2017-01-05 20:43:40 AI_Player.update()		101,	110,	1110,	110,	1101,	101,	110
2017-01-05 20:43:40 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-05 20:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:40 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()	update
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:41 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()	update
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:41 AI_Player.update()	Search took4ms
2017-01-05 20:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()		110,	11,	111,	1001,	111,	1001,	11
2017-01-05 20:43:41 AI_Player.update()		110,	11,	1010,	111,	111,	110,	11
2017-01-05 20:43:41 AI_Player.update()		1110,	101,	1110,	1001,	111,	1110,	1011
2017-01-05 20:43:41 AI_Player.update()		1010,	111,	1011,	1010,	101,	101,	11
2017-01-05 20:43:41 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 20:43:41 AI_Player.update()		101,	1101,	1110,	110,	1101,	101,	110
2017-01-05 20:43:41 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 20:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:41 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()	update
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:41 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()	update
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:41 AI_Player.update()	Search took91ms
2017-01-05 20:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 20:43:41 AI_Player.update()		110,	11,	1010,	111,	111,	110,	11
2017-01-05 20:43:41 AI_Player.update()		1110,	11,	1110,	1001,	111,	1110,	1011
2017-01-05 20:43:41 AI_Player.update()		1010,	101,	1011,	1010,	101,	101,	11
2017-01-05 20:43:41 AI_Player.update()		1110,	111,	1101,	1010,	1011,	11,	1011
2017-01-05 20:43:41 AI_Player.update()		101,	110,	1110,	110,	1101,	101,	110
2017-01-05 20:43:41 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-05 20:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:41 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()	update
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:41 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()	update
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:41 AI_Player.update()	Search took5ms
2017-01-05 20:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()		110,	11,	111,	1001,	111,	1001,	11
2017-01-05 20:43:41 AI_Player.update()		110,	11,	1010,	111,	111,	110,	11
2017-01-05 20:43:41 AI_Player.update()		1110,	101,	1110,	1001,	111,	1110,	1011
2017-01-05 20:43:41 AI_Player.update()		1010,	111,	1011,	1010,	101,	101,	11
2017-01-05 20:43:41 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 20:43:41 AI_Player.update()		101,	1101,	1110,	110,	1101,	101,	110
2017-01-05 20:43:41 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 20:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:41 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()	update
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:41 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()	update
2017-01-05 20:43:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:41 AI_Player.update()	Search took86ms
2017-01-05 20:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:41 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 20:43:41 AI_Player.update()		110,	11,	1010,	111,	111,	1001,	11
2017-01-05 20:43:41 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 20:43:41 AI_Player.update()		1010,	111,	1011,	1010,	101,	1110,	11
2017-01-05 20:43:41 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 20:43:41 AI_Player.update()		101,	1101,	1110,	110,	1101,	11,	110
2017-01-05 20:43:41 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 20:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:41 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()	update
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:42 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()	update
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:42 AI_Player.update()	Search took2ms
2017-01-05 20:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 20:43:42 AI_Player.update()		110,	101,	1010,	111,	111,	1001,	11
2017-01-05 20:43:42 AI_Player.update()		1110,	111,	1110,	1001,	111,	110,	1011
2017-01-05 20:43:42 AI_Player.update()		1010,	110,	1011,	1010,	101,	1110,	11
2017-01-05 20:43:42 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-05 20:43:42 AI_Player.update()		101,	101,	1110,	110,	1101,	11,	110
2017-01-05 20:43:42 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-05 20:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:42 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()	update
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:42 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()	update
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:42 AI_Player.update()	Search took61ms
2017-01-05 20:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 20:43:42 AI_Player.update()		110,	11,	1010,	111,	111,	1001,	11
2017-01-05 20:43:42 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 20:43:42 AI_Player.update()		1010,	111,	1011,	1010,	101,	1110,	11
2017-01-05 20:43:42 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 20:43:42 AI_Player.update()		101,	1101,	1110,	110,	1101,	11,	110
2017-01-05 20:43:42 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 20:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:42 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()	update
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:42 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()	update
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:42 AI_Player.update()	Search took3ms
2017-01-05 20:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 20:43:42 AI_Player.update()		110,	101,	1010,	111,	111,	1001,	11
2017-01-05 20:43:42 AI_Player.update()		1110,	111,	1110,	1001,	111,	110,	1011
2017-01-05 20:43:42 AI_Player.update()		1010,	110,	1011,	1010,	101,	1110,	11
2017-01-05 20:43:42 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-05 20:43:42 AI_Player.update()		101,	101,	1110,	110,	1101,	11,	110
2017-01-05 20:43:42 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-05 20:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:42 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()	update
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:42 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()	update
2017-01-05 20:43:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:42 AI_Player.update()	Search took97ms
2017-01-05 20:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:42 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 20:43:42 AI_Player.update()		110,	111,	1010,	111,	111,	1001,	11
2017-01-05 20:43:42 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-05 20:43:42 AI_Player.update()		1010,	1101,	1011,	1010,	101,	1110,	11
2017-01-05 20:43:42 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 20:43:42 AI_Player.update()		101,	11,	1110,	110,	1101,	11,	110
2017-01-05 20:43:42 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-05 20:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:42 GameBoard.setupTreasurePanel()	1 5
2017-01-05 20:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:43 AI_Player.update()	update
2017-01-05 20:43:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	1 6
2017-01-05 20:43:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 20:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:43 AI_Player.update()	update
2017-01-05 20:43:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:43 AI_Player.update()	Search took1ms
2017-01-05 20:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:43 AI_Player.update()		110,	111,	111,	1001,	111,	11,	11
2017-01-05 20:43:43 AI_Player.update()		110,	110,	1010,	111,	111,	1001,	11
2017-01-05 20:43:43 AI_Player.update()		1110,	1101,	1110,	1001,	111,	110,	1011
2017-01-05 20:43:43 AI_Player.update()		1010,	101,	1011,	1010,	101,	1110,	11
2017-01-05 20:43:43 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 20:43:43 AI_Player.update()		101,	11,	1110,	110,	1101,	11,	110
2017-01-05 20:43:43 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 20:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	1 6
2017-01-05 20:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:43 AI_Player.update()	update
2017-01-05 20:43:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	1 6
2017-01-05 20:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:43 AI_Player.update()	update
2017-01-05 20:43:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:43 AI_Player.update()	Search took317ms
2017-01-05 20:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:43 AI_Player.update()		110,	111,	111,	1001,	111,	101,	11
2017-01-05 20:43:43 AI_Player.update()		110,	110,	1010,	111,	111,	11,	11
2017-01-05 20:43:43 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1001,	1011
2017-01-05 20:43:43 AI_Player.update()		1010,	101,	1011,	1010,	101,	110,	11
2017-01-05 20:43:43 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1110,	1011
2017-01-05 20:43:43 AI_Player.update()		101,	11,	1110,	110,	1101,	101,	110
2017-01-05 20:43:43 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 20:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:43 GameBoard.setupTreasurePanel()	1 6
2017-01-05 20:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:43 AI_Player.update()	update
2017-01-05 20:43:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:43 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 20:43:43 AI_Player.update()	Player b has won!
2017-01-05 20:43:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 20:43:45 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 20:43:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 20:43:45 QueryProlog.reset()	setup(h1/h2). suceeded
2017-01-05 20:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 20:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:45 AI_Player.update()	update
2017-01-05 20:43:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:45 AI_Player.update()	Search took1ms
2017-01-05 20:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:45 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-05 20:43:45 AI_Player.update()		11,	1110,	101,	111,	1001,	111,	11
2017-01-05 20:43:45 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 20:43:45 AI_Player.update()		1101,	1001,	1010,	110,	11,	1011,	11
2017-01-05 20:43:45 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1101,	1011
2017-01-05 20:43:45 AI_Player.update()		1011,	1100,	111,	11,	110,	1110,	111
2017-01-05 20:43:45 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1011,	1001
2017-01-05 20:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:45 AI_Player.update()	update
2017-01-05 20:43:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:45 AI_Player.update()	update
2017-01-05 20:43:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 20:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 20:43:45 AI_Player.update()	Search took46ms
2017-01-05 20:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:45 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-05 20:43:45 AI_Player.update()		1110,	101,	111,	1001,	111,	11,	11
2017-01-05 20:43:45 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 20:43:45 AI_Player.update()		1101,	1001,	1010,	110,	11,	1011,	11
2017-01-05 20:43:45 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1101,	1011
2017-01-05 20:43:45 AI_Player.update()		1011,	1100,	111,	11,	110,	1110,	111
2017-01-05 20:43:45 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1011,	1001
2017-01-05 20:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:45 AI_Player.update()	update
2017-01-05 20:43:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 20:43:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 20:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:45 AI_Player.update()	update
2017-01-05 20:43:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 20:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 20:43:45 AI_Player.update()	Search took1ms
2017-01-05 20:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 20:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:45 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-05 20:43:45 AI_Player.update()		1110,	101,	111,	1100,	111,	11,	11
2017-01-05 20:43:45 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-05 20:43:45 AI_Player.update()		1101,	1001,	1010,	101,	11,	1011,	11
2017-01-05 20:43:45 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1101,	1011
2017-01-05 20:43:45 AI_Player.update()		1011,	1100,	111,	1101,	110,	1110,	111
2017-01-05 20:43:45 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1011,	1001
2017-01-05 20:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 20:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 20:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 20:43:45 AI_Player.update()	update
2017-01-05 20:43:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 20:43:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 20:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 20:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 20:43:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 20:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 20:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 20:43:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 20:43:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 20:43:45 GameBoard.setupTreasurePanel()	adding helmet
