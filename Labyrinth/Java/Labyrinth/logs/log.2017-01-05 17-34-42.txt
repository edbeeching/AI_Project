2017-01-05 17:34:42 GameBoard.<init>()	Hello World!
2017-01-05 17:34:42 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 17:34:42 QueryProlog.initialise()	setup(h3/h3). suceeded
2017-01-05 17:34:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:42 GameBoard.setupBoardFromString()	Board created
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:42 GameBoard.initialise()	[ring, book, crown, sword, gold]
2017-01-05 17:34:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:42 GameBoard.initialise()	[helmet, candle, keys, map, gem]
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:42 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	null
2017-01-05 17:34:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:42 AI_Player.update()	update
2017-01-05 17:34:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:42 AI_Player.update()	Search took33ms
2017-01-05 17:34:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:42 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 17:34:42 AI_Player.update()		101,	11,	1010,	1110,	11,	1010,	110
2017-01-05 17:34:42 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1110,	1011
2017-01-05 17:34:42 AI_Player.update()		11,	1001,	110,	110,	1010,	1101,	1010
2017-01-05 17:34:42 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-05 17:34:42 AI_Player.update()		101,	1010,	11,	1010,	1001,	1001,	11
2017-01-05 17:34:42 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1101,	1001
2017-01-05 17:34:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:42 AI_Player.update()	update
2017-01-05 17:34:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:42 AI_Player.update()	update
2017-01-05 17:34:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:42 AI_Player.update()	Search took58ms
2017-01-05 17:34:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:42 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 17:34:42 AI_Player.update()		110,	101,	11,	1010,	1110,	11,	1010
2017-01-05 17:34:42 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1110,	1011
2017-01-05 17:34:42 AI_Player.update()		11,	1001,	110,	110,	1010,	1101,	1010
2017-01-05 17:34:42 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-05 17:34:42 AI_Player.update()		101,	1010,	11,	1010,	1001,	1001,	11
2017-01-05 17:34:42 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1101,	1001
2017-01-05 17:34:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:42 AI_Player.update()	update
2017-01-05 17:34:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:42 AI_Player.update()	update
2017-01-05 17:34:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:42 AI_Player.update()	Search took174ms
2017-01-05 17:34:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:42 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 17:34:42 AI_Player.update()		110,	1100,	11,	1010,	1110,	11,	1010
2017-01-05 17:34:42 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1110,	1011
2017-01-05 17:34:42 AI_Player.update()		11,	1100,	110,	110,	1010,	1101,	1010
2017-01-05 17:34:42 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 17:34:42 AI_Player.update()		101,	11,	11,	1010,	1001,	1001,	11
2017-01-05 17:34:42 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1101,	1001
2017-01-05 17:34:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:42 AI_Player.update()	update
2017-01-05 17:34:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:42 AI_Player.update()	update
2017-01-05 17:34:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:43 AI_Player.update()	Search took267ms
2017-01-05 17:34:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:43 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 17:34:43 AI_Player.update()		110,	1100,	11,	1010,	1110,	1110,	1010
2017-01-05 17:34:43 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-05 17:34:43 AI_Player.update()		11,	1100,	110,	110,	1010,	11,	1010
2017-01-05 17:34:43 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 17:34:43 AI_Player.update()		101,	11,	11,	1010,	1001,	1101,	11
2017-01-05 17:34:43 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:43 AI_Player.update()	update
2017-01-05 17:34:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	1 2
2017-01-05 17:34:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:43 AI_Player.update()	update
2017-01-05 17:34:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:43 AI_Player.update()	Search took175ms
2017-01-05 17:34:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:43 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 17:34:43 AI_Player.update()		1010,	110,	1100,	11,	1010,	1110,	1110
2017-01-05 17:34:43 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-05 17:34:43 AI_Player.update()		11,	1100,	110,	110,	1010,	11,	1010
2017-01-05 17:34:43 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 17:34:43 AI_Player.update()		101,	11,	11,	1010,	1001,	1101,	11
2017-01-05 17:34:43 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	1 2
2017-01-05 17:34:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:43 AI_Player.update()	update
2017-01-05 17:34:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:43 AI_Player.update()	update
2017-01-05 17:34:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:43 AI_Player.update()	Search took391ms
2017-01-05 17:34:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:43 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 17:34:43 AI_Player.update()		1110,	1010,	110,	1100,	11,	1010,	1110
2017-01-05 17:34:43 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-05 17:34:43 AI_Player.update()		11,	1100,	110,	110,	1010,	11,	1010
2017-01-05 17:34:43 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 17:34:43 AI_Player.update()		101,	11,	11,	1010,	1001,	1101,	11
2017-01-05 17:34:43 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:43 AI_Player.update()	update
2017-01-05 17:34:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:34:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:43 AI_Player.update()	update
2017-01-05 17:34:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:44 AI_Player.update()	Search took503ms
2017-01-05 17:34:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 17:34:44 AI_Player.update()		1110,	1010,	110,	11,	11,	1010,	1110
2017-01-05 17:34:44 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-05 17:34:44 AI_Player.update()		11,	1100,	110,	1001,	1010,	11,	1010
2017-01-05 17:34:44 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 17:34:44 AI_Player.update()		101,	11,	11,	1010,	1001,	1101,	11
2017-01-05 17:34:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 17:34:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:34:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()	update
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:34:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()	update
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:44 AI_Player.update()	Search took432ms
2017-01-05 17:34:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 17:34:44 AI_Player.update()		1110,	1010,	110,	11,	11,	1010,	1110
2017-01-05 17:34:44 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-05 17:34:44 AI_Player.update()		11,	1100,	110,	1001,	1010,	11,	1010
2017-01-05 17:34:44 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 17:34:44 AI_Player.update()		11,	101,	11,	11,	1010,	1001,	1101
2017-01-05 17:34:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 17:34:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:34:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()	update
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	2 4
2017-01-05 17:34:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()	update
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:44 AI_Player.update()	Search took107ms
2017-01-05 17:34:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 17:34:44 AI_Player.update()		1110,	1010,	110,	1100,	11,	1010,	1110
2017-01-05 17:34:44 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-05 17:34:44 AI_Player.update()		11,	1100,	110,	110,	1010,	11,	1010
2017-01-05 17:34:44 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 17:34:44 AI_Player.update()		11,	101,	11,	1010,	1010,	1001,	1101
2017-01-05 17:34:44 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	2 4
2017-01-05 17:34:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()	update
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	3 4
2017-01-05 17:34:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()	update
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:44 AI_Player.update()	Search took132ms
2017-01-05 17:34:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 17:34:44 AI_Player.update()		1010,	110,	1100,	11,	1010,	1110,	1110
2017-01-05 17:34:44 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-05 17:34:44 AI_Player.update()		11,	1100,	110,	110,	1010,	11,	1010
2017-01-05 17:34:44 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 17:34:44 AI_Player.update()		11,	101,	11,	1010,	1010,	1001,	1101
2017-01-05 17:34:44 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	3 4
2017-01-05 17:34:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()	update
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	3 5
2017-01-05 17:34:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:44 AI_Player.update()	update
2017-01-05 17:34:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:45 AI_Player.update()	Search took218ms
2017-01-05 17:34:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:45 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 17:34:45 AI_Player.update()		1010,	1001,	1100,	11,	1010,	1110,	1110
2017-01-05 17:34:45 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1101,	1011
2017-01-05 17:34:45 AI_Player.update()		11,	1010,	110,	110,	1010,	11,	1010
2017-01-05 17:34:45 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-05 17:34:45 AI_Player.update()		11,	101,	11,	1010,	1010,	1001,	1101
2017-01-05 17:34:45 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	3 5
2017-01-05 17:34:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:45 AI_Player.update()	update
2017-01-05 17:34:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	3 5
2017-01-05 17:34:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:45 AI_Player.update()	update
2017-01-05 17:34:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:45 AI_Player.update()	Search took164ms
2017-01-05 17:34:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:45 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 17:34:45 AI_Player.update()		1010,	1001,	1100,	11,	1010,	1110,	1110
2017-01-05 17:34:45 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1101,	1011
2017-01-05 17:34:45 AI_Player.update()		1010,	110,	110,	1010,	11,	1010,	11
2017-01-05 17:34:45 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-05 17:34:45 AI_Player.update()		11,	101,	11,	1010,	1010,	1001,	1101
2017-01-05 17:34:45 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	3 5
2017-01-05 17:34:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:45 AI_Player.update()	update
2017-01-05 17:34:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	3 6
2017-01-05 17:34:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:45 AI_Player.update()	update
2017-01-05 17:34:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:45 AI_Player.update()	Search took370ms
2017-01-05 17:34:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:45 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 17:34:45 AI_Player.update()		1010,	1001,	1100,	11,	1010,	1110,	1110
2017-01-05 17:34:45 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1101,	1011
2017-01-05 17:34:45 AI_Player.update()		1010,	110,	110,	1010,	11,	1010,	11
2017-01-05 17:34:45 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-05 17:34:45 AI_Player.update()		1101,	11,	101,	11,	1010,	1010,	1001
2017-01-05 17:34:45 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	3 6
2017-01-05 17:34:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:45 AI_Player.update()	update
2017-01-05 17:34:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	4 6
2017-01-05 17:34:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:45 AI_Player.update()	update
2017-01-05 17:34:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:46 AI_Player.update()	Search took245ms
2017-01-05 17:34:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 17:34:46 AI_Player.update()		1010,	1001,	1100,	1001,	1010,	1110,	1110
2017-01-05 17:34:46 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 17:34:46 AI_Player.update()		1010,	110,	110,	11,	11,	1010,	11
2017-01-05 17:34:46 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-05 17:34:46 AI_Player.update()		1101,	11,	101,	1001,	1010,	1010,	1001
2017-01-05 17:34:46 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:46 AI_Player.update()	Search took112ms
2017-01-05 17:34:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 17:34:46 AI_Player.update()		1010,	1001,	1100,	1001,	1010,	1110,	1110
2017-01-05 17:34:46 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 17:34:46 AI_Player.update()		110,	110,	11,	11,	1010,	11,	1010
2017-01-05 17:34:46 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-05 17:34:46 AI_Player.update()		1101,	11,	101,	1001,	1010,	1010,	1001
2017-01-05 17:34:46 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:46 AI_Player.update()	Search took193ms
2017-01-05 17:34:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 17:34:46 AI_Player.update()		1001,	1100,	1001,	1010,	1110,	1110,	1010
2017-01-05 17:34:46 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 17:34:46 AI_Player.update()		110,	110,	11,	11,	1010,	11,	1010
2017-01-05 17:34:46 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-05 17:34:46 AI_Player.update()		1101,	11,	101,	1001,	1010,	1010,	1001
2017-01-05 17:34:46 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 17:34:46 AI_Player.update()	Player b has won!
2017-01-05 17:34:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:34:46 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:34:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:34:46 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:34:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:46 AI_Player.update()	Search took249ms
2017-01-05 17:34:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 17:34:46 AI_Player.update()		11,	101,	1010,	11,	110,	101,	111
2017-01-05 17:34:46 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 17:34:46 AI_Player.update()		1010,	1101,	1010,	1001,	111,	101,	11
2017-01-05 17:34:46 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 17:34:46 AI_Player.update()		1100,	101,	110,	1001,	1101,	1011,	101
2017-01-05 17:34:46 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:34:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:46 AI_Player.update()	Search took16ms
2017-01-05 17:34:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 17:34:46 AI_Player.update()		11,	101,	1010,	11,	110,	1010,	111
2017-01-05 17:34:46 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 17:34:46 AI_Player.update()		1010,	1101,	1010,	1001,	111,	1100,	11
2017-01-05 17:34:46 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-05 17:34:46 AI_Player.update()		1100,	101,	110,	1001,	1101,	110,	101
2017-01-05 17:34:46 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:46 AI_Player.update()	Search took172ms
2017-01-05 17:34:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 17:34:46 AI_Player.update()		11,	101,	1010,	11,	110,	101,	111
2017-01-05 17:34:46 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 17:34:46 AI_Player.update()		1010,	1101,	1010,	1001,	111,	101,	11
2017-01-05 17:34:46 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 17:34:46 AI_Player.update()		1100,	101,	110,	1001,	1101,	1011,	101
2017-01-05 17:34:46 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:46 AI_Player.update()	Search took30ms
2017-01-05 17:34:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 17:34:46 AI_Player.update()		11,	101,	1010,	11,	110,	1010,	111
2017-01-05 17:34:46 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 17:34:46 AI_Player.update()		1010,	1101,	1010,	1001,	111,	1100,	11
2017-01-05 17:34:46 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-05 17:34:46 AI_Player.update()		1100,	101,	110,	1001,	1101,	110,	101
2017-01-05 17:34:46 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 17:34:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:46 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:46 AI_Player.update()	update
2017-01-05 17:34:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:47 AI_Player.update()	Search took285ms
2017-01-05 17:34:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 17:34:47 AI_Player.update()		11,	1010,	1010,	11,	110,	1010,	111
2017-01-05 17:34:47 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-05 17:34:47 AI_Player.update()		1010,	11,	1010,	1001,	111,	1100,	11
2017-01-05 17:34:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-05 17:34:47 AI_Player.update()		1100,	1010,	110,	1001,	1101,	110,	101
2017-01-05 17:34:47 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 17:34:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()	update
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()	update
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:47 AI_Player.update()	Search took129ms
2017-01-05 17:34:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 17:34:47 AI_Player.update()		11,	1010,	1010,	11,	110,	101,	111
2017-01-05 17:34:47 AI_Player.update()		1110,	1101,	1110,	101,	111,	1010,	1011
2017-01-05 17:34:47 AI_Player.update()		1010,	11,	1010,	1001,	111,	101,	11
2017-01-05 17:34:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 17:34:47 AI_Player.update()		1100,	1010,	110,	1001,	1101,	1011,	101
2017-01-05 17:34:47 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 17:34:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()	update
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:34:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()	update
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:47 AI_Player.update()	Search took248ms
2017-01-05 17:34:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 17:34:47 AI_Player.update()		11,	1010,	1010,	11,	110,	101,	111
2017-01-05 17:34:47 AI_Player.update()		1110,	1101,	1110,	101,	111,	1010,	1011
2017-01-05 17:34:47 AI_Player.update()		1010,	11,	1010,	1001,	111,	101,	11
2017-01-05 17:34:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 17:34:47 AI_Player.update()		1010,	110,	1001,	1101,	1011,	101,	1100
2017-01-05 17:34:47 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 17:34:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:34:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()	update
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:34:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()	update
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:47 AI_Player.update()	Search took330ms
2017-01-05 17:34:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 17:34:47 AI_Player.update()		11,	1010,	1010,	11,	110,	1010,	111
2017-01-05 17:34:47 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-05 17:34:47 AI_Player.update()		1010,	11,	1010,	1001,	111,	1100,	11
2017-01-05 17:34:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 17:34:47 AI_Player.update()		1010,	110,	1001,	1101,	1011,	110,	1100
2017-01-05 17:34:47 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 17:34:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:34:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()	update
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:34:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:47 AI_Player.update()	update
2017-01-05 17:34:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:48 AI_Player.update()	Search took909ms
2017-01-05 17:34:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:48 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 17:34:48 AI_Player.update()		11,	1010,	1010,	101,	110,	1010,	111
2017-01-05 17:34:48 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-05 17:34:48 AI_Player.update()		1010,	11,	1010,	101,	111,	1100,	11
2017-01-05 17:34:48 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-05 17:34:48 AI_Player.update()		1010,	110,	1001,	1010,	1011,	110,	1100
2017-01-05 17:34:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 17:34:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:34:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:48 AI_Player.update()	update
2017-01-05 17:34:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:34:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:48 AI_Player.update()	update
2017-01-05 17:34:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:49 AI_Player.update()	Search took972ms
2017-01-05 17:34:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:49 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 17:34:49 AI_Player.update()		1010,	1010,	101,	110,	1010,	111,	11
2017-01-05 17:34:49 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-05 17:34:49 AI_Player.update()		1010,	11,	1010,	101,	111,	1100,	11
2017-01-05 17:34:49 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-05 17:34:49 AI_Player.update()		1010,	110,	1001,	1010,	1011,	110,	1100
2017-01-05 17:34:49 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 17:34:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:34:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:49 AI_Player.update()	update
2017-01-05 17:34:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:34:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:49 AI_Player.update()	update
2017-01-05 17:34:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:50 AI_Player.update()	Search took773ms
2017-01-05 17:34:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:50 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 17:34:50 AI_Player.update()		1010,	1010,	101,	11,	1010,	111,	11
2017-01-05 17:34:50 AI_Player.update()		1110,	1101,	1110,	110,	111,	101,	1011
2017-01-05 17:34:50 AI_Player.update()		1010,	11,	1010,	1001,	111,	1100,	11
2017-01-05 17:34:50 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 17:34:50 AI_Player.update()		1010,	110,	1001,	1101,	1011,	110,	1100
2017-01-05 17:34:50 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 17:34:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:34:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:50 AI_Player.update()	update
2017-01-05 17:34:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:34:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:50 AI_Player.update()	update
2017-01-05 17:34:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:51 AI_Player.update()	Search took734ms
2017-01-05 17:34:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:51 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 17:34:51 AI_Player.update()		1010,	1010,	101,	110,	1010,	111,	11
2017-01-05 17:34:51 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-05 17:34:51 AI_Player.update()		1010,	11,	1010,	101,	111,	1100,	11
2017-01-05 17:34:51 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-05 17:34:51 AI_Player.update()		1010,	110,	1001,	1010,	1011,	110,	1100
2017-01-05 17:34:51 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 17:34:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:34:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:51 AI_Player.update()	update
2017-01-05 17:34:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:34:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:51 AI_Player.update()	update
2017-01-05 17:34:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:52 AI_Player.update()	Search took809ms
2017-01-05 17:34:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 17:34:52 AI_Player.update()		11,	1010,	1010,	101,	110,	1010,	111
2017-01-05 17:34:52 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-05 17:34:52 AI_Player.update()		1010,	11,	1010,	101,	111,	1100,	11
2017-01-05 17:34:52 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-05 17:34:52 AI_Player.update()		1010,	110,	1001,	1010,	1011,	110,	1100
2017-01-05 17:34:52 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 17:34:52 AI_Player.update()	Player a has won!
2017-01-05 17:34:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:34:52 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:34:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:34:52 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:34:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:52 AI_Player.update()	Search took62ms
2017-01-05 17:34:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()		110,	110,	111,	1011,	111,	1100,	11
2017-01-05 17:34:52 AI_Player.update()		1010,	101,	1001,	101,	110,	1001,	1110
2017-01-05 17:34:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 17:34:52 AI_Player.update()		1001,	11,	101,	11,	1100,	1100,	1100
2017-01-05 17:34:52 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1011,	1011
2017-01-05 17:34:52 AI_Player.update()		1100,	1001,	1010,	1001,	11,	1010,	101
2017-01-05 17:34:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:52 AI_Player.update()	Search took81ms
2017-01-05 17:34:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 17:34:52 AI_Player.update()		1010,	101,	1001,	101,	110,	1010,	1110
2017-01-05 17:34:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 17:34:52 AI_Player.update()		1001,	11,	101,	11,	1100,	1011,	1100
2017-01-05 17:34:52 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 17:34:52 AI_Player.update()		1100,	1001,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:52 AI_Player.update()	Search took87ms
2017-01-05 17:34:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 17:34:52 AI_Player.update()		101,	1001,	101,	110,	1010,	1110,	1010
2017-01-05 17:34:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 17:34:52 AI_Player.update()		1001,	11,	101,	11,	1100,	1011,	1100
2017-01-05 17:34:52 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 17:34:52 AI_Player.update()		1100,	1001,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:34:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:52 AI_Player.update()	Search took52ms
2017-01-05 17:34:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()		110,	110,	111,	1011,	111,	1110,	11
2017-01-05 17:34:52 AI_Player.update()		101,	1001,	101,	110,	1010,	1100,	1010
2017-01-05 17:34:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1011,	1011
2017-01-05 17:34:52 AI_Player.update()		1001,	11,	101,	11,	1100,	1010,	1100
2017-01-05 17:34:52 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:34:52 AI_Player.update()		1100,	1001,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:52 AI_Player.update()	Search took136ms
2017-01-05 17:34:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()		110,	110,	111,	1011,	111,	1110,	11
2017-01-05 17:34:52 AI_Player.update()		101,	1001,	101,	110,	1010,	1100,	1010
2017-01-05 17:34:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1011,	1011
2017-01-05 17:34:52 AI_Player.update()		11,	101,	11,	1100,	1010,	1100,	1001
2017-01-05 17:34:52 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:34:52 AI_Player.update()		1100,	1001,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:52 AI_Player.update()	Search took31ms
2017-01-05 17:34:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()		110,	110,	111,	1011,	111,	1110,	11
2017-01-05 17:34:52 AI_Player.update()		101,	1001,	101,	110,	1010,	1100,	1010
2017-01-05 17:34:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1011,	1011
2017-01-05 17:34:52 AI_Player.update()		1001,	11,	101,	11,	1100,	1010,	1100
2017-01-05 17:34:52 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:34:52 AI_Player.update()		1100,	1001,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:52 AI_Player.update()	Search took61ms
2017-01-05 17:34:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()		110,	110,	111,	1011,	111,	1110,	11
2017-01-05 17:34:52 AI_Player.update()		101,	1001,	101,	110,	1010,	1100,	1010
2017-01-05 17:34:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1011,	1011
2017-01-05 17:34:52 AI_Player.update()		11,	101,	11,	1100,	1010,	1100,	1001
2017-01-05 17:34:52 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:34:52 AI_Player.update()		1100,	1001,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:52 AI_Player.update()	Search took80ms
2017-01-05 17:34:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()		110,	110,	111,	1011,	111,	1110,	11
2017-01-05 17:34:52 AI_Player.update()		1010,	101,	1001,	101,	110,	1010,	1100
2017-01-05 17:34:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1011,	1011
2017-01-05 17:34:52 AI_Player.update()		11,	101,	11,	1100,	1010,	1100,	1001
2017-01-05 17:34:52 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:34:52 AI_Player.update()		1100,	1001,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 17:34:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:52 AI_Player.update()	update
2017-01-05 17:34:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:53 AI_Player.update()	Search took273ms
2017-01-05 17:34:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()		110,	101,	111,	1011,	111,	1110,	11
2017-01-05 17:34:53 AI_Player.update()		1010,	1010,	1001,	101,	110,	1010,	1100
2017-01-05 17:34:53 AI_Player.update()		1110,	101,	1110,	1100,	111,	1011,	1011
2017-01-05 17:34:53 AI_Player.update()		11,	1110,	11,	1100,	1010,	1100,	1001
2017-01-05 17:34:53 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:34:53 AI_Player.update()		1100,	1100,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:53 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-05 17:34:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()	update
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()	update
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:53 AI_Player.update()	Search took268ms
2017-01-05 17:34:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()		110,	101,	111,	1011,	111,	1001,	11
2017-01-05 17:34:53 AI_Player.update()		1010,	1010,	1001,	101,	110,	1110,	1100
2017-01-05 17:34:53 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 17:34:53 AI_Player.update()		11,	1110,	11,	1100,	1010,	1011,	1001
2017-01-05 17:34:53 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:34:53 AI_Player.update()		1100,	1100,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:53 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:34:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()	update
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:34:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()	update
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:53 AI_Player.update()	Search took57ms
2017-01-05 17:34:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()		110,	101,	111,	1011,	111,	1001,	11
2017-01-05 17:34:53 AI_Player.update()		1100,	1010,	1010,	1001,	101,	110,	1110
2017-01-05 17:34:53 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 17:34:53 AI_Player.update()		11,	1110,	11,	1100,	1010,	1011,	1001
2017-01-05 17:34:53 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:34:53 AI_Player.update()		1100,	1100,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:53 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:34:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()	update
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:34:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()	update
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:53 AI_Player.update()	Search took83ms
2017-01-05 17:34:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()		110,	101,	111,	1011,	111,	1001,	11
2017-01-05 17:34:53 AI_Player.update()		1100,	1010,	1010,	1001,	101,	110,	1110
2017-01-05 17:34:53 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 17:34:53 AI_Player.update()		1001,	11,	1110,	11,	1100,	1010,	1011
2017-01-05 17:34:53 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:34:53 AI_Player.update()		1100,	1100,	1010,	1001,	11,	1100,	101
2017-01-05 17:34:53 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:34:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()	update
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:34:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()	update
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:53 AI_Player.update()	Search took294ms
2017-01-05 17:34:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 17:34:53 AI_Player.update()		1100,	1010,	1010,	1100,	101,	110,	1110
2017-01-05 17:34:53 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 17:34:53 AI_Player.update()		1001,	11,	1110,	1010,	1100,	1010,	1011
2017-01-05 17:34:53 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-05 17:34:53 AI_Player.update()		1100,	1100,	1010,	11,	11,	1100,	101
2017-01-05 17:34:53 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1100,	1001
2017-01-05 17:34:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:34:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()	update
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:53 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:34:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:53 AI_Player.update()	update
2017-01-05 17:34:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:54 AI_Player.update()	Search took215ms
2017-01-05 17:34:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 17:34:54 AI_Player.update()		1110,	1100,	1010,	1010,	1100,	101,	110
2017-01-05 17:34:54 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 17:34:54 AI_Player.update()		1001,	11,	1110,	1010,	1100,	1010,	1011
2017-01-05 17:34:54 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-05 17:34:54 AI_Player.update()		1100,	1100,	1010,	11,	11,	1100,	101
2017-01-05 17:34:54 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1100,	1001
2017-01-05 17:34:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:34:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()	update
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:34:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()	update
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:54 AI_Player.update()	Search took318ms
2017-01-05 17:34:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 17:34:54 AI_Player.update()		1110,	1100,	1010,	1010,	1100,	101,	110
2017-01-05 17:34:54 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 17:34:54 AI_Player.update()		11,	1110,	1010,	1100,	1010,	1011,	1001
2017-01-05 17:34:54 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-05 17:34:54 AI_Player.update()		1100,	1100,	1010,	11,	11,	1100,	101
2017-01-05 17:34:54 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1100,	1001
2017-01-05 17:34:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:34:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()	update
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	5 3
2017-01-05 17:34:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()	update
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:54 AI_Player.update()	Search took302ms
2017-01-05 17:34:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 17:34:54 AI_Player.update()		1110,	1100,	1010,	11,	1100,	101,	110
2017-01-05 17:34:54 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 17:34:54 AI_Player.update()		11,	1110,	1010,	1001,	1010,	1011,	1001
2017-01-05 17:34:54 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-05 17:34:54 AI_Player.update()		1100,	1100,	1010,	1011,	11,	1100,	101
2017-01-05 17:34:54 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	5 3
2017-01-05 17:34:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()	update
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:34:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()	update
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:54 AI_Player.update()	Search took133ms
2017-01-05 17:34:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 17:34:54 AI_Player.update()		1110,	1100,	1010,	11,	1100,	101,	110
2017-01-05 17:34:54 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 17:34:54 AI_Player.update()		1110,	1010,	1001,	1010,	1011,	1001,	11
2017-01-05 17:34:54 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-05 17:34:54 AI_Player.update()		1100,	1100,	1010,	1011,	11,	1100,	101
2017-01-05 17:34:54 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:34:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()	update
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	6 4
2017-01-05 17:34:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:34:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:54 AI_Player.update()	update
2017-01-05 17:34:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:55 AI_Player.update()	Search took201ms
2017-01-05 17:34:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 17:34:55 AI_Player.update()		1110,	1100,	1010,	11,	1100,	101,	110
2017-01-05 17:34:55 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 17:34:55 AI_Player.update()		1110,	1010,	1001,	1010,	1011,	1001,	11
2017-01-05 17:34:55 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-05 17:34:55 AI_Player.update()		101,	1100,	1100,	1010,	1011,	11,	1100
2017-01-05 17:34:55 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	6 4
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	6 4
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:55 AI_Player.update()	Search took292ms
2017-01-05 17:34:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 17:34:55 AI_Player.update()		1110,	101,	1010,	11,	1100,	101,	110
2017-01-05 17:34:55 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 17:34:55 AI_Player.update()		1110,	101,	1001,	1010,	1011,	1001,	11
2017-01-05 17:34:55 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 17:34:55 AI_Player.update()		101,	1001,	1100,	1010,	1011,	11,	1100
2017-01-05 17:34:55 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	6 4
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 17:34:55 AI_Player.update()	Player a has won!
2017-01-05 17:34:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:34:55 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:34:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:34:55 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:34:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:55 AI_Player.update()	Search took38ms
2017-01-05 17:34:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-05 17:34:55 AI_Player.update()		1001,	1010,	101,	11,	1101,	1010,	11
2017-01-05 17:34:55 AI_Player.update()		1110,	111,	1110,	1110,	111,	110,	1011
2017-01-05 17:34:55 AI_Player.update()		1001,	11,	1010,	111,	110,	11,	1100
2017-01-05 17:34:55 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 17:34:55 AI_Player.update()		1010,	110,	1001,	1100,	1010,	11,	1100
2017-01-05 17:34:55 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:55 AI_Player.update()	Search took14ms
2017-01-05 17:34:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-05 17:34:55 AI_Player.update()		11,	1001,	1010,	101,	11,	1101,	1010
2017-01-05 17:34:55 AI_Player.update()		1110,	111,	1110,	1110,	111,	110,	1011
2017-01-05 17:34:55 AI_Player.update()		1001,	11,	1010,	111,	110,	11,	1100
2017-01-05 17:34:55 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 17:34:55 AI_Player.update()		1010,	110,	1001,	1100,	1010,	11,	1100
2017-01-05 17:34:55 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:55 AI_Player.update()	Search took33ms
2017-01-05 17:34:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 17:34:55 AI_Player.update()		11,	111,	1010,	101,	11,	1101,	1010
2017-01-05 17:34:55 AI_Player.update()		1110,	11,	1110,	1110,	111,	110,	1011
2017-01-05 17:34:55 AI_Player.update()		1001,	1010,	1010,	111,	110,	11,	1100
2017-01-05 17:34:55 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 17:34:55 AI_Player.update()		1010,	1100,	1001,	1100,	1010,	11,	1100
2017-01-05 17:34:55 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:34:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:55 AI_Player.update()	Search took87ms
2017-01-05 17:34:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-05 17:34:55 AI_Player.update()		11,	111,	1010,	101,	11,	1010,	1010
2017-01-05 17:34:55 AI_Player.update()		1110,	11,	1110,	1110,	111,	1101,	1011
2017-01-05 17:34:55 AI_Player.update()		1001,	1010,	1010,	111,	110,	110,	1100
2017-01-05 17:34:55 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 17:34:55 AI_Player.update()		1010,	1100,	1001,	1100,	1010,	1110,	1100
2017-01-05 17:34:55 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:55 AI_Player.update()	Search took78ms
2017-01-05 17:34:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-05 17:34:55 AI_Player.update()		11,	111,	1010,	101,	11,	1010,	1010
2017-01-05 17:34:55 AI_Player.update()		1110,	11,	1110,	1110,	111,	1101,	1011
2017-01-05 17:34:55 AI_Player.update()		1001,	1010,	1010,	111,	110,	110,	1100
2017-01-05 17:34:55 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 17:34:55 AI_Player.update()		1100,	1001,	1100,	1010,	1110,	1100,	1010
2017-01-05 17:34:55 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:55 AI_Player.update()	Search took354ms
2017-01-05 17:34:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 17:34:55 AI_Player.update()		11,	111,	1010,	1110,	11,	1010,	1010
2017-01-05 17:34:55 AI_Player.update()		1110,	11,	1110,	111,	111,	1101,	1011
2017-01-05 17:34:55 AI_Player.update()		1001,	1010,	1010,	1010,	110,	110,	1100
2017-01-05 17:34:55 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 17:34:55 AI_Player.update()		1100,	1001,	1100,	11,	1110,	1100,	1010
2017-01-05 17:34:55 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 17:34:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:34:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:55 AI_Player.update()	update
2017-01-05 17:34:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:56 AI_Player.update()	Search took721ms
2017-01-05 17:34:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:56 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 17:34:56 AI_Player.update()		11,	111,	1010,	1110,	11,	1010,	1010
2017-01-05 17:34:56 AI_Player.update()		1110,	11,	1110,	111,	111,	1101,	1011
2017-01-05 17:34:56 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	110,	110
2017-01-05 17:34:56 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 17:34:56 AI_Player.update()		1100,	1001,	1100,	11,	1110,	1100,	1010
2017-01-05 17:34:56 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 17:34:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:34:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:56 AI_Player.update()	update
2017-01-05 17:34:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:34:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:56 AI_Player.update()	update
2017-01-05 17:34:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:57 AI_Player.update()	Search took937ms
2017-01-05 17:34:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:57 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 17:34:57 AI_Player.update()		1010,	11,	111,	1010,	1110,	11,	1010
2017-01-05 17:34:57 AI_Player.update()		1110,	11,	1110,	111,	111,	1101,	1011
2017-01-05 17:34:57 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	110,	110
2017-01-05 17:34:57 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 17:34:57 AI_Player.update()		1100,	1001,	1100,	11,	1110,	1100,	1010
2017-01-05 17:34:57 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 17:34:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:34:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:57 AI_Player.update()	update
2017-01-05 17:34:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	3 4
2017-01-05 17:34:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:57 AI_Player.update()	update
2017-01-05 17:34:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:58 AI_Player.update()	Search took783ms
2017-01-05 17:34:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:58 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-05 17:34:58 AI_Player.update()		1010,	11,	111,	1010,	1110,	1100,	1010
2017-01-05 17:34:58 AI_Player.update()		1110,	11,	1110,	111,	111,	11,	1011
2017-01-05 17:34:58 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	1101,	110
2017-01-05 17:34:58 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-05 17:34:58 AI_Player.update()		1100,	1001,	1100,	11,	1110,	11,	1010
2017-01-05 17:34:58 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 17:34:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	3 4
2017-01-05 17:34:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:58 AI_Player.update()	update
2017-01-05 17:34:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:34:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:58 AI_Player.update()	update
2017-01-05 17:34:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:58 AI_Player.update()	Search took306ms
2017-01-05 17:34:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:58 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 17:34:58 AI_Player.update()		1010,	11,	111,	1010,	1110,	11,	1010
2017-01-05 17:34:58 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-05 17:34:58 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	11,	110
2017-01-05 17:34:58 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-05 17:34:58 AI_Player.update()		1100,	1001,	1100,	11,	1110,	110,	1010
2017-01-05 17:34:58 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 17:34:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:34:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:58 AI_Player.update()	update
2017-01-05 17:34:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	4 5
2017-01-05 17:34:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:58 AI_Player.update()	update
2017-01-05 17:34:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:59 AI_Player.update()	Search took477ms
2017-01-05 17:34:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:59 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 17:34:59 AI_Player.update()		11,	111,	1010,	1110,	11,	1010,	1010
2017-01-05 17:34:59 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-05 17:34:59 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	11,	110
2017-01-05 17:34:59 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-05 17:34:59 AI_Player.update()		1100,	1001,	1100,	11,	1110,	110,	1010
2017-01-05 17:34:59 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 17:34:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	4 5
2017-01-05 17:34:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:59 AI_Player.update()	update
2017-01-05 17:34:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:34:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:59 AI_Player.update()	update
2017-01-05 17:34:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:34:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:34:59 AI_Player.update()	Search took92ms
2017-01-05 17:34:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:59 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 17:34:59 AI_Player.update()		1010,	11,	111,	1010,	1110,	11,	1010
2017-01-05 17:34:59 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-05 17:34:59 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	11,	110
2017-01-05 17:34:59 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-05 17:34:59 AI_Player.update()		1100,	1001,	1100,	11,	1110,	110,	1010
2017-01-05 17:34:59 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 17:34:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:34:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:59 AI_Player.update()	update
2017-01-05 17:34:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:34:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:34:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:34:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:59 AI_Player.update()	update
2017-01-05 17:34:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:34:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:34:59 AI_Player.update()	Search took217ms
2017-01-05 17:34:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:34:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:59 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 17:34:59 AI_Player.update()		11,	111,	1010,	1110,	11,	1010,	1010
2017-01-05 17:34:59 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-05 17:34:59 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	11,	110
2017-01-05 17:34:59 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-05 17:34:59 AI_Player.update()		1100,	1001,	1100,	11,	1110,	110,	1010
2017-01-05 17:34:59 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 17:34:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:34:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:34:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:59 AI_Player.update()	update
2017-01-05 17:34:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:34:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:34:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:34:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:34:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:34:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:34:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:34:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:34:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:34:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:34:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:34:59 AI_Player.update()	update
2017-01-05 17:34:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:00 AI_Player.update()	Search took582ms
2017-01-05 17:35:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 17:35:00 AI_Player.update()		11,	111,	1010,	1110,	11,	1010,	1010
2017-01-05 17:35:00 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	11,	110
2017-01-05 17:35:00 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-05 17:35:00 AI_Player.update()		1001,	1100,	11,	1110,	110,	1010,	1100
2017-01-05 17:35:00 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:00 AI_Player.update()	Search took480ms
2017-01-05 17:35:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()		110,	111,	111,	101,	111,	1100,	11
2017-01-05 17:35:00 AI_Player.update()		11,	11,	1010,	1110,	11,	1010,	1010
2017-01-05 17:35:00 AI_Player.update()		1110,	1001,	1110,	111,	111,	1100,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	110,	1010,	1010,	1010,	11,	110
2017-01-05 17:35:00 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1101,	1011
2017-01-05 17:35:00 AI_Player.update()		1001,	11,	11,	1110,	110,	1010,	1100
2017-01-05 17:35:00 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 17:35:00 AI_Player.update()	Player a has won!
2017-01-05 17:35:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:00 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:35:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:00 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:35:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:00 AI_Player.update()	Search took27ms
2017-01-05 17:35:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-05 17:35:00 AI_Player.update()		1001,	1010,	110,	110,	1010,	1100,	1001
2017-01-05 17:35:00 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	1010,	101,	111,	111,	1100,	1100
2017-01-05 17:35:00 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	1100,	111,	111,	11,	101,	1001
2017-01-05 17:35:00 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:00 AI_Player.update()	Search took45ms
2017-01-05 17:35:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-05 17:35:00 AI_Player.update()		1010,	110,	110,	1010,	1100,	1001,	1001
2017-01-05 17:35:00 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	1010,	101,	111,	111,	1100,	1100
2017-01-05 17:35:00 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	1100,	111,	111,	11,	101,	1001
2017-01-05 17:35:00 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:00 AI_Player.update()	Search took43ms
2017-01-05 17:35:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 17:35:00 AI_Player.update()		1010,	110,	110,	1010,	1100,	1001,	1001
2017-01-05 17:35:00 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	110,	101,	111,	111,	1100,	1100
2017-01-05 17:35:00 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	1001,	111,	111,	11,	101,	1001
2017-01-05 17:35:00 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:00 AI_Player.update()	Search took35ms
2017-01-05 17:35:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 17:35:00 AI_Player.update()		110,	110,	1010,	1100,	1001,	1001,	1010
2017-01-05 17:35:00 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	110,	101,	111,	111,	1100,	1100
2017-01-05 17:35:00 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	1001,	111,	111,	11,	101,	1001
2017-01-05 17:35:00 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:00 AI_Player.update()	Search took33ms
2017-01-05 17:35:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 17:35:00 AI_Player.update()		110,	11,	1010,	1100,	1001,	1001,	1010
2017-01-05 17:35:00 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	110,	101,	111,	111,	1100,	1100
2017-01-05 17:35:00 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	1010,	111,	111,	11,	101,	1001
2017-01-05 17:35:00 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:00 AI_Player.update()	Search took89ms
2017-01-05 17:35:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 17:35:00 AI_Player.update()		110,	11,	1010,	1100,	1001,	1010,	1010
2017-01-05 17:35:00 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	110,	101,	111,	111,	1010,	1100
2017-01-05 17:35:00 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:00 AI_Player.update()		1100,	1010,	111,	111,	11,	1100,	1001
2017-01-05 17:35:00 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:00 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:00 AI_Player.update()	update
2017-01-05 17:35:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:01 AI_Player.update()	Search took43ms
2017-01-05 17:35:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 17:35:01 AI_Player.update()		1010,	110,	11,	1010,	1100,	1001,	1010
2017-01-05 17:35:01 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:01 AI_Player.update()		1100,	110,	101,	111,	111,	1010,	1100
2017-01-05 17:35:01 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:01 AI_Player.update()		1100,	1010,	111,	111,	11,	1100,	1001
2017-01-05 17:35:01 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()	update
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()	update
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:01 AI_Player.update()	Search took282ms
2017-01-05 17:35:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 17:35:01 AI_Player.update()		1010,	110,	11,	1010,	1100,	1001,	1010
2017-01-05 17:35:01 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:01 AI_Player.update()		1100,	110,	101,	111,	111,	1010,	1100
2017-01-05 17:35:01 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:01 AI_Player.update()		1100,	1001,	111,	111,	11,	1100,	1001
2017-01-05 17:35:01 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()	update
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()	update
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:01 AI_Player.update()	Search took86ms
2017-01-05 17:35:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 17:35:01 AI_Player.update()		110,	11,	1010,	1100,	1001,	1010,	1010
2017-01-05 17:35:01 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:01 AI_Player.update()		1100,	110,	101,	111,	111,	1010,	1100
2017-01-05 17:35:01 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:01 AI_Player.update()		1100,	1001,	111,	111,	11,	1100,	1001
2017-01-05 17:35:01 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()	update
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()	update
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:01 AI_Player.update()	Search took215ms
2017-01-05 17:35:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 17:35:01 AI_Player.update()		110,	110,	1010,	1100,	1001,	1010,	1010
2017-01-05 17:35:01 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:01 AI_Player.update()		1100,	1010,	101,	111,	111,	1010,	1100
2017-01-05 17:35:01 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:01 AI_Player.update()		1100,	1100,	111,	111,	11,	1100,	1001
2017-01-05 17:35:01 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()	update
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()	update
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:01 AI_Player.update()	Search took320ms
2017-01-05 17:35:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 17:35:01 AI_Player.update()		110,	1010,	1100,	1001,	1010,	1010,	110
2017-01-05 17:35:01 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:01 AI_Player.update()		1100,	1010,	101,	111,	111,	1010,	1100
2017-01-05 17:35:01 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:01 AI_Player.update()		1100,	1100,	111,	111,	11,	1100,	1001
2017-01-05 17:35:01 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()	update
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:01 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:01 AI_Player.update()	update
2017-01-05 17:35:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:02 AI_Player.update()	Search took256ms
2017-01-05 17:35:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 17:35:02 AI_Player.update()		110,	1010,	1100,	1001,	1010,	1010,	110
2017-01-05 17:35:02 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:02 AI_Player.update()		1100,	1010,	101,	111,	111,	1010,	1100
2017-01-05 17:35:02 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:02 AI_Player.update()		1100,	111,	111,	11,	1100,	1001,	1100
2017-01-05 17:35:02 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()	update
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	4 5
2017-01-05 17:35:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()	update
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:02 AI_Player.update()	Search took109ms
2017-01-05 17:35:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 17:35:02 AI_Player.update()		110,	110,	1010,	1100,	1001,	1010,	1010
2017-01-05 17:35:02 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:02 AI_Player.update()		1100,	1010,	101,	111,	111,	1010,	1100
2017-01-05 17:35:02 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:02 AI_Player.update()		1100,	111,	111,	11,	1100,	1001,	1100
2017-01-05 17:35:02 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	4 5
2017-01-05 17:35:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()	update
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()	update
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:02 AI_Player.update()	Search took274ms
2017-01-05 17:35:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 17:35:02 AI_Player.update()		110,	110,	1010,	11,	1001,	1010,	1010
2017-01-05 17:35:02 AI_Player.update()		1110,	110,	1110,	111,	111,	1001,	1011
2017-01-05 17:35:02 AI_Player.update()		1100,	1010,	101,	1010,	111,	1010,	1100
2017-01-05 17:35:02 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:02 AI_Player.update()		1100,	111,	111,	101,	1100,	1001,	1100
2017-01-05 17:35:02 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()	update
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()	update
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:02 AI_Player.update()	Search took175ms
2017-01-05 17:35:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 17:35:02 AI_Player.update()		110,	110,	1010,	11,	1001,	1010,	1010
2017-01-05 17:35:02 AI_Player.update()		1110,	110,	1110,	111,	111,	1001,	1011
2017-01-05 17:35:02 AI_Player.update()		1010,	101,	1010,	111,	1010,	1100,	1100
2017-01-05 17:35:02 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:02 AI_Player.update()		1100,	111,	111,	101,	1100,	1001,	1100
2017-01-05 17:35:02 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()	update
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:02 AI_Player.update()	update
2017-01-05 17:35:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:03 AI_Player.update()	Search took388ms
2017-01-05 17:35:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:03 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-05 17:35:03 AI_Player.update()		110,	11,	1010,	11,	1001,	1010,	1010
2017-01-05 17:35:03 AI_Player.update()		1110,	110,	1110,	111,	111,	1001,	1011
2017-01-05 17:35:03 AI_Player.update()		1010,	110,	1010,	111,	1010,	1100,	1100
2017-01-05 17:35:03 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:03 AI_Player.update()		1100,	1001,	111,	101,	1100,	1001,	1100
2017-01-05 17:35:03 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:03 AI_Player.update()	update
2017-01-05 17:35:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:03 AI_Player.update()	update
2017-01-05 17:35:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:03 AI_Player.update()	Search took627ms
2017-01-05 17:35:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:03 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 17:35:03 AI_Player.update()		110,	110,	1010,	11,	1001,	1010,	1010
2017-01-05 17:35:03 AI_Player.update()		1110,	11,	1110,	111,	111,	1001,	1011
2017-01-05 17:35:03 AI_Player.update()		1010,	110,	1010,	111,	1010,	1100,	1100
2017-01-05 17:35:03 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:03 AI_Player.update()		1100,	101,	111,	101,	1100,	1001,	1100
2017-01-05 17:35:03 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:03 AI_Player.update()	update
2017-01-05 17:35:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:03 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 17:35:03 AI_Player.update()	Player a has won!
2017-01-05 17:35:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:03 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:35:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:03 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:35:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:03 AI_Player.update()	update
2017-01-05 17:35:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:03 AI_Player.update()	Search took167ms
2017-01-05 17:35:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:03 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-05 17:35:03 AI_Player.update()		1100,	1010,	1110,	110,	1001,	1010,	1100
2017-01-05 17:35:03 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-05 17:35:03 AI_Player.update()		1001,	1110,	11,	110,	1100,	11,	1011
2017-01-05 17:35:03 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:03 AI_Player.update()		11,	11,	1010,	1100,	110,	101,	101
2017-01-05 17:35:03 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:03 AI_Player.update()	update
2017-01-05 17:35:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:03 AI_Player.update()	update
2017-01-05 17:35:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:04 AI_Player.update()	Search took342ms
2017-01-05 17:35:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:04 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 17:35:04 AI_Player.update()		1100,	1011,	1110,	110,	1001,	1010,	1100
2017-01-05 17:35:04 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-05 17:35:04 AI_Player.update()		1001,	1010,	11,	110,	1100,	11,	1011
2017-01-05 17:35:04 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:04 AI_Player.update()		11,	111,	1010,	1100,	110,	101,	101
2017-01-05 17:35:04 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:04 AI_Player.update()	update
2017-01-05 17:35:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:04 AI_Player.update()	update
2017-01-05 17:35:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:04 AI_Player.update()	Search took34ms
2017-01-05 17:35:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:04 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-05 17:35:04 AI_Player.update()		1100,	1010,	1110,	110,	1001,	1010,	1100
2017-01-05 17:35:04 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-05 17:35:04 AI_Player.update()		1001,	1110,	11,	110,	1100,	11,	1011
2017-01-05 17:35:04 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:04 AI_Player.update()		11,	11,	1010,	1100,	110,	101,	101
2017-01-05 17:35:04 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:04 AI_Player.update()	update
2017-01-05 17:35:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:04 AI_Player.update()	update
2017-01-05 17:35:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:04 AI_Player.update()	Search took289ms
2017-01-05 17:35:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:04 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-05 17:35:04 AI_Player.update()		1100,	1010,	1110,	110,	1001,	1010,	1100
2017-01-05 17:35:04 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-05 17:35:04 AI_Player.update()		1011,	1001,	1110,	11,	110,	1100,	11
2017-01-05 17:35:04 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:04 AI_Player.update()		11,	11,	1010,	1100,	110,	101,	101
2017-01-05 17:35:04 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:04 AI_Player.update()	update
2017-01-05 17:35:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:35:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:04 AI_Player.update()	update
2017-01-05 17:35:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:05 AI_Player.update()	Search took681ms
2017-01-05 17:35:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:05 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-05 17:35:05 AI_Player.update()		1100,	1010,	1110,	110,	1001,	1010,	1100
2017-01-05 17:35:05 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-05 17:35:05 AI_Player.update()		11,	1011,	1001,	1110,	11,	110,	1100
2017-01-05 17:35:05 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:05 AI_Player.update()		11,	11,	1010,	1100,	110,	101,	101
2017-01-05 17:35:05 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:35:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:05 AI_Player.update()	update
2017-01-05 17:35:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:05 AI_Player.update()	update
2017-01-05 17:35:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:05 AI_Player.update()	Search took103ms
2017-01-05 17:35:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:05 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-05 17:35:05 AI_Player.update()		1100,	1010,	1110,	110,	1001,	1010,	1100
2017-01-05 17:35:05 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-05 17:35:05 AI_Player.update()		1011,	1001,	1110,	11,	110,	1100,	11
2017-01-05 17:35:05 AI_Player.update()		1110,	111,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:05 AI_Player.update()		11,	11,	1010,	1100,	110,	101,	101
2017-01-05 17:35:05 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:05 AI_Player.update()	update
2017-01-05 17:35:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:05 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:05 AI_Player.update()	update
2017-01-05 17:35:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:06 AI_Player.update()	Search took597ms
2017-01-05 17:35:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 17:35:06 AI_Player.update()		1100,	1010,	1110,	110,	1001,	1010,	1100
2017-01-05 17:35:06 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-05 17:35:06 AI_Player.update()		1011,	111,	1110,	11,	110,	1100,	11
2017-01-05 17:35:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:06 AI_Player.update()		11,	101,	1010,	1100,	110,	101,	101
2017-01-05 17:35:06 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()	update
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()	update
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:06 AI_Player.update()	Search took455ms
2017-01-05 17:35:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-05 17:35:06 AI_Player.update()		1100,	1010,	1110,	1101,	1001,	1010,	1100
2017-01-05 17:35:06 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:06 AI_Player.update()		1011,	111,	1110,	1100,	110,	1100,	11
2017-01-05 17:35:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:06 AI_Player.update()		11,	101,	1010,	1100,	110,	101,	101
2017-01-05 17:35:06 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()	update
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	3 4
2017-01-05 17:35:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()	update
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:06 AI_Player.update()	Search took177ms
2017-01-05 17:35:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-05 17:35:06 AI_Player.update()		1100,	1100,	1010,	1110,	1101,	1001,	1010
2017-01-05 17:35:06 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:06 AI_Player.update()		1011,	111,	1110,	1100,	110,	1100,	11
2017-01-05 17:35:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:06 AI_Player.update()		11,	101,	1010,	1100,	110,	101,	101
2017-01-05 17:35:06 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	3 4
2017-01-05 17:35:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()	update
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()	update
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:06 AI_Player.update()	Search took126ms
2017-01-05 17:35:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-05 17:35:06 AI_Player.update()		1100,	1100,	1010,	1110,	1101,	1001,	1010
2017-01-05 17:35:06 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:06 AI_Player.update()		1011,	111,	1110,	1100,	110,	1100,	11
2017-01-05 17:35:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:06 AI_Player.update()		101,	11,	101,	1010,	1100,	110,	101
2017-01-05 17:35:06 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()	update
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:06 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:06 AI_Player.update()	update
2017-01-05 17:35:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:07 AI_Player.update()	Search took176ms
2017-01-05 17:35:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-05 17:35:07 AI_Player.update()		1100,	1001,	1010,	1110,	1101,	1001,	1010
2017-01-05 17:35:07 AI_Player.update()		1110,	111,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:07 AI_Player.update()		1011,	11,	1110,	1100,	110,	1100,	11
2017-01-05 17:35:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:07 AI_Player.update()		101,	1011,	101,	1010,	1100,	110,	101
2017-01-05 17:35:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:07 AI_Player.update()	Search took53ms
2017-01-05 17:35:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-05 17:35:07 AI_Player.update()		1100,	1001,	1010,	1110,	1101,	1001,	1010
2017-01-05 17:35:07 AI_Player.update()		1110,	111,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:07 AI_Player.update()		1011,	11,	1110,	1100,	110,	1100,	11
2017-01-05 17:35:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:07 AI_Player.update()		1011,	101,	1010,	1100,	110,	101,	101
2017-01-05 17:35:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	4 5
2017-01-05 17:35:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:07 AI_Player.update()	Search took206ms
2017-01-05 17:35:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-05 17:35:07 AI_Player.update()		1001,	1010,	1110,	1101,	1001,	1010,	1100
2017-01-05 17:35:07 AI_Player.update()		1110,	111,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:07 AI_Player.update()		1011,	11,	1110,	1100,	110,	1100,	11
2017-01-05 17:35:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:07 AI_Player.update()		1011,	101,	1010,	1100,	110,	101,	101
2017-01-05 17:35:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	4 5
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:07 AI_Player.update()	Search took34ms
2017-01-05 17:35:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-05 17:35:07 AI_Player.update()		1001,	1100,	1110,	1101,	1001,	1010,	1100
2017-01-05 17:35:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:07 AI_Player.update()		1011,	111,	1110,	1100,	110,	1100,	11
2017-01-05 17:35:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:07 AI_Player.update()		1011,	11,	1010,	1100,	110,	101,	101
2017-01-05 17:35:07 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:07 AI_Player.update()	Search took340ms
2017-01-05 17:35:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-05 17:35:07 AI_Player.update()		1001,	1010,	1110,	1101,	1001,	1010,	1100
2017-01-05 17:35:07 AI_Player.update()		1110,	111,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:07 AI_Player.update()		1011,	11,	1110,	1100,	110,	1100,	11
2017-01-05 17:35:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:07 AI_Player.update()		1011,	101,	1010,	1100,	110,	101,	101
2017-01-05 17:35:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:07 AI_Player.update()	Search took148ms
2017-01-05 17:35:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-05 17:35:07 AI_Player.update()		1001,	1010,	1110,	1101,	1001,	1010,	1100
2017-01-05 17:35:07 AI_Player.update()		1110,	111,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:07 AI_Player.update()		11,	1110,	1100,	110,	1100,	11,	1011
2017-01-05 17:35:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 17:35:07 AI_Player.update()		1011,	101,	1010,	1100,	110,	101,	101
2017-01-05 17:35:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:07 AI_Player.update()	update
2017-01-05 17:35:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:08 AI_Player.update()	Search took230ms
2017-01-05 17:35:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-05 17:35:08 AI_Player.update()		1001,	1010,	1110,	110,	1001,	1010,	1100
2017-01-05 17:35:08 AI_Player.update()		1110,	111,	1110,	1101,	111,	1001,	1011
2017-01-05 17:35:08 AI_Player.update()		11,	1110,	1100,	11,	1100,	11,	1011
2017-01-05 17:35:08 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-05 17:35:08 AI_Player.update()		1011,	101,	1010,	1100,	110,	101,	101
2017-01-05 17:35:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:08 AI_Player.update()	Search took155ms
2017-01-05 17:35:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-05 17:35:08 AI_Player.update()		1100,	1001,	1010,	1110,	110,	1001,	1010
2017-01-05 17:35:08 AI_Player.update()		1110,	111,	1110,	1101,	111,	1001,	1011
2017-01-05 17:35:08 AI_Player.update()		11,	1110,	1100,	11,	1100,	11,	1011
2017-01-05 17:35:08 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-05 17:35:08 AI_Player.update()		1011,	101,	1010,	1100,	110,	101,	101
2017-01-05 17:35:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 17:35:08 AI_Player.update()	Player b has won!
2017-01-05 17:35:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:08 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:35:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:08 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:35:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:08 AI_Player.update()	Search took96ms
2017-01-05 17:35:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 17:35:08 AI_Player.update()		110,	1100,	101,	11,	1001,	1010,	1001
2017-01-05 17:35:08 AI_Player.update()		1110,	1110,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:08 AI_Player.update()		110,	111,	101,	101,	111,	101,	110
2017-01-05 17:35:08 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1110,	1011
2017-01-05 17:35:08 AI_Player.update()		1100,	11,	1001,	1100,	1110,	1100,	101
2017-01-05 17:35:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:08 AI_Player.update()	Search took71ms
2017-01-05 17:35:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-05 17:35:08 AI_Player.update()		110,	1110,	101,	11,	1001,	1010,	1001
2017-01-05 17:35:08 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:08 AI_Player.update()		110,	1010,	101,	101,	111,	101,	110
2017-01-05 17:35:08 AI_Player.update()		1110,	11,	1101,	101,	1011,	1110,	1011
2017-01-05 17:35:08 AI_Player.update()		1100,	11,	1001,	1100,	1110,	1100,	101
2017-01-05 17:35:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:08 AI_Player.update()	Search took141ms
2017-01-05 17:35:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 17:35:08 AI_Player.update()		110,	1110,	101,	11,	1001,	101,	1001
2017-01-05 17:35:08 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:08 AI_Player.update()		110,	1010,	101,	101,	111,	1110,	110
2017-01-05 17:35:08 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 17:35:08 AI_Player.update()		1100,	11,	1001,	1100,	1110,	1010,	101
2017-01-05 17:35:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:08 AI_Player.update()	Search took400ms
2017-01-05 17:35:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 17:35:08 AI_Player.update()		110,	1110,	101,	11,	1001,	101,	1001
2017-01-05 17:35:08 AI_Player.update()		1110,	111,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:08 AI_Player.update()		1010,	101,	101,	111,	1110,	110,	110
2017-01-05 17:35:08 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 17:35:08 AI_Player.update()		1100,	11,	1001,	1100,	1110,	1010,	101
2017-01-05 17:35:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:08 AI_Player.update()	update
2017-01-05 17:35:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:09 AI_Player.update()	Search took51ms
2017-01-05 17:35:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:09 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 17:35:09 AI_Player.update()		110,	1110,	101,	1100,	1001,	101,	1001
2017-01-05 17:35:09 AI_Player.update()		1110,	111,	1110,	111,	111,	101,	1011
2017-01-05 17:35:09 AI_Player.update()		1010,	101,	101,	101,	1110,	110,	110
2017-01-05 17:35:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 17:35:09 AI_Player.update()		1100,	11,	1001,	101,	1110,	1010,	101
2017-01-05 17:35:09 AI_Player.update()		1100,	11,	1101,	11,	1101,	101,	1001
2017-01-05 17:35:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:09 AI_Player.update()	update
2017-01-05 17:35:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:09 AI_Player.update()	update
2017-01-05 17:35:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:09 AI_Player.update()	Search took372ms
2017-01-05 17:35:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:09 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 17:35:09 AI_Player.update()		110,	111,	101,	1100,	1001,	101,	1001
2017-01-05 17:35:09 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 17:35:09 AI_Player.update()		1010,	11,	101,	101,	1110,	110,	110
2017-01-05 17:35:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 17:35:09 AI_Player.update()		1100,	11,	1001,	101,	1110,	1010,	101
2017-01-05 17:35:09 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-05 17:35:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:09 AI_Player.update()	update
2017-01-05 17:35:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:35:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:09 AI_Player.update()	update
2017-01-05 17:35:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:09 AI_Player.update()	Search took220ms
2017-01-05 17:35:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:09 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 17:35:09 AI_Player.update()		110,	111,	101,	11,	1001,	101,	1001
2017-01-05 17:35:09 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:09 AI_Player.update()		1010,	11,	101,	111,	1110,	110,	110
2017-01-05 17:35:09 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 17:35:09 AI_Player.update()		1100,	11,	1001,	1100,	1110,	1010,	101
2017-01-05 17:35:09 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:35:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:09 AI_Player.update()	update
2017-01-05 17:35:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:09 AI_Player.update()	update
2017-01-05 17:35:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:10 AI_Player.update()	Search took638ms
2017-01-05 17:35:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:10 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-05 17:35:10 AI_Player.update()		110,	101,	101,	11,	1001,	101,	1001
2017-01-05 17:35:10 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:10 AI_Player.update()		1010,	11,	101,	111,	1110,	110,	110
2017-01-05 17:35:10 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 17:35:10 AI_Player.update()		1100,	1100,	1001,	1100,	1110,	1010,	101
2017-01-05 17:35:10 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:10 AI_Player.update()	update
2017-01-05 17:35:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:10 AI_Player.update()	update
2017-01-05 17:35:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:10 AI_Player.update()	Search took643ms
2017-01-05 17:35:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:10 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-05 17:35:10 AI_Player.update()		110,	101,	101,	1100,	1001,	101,	1001
2017-01-05 17:35:10 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 17:35:10 AI_Player.update()		1010,	11,	101,	101,	1110,	110,	110
2017-01-05 17:35:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 17:35:10 AI_Player.update()		1100,	1100,	1001,	101,	1110,	1010,	101
2017-01-05 17:35:10 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-05 17:35:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:10 AI_Player.update()	update
2017-01-05 17:35:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:10 AI_Player.update()	update
2017-01-05 17:35:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:11 AI_Player.update()	Search took172ms
2017-01-05 17:35:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:11 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-05 17:35:11 AI_Player.update()		110,	11,	101,	1100,	1001,	101,	1001
2017-01-05 17:35:11 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 17:35:11 AI_Player.update()		1010,	11,	101,	101,	1110,	110,	110
2017-01-05 17:35:11 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-05 17:35:11 AI_Player.update()		1100,	1110,	1001,	101,	1110,	1010,	101
2017-01-05 17:35:11 AI_Player.update()		1100,	111,	1101,	11,	1101,	101,	1001
2017-01-05 17:35:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:11 AI_Player.update()	update
2017-01-05 17:35:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:11 AI_Player.update()	update
2017-01-05 17:35:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:11 AI_Player.update()	Search took320ms
2017-01-05 17:35:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:11 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-05 17:35:11 AI_Player.update()		110,	11,	101,	1100,	1001,	101,	1001
2017-01-05 17:35:11 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 17:35:11 AI_Player.update()		11,	101,	101,	1110,	110,	110,	1010
2017-01-05 17:35:11 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-05 17:35:11 AI_Player.update()		1100,	1110,	1001,	101,	1110,	1010,	101
2017-01-05 17:35:11 AI_Player.update()		1100,	111,	1101,	11,	1101,	101,	1001
2017-01-05 17:35:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:11 AI_Player.update()	update
2017-01-05 17:35:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:35:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:11 AI_Player.update()	update
2017-01-05 17:35:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:11 AI_Player.update()	Search took119ms
2017-01-05 17:35:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:11 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-05 17:35:11 AI_Player.update()		110,	11,	101,	1100,	1001,	101,	1001
2017-01-05 17:35:11 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 17:35:11 AI_Player.update()		11,	1100,	101,	1110,	110,	110,	1010
2017-01-05 17:35:11 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1100,	1011
2017-01-05 17:35:11 AI_Player.update()		1100,	111,	1001,	101,	1110,	1010,	101
2017-01-05 17:35:11 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 17:35:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:35:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:11 AI_Player.update()	update
2017-01-05 17:35:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:11 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:35:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:11 AI_Player.update()	update
2017-01-05 17:35:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:12 AI_Player.update()	Search took515ms
2017-01-05 17:35:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 17:35:12 AI_Player.update()		110,	11,	101,	1100,	1001,	1010,	1001
2017-01-05 17:35:12 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 17:35:12 AI_Player.update()		11,	1100,	101,	1110,	110,	101,	1010
2017-01-05 17:35:12 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	110,	1011
2017-01-05 17:35:12 AI_Player.update()		1100,	111,	1001,	101,	1110,	1100,	101
2017-01-05 17:35:12 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 17:35:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:35:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()	update
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	6 4
2017-01-05 17:35:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()	update
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:12 AI_Player.update()	Search took119ms
2017-01-05 17:35:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 17:35:12 AI_Player.update()		110,	11,	101,	111,	1001,	1010,	1001
2017-01-05 17:35:12 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 17:35:12 AI_Player.update()		11,	1100,	101,	1100,	110,	101,	1010
2017-01-05 17:35:12 AI_Player.update()		1110,	1110,	1101,	101,	1011,	110,	1011
2017-01-05 17:35:12 AI_Player.update()		1100,	111,	1001,	11,	1110,	1100,	101
2017-01-05 17:35:12 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 17:35:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	6 4
2017-01-05 17:35:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()	update
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()	update
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:12 AI_Player.update()	Search took407ms
2017-01-05 17:35:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 17:35:12 AI_Player.update()		110,	101,	101,	111,	1001,	1010,	1001
2017-01-05 17:35:12 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 17:35:12 AI_Player.update()		11,	1110,	101,	1100,	110,	101,	1010
2017-01-05 17:35:12 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 17:35:12 AI_Player.update()		1100,	101,	1001,	11,	1110,	1100,	101
2017-01-05 17:35:12 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 17:35:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()	update
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()	update
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:12 AI_Player.update()	Search took25ms
2017-01-05 17:35:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 17:35:12 AI_Player.update()		110,	11,	101,	111,	1001,	1010,	1001
2017-01-05 17:35:12 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 17:35:12 AI_Player.update()		11,	1100,	101,	1100,	110,	101,	1010
2017-01-05 17:35:12 AI_Player.update()		1110,	1110,	1101,	101,	1011,	110,	1011
2017-01-05 17:35:12 AI_Player.update()		1100,	111,	1001,	11,	1110,	1100,	101
2017-01-05 17:35:12 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 17:35:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()	update
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()	update
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:12 AI_Player.update()	Search took135ms
2017-01-05 17:35:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 17:35:12 AI_Player.update()		110,	101,	101,	111,	1001,	1010,	1001
2017-01-05 17:35:12 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 17:35:12 AI_Player.update()		11,	1110,	101,	1100,	110,	101,	1010
2017-01-05 17:35:12 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 17:35:12 AI_Player.update()		1100,	101,	1001,	11,	1110,	1100,	101
2017-01-05 17:35:12 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 17:35:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()	update
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:12 AI_Player.update()	update
2017-01-05 17:35:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:13 AI_Player.update()	Search took420ms
2017-01-05 17:35:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 17:35:13 AI_Player.update()		110,	101,	101,	111,	1001,	1010,	1001
2017-01-05 17:35:13 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 17:35:13 AI_Player.update()		11,	1110,	101,	1100,	110,	101,	1010
2017-01-05 17:35:13 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 17:35:13 AI_Player.update()		101,	1001,	11,	1110,	1100,	101,	1100
2017-01-05 17:35:13 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 17:35:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()	update
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()	update
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:13 AI_Player.update()	Search took376ms
2017-01-05 17:35:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 17:35:13 AI_Player.update()		110,	1100,	101,	111,	1001,	1010,	1001
2017-01-05 17:35:13 AI_Player.update()		1110,	1110,	1110,	1110,	111,	101,	1011
2017-01-05 17:35:13 AI_Player.update()		11,	111,	101,	1100,	110,	101,	1010
2017-01-05 17:35:13 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 17:35:13 AI_Player.update()		101,	11,	11,	1110,	1100,	101,	1100
2017-01-05 17:35:13 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 17:35:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()	update
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:13 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 17:35:13 AI_Player.update()	Player a has won!
2017-01-05 17:35:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:13 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:35:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:13 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:35:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()	update
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:13 AI_Player.update()	Search took9ms
2017-01-05 17:35:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 17:35:13 AI_Player.update()		1011,	101,	1001,	1100,	1011,	11,	1001
2017-01-05 17:35:13 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:13 AI_Player.update()		11,	101,	1100,	1010,	1100,	1001,	1110
2017-01-05 17:35:13 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1100,	1011
2017-01-05 17:35:13 AI_Player.update()		101,	1010,	110,	11,	1100,	1100,	1001
2017-01-05 17:35:13 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-05 17:35:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()	update
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()	update
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:13 AI_Player.update()	Search took77ms
2017-01-05 17:35:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 17:35:13 AI_Player.update()		101,	1001,	1100,	1011,	11,	1001,	1011
2017-01-05 17:35:13 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:13 AI_Player.update()		11,	101,	1100,	1010,	1100,	1001,	1110
2017-01-05 17:35:13 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1100,	1011
2017-01-05 17:35:13 AI_Player.update()		101,	1010,	110,	11,	1100,	1100,	1001
2017-01-05 17:35:13 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-05 17:35:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()	update
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	1 2
2017-01-05 17:35:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()	update
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:13 AI_Player.update()	Search took22ms
2017-01-05 17:35:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 17:35:13 AI_Player.update()		101,	1001,	1100,	1011,	11,	1001,	1011
2017-01-05 17:35:13 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:13 AI_Player.update()		1110,	11,	101,	1100,	1010,	1100,	1001
2017-01-05 17:35:13 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1100,	1011
2017-01-05 17:35:13 AI_Player.update()		101,	1010,	110,	11,	1100,	1100,	1001
2017-01-05 17:35:13 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-05 17:35:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	1 2
2017-01-05 17:35:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()	update
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:13 AI_Player.update()	update
2017-01-05 17:35:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:14 AI_Player.update()	Search took401ms
2017-01-05 17:35:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 17:35:14 AI_Player.update()		1001,	1100,	1011,	11,	1001,	1011,	101
2017-01-05 17:35:14 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:14 AI_Player.update()		1110,	11,	101,	1100,	1010,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1100,	1011
2017-01-05 17:35:14 AI_Player.update()		101,	1010,	110,	11,	1100,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:14 AI_Player.update()	Search took111ms
2017-01-05 17:35:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 17:35:14 AI_Player.update()		1001,	1010,	1011,	11,	1001,	1011,	101
2017-01-05 17:35:14 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:14 AI_Player.update()		1110,	1110,	101,	1100,	1010,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-05 17:35:14 AI_Player.update()		101,	110,	110,	11,	1100,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	110,	1001
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:14 AI_Player.update()	Search took185ms
2017-01-05 17:35:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-05 17:35:14 AI_Player.update()		1001,	1010,	1011,	1100,	1001,	1011,	101
2017-01-05 17:35:14 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:14 AI_Player.update()		1110,	1110,	101,	110,	1010,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:14 AI_Player.update()		101,	110,	110,	1101,	1100,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:14 AI_Player.update()	Search took163ms
2017-01-05 17:35:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-05 17:35:14 AI_Player.update()		1001,	1100,	1011,	1100,	1001,	1011,	101
2017-01-05 17:35:14 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:14 AI_Player.update()		1110,	11,	101,	110,	1010,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:14 AI_Player.update()		101,	1010,	110,	1101,	1100,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:14 AI_Player.update()	Search took118ms
2017-01-05 17:35:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-05 17:35:14 AI_Player.update()		1001,	1010,	1011,	1100,	1001,	1011,	101
2017-01-05 17:35:14 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:14 AI_Player.update()		1110,	1110,	101,	110,	1010,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:14 AI_Player.update()		101,	110,	110,	1101,	1100,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:14 AI_Player.update()	Search took201ms
2017-01-05 17:35:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-05 17:35:14 AI_Player.update()		1001,	1100,	1011,	1100,	1001,	1011,	101
2017-01-05 17:35:14 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:14 AI_Player.update()		1110,	11,	101,	110,	1010,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:14 AI_Player.update()		101,	1010,	110,	1101,	1100,	1100,	1001
2017-01-05 17:35:14 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-05 17:35:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:14 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:14 AI_Player.update()	update
2017-01-05 17:35:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:15 AI_Player.update()	Search took128ms
2017-01-05 17:35:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-05 17:35:15 AI_Player.update()		1001,	1010,	1011,	1100,	1001,	1011,	101
2017-01-05 17:35:15 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:15 AI_Player.update()		1110,	1110,	101,	110,	1010,	1100,	1001
2017-01-05 17:35:15 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:15 AI_Player.update()		101,	110,	110,	1101,	1100,	1100,	1001
2017-01-05 17:35:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-05 17:35:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()	update
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()	update
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:15 AI_Player.update()	Search took217ms
2017-01-05 17:35:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-05 17:35:15 AI_Player.update()		1001,	1010,	1011,	1100,	1001,	1011,	101
2017-01-05 17:35:15 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:15 AI_Player.update()		1110,	101,	110,	1010,	1100,	1001,	1110
2017-01-05 17:35:15 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:15 AI_Player.update()		101,	110,	110,	1101,	1100,	1100,	1001
2017-01-05 17:35:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-05 17:35:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()	update
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:35:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()	update
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:15 AI_Player.update()	Search took250ms
2017-01-05 17:35:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 17:35:15 AI_Player.update()		1001,	11,	1011,	1100,	1001,	1011,	101
2017-01-05 17:35:15 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 17:35:15 AI_Player.update()		1110,	1010,	110,	1010,	1100,	1001,	1110
2017-01-05 17:35:15 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:15 AI_Player.update()		101,	1100,	110,	1101,	1100,	1100,	1001
2017-01-05 17:35:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-05 17:35:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:35:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()	update
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()	update
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:15 AI_Player.update()	Search took322ms
2017-01-05 17:35:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-05 17:35:15 AI_Player.update()		1001,	11,	1011,	1100,	1001,	101,	101
2017-01-05 17:35:15 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-05 17:35:15 AI_Player.update()		1110,	1010,	110,	1010,	1100,	1100,	1110
2017-01-05 17:35:15 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:15 AI_Player.update()		101,	1100,	110,	1101,	1100,	110,	1001
2017-01-05 17:35:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 17:35:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()	update
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:15 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:15 AI_Player.update()	update
2017-01-05 17:35:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:16 AI_Player.update()	Search took178ms
2017-01-05 17:35:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 17:35:16 AI_Player.update()		1001,	1010,	1011,	1100,	1001,	101,	101
2017-01-05 17:35:16 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 17:35:16 AI_Player.update()		1110,	101,	110,	1010,	1100,	1100,	1110
2017-01-05 17:35:16 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:16 AI_Player.update()		101,	110,	110,	1101,	1100,	110,	1001
2017-01-05 17:35:16 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:16 AI_Player.update()	Search took133ms
2017-01-05 17:35:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 17:35:16 AI_Player.update()		1001,	1010,	1011,	1100,	1001,	101,	101
2017-01-05 17:35:16 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 17:35:16 AI_Player.update()		1110,	101,	110,	1010,	1100,	1100,	1110
2017-01-05 17:35:16 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 17:35:16 AI_Player.update()		110,	110,	1101,	1100,	110,	1001,	101
2017-01-05 17:35:16 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:16 AI_Player.update()	Search took95ms
2017-01-05 17:35:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()		110,	1100,	111,	1100,	111,	1011,	11
2017-01-05 17:35:16 AI_Player.update()		1001,	1010,	1011,	1100,	1001,	101,	101
2017-01-05 17:35:16 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 17:35:16 AI_Player.update()		1110,	101,	110,	11,	1100,	1100,	1110
2017-01-05 17:35:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-05 17:35:16 AI_Player.update()		110,	110,	1101,	1010,	110,	1001,	101
2017-01-05 17:35:16 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:16 AI_Player.update()	Search took60ms
2017-01-05 17:35:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()		110,	1100,	111,	1100,	111,	1011,	11
2017-01-05 17:35:16 AI_Player.update()		1001,	1010,	1011,	1010,	1001,	101,	101
2017-01-05 17:35:16 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:16 AI_Player.update()		1110,	101,	110,	1100,	1100,	1100,	1110
2017-01-05 17:35:16 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:16 AI_Player.update()		110,	110,	1101,	11,	110,	1001,	101
2017-01-05 17:35:16 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:16 AI_Player.update()	Search took27ms
2017-01-05 17:35:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()		110,	1100,	111,	1100,	111,	1011,	11
2017-01-05 17:35:16 AI_Player.update()		1001,	1010,	1011,	1010,	1001,	101,	101
2017-01-05 17:35:16 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:16 AI_Player.update()		1110,	101,	110,	1100,	1100,	1100,	1110
2017-01-05 17:35:16 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:16 AI_Player.update()		110,	1101,	11,	110,	1001,	101,	110
2017-01-05 17:35:16 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:16 AI_Player.update()	Search took160ms
2017-01-05 17:35:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()		110,	1100,	111,	1100,	111,	1011,	11
2017-01-05 17:35:16 AI_Player.update()		1001,	1010,	1011,	1010,	1001,	101,	101
2017-01-05 17:35:16 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-05 17:35:16 AI_Player.update()		1110,	1110,	101,	110,	1100,	1100,	1100
2017-01-05 17:35:16 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:16 AI_Player.update()		110,	1101,	11,	110,	1001,	101,	110
2017-01-05 17:35:16 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:16 AI_Player.update()	Search took95ms
2017-01-05 17:35:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-05 17:35:16 AI_Player.update()		1001,	1010,	1011,	1010,	1001,	1011,	101
2017-01-05 17:35:16 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-05 17:35:16 AI_Player.update()		1110,	1110,	101,	110,	1100,	1001,	1100
2017-01-05 17:35:16 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:16 AI_Player.update()		110,	1101,	11,	110,	1001,	1100,	110
2017-01-05 17:35:16 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:16 AI_Player.update()	Search took253ms
2017-01-05 17:35:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-05 17:35:16 AI_Player.update()		1010,	1011,	1010,	1001,	1011,	101,	1001
2017-01-05 17:35:16 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-05 17:35:16 AI_Player.update()		1110,	1110,	101,	110,	1100,	1001,	1100
2017-01-05 17:35:16 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:35:16 AI_Player.update()		110,	1101,	11,	110,	1001,	1100,	110
2017-01-05 17:35:16 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-05 17:35:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:16 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 17:35:16 AI_Player.update()	Player a has won!
2017-01-05 17:35:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:16 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:35:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:16 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:35:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:16 AI_Player.update()	update
2017-01-05 17:35:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:17 AI_Player.update()	Search took424ms
2017-01-05 17:35:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:17 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-05 17:35:17 AI_Player.update()		101,	1010,	1010,	1001,	110,	1001,	1010
2017-01-05 17:35:17 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-05 17:35:17 AI_Player.update()		1010,	101,	1010,	101,	1010,	11,	1011
2017-01-05 17:35:17 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 17:35:17 AI_Player.update()		1010,	1100,	1001,	1100,	1010,	1001,	110
2017-01-05 17:35:17 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:17 AI_Player.update()	update
2017-01-05 17:35:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:17 AI_Player.update()	update
2017-01-05 17:35:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:17 AI_Player.update()	Search took87ms
2017-01-05 17:35:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:17 AI_Player.update()		110,	1010,	111,	110,	111,	1100,	11
2017-01-05 17:35:17 AI_Player.update()		101,	11,	1010,	1001,	110,	1001,	1010
2017-01-05 17:35:17 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-05 17:35:17 AI_Player.update()		1010,	1100,	1010,	101,	1010,	11,	1011
2017-01-05 17:35:17 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 17:35:17 AI_Player.update()		1010,	11,	1001,	1100,	1010,	1001,	110
2017-01-05 17:35:17 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:17 AI_Player.update()	update
2017-01-05 17:35:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:17 AI_Player.update()	update
2017-01-05 17:35:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:18 AI_Player.update()	Search took565ms
2017-01-05 17:35:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()		110,	1010,	111,	110,	111,	1100,	11
2017-01-05 17:35:18 AI_Player.update()		101,	11,	1010,	1001,	110,	1001,	1010
2017-01-05 17:35:18 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-05 17:35:18 AI_Player.update()		1100,	1010,	101,	1010,	11,	1011,	1010
2017-01-05 17:35:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 17:35:18 AI_Player.update()		1010,	11,	1001,	1100,	1010,	1001,	110
2017-01-05 17:35:18 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()	update
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 17:35:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()	update
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:18 AI_Player.update()	Search took95ms
2017-01-05 17:35:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()		110,	1010,	111,	110,	111,	1100,	11
2017-01-05 17:35:18 AI_Player.update()		11,	1010,	1001,	110,	1001,	1010,	101
2017-01-05 17:35:18 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-05 17:35:18 AI_Player.update()		1100,	1010,	101,	1010,	11,	1011,	1010
2017-01-05 17:35:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 17:35:18 AI_Player.update()		1010,	11,	1001,	1100,	1010,	1001,	110
2017-01-05 17:35:18 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 17:35:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()	update
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 17:35:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()	update
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:18 AI_Player.update()	Search took386ms
2017-01-05 17:35:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()		110,	1010,	111,	110,	111,	1100,	11
2017-01-05 17:35:18 AI_Player.update()		11,	101,	1001,	110,	1001,	1010,	101
2017-01-05 17:35:18 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-05 17:35:18 AI_Player.update()		1100,	1100,	101,	1010,	11,	1011,	1010
2017-01-05 17:35:18 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 17:35:18 AI_Player.update()		1010,	101,	1001,	1100,	1010,	1001,	110
2017-01-05 17:35:18 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 17:35:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()	update
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 17:35:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()	update
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:18 AI_Player.update()	Search took106ms
2017-01-05 17:35:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-05 17:35:18 AI_Player.update()		11,	101,	1001,	110,	1001,	1100,	101
2017-01-05 17:35:18 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-05 17:35:18 AI_Player.update()		1100,	1100,	101,	1010,	11,	1010,	1010
2017-01-05 17:35:18 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-05 17:35:18 AI_Player.update()		1010,	101,	1001,	1100,	1010,	1010,	110
2017-01-05 17:35:18 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 17:35:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()	update
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()	update
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:18 AI_Player.update()	Search took357ms
2017-01-05 17:35:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-05 17:35:18 AI_Player.update()		11,	101,	1001,	110,	1001,	1100,	101
2017-01-05 17:35:18 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 17:35:18 AI_Player.update()		1100,	1100,	101,	1011,	11,	1010,	1010
2017-01-05 17:35:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1011,	1011
2017-01-05 17:35:18 AI_Player.update()		1010,	101,	1001,	101,	1010,	1010,	110
2017-01-05 17:35:18 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-05 17:35:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()	update
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	4 2
2017-01-05 17:35:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:18 AI_Player.update()	update
2017-01-05 17:35:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:19 AI_Player.update()	Search took283ms
2017-01-05 17:35:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-05 17:35:19 AI_Player.update()		11,	1010,	1001,	110,	1001,	1100,	101
2017-01-05 17:35:19 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-05 17:35:19 AI_Player.update()		1100,	11,	101,	1011,	11,	1010,	1010
2017-01-05 17:35:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-05 17:35:19 AI_Player.update()		1010,	1010,	1001,	101,	1010,	1010,	110
2017-01-05 17:35:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:19 AI_Player.update()	Search took139ms
2017-01-05 17:35:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-05 17:35:19 AI_Player.update()		11,	1100,	1001,	110,	1001,	1100,	101
2017-01-05 17:35:19 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-05 17:35:19 AI_Player.update()		1100,	101,	101,	1011,	11,	1010,	1010
2017-01-05 17:35:19 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-05 17:35:19 AI_Player.update()		1010,	1010,	1001,	101,	1010,	1010,	110
2017-01-05 17:35:19 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:19 AI_Player.update()	Search took282ms
2017-01-05 17:35:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()		110,	1010,	111,	1100,	111,	1001,	11
2017-01-05 17:35:19 AI_Player.update()		11,	1100,	1001,	101,	1001,	1100,	101
2017-01-05 17:35:19 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-05 17:35:19 AI_Player.update()		1100,	101,	101,	110,	11,	1010,	1010
2017-01-05 17:35:19 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1011,	1011
2017-01-05 17:35:19 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	1010,	110
2017-01-05 17:35:19 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:19 AI_Player.update()	Search took62ms
2017-01-05 17:35:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()		110,	1100,	111,	1100,	111,	1001,	11
2017-01-05 17:35:19 AI_Player.update()		11,	11,	1001,	101,	1001,	1100,	101
2017-01-05 17:35:19 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 17:35:19 AI_Player.update()		1100,	1010,	101,	110,	11,	1010,	1010
2017-01-05 17:35:19 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1011,	1011
2017-01-05 17:35:19 AI_Player.update()		1010,	101,	1001,	1010,	1010,	1010,	110
2017-01-05 17:35:19 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:19 AI_Player.update()	Search took93ms
2017-01-05 17:35:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-05 17:35:19 AI_Player.update()		11,	101,	1001,	101,	1001,	1100,	101
2017-01-05 17:35:19 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 17:35:19 AI_Player.update()		1100,	1010,	101,	110,	11,	1010,	1010
2017-01-05 17:35:19 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1011,	1011
2017-01-05 17:35:19 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	1010,	110
2017-01-05 17:35:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:19 AI_Player.update()	Search took94ms
2017-01-05 17:35:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-05 17:35:19 AI_Player.update()		11,	101,	1001,	110,	1001,	1100,	101
2017-01-05 17:35:19 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 17:35:19 AI_Player.update()		1100,	1010,	101,	1011,	11,	1010,	1010
2017-01-05 17:35:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-05 17:35:19 AI_Player.update()		1010,	1010,	1001,	101,	1010,	1010,	110
2017-01-05 17:35:19 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 17:35:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	5 3
2017-01-05 17:35:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:19 AI_Player.update()	update
2017-01-05 17:35:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:20 AI_Player.update()	Search took163ms
2017-01-05 17:35:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-05 17:35:20 AI_Player.update()		11,	1010,	1001,	110,	1001,	1100,	101
2017-01-05 17:35:20 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 17:35:20 AI_Player.update()		1100,	101,	101,	1011,	11,	1010,	1010
2017-01-05 17:35:20 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1011,	1011
2017-01-05 17:35:20 AI_Player.update()		1010,	1100,	1001,	101,	1010,	1010,	110
2017-01-05 17:35:20 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1001,	1001
2017-01-05 17:35:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 17:35:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()	update
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 17:35:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()	update
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:20 AI_Player.update()	Search took316ms
2017-01-05 17:35:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-05 17:35:20 AI_Player.update()		11,	1010,	1001,	110,	1001,	1100,	101
2017-01-05 17:35:20 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 17:35:20 AI_Player.update()		1100,	1010,	101,	1011,	11,	1010,	1010
2017-01-05 17:35:20 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1011,	1011
2017-01-05 17:35:20 AI_Player.update()		1010,	11,	1001,	101,	1010,	1010,	110
2017-01-05 17:35:20 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 17:35:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 17:35:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()	update
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 17:35:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()	update
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:20 AI_Player.update()	Search took96ms
2017-01-05 17:35:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-05 17:35:20 AI_Player.update()		11,	1010,	1001,	110,	1001,	1100,	101
2017-01-05 17:35:20 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-05 17:35:20 AI_Player.update()		1100,	1010,	101,	1010,	11,	1010,	1010
2017-01-05 17:35:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1011,	1011
2017-01-05 17:35:20 AI_Player.update()		1010,	11,	1001,	1100,	1010,	1010,	110
2017-01-05 17:35:20 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 17:35:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()	update
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:35:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()	update
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:20 AI_Player.update()	Search took405ms
2017-01-05 17:35:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-05 17:35:20 AI_Player.update()		11,	1010,	1001,	110,	1001,	1100,	101
2017-01-05 17:35:20 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-05 17:35:20 AI_Player.update()		1010,	1100,	1010,	101,	1010,	11,	1010
2017-01-05 17:35:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1011,	1011
2017-01-05 17:35:20 AI_Player.update()		1010,	11,	1001,	1100,	1010,	1010,	110
2017-01-05 17:35:20 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:35:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()	update
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	6 4
2017-01-05 17:35:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:20 AI_Player.update()	update
2017-01-05 17:35:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:21 AI_Player.update()	Search took822ms
2017-01-05 17:35:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:21 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-05 17:35:21 AI_Player.update()		1010,	1001,	110,	1001,	1100,	101,	11
2017-01-05 17:35:21 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-05 17:35:21 AI_Player.update()		1010,	1100,	1010,	101,	1010,	11,	1010
2017-01-05 17:35:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1011,	1011
2017-01-05 17:35:21 AI_Player.update()		1010,	11,	1001,	1100,	1010,	1010,	110
2017-01-05 17:35:21 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 17:35:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	6 4
2017-01-05 17:35:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:21 AI_Player.update()	update
2017-01-05 17:35:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:21 AI_Player.update()	update
2017-01-05 17:35:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:22 AI_Player.update()	Search took681ms
2017-01-05 17:35:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-05 17:35:22 AI_Player.update()		1010,	1001,	110,	1001,	1100,	1001,	11
2017-01-05 17:35:22 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-05 17:35:22 AI_Player.update()		1010,	1100,	1010,	101,	1010,	1010,	1010
2017-01-05 17:35:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 17:35:22 AI_Player.update()		1010,	11,	1001,	1100,	1010,	1011,	110
2017-01-05 17:35:22 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 17:35:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:35:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()	update
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:22 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 17:35:22 AI_Player.update()	Player a has won!
2017-01-05 17:35:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:35:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:22 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:35:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()	update
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:22 AI_Player.update()	Search took256ms
2017-01-05 17:35:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 17:35:22 AI_Player.update()		1101,	1011,	1010,	1010,	11,	1100,	1010
2017-01-05 17:35:22 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 17:35:22 AI_Player.update()		11,	1010,	110,	1100,	1101,	110,	1100
2017-01-05 17:35:22 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 17:35:22 AI_Player.update()		1010,	1001,	1001,	101,	1010,	101,	1010
2017-01-05 17:35:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 17:35:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()	update
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()	update
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:22 AI_Player.update()	Search took149ms
2017-01-05 17:35:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 17:35:22 AI_Player.update()		1101,	101,	1010,	1010,	11,	1100,	1010
2017-01-05 17:35:22 AI_Player.update()		1110,	1011,	1110,	1010,	111,	101,	1011
2017-01-05 17:35:22 AI_Player.update()		11,	1010,	110,	1100,	1101,	110,	1100
2017-01-05 17:35:22 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 17:35:22 AI_Player.update()		1010,	1010,	1001,	101,	1010,	101,	1010
2017-01-05 17:35:22 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 17:35:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()	update
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()	update
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:22 AI_Player.update()	Search took59ms
2017-01-05 17:35:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 17:35:22 AI_Player.update()		1101,	101,	1010,	1010,	11,	1100,	1010
2017-01-05 17:35:22 AI_Player.update()		1110,	1011,	1110,	1010,	111,	101,	1011
2017-01-05 17:35:22 AI_Player.update()		1100,	11,	1010,	110,	1100,	1101,	110
2017-01-05 17:35:22 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 17:35:22 AI_Player.update()		1010,	1010,	1001,	101,	1010,	101,	1010
2017-01-05 17:35:22 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 17:35:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:35:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()	update
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	3 1
2017-01-05 17:35:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:22 AI_Player.update()	update
2017-01-05 17:35:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:23 AI_Player.update()	Search took140ms
2017-01-05 17:35:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 17:35:23 AI_Player.update()		1010,	1101,	101,	1010,	1010,	11,	1100
2017-01-05 17:35:23 AI_Player.update()		1110,	1011,	1110,	1010,	111,	101,	1011
2017-01-05 17:35:23 AI_Player.update()		1100,	11,	1010,	110,	1100,	1101,	110
2017-01-05 17:35:23 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 17:35:23 AI_Player.update()		1010,	1010,	1001,	101,	1010,	101,	1010
2017-01-05 17:35:23 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 17:35:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	3 1
2017-01-05 17:35:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()	update
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()	update
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:23 AI_Player.update()	Search took73ms
2017-01-05 17:35:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 17:35:23 AI_Player.update()		1100,	1010,	1101,	101,	1010,	1010,	11
2017-01-05 17:35:23 AI_Player.update()		1110,	1011,	1110,	1010,	111,	101,	1011
2017-01-05 17:35:23 AI_Player.update()		1100,	11,	1010,	110,	1100,	1101,	110
2017-01-05 17:35:23 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 17:35:23 AI_Player.update()		1010,	1010,	1001,	101,	1010,	101,	1010
2017-01-05 17:35:23 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 17:35:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()	update
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()	update
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:23 AI_Player.update()	Search took199ms
2017-01-05 17:35:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 17:35:23 AI_Player.update()		1100,	1010,	1101,	1010,	1010,	1010,	11
2017-01-05 17:35:23 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-05 17:35:23 AI_Player.update()		1100,	11,	1010,	110,	1100,	1101,	110
2017-01-05 17:35:23 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-05 17:35:23 AI_Player.update()		1010,	1010,	1001,	1100,	1010,	101,	1010
2017-01-05 17:35:23 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 17:35:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()	update
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()	update
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:23 AI_Player.update()	Search took205ms
2017-01-05 17:35:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 17:35:23 AI_Player.update()		1100,	1010,	1101,	1010,	1010,	1010,	11
2017-01-05 17:35:23 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-05 17:35:23 AI_Player.update()		11,	1010,	110,	1100,	1101,	110,	1100
2017-01-05 17:35:23 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-05 17:35:23 AI_Player.update()		1010,	1010,	1001,	1100,	1010,	101,	1010
2017-01-05 17:35:23 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 17:35:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()	update
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()	update
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:23 AI_Player.update()	Search took198ms
2017-01-05 17:35:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 17:35:23 AI_Player.update()		11,	1100,	1010,	1101,	1010,	1010,	1010
2017-01-05 17:35:23 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-05 17:35:23 AI_Player.update()		11,	1010,	110,	1100,	1101,	110,	1100
2017-01-05 17:35:23 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-05 17:35:23 AI_Player.update()		1010,	1010,	1001,	1100,	1010,	101,	1010
2017-01-05 17:35:23 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 17:35:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:35:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()	update
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:23 AI_Player.update()	update
2017-01-05 17:35:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:24 AI_Player.update()	Search took206ms
2017-01-05 17:35:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:24 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 17:35:24 AI_Player.update()		11,	1100,	1010,	101,	1010,	1010,	1010
2017-01-05 17:35:24 AI_Player.update()		1110,	1011,	1110,	1101,	111,	101,	1011
2017-01-05 17:35:24 AI_Player.update()		11,	1010,	110,	110,	1101,	110,	1100
2017-01-05 17:35:24 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-05 17:35:24 AI_Player.update()		1010,	1010,	1001,	101,	1010,	101,	1010
2017-01-05 17:35:24 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 17:35:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:35:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:24 AI_Player.update()	update
2017-01-05 17:35:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:24 AI_Player.update()	update
2017-01-05 17:35:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:24 AI_Player.update()	Search took361ms
2017-01-05 17:35:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:24 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 17:35:24 AI_Player.update()		11,	1011,	1010,	101,	1010,	1010,	1010
2017-01-05 17:35:24 AI_Player.update()		1110,	1010,	1110,	1101,	111,	101,	1011
2017-01-05 17:35:24 AI_Player.update()		11,	1010,	110,	110,	1101,	110,	1100
2017-01-05 17:35:24 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-05 17:35:24 AI_Player.update()		1010,	1001,	1001,	101,	1010,	101,	1010
2017-01-05 17:35:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 17:35:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:35:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:24 AI_Player.update()	update
2017-01-05 17:35:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:24 AI_Player.update()	update
2017-01-05 17:35:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:24 AI_Player.update()	Search took509ms
2017-01-05 17:35:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:24 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 17:35:24 AI_Player.update()		11,	1011,	1010,	101,	1010,	1010,	1010
2017-01-05 17:35:24 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1010,	1011
2017-01-05 17:35:24 AI_Player.update()		11,	1010,	110,	110,	1101,	101,	1100
2017-01-05 17:35:24 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-05 17:35:24 AI_Player.update()		1010,	1001,	1001,	101,	1010,	11,	1010
2017-01-05 17:35:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 17:35:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:35:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:24 AI_Player.update()	update
2017-01-05 17:35:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:35:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:24 AI_Player.update()	update
2017-01-05 17:35:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:25 AI_Player.update()	Search took449ms
2017-01-05 17:35:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:25 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-05 17:35:25 AI_Player.update()		11,	1011,	1010,	1010,	1010,	1010,	1010
2017-01-05 17:35:25 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 17:35:25 AI_Player.update()		11,	1010,	110,	1101,	1101,	101,	1100
2017-01-05 17:35:25 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-05 17:35:25 AI_Player.update()		1010,	1001,	1001,	1100,	1010,	11,	1010
2017-01-05 17:35:25 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:35:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:25 AI_Player.update()	update
2017-01-05 17:35:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:25 AI_Player.update()	update
2017-01-05 17:35:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:25 AI_Player.update()	Search took393ms
2017-01-05 17:35:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:25 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-05 17:35:25 AI_Player.update()		11,	1011,	1010,	1010,	1010,	1010,	1010
2017-01-05 17:35:25 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 17:35:25 AI_Player.update()		11,	1010,	110,	1101,	1101,	110,	1100
2017-01-05 17:35:25 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 17:35:25 AI_Player.update()		1010,	1001,	1001,	1100,	1010,	101,	1010
2017-01-05 17:35:25 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:25 AI_Player.update()	update
2017-01-05 17:35:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:25 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:25 AI_Player.update()	update
2017-01-05 17:35:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:26 AI_Player.update()	Search took373ms
2017-01-05 17:35:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:26 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-05 17:35:26 AI_Player.update()		11,	1011,	1010,	1010,	1010,	101,	1010
2017-01-05 17:35:26 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 17:35:26 AI_Player.update()		11,	1010,	110,	1101,	1101,	11,	1100
2017-01-05 17:35:26 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 17:35:26 AI_Player.update()		1010,	1001,	1001,	1100,	1010,	101,	1010
2017-01-05 17:35:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 17:35:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	5 5
2017-01-05 17:35:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:26 AI_Player.update()	update
2017-01-05 17:35:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	5 6
2017-01-05 17:35:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:26 AI_Player.update()	update
2017-01-05 17:35:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:26 AI_Player.update()	Search took166ms
2017-01-05 17:35:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:26 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-05 17:35:26 AI_Player.update()		11,	1011,	1010,	1010,	1010,	101,	1010
2017-01-05 17:35:26 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 17:35:26 AI_Player.update()		1010,	110,	1101,	1101,	11,	1100,	11
2017-01-05 17:35:26 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 17:35:26 AI_Player.update()		1010,	1001,	1001,	1100,	1010,	101,	1010
2017-01-05 17:35:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 17:35:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	5 6
2017-01-05 17:35:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:26 AI_Player.update()	update
2017-01-05 17:35:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:26 AI_Player.update()	update
2017-01-05 17:35:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:26 AI_Player.update()	Search took419ms
2017-01-05 17:35:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:26 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-05 17:35:26 AI_Player.update()		11,	1011,	1010,	1010,	1010,	1010,	1010
2017-01-05 17:35:26 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 17:35:26 AI_Player.update()		1010,	110,	1101,	1101,	11,	110,	11
2017-01-05 17:35:26 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-05 17:35:26 AI_Player.update()		1010,	1001,	1001,	1100,	1010,	101,	1010
2017-01-05 17:35:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 17:35:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:35:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:26 AI_Player.update()	update
2017-01-05 17:35:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:26 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 17:35:26 AI_Player.update()	Player b has won!
2017-01-05 17:35:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:29 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:35:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:35:29 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:35:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:29 AI_Player.update()	update
2017-01-05 17:35:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:29 AI_Player.update()	Search took35ms
2017-01-05 17:35:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:29 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-05 17:35:29 AI_Player.update()		101,	101,	1100,	1100,	1110,	110,	1010
2017-01-05 17:35:29 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 17:35:29 AI_Player.update()		1010,	1100,	101,	1010,	101,	1110,	1100
2017-01-05 17:35:29 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	11,	1011
2017-01-05 17:35:29 AI_Player.update()		1010,	1010,	101,	101,	101,	1001,	1010
2017-01-05 17:35:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1010,	1001
2017-01-05 17:35:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:29 AI_Player.update()	update
2017-01-05 17:35:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:29 AI_Player.update()	update
2017-01-05 17:35:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:35:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:35:29 AI_Player.update()	Search took541ms
2017-01-05 17:35:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:29 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 17:35:29 AI_Player.update()		101,	101,	1100,	1100,	1110,	101,	1010
2017-01-05 17:35:29 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-05 17:35:29 AI_Player.update()		1010,	1100,	101,	1010,	101,	11,	1100
2017-01-05 17:35:29 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1001,	1011
2017-01-05 17:35:29 AI_Player.update()		1010,	1010,	101,	101,	101,	1010,	1010
2017-01-05 17:35:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	111,	1001
2017-01-05 17:35:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:35:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:29 AI_Player.update()	update
2017-01-05 17:35:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:35:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:35:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	1 2
2017-01-05 17:35:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:29 AI_Player.update()	update
2017-01-05 17:35:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:35:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:35:29 AI_Player.update()	Search took68ms
2017-01-05 17:35:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:35:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:29 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 17:35:29 AI_Player.update()		101,	11,	1100,	1100,	1110,	101,	1010
2017-01-05 17:35:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	1110,	1011
2017-01-05 17:35:29 AI_Player.update()		1010,	1101,	101,	1010,	101,	11,	1100
2017-01-05 17:35:29 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-05 17:35:29 AI_Player.update()		1010,	1110,	101,	101,	101,	1010,	1010
2017-01-05 17:35:29 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-05 17:35:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:35:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	1 2
2017-01-05 17:35:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:29 AI_Player.update()	update
2017-01-05 17:35:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:35:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:35:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:35:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:35:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:35:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:35:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:35:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:35:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:35:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:35:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:35:29 AI_Player.update()	update
2017-01-05 17:35:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
