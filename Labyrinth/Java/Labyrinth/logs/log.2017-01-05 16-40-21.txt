2017-01-05 16:40:21 GameBoard.<init>()	Hello World!
2017-01-05 16:40:21 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 16:40:21 QueryProlog.initialise()	setup(h3/h3). suceeded
2017-01-05 16:40:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:21 GameBoard.setupBoardFromString()	Board created
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:21 GameBoard.initialise()	[fairy, keys, candle, book, crown]
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:21 GameBoard.initialise()	[chest, gold, ring, map, sword]
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:21 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	null
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()	update
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:21 AI_Player.update()	Search took52ms
2017-01-05 16:40:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()		110,	110,	111,	1010,	111,	1011,	11
2017-01-05 16:40:21 AI_Player.update()		1010,	1001,	111,	1011,	101,	101,	1001
2017-01-05 16:40:21 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:40:21 AI_Player.update()		1011,	1010,	1100,	11,	1011,	101,	1100
2017-01-05 16:40:21 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:40:21 AI_Player.update()		1001,	11,	110,	101,	1100,	1010,	1101
2017-01-05 16:40:21 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 16:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()	update
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()	update
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:21 AI_Player.update()	Search took52ms
2017-01-05 16:40:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:40:21 AI_Player.update()		1010,	1001,	111,	1011,	101,	1010,	1001
2017-01-05 16:40:21 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 16:40:21 AI_Player.update()		1011,	1010,	1100,	11,	1011,	1100,	1100
2017-01-05 16:40:21 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:40:21 AI_Player.update()		1001,	11,	110,	101,	1100,	1010,	1101
2017-01-05 16:40:21 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-05 16:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()	update
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()	update
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:21 AI_Player.update()	Search took105ms
2017-01-05 16:40:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 16:40:21 AI_Player.update()		1010,	110,	111,	1011,	101,	1010,	1001
2017-01-05 16:40:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 16:40:21 AI_Player.update()		1011,	110,	1100,	11,	1011,	1100,	1100
2017-01-05 16:40:21 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:40:21 AI_Player.update()		1001,	1100,	110,	101,	1100,	1010,	1101
2017-01-05 16:40:21 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-05 16:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()	update
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()	update
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:21 AI_Player.update()	Search took130ms
2017-01-05 16:40:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 16:40:21 AI_Player.update()		110,	111,	1011,	101,	1010,	1001,	1010
2017-01-05 16:40:21 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 16:40:21 AI_Player.update()		1011,	110,	1100,	11,	1011,	1100,	1100
2017-01-05 16:40:21 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:40:21 AI_Player.update()		1001,	1100,	110,	101,	1100,	1010,	1101
2017-01-05 16:40:21 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-05 16:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()	update
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:21 AI_Player.update()	update
2017-01-05 16:40:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:22 AI_Player.update()	Search took444ms
2017-01-05 16:40:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:22 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-05 16:40:22 AI_Player.update()		110,	1001,	1011,	101,	1010,	1001,	1010
2017-01-05 16:40:22 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 16:40:22 AI_Player.update()		1011,	1010,	1100,	11,	1011,	1100,	1100
2017-01-05 16:40:22 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:40:22 AI_Player.update()		1001,	11,	110,	101,	1100,	1010,	1101
2017-01-05 16:40:22 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-05 16:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:22 AI_Player.update()	update
2017-01-05 16:40:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:22 AI_Player.update()	update
2017-01-05 16:40:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:22 AI_Player.update()	Search took469ms
2017-01-05 16:40:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:22 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-05 16:40:22 AI_Player.update()		1001,	1011,	101,	1010,	1001,	1010,	110
2017-01-05 16:40:22 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 16:40:22 AI_Player.update()		1011,	1010,	1100,	11,	1011,	1100,	1100
2017-01-05 16:40:22 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:40:22 AI_Player.update()		1001,	11,	110,	101,	1100,	1010,	1101
2017-01-05 16:40:22 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-05 16:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:22 AI_Player.update()	update
2017-01-05 16:40:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:22 AI_Player.update()	update
2017-01-05 16:40:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:23 AI_Player.update()	Search took185ms
2017-01-05 16:40:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:23 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-05 16:40:23 AI_Player.update()		1001,	1011,	101,	1010,	1001,	1010,	110
2017-01-05 16:40:23 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 16:40:23 AI_Player.update()		1010,	1100,	11,	1011,	1100,	1100,	1011
2017-01-05 16:40:23 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:40:23 AI_Player.update()		1001,	11,	110,	101,	1100,	1010,	1101
2017-01-05 16:40:23 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-05 16:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:23 AI_Player.update()	update
2017-01-05 16:40:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:40:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:23 AI_Player.update()	update
2017-01-05 16:40:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:23 AI_Player.update()	Search took378ms
2017-01-05 16:40:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:23 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-05 16:40:23 AI_Player.update()		110,	1001,	1011,	101,	1010,	1001,	1010
2017-01-05 16:40:23 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 16:40:23 AI_Player.update()		1010,	1100,	11,	1011,	1100,	1100,	1011
2017-01-05 16:40:23 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:40:23 AI_Player.update()		1001,	11,	110,	101,	1100,	1010,	1101
2017-01-05 16:40:23 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-05 16:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:23 AI_Player.update()	update
2017-01-05 16:40:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:23 AI_Player.update()	update
2017-01-05 16:40:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:24 AI_Player.update()	Search took615ms
2017-01-05 16:40:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:24 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 16:40:24 AI_Player.update()		110,	1001,	1011,	110,	1010,	1001,	1010
2017-01-05 16:40:24 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-05 16:40:24 AI_Player.update()		1010,	1100,	11,	1010,	1100,	1100,	1011
2017-01-05 16:40:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:40:24 AI_Player.update()		1001,	11,	110,	11,	1100,	1010,	1101
2017-01-05 16:40:24 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:40:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:24 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:24 AI_Player.update()	update
2017-01-05 16:40:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:24 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:24 AI_Player.update()	update
2017-01-05 16:40:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:25 AI_Player.update()	Search took1036ms
2017-01-05 16:40:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:25 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 16:40:25 AI_Player.update()		110,	1001,	1011,	110,	1010,	1001,	1010
2017-01-05 16:40:25 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-05 16:40:25 AI_Player.update()		1100,	11,	1010,	1100,	1100,	1011,	1010
2017-01-05 16:40:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:40:25 AI_Player.update()		1001,	11,	110,	11,	1100,	1010,	1101
2017-01-05 16:40:25 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:25 AI_Player.update()	update
2017-01-05 16:40:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:40:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:25 AI_Player.update()	update
2017-01-05 16:40:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:26 AI_Player.update()	Search took1028ms
2017-01-05 16:40:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:26 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 16:40:26 AI_Player.update()		110,	110,	1011,	110,	1010,	1001,	1010
2017-01-05 16:40:26 AI_Player.update()		1110,	11,	1110,	1011,	111,	101,	1011
2017-01-05 16:40:26 AI_Player.update()		1100,	1100,	1010,	1100,	1100,	1011,	1010
2017-01-05 16:40:26 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 16:40:26 AI_Player.update()		1001,	11,	110,	11,	1100,	1010,	1101
2017-01-05 16:40:26 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:26 AI_Player.update()	update
2017-01-05 16:40:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:40:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:26 AI_Player.update()	update
2017-01-05 16:40:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:26 AI_Player.update()	Search took268ms
2017-01-05 16:40:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:26 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 16:40:26 AI_Player.update()		110,	1001,	1011,	110,	1010,	1001,	1010
2017-01-05 16:40:26 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-05 16:40:26 AI_Player.update()		1100,	11,	1010,	1100,	1100,	1011,	1010
2017-01-05 16:40:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:40:26 AI_Player.update()		1001,	11,	110,	11,	1100,	1010,	1101
2017-01-05 16:40:26 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:26 AI_Player.update()	update
2017-01-05 16:40:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:40:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:26 AI_Player.update()	update
2017-01-05 16:40:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:26 AI_Player.update()	Search took148ms
2017-01-05 16:40:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:26 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-05 16:40:26 AI_Player.update()		110,	1001,	1011,	1011,	1010,	1001,	1010
2017-01-05 16:40:26 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-05 16:40:26 AI_Player.update()		1100,	11,	1010,	101,	1100,	1011,	1010
2017-01-05 16:40:26 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-05 16:40:26 AI_Player.update()		1001,	11,	110,	1010,	1100,	1010,	1101
2017-01-05 16:40:26 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-05 16:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:26 AI_Player.update()	update
2017-01-05 16:40:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:26 AI_Player.update()	update
2017-01-05 16:40:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:27 AI_Player.update()	Search took586ms
2017-01-05 16:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()		110,	111,	111,	1011,	111,	101,	11
2017-01-05 16:40:27 AI_Player.update()		110,	1001,	1011,	1100,	1010,	1001,	1010
2017-01-05 16:40:27 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:40:27 AI_Player.update()		1100,	11,	1010,	11,	1100,	1011,	1010
2017-01-05 16:40:27 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		1001,	11,	110,	101,	1100,	1010,	1101
2017-01-05 16:40:27 AI_Player.update()		1100,	11,	1101,	110,	1101,	1011,	1001
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:40:27 AI_Player.update()	Player b has won!
2017-01-05 16:40:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:27 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:40:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:27 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:27 AI_Player.update()	Search took84ms
2017-01-05 16:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()		110,	1001,	111,	111,	111,	1010,	11
2017-01-05 16:40:27 AI_Player.update()		1100,	1101,	101,	1001,	110,	1010,	101
2017-01-05 16:40:27 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	110,	11,	101,	101,	1010,	11
2017-01-05 16:40:27 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	101,	101,	1011,	1010,	1110,	101
2017-01-05 16:40:27 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1110,	1001
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:27 AI_Player.update()	Search took22ms
2017-01-05 16:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()		110,	1001,	111,	111,	111,	1110,	11
2017-01-05 16:40:27 AI_Player.update()		1100,	1101,	101,	1001,	110,	1010,	101
2017-01-05 16:40:27 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	110,	11,	101,	101,	1010,	11
2017-01-05 16:40:27 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	101,	101,	1011,	1010,	101,	101
2017-01-05 16:40:27 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1110,	1001
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:27 AI_Player.update()	Search took121ms
2017-01-05 16:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()		110,	1001,	111,	1001,	111,	1110,	11
2017-01-05 16:40:27 AI_Player.update()		1100,	1101,	101,	110,	110,	1010,	101
2017-01-05 16:40:27 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	110,	11,	101,	101,	1010,	11
2017-01-05 16:40:27 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	101,	101,	110,	1010,	101,	101
2017-01-05 16:40:27 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:27 AI_Player.update()	Search took101ms
2017-01-05 16:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()		110,	1001,	111,	1001,	111,	1110,	11
2017-01-05 16:40:27 AI_Player.update()		1101,	101,	110,	110,	1010,	101,	1100
2017-01-05 16:40:27 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	110,	11,	101,	101,	1010,	11
2017-01-05 16:40:27 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	101,	101,	110,	1010,	101,	101
2017-01-05 16:40:27 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:27 AI_Player.update()	Search took116ms
2017-01-05 16:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()		110,	1001,	111,	1001,	111,	1110,	11
2017-01-05 16:40:27 AI_Player.update()		1101,	101,	110,	110,	1010,	101,	1100
2017-01-05 16:40:27 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		110,	11,	101,	101,	1010,	11,	11
2017-01-05 16:40:27 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	101,	101,	110,	1010,	101,	101
2017-01-05 16:40:27 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:27 AI_Player.update()	Search took29ms
2017-01-05 16:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()		110,	1001,	111,	111,	111,	1110,	11
2017-01-05 16:40:27 AI_Player.update()		1101,	101,	110,	1001,	1010,	101,	1100
2017-01-05 16:40:27 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		110,	11,	101,	101,	1010,	11,	11
2017-01-05 16:40:27 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	101,	101,	1011,	1010,	101,	101
2017-01-05 16:40:27 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1110,	1001
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:27 AI_Player.update()	Search took113ms
2017-01-05 16:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()		110,	1001,	111,	1001,	111,	1110,	11
2017-01-05 16:40:27 AI_Player.update()		1101,	101,	110,	110,	1010,	101,	1100
2017-01-05 16:40:27 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		110,	11,	101,	101,	1010,	11,	11
2017-01-05 16:40:27 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	101,	101,	110,	1010,	101,	101
2017-01-05 16:40:27 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:27 AI_Player.update()	Search took27ms
2017-01-05 16:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()		110,	1001,	111,	111,	111,	1110,	11
2017-01-05 16:40:27 AI_Player.update()		1101,	101,	110,	1001,	1010,	101,	1100
2017-01-05 16:40:27 AI_Player.update()		1110,	110,	1110,	110,	111,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		110,	11,	101,	101,	1010,	11,	11
2017-01-05 16:40:27 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:40:27 AI_Player.update()		11,	101,	101,	1011,	1010,	101,	101
2017-01-05 16:40:27 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1110,	1001
2017-01-05 16:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:27 AI_Player.update()	update
2017-01-05 16:40:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:28 AI_Player.update()	Search took317ms
2017-01-05 16:40:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:28 AI_Player.update()		110,	1001,	111,	111,	111,	1110,	11
2017-01-05 16:40:28 AI_Player.update()		1101,	101,	110,	1001,	1010,	1110,	1100
2017-01-05 16:40:28 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 16:40:28 AI_Player.update()		110,	11,	101,	101,	1010,	1010,	11
2017-01-05 16:40:28 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:28 AI_Player.update()		11,	101,	101,	1011,	1010,	1010,	101
2017-01-05 16:40:28 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-05 16:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:28 AI_Player.update()	update
2017-01-05 16:40:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:40:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:28 AI_Player.update()	update
2017-01-05 16:40:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:28 AI_Player.update()	Search took104ms
2017-01-05 16:40:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:28 AI_Player.update()		110,	101,	111,	111,	111,	1110,	11
2017-01-05 16:40:28 AI_Player.update()		1101,	110,	110,	1001,	1010,	1110,	1100
2017-01-05 16:40:28 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:40:28 AI_Player.update()		110,	101,	101,	101,	1010,	1010,	11
2017-01-05 16:40:28 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:28 AI_Player.update()		11,	1001,	101,	1011,	1010,	1010,	101
2017-01-05 16:40:28 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-05 16:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:28 AI_Player.update()	update
2017-01-05 16:40:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:28 AI_Player.update()	update
2017-01-05 16:40:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:28 AI_Player.update()	Search took513ms
2017-01-05 16:40:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:28 AI_Player.update()		110,	101,	111,	111,	111,	1110,	11
2017-01-05 16:40:28 AI_Player.update()		1101,	110,	110,	1001,	1010,	1110,	1100
2017-01-05 16:40:28 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:40:28 AI_Player.update()		110,	101,	101,	101,	1010,	1010,	11
2017-01-05 16:40:28 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:28 AI_Player.update()		101,	11,	1001,	101,	1011,	1010,	1010
2017-01-05 16:40:28 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-05 16:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:28 AI_Player.update()	update
2017-01-05 16:40:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:40:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:28 AI_Player.update()	update
2017-01-05 16:40:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:29 AI_Player.update()	Search took137ms
2017-01-05 16:40:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:29 AI_Player.update()		110,	110,	111,	111,	111,	1110,	11
2017-01-05 16:40:29 AI_Player.update()		1101,	11,	110,	1001,	1010,	1110,	1100
2017-01-05 16:40:29 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 16:40:29 AI_Player.update()		110,	101,	101,	101,	1010,	1010,	11
2017-01-05 16:40:29 AI_Player.update()		1110,	11,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:29 AI_Player.update()		101,	1001,	1001,	101,	1011,	1010,	1010
2017-01-05 16:40:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-05 16:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:29 AI_Player.update()	update
2017-01-05 16:40:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:40:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:29 AI_Player.update()	update
2017-01-05 16:40:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:29 AI_Player.update()	Search took554ms
2017-01-05 16:40:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:29 AI_Player.update()		110,	110,	111,	1001,	111,	1110,	11
2017-01-05 16:40:29 AI_Player.update()		1101,	11,	110,	110,	1010,	1110,	1100
2017-01-05 16:40:29 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:40:29 AI_Player.update()		110,	101,	101,	101,	1010,	1010,	11
2017-01-05 16:40:29 AI_Player.update()		1110,	11,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:29 AI_Player.update()		101,	1001,	1001,	110,	1011,	1010,	1010
2017-01-05 16:40:29 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 16:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:29 AI_Player.update()	update
2017-01-05 16:40:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:29 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:29 AI_Player.update()	update
2017-01-05 16:40:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:30 AI_Player.update()	Search took838ms
2017-01-05 16:40:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:30 AI_Player.update()		110,	11,	111,	1001,	111,	1110,	11
2017-01-05 16:40:30 AI_Player.update()		1101,	101,	110,	110,	1010,	1110,	1100
2017-01-05 16:40:30 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:40:30 AI_Player.update()		110,	11,	101,	101,	1010,	1010,	11
2017-01-05 16:40:30 AI_Player.update()		1110,	1001,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:30 AI_Player.update()		101,	101,	1001,	110,	1011,	1010,	1010
2017-01-05 16:40:30 AI_Player.update()		1100,	110,	1101,	111,	1101,	101,	1001
2017-01-05 16:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:30 AI_Player.update()	update
2017-01-05 16:40:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:40:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:30 AI_Player.update()	update
2017-01-05 16:40:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:30 AI_Player.update()	Search took219ms
2017-01-05 16:40:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:30 AI_Player.update()		110,	101,	111,	1001,	111,	1110,	11
2017-01-05 16:40:30 AI_Player.update()		1101,	101,	110,	110,	1010,	1110,	1100
2017-01-05 16:40:30 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:40:30 AI_Player.update()		110,	1001,	101,	101,	1010,	1010,	11
2017-01-05 16:40:30 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:30 AI_Player.update()		101,	110,	1001,	110,	1011,	1010,	1010
2017-01-05 16:40:30 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-05 16:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:30 AI_Player.update()	update
2017-01-05 16:40:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:30 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:30 AI_Player.update()	update
2017-01-05 16:40:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:31 AI_Player.update()	Search took895ms
2017-01-05 16:40:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()		110,	101,	111,	1001,	111,	1110,	11
2017-01-05 16:40:31 AI_Player.update()		1101,	101,	110,	110,	1010,	1110,	1100
2017-01-05 16:40:31 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:40:31 AI_Player.update()		1001,	101,	101,	1010,	1010,	11,	110
2017-01-05 16:40:31 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:31 AI_Player.update()		101,	110,	1001,	110,	1011,	1010,	1010
2017-01-05 16:40:31 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-05 16:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()	update
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()	update
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:31 AI_Player.update()	Search took129ms
2017-01-05 16:40:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()		110,	101,	111,	1001,	111,	1110,	11
2017-01-05 16:40:31 AI_Player.update()		1101,	11,	110,	110,	1010,	1110,	1100
2017-01-05 16:40:31 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:40:31 AI_Player.update()		1001,	101,	101,	1010,	1010,	11,	110
2017-01-05 16:40:31 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:31 AI_Player.update()		101,	11,	1001,	110,	1011,	1010,	1010
2017-01-05 16:40:31 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 16:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()	update
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()	update
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:31 AI_Player.update()	Search took152ms
2017-01-05 16:40:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()		110,	101,	111,	1001,	111,	1110,	11
2017-01-05 16:40:31 AI_Player.update()		1101,	101,	110,	110,	1010,	1110,	1100
2017-01-05 16:40:31 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:40:31 AI_Player.update()		1001,	101,	101,	1010,	1010,	11,	110
2017-01-05 16:40:31 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:31 AI_Player.update()		101,	110,	1001,	110,	1011,	1010,	1010
2017-01-05 16:40:31 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-05 16:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()	update
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()	update
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:31 AI_Player.update()	Search took111ms
2017-01-05 16:40:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()		110,	101,	111,	1001,	111,	1110,	11
2017-01-05 16:40:31 AI_Player.update()		1101,	11,	110,	110,	1010,	1110,	1100
2017-01-05 16:40:31 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:40:31 AI_Player.update()		1001,	101,	101,	1010,	1010,	11,	110
2017-01-05 16:40:31 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:31 AI_Player.update()		101,	11,	1001,	110,	1011,	1010,	1010
2017-01-05 16:40:31 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 16:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()	update
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:31 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:31 AI_Player.update()	update
2017-01-05 16:40:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:32 AI_Player.update()	Search took816ms
2017-01-05 16:40:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 16:40:32 AI_Player.update()		1101,	11,	110,	110,	1010,	1110,	1100
2017-01-05 16:40:32 AI_Player.update()		1110,	101,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:32 AI_Player.update()		1001,	101,	101,	1010,	1010,	101,	110
2017-01-05 16:40:32 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 16:40:32 AI_Player.update()		101,	11,	1001,	110,	1011,	11,	1010
2017-01-05 16:40:32 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-05 16:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()	update
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:40:32 AI_Player.update()	Player b has won!
2017-01-05 16:40:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:32 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:40:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:32 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:40:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()	update
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:32 AI_Player.update()	Search took8ms
2017-01-05 16:40:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:40:32 AI_Player.update()		1001,	1100,	110,	111,	101,	110,	110
2017-01-05 16:40:32 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:40:32 AI_Player.update()		1010,	1010,	101,	11,	1011,	1001,	101
2017-01-05 16:40:32 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 16:40:32 AI_Player.update()		1100,	1010,	1010,	1010,	110,	111,	101
2017-01-05 16:40:32 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()	update
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()	update
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:32 AI_Player.update()	Search took88ms
2017-01-05 16:40:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:40:32 AI_Player.update()		1001,	1010,	110,	111,	101,	110,	110
2017-01-05 16:40:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 16:40:32 AI_Player.update()		1010,	101,	101,	11,	1011,	1001,	101
2017-01-05 16:40:32 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 16:40:32 AI_Player.update()		1100,	1010,	1010,	1010,	110,	111,	101
2017-01-05 16:40:32 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()	update
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()	update
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:32 AI_Player.update()	Search took32ms
2017-01-05 16:40:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:40:32 AI_Player.update()		1010,	110,	111,	101,	110,	110,	1001
2017-01-05 16:40:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 16:40:32 AI_Player.update()		1010,	101,	101,	11,	1011,	1001,	101
2017-01-05 16:40:32 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 16:40:32 AI_Player.update()		1100,	1010,	1010,	1010,	110,	111,	101
2017-01-05 16:40:32 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()	update
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:32 AI_Player.update()	update
2017-01-05 16:40:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:33 AI_Player.update()	Search took142ms
2017-01-05 16:40:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:40:33 AI_Player.update()		1010,	1100,	111,	101,	110,	110,	1001
2017-01-05 16:40:33 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:40:33 AI_Player.update()		1010,	1010,	101,	11,	1011,	1001,	101
2017-01-05 16:40:33 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 16:40:33 AI_Player.update()		1100,	1010,	1010,	1010,	110,	111,	101
2017-01-05 16:40:33 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()	update
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()	update
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:33 AI_Player.update()	Search took245ms
2017-01-05 16:40:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:40:33 AI_Player.update()		1010,	1100,	111,	1010,	110,	110,	1001
2017-01-05 16:40:33 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-05 16:40:33 AI_Player.update()		1010,	1010,	101,	1001,	1011,	1001,	101
2017-01-05 16:40:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 16:40:33 AI_Player.update()		1100,	1010,	1010,	1100,	110,	111,	101
2017-01-05 16:40:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()	update
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()	update
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:33 AI_Player.update()	Search took242ms
2017-01-05 16:40:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:40:33 AI_Player.update()		1010,	1100,	111,	1010,	110,	110,	1001
2017-01-05 16:40:33 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-05 16:40:33 AI_Player.update()		1010,	101,	1001,	1011,	1001,	101,	1010
2017-01-05 16:40:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 16:40:33 AI_Player.update()		1100,	1010,	1010,	1100,	110,	111,	101
2017-01-05 16:40:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()	update
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()	update
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:33 AI_Player.update()	Search took340ms
2017-01-05 16:40:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:40:33 AI_Player.update()		1010,	1100,	111,	11,	110,	110,	1001
2017-01-05 16:40:33 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-05 16:40:33 AI_Player.update()		1010,	101,	1001,	1010,	1001,	101,	1010
2017-01-05 16:40:33 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-05 16:40:33 AI_Player.update()		1100,	1010,	1010,	101,	110,	111,	101
2017-01-05 16:40:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()	update
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:33 AI_Player.update()	update
2017-01-05 16:40:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:34 AI_Player.update()	Search took103ms
2017-01-05 16:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:40:34 AI_Player.update()		1100,	111,	11,	110,	110,	1001,	1010
2017-01-05 16:40:34 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-05 16:40:34 AI_Player.update()		1010,	101,	1001,	1010,	1001,	101,	1010
2017-01-05 16:40:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-05 16:40:34 AI_Player.update()		1100,	1010,	1010,	101,	110,	111,	101
2017-01-05 16:40:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:34 AI_Player.update()	Search took220ms
2017-01-05 16:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:40:34 AI_Player.update()		1100,	111,	11,	110,	110,	1001,	1010
2017-01-05 16:40:34 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-05 16:40:34 AI_Player.update()		1010,	1010,	101,	1001,	1010,	1001,	101
2017-01-05 16:40:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-05 16:40:34 AI_Player.update()		1100,	1010,	1010,	101,	110,	111,	101
2017-01-05 16:40:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:40:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:34 AI_Player.update()	Search took247ms
2017-01-05 16:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:40:34 AI_Player.update()		1100,	111,	11,	110,	110,	101,	1010
2017-01-05 16:40:34 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-05 16:40:34 AI_Player.update()		1010,	1010,	101,	1001,	1010,	11,	101
2017-01-05 16:40:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	111,	1011
2017-01-05 16:40:34 AI_Player.update()		1100,	1010,	1010,	101,	110,	1101,	101
2017-01-05 16:40:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:40:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:34 AI_Player.update()	Search took114ms
2017-01-05 16:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:40:34 AI_Player.update()		1100,	111,	11,	110,	110,	1001,	1010
2017-01-05 16:40:34 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-05 16:40:34 AI_Player.update()		1010,	1010,	101,	1001,	1010,	1001,	101
2017-01-05 16:40:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-05 16:40:34 AI_Player.update()		1100,	1010,	1010,	101,	110,	111,	101
2017-01-05 16:40:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:34 AI_Player.update()	Search took75ms
2017-01-05 16:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:40:34 AI_Player.update()		1100,	111,	11,	110,	110,	101,	1010
2017-01-05 16:40:34 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-05 16:40:34 AI_Player.update()		1010,	1010,	101,	1001,	1010,	11,	101
2017-01-05 16:40:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	111,	1011
2017-01-05 16:40:34 AI_Player.update()		1100,	1010,	1010,	101,	110,	1101,	101
2017-01-05 16:40:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:34 AI_Player.update()	Search took64ms
2017-01-05 16:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:40:34 AI_Player.update()		1100,	111,	11,	1010,	110,	101,	1010
2017-01-05 16:40:34 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-05 16:40:34 AI_Player.update()		1010,	1010,	101,	1011,	1010,	11,	101
2017-01-05 16:40:34 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	111,	1011
2017-01-05 16:40:34 AI_Player.update()		1100,	1010,	1010,	1100,	110,	1101,	101
2017-01-05 16:40:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:40:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:34 AI_Player.update()	update
2017-01-05 16:40:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:35 AI_Player.update()	Search took375ms
2017-01-05 16:40:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:35 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:40:35 AI_Player.update()		1100,	111,	11,	1010,	110,	101,	1010
2017-01-05 16:40:35 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-05 16:40:35 AI_Player.update()		1010,	101,	1011,	1010,	11,	101,	1010
2017-01-05 16:40:35 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	111,	1011
2017-01-05 16:40:35 AI_Player.update()		1100,	1010,	1010,	1100,	110,	1101,	101
2017-01-05 16:40:35 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:35 AI_Player.update()	update
2017-01-05 16:40:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:40:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:35 AI_Player.update()	update
2017-01-05 16:40:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:35 AI_Player.update()	Search took337ms
2017-01-05 16:40:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:35 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-05 16:40:35 AI_Player.update()		1100,	110,	11,	1010,	110,	101,	1010
2017-01-05 16:40:35 AI_Player.update()		1110,	111,	1110,	110,	111,	1001,	1011
2017-01-05 16:40:35 AI_Player.update()		1010,	101,	1011,	1010,	11,	101,	1010
2017-01-05 16:40:35 AI_Player.update()		1110,	101,	1101,	1001,	1011,	111,	1011
2017-01-05 16:40:35 AI_Player.update()		1100,	1010,	1010,	1100,	110,	1101,	101
2017-01-05 16:40:35 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:35 AI_Player.update()	update
2017-01-05 16:40:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:40:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:35 AI_Player.update()	update
2017-01-05 16:40:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:36 AI_Player.update()	Search took511ms
2017-01-05 16:40:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:40:36 AI_Player.update()		1100,	110,	11,	1010,	110,	1001,	1010
2017-01-05 16:40:36 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-05 16:40:36 AI_Player.update()		1010,	101,	1011,	1010,	11,	111,	1010
2017-01-05 16:40:36 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:40:36 AI_Player.update()		1100,	1010,	1010,	1100,	110,	101,	101
2017-01-05 16:40:36 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()	update
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()	update
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:36 AI_Player.update()	Search took714ms
2017-01-05 16:40:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:40:36 AI_Player.update()		1100,	111,	11,	1010,	110,	1001,	1010
2017-01-05 16:40:36 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 16:40:36 AI_Player.update()		1010,	101,	1011,	1010,	11,	111,	1010
2017-01-05 16:40:36 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:40:36 AI_Player.update()		1100,	1010,	1010,	1100,	110,	101,	101
2017-01-05 16:40:36 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()	update
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:36 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:40:36 AI_Player.update()	Player a has won!
2017-01-05 16:40:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:36 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:40:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:36 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:40:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()	update
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:36 AI_Player.update()	Search took108ms
2017-01-05 16:40:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()		110,	1110,	111,	110,	111,	110,	11
2017-01-05 16:40:36 AI_Player.update()		1110,	1100,	1110,	1100,	110,	1001,	11
2017-01-05 16:40:36 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-05 16:40:36 AI_Player.update()		1010,	11,	1011,	1100,	101,	1100,	1001
2017-01-05 16:40:36 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:40:36 AI_Player.update()		1001,	110,	1010,	1010,	11,	1011,	101
2017-01-05 16:40:36 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-05 16:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()	update
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()	update
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:36 AI_Player.update()	Search took51ms
2017-01-05 16:40:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()		110,	1110,	111,	110,	111,	110,	11
2017-01-05 16:40:36 AI_Player.update()		1100,	1110,	1100,	110,	1001,	11,	1110
2017-01-05 16:40:36 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-05 16:40:36 AI_Player.update()		1010,	11,	1011,	1100,	101,	1100,	1001
2017-01-05 16:40:36 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:40:36 AI_Player.update()		1001,	110,	1010,	1010,	11,	1011,	101
2017-01-05 16:40:36 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-05 16:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()	update
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:36 AI_Player.update()	update
2017-01-05 16:40:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:37 AI_Player.update()	Search took105ms
2017-01-05 16:40:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()		110,	1110,	111,	110,	111,	110,	11
2017-01-05 16:40:37 AI_Player.update()		1110,	1100,	110,	1001,	11,	1110,	1100
2017-01-05 16:40:37 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-05 16:40:37 AI_Player.update()		1010,	11,	1011,	1100,	101,	1100,	1001
2017-01-05 16:40:37 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:40:37 AI_Player.update()		1001,	110,	1010,	1010,	11,	1011,	101
2017-01-05 16:40:37 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-05 16:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()	update
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()	update
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:37 AI_Player.update()	Search took63ms
2017-01-05 16:40:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()		110,	1110,	111,	110,	111,	1010,	11
2017-01-05 16:40:37 AI_Player.update()		1110,	1100,	110,	1001,	11,	110,	1100
2017-01-05 16:40:37 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-05 16:40:37 AI_Player.update()		1010,	11,	1011,	1100,	101,	110,	1001
2017-01-05 16:40:37 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:40:37 AI_Player.update()		1001,	110,	1010,	1010,	11,	1010,	101
2017-01-05 16:40:37 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1011,	1001
2017-01-05 16:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()	update
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()	update
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:37 AI_Player.update()	Search took235ms
2017-01-05 16:40:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()		110,	1110,	111,	110,	111,	1010,	11
2017-01-05 16:40:37 AI_Player.update()		1110,	1100,	110,	1001,	11,	110,	1100
2017-01-05 16:40:37 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-05 16:40:37 AI_Player.update()		1010,	11,	1011,	1100,	101,	110,	1001
2017-01-05 16:40:37 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:40:37 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	1001
2017-01-05 16:40:37 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1011,	1001
2017-01-05 16:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()	update
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:40:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()	update
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:37 AI_Player.update()	Search took215ms
2017-01-05 16:40:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()		110,	1110,	111,	110,	111,	1010,	11
2017-01-05 16:40:37 AI_Player.update()		1110,	1100,	110,	1001,	11,	110,	1100
2017-01-05 16:40:37 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-05 16:40:37 AI_Player.update()		1001,	1010,	11,	1011,	1100,	101,	110
2017-01-05 16:40:37 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:40:37 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	1001
2017-01-05 16:40:37 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1011,	1001
2017-01-05 16:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()	update
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()	update
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:37 AI_Player.update()	Search took264ms
2017-01-05 16:40:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()		110,	1110,	111,	110,	111,	1010,	11
2017-01-05 16:40:37 AI_Player.update()		1110,	1100,	110,	1001,	11,	110,	1100
2017-01-05 16:40:37 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-05 16:40:37 AI_Player.update()		110,	1001,	1010,	11,	1011,	1100,	101
2017-01-05 16:40:37 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:40:37 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	1001
2017-01-05 16:40:37 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1011,	1001
2017-01-05 16:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()	update
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:40:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:37 AI_Player.update()	update
2017-01-05 16:40:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:38 AI_Player.update()	Search took465ms
2017-01-05 16:40:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:38 AI_Player.update()		110,	1110,	111,	1011,	111,	1010,	11
2017-01-05 16:40:38 AI_Player.update()		1110,	1100,	110,	110,	11,	110,	1100
2017-01-05 16:40:38 AI_Player.update()		1110,	11,	1110,	1001,	111,	1110,	1011
2017-01-05 16:40:38 AI_Player.update()		110,	1001,	1010,	1010,	1011,	1100,	101
2017-01-05 16:40:38 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:40:38 AI_Player.update()		110,	1010,	1010,	1101,	1010,	101,	1001
2017-01-05 16:40:38 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1011,	1001
2017-01-05 16:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:38 AI_Player.update()	update
2017-01-05 16:40:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:38 AI_Player.update()	update
2017-01-05 16:40:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:38 AI_Player.update()	Search took180ms
2017-01-05 16:40:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:38 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 16:40:38 AI_Player.update()		1110,	1100,	110,	1011,	11,	110,	1100
2017-01-05 16:40:38 AI_Player.update()		1110,	11,	1110,	110,	111,	1110,	1011
2017-01-05 16:40:38 AI_Player.update()		110,	1001,	1010,	1001,	1011,	1100,	101
2017-01-05 16:40:38 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:40:38 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	1001
2017-01-05 16:40:38 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1011,	1001
2017-01-05 16:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:38 AI_Player.update()	update
2017-01-05 16:40:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:40:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:38 AI_Player.update()	update
2017-01-05 16:40:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:38 AI_Player.update()	Search took319ms
2017-01-05 16:40:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:38 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 16:40:38 AI_Player.update()		1110,	11,	110,	1011,	11,	110,	1100
2017-01-05 16:40:38 AI_Player.update()		1110,	1001,	1110,	110,	111,	1110,	1011
2017-01-05 16:40:38 AI_Player.update()		110,	101,	1010,	1001,	1011,	1100,	101
2017-01-05 16:40:38 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:40:38 AI_Player.update()		110,	1100,	1010,	11,	1010,	101,	1001
2017-01-05 16:40:38 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1011,	1001
2017-01-05 16:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:38 AI_Player.update()	update
2017-01-05 16:40:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:40:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:38 AI_Player.update()	update
2017-01-05 16:40:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:39 AI_Player.update()	Search took283ms
2017-01-05 16:40:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-05 16:40:39 AI_Player.update()		1110,	1001,	110,	1011,	11,	110,	1100
2017-01-05 16:40:39 AI_Player.update()		1110,	101,	1110,	110,	111,	1110,	1011
2017-01-05 16:40:39 AI_Player.update()		110,	1010,	1010,	1001,	1011,	1100,	101
2017-01-05 16:40:39 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:40:39 AI_Player.update()		110,	1110,	1010,	11,	1010,	101,	1001
2017-01-05 16:40:39 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1011,	1001
2017-01-05 16:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()	update
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()	update
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:39 AI_Player.update()	Search took132ms
2017-01-05 16:40:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-05 16:40:39 AI_Player.update()		1100,	1110,	1001,	110,	1011,	11,	110
2017-01-05 16:40:39 AI_Player.update()		1110,	101,	1110,	110,	111,	1110,	1011
2017-01-05 16:40:39 AI_Player.update()		110,	1010,	1010,	1001,	1011,	1100,	101
2017-01-05 16:40:39 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:40:39 AI_Player.update()		110,	1110,	1010,	11,	1010,	101,	1001
2017-01-05 16:40:39 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1011,	1001
2017-01-05 16:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()	update
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()	update
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:39 AI_Player.update()	Search took291ms
2017-01-05 16:40:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 16:40:39 AI_Player.update()		1100,	101,	1001,	110,	1011,	11,	110
2017-01-05 16:40:39 AI_Player.update()		1110,	1010,	1110,	110,	111,	1110,	1011
2017-01-05 16:40:39 AI_Player.update()		110,	1100,	1010,	1001,	1011,	1100,	101
2017-01-05 16:40:39 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:40:39 AI_Player.update()		110,	1100,	1010,	11,	1010,	101,	1001
2017-01-05 16:40:39 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1011,	1001
2017-01-05 16:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()	update
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:40:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()	update
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:39 AI_Player.update()	Search took91ms
2017-01-05 16:40:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 16:40:39 AI_Player.update()		101,	1001,	110,	1011,	11,	110,	1100
2017-01-05 16:40:39 AI_Player.update()		1110,	1010,	1110,	110,	111,	1110,	1011
2017-01-05 16:40:39 AI_Player.update()		110,	1100,	1010,	1001,	1011,	1100,	101
2017-01-05 16:40:39 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:40:39 AI_Player.update()		110,	1100,	1010,	11,	1010,	101,	1001
2017-01-05 16:40:39 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1011,	1001
2017-01-05 16:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()	update
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()	update
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:39 AI_Player.update()	Search took221ms
2017-01-05 16:40:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-05 16:40:39 AI_Player.update()		101,	1001,	110,	1011,	11,	1110,	1100
2017-01-05 16:40:39 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 16:40:39 AI_Player.update()		110,	1100,	1010,	1001,	1011,	1100,	101
2017-01-05 16:40:39 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:40:39 AI_Player.update()		110,	1100,	1010,	11,	1010,	1011,	1001
2017-01-05 16:40:39 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1010,	1001
2017-01-05 16:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()	update
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:39 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:39 AI_Player.update()	update
2017-01-05 16:40:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:40 AI_Player.update()	Search took82ms
2017-01-05 16:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-05 16:40:40 AI_Player.update()		101,	1010,	110,	1011,	11,	1110,	1100
2017-01-05 16:40:40 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-05 16:40:40 AI_Player.update()		110,	1110,	1010,	1001,	1011,	1100,	101
2017-01-05 16:40:40 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 16:40:40 AI_Player.update()		110,	11,	1010,	11,	1010,	1011,	1001
2017-01-05 16:40:40 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1010,	1001
2017-01-05 16:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()	update
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:40:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()	update
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:40 AI_Player.update()	Search took55ms
2017-01-05 16:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()		110,	1001,	111,	1011,	111,	110,	11
2017-01-05 16:40:40 AI_Player.update()		101,	1010,	110,	110,	11,	1110,	1100
2017-01-05 16:40:40 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-05 16:40:40 AI_Player.update()		110,	1110,	1010,	1010,	1011,	1100,	101
2017-01-05 16:40:40 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-05 16:40:40 AI_Player.update()		110,	11,	1010,	1101,	1010,	1011,	1001
2017-01-05 16:40:40 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1010,	1001
2017-01-05 16:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()	update
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:40 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:40:40 AI_Player.update()	Player a has won!
2017-01-05 16:40:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:40 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:40:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:40 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()	update
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:40 AI_Player.update()	Search took52ms
2017-01-05 16:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 16:40:40 AI_Player.update()		1011,	1010,	110,	101,	1010,	1101,	101
2017-01-05 16:40:40 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1110,	1011
2017-01-05 16:40:40 AI_Player.update()		1001,	110,	1001,	101,	101,	1010,	1011
2017-01-05 16:40:40 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 16:40:40 AI_Player.update()		110,	110,	1101,	1001,	11,	1101,	110
2017-01-05 16:40:40 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-05 16:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()	update
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()	update
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:40 AI_Player.update()	Search took76ms
2017-01-05 16:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:40:40 AI_Player.update()		1011,	1010,	110,	1011,	1010,	1101,	101
2017-01-05 16:40:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:40 AI_Player.update()		1001,	110,	1001,	101,	101,	1010,	1011
2017-01-05 16:40:40 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:40:40 AI_Player.update()		110,	110,	1101,	1001,	11,	1101,	110
2017-01-05 16:40:40 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 16:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()	update
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()	update
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:40 AI_Player.update()	Search took159ms
2017-01-05 16:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:40:40 AI_Player.update()		1010,	110,	1011,	1010,	1101,	101,	1011
2017-01-05 16:40:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:40 AI_Player.update()		1001,	110,	1001,	101,	101,	1010,	1011
2017-01-05 16:40:40 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:40:40 AI_Player.update()		110,	110,	1101,	1001,	11,	1101,	110
2017-01-05 16:40:40 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 16:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()	update
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:40 AI_Player.update()	update
2017-01-05 16:40:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:41 AI_Player.update()	Search took753ms
2017-01-05 16:40:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:41 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 16:40:41 AI_Player.update()		1010,	110,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:41 AI_Player.update()		1001,	110,	1001,	1001,	101,	1010,	1011
2017-01-05 16:40:41 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:40:41 AI_Player.update()		110,	110,	1101,	11,	11,	1101,	110
2017-01-05 16:40:41 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-05 16:40:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:41 AI_Player.update()	update
2017-01-05 16:40:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:41 AI_Player.update()	update
2017-01-05 16:40:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:41 AI_Player.update()	Search took564ms
2017-01-05 16:40:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:41 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 16:40:41 AI_Player.update()		1010,	110,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:41 AI_Player.update()		110,	1001,	1001,	101,	1010,	1011,	1001
2017-01-05 16:40:41 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:40:41 AI_Player.update()		110,	110,	1101,	11,	11,	1101,	110
2017-01-05 16:40:41 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-05 16:40:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:41 AI_Player.update()	update
2017-01-05 16:40:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:41 AI_Player.update()	update
2017-01-05 16:40:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:41 AI_Player.update()	Search took191ms
2017-01-05 16:40:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:41 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:40:41 AI_Player.update()		1010,	110,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:41 AI_Player.update()		110,	1001,	1001,	1001,	1010,	1011,	1001
2017-01-05 16:40:41 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:40:41 AI_Player.update()		110,	110,	1101,	101,	11,	1101,	110
2017-01-05 16:40:41 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-05 16:40:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:41 AI_Player.update()	update
2017-01-05 16:40:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:40:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:41 AI_Player.update()	update
2017-01-05 16:40:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:42 AI_Player.update()	Search took692ms
2017-01-05 16:40:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:42 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:40:42 AI_Player.update()		1010,	110,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1110,	1011
2017-01-05 16:40:42 AI_Player.update()		110,	1001,	1001,	11,	1010,	1011,	1001
2017-01-05 16:40:42 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 16:40:42 AI_Player.update()		110,	110,	1101,	1010,	11,	1101,	110
2017-01-05 16:40:42 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-05 16:40:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:40:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:42 AI_Player.update()	update
2017-01-05 16:40:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:42 AI_Player.update()	update
2017-01-05 16:40:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:42 AI_Player.update()	Search took193ms
2017-01-05 16:40:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:42 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:40:42 AI_Player.update()		1010,	1010,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:42 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1110,	1011
2017-01-05 16:40:42 AI_Player.update()		110,	1010,	1001,	11,	1010,	1011,	1001
2017-01-05 16:40:42 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:40:42 AI_Player.update()		110,	1100,	1101,	1010,	11,	1101,	110
2017-01-05 16:40:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	110,	1001
2017-01-05 16:40:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:42 AI_Player.update()	update
2017-01-05 16:40:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:42 AI_Player.update()	update
2017-01-05 16:40:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:43 AI_Player.update()	Search took232ms
2017-01-05 16:40:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:43 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:40:43 AI_Player.update()		1010,	1010,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:43 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1110,	1011
2017-01-05 16:40:43 AI_Player.update()		110,	1010,	1001,	11,	1010,	1011,	1001
2017-01-05 16:40:43 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:40:43 AI_Player.update()		1100,	1101,	1010,	11,	1101,	110,	110
2017-01-05 16:40:43 AI_Player.update()		1100,	11,	1101,	101,	1101,	110,	1001
2017-01-05 16:40:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:43 AI_Player.update()	update
2017-01-05 16:40:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:40:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:43 AI_Player.update()	update
2017-01-05 16:40:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:43 AI_Player.update()	Search took214ms
2017-01-05 16:40:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:43 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:40:43 AI_Player.update()		1010,	1010,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:43 AI_Player.update()		1110,	1001,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:43 AI_Player.update()		110,	1010,	1001,	1001,	1010,	1011,	1001
2017-01-05 16:40:43 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-05 16:40:43 AI_Player.update()		1100,	1101,	1010,	101,	1101,	110,	110
2017-01-05 16:40:43 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-05 16:40:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:40:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:43 AI_Player.update()	update
2017-01-05 16:40:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:43 AI_Player.update()	update
2017-01-05 16:40:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:43 AI_Player.update()	Search took577ms
2017-01-05 16:40:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:43 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:40:43 AI_Player.update()		1010,	1001,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:43 AI_Player.update()		110,	110,	1001,	1001,	1010,	1011,	1001
2017-01-05 16:40:43 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:40:43 AI_Player.update()		1100,	11,	1010,	101,	1101,	110,	110
2017-01-05 16:40:43 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-05 16:40:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:43 AI_Player.update()	update
2017-01-05 16:40:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:40:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:43 AI_Player.update()	update
2017-01-05 16:40:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:44 AI_Player.update()	Search took1141ms
2017-01-05 16:40:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:44 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:40:44 AI_Player.update()		1011,	1010,	1001,	1011,	101,	1101,	101
2017-01-05 16:40:44 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:44 AI_Player.update()		110,	110,	1001,	1001,	1010,	1011,	1001
2017-01-05 16:40:44 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:40:44 AI_Player.update()		1100,	11,	1010,	101,	1101,	110,	110
2017-01-05 16:40:44 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-05 16:40:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:40:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:44 AI_Player.update()	update
2017-01-05 16:40:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:40:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:44 AI_Player.update()	update
2017-01-05 16:40:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:45 AI_Player.update()	Search took538ms
2017-01-05 16:40:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:45 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:40:45 AI_Player.update()		1010,	1001,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:45 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:45 AI_Player.update()		110,	110,	1001,	1001,	1010,	1011,	1001
2017-01-05 16:40:45 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1100,	1011
2017-01-05 16:40:45 AI_Player.update()		1100,	11,	1010,	101,	1101,	110,	110
2017-01-05 16:40:45 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-05 16:40:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:40:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:45 AI_Player.update()	update
2017-01-05 16:40:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:40:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:45 AI_Player.update()	update
2017-01-05 16:40:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:46 AI_Player.update()	Search took1121ms
2017-01-05 16:40:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:46 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:40:46 AI_Player.update()		1010,	1010,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:46 AI_Player.update()		1110,	1001,	1110,	101,	111,	1110,	1011
2017-01-05 16:40:46 AI_Player.update()		110,	1010,	1001,	1001,	1010,	1011,	1001
2017-01-05 16:40:46 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-05 16:40:46 AI_Player.update()		1100,	1101,	1010,	101,	1101,	110,	110
2017-01-05 16:40:46 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-05 16:40:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:40:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:46 AI_Player.update()	update
2017-01-05 16:40:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:40:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:46 AI_Player.update()	update
2017-01-05 16:40:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:47 AI_Player.update()	Search took885ms
2017-01-05 16:40:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:47 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:40:47 AI_Player.update()		1010,	1010,	1011,	101,	1101,	101,	1011
2017-01-05 16:40:47 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1110,	1011
2017-01-05 16:40:47 AI_Player.update()		110,	1010,	1001,	11,	1010,	1011,	1001
2017-01-05 16:40:47 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:40:47 AI_Player.update()		1100,	1101,	1010,	11,	1101,	110,	110
2017-01-05 16:40:47 AI_Player.update()		1100,	11,	1101,	101,	1101,	110,	1001
2017-01-05 16:40:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:47 AI_Player.update()	update
2017-01-05 16:40:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:47 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:40:47 AI_Player.update()	Player a has won!
2017-01-05 16:40:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:47 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:40:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:47 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:40:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:47 AI_Player.update()	update
2017-01-05 16:40:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:47 AI_Player.update()	Search took61ms
2017-01-05 16:40:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:47 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 16:40:47 AI_Player.update()		1100,	11,	1001,	110,	101,	101,	1001
2017-01-05 16:40:47 AI_Player.update()		1110,	1001,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:47 AI_Player.update()		1010,	11,	1010,	1001,	110,	110,	1011
2017-01-05 16:40:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:47 AI_Player.update()		110,	110,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:47 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:47 AI_Player.update()	update
2017-01-05 16:40:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:47 AI_Player.update()	update
2017-01-05 16:40:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:48 AI_Player.update()	Search took468ms
2017-01-05 16:40:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:48 AI_Player.update()		110,	1010,	111,	1001,	111,	11,	11
2017-01-05 16:40:48 AI_Player.update()		1100,	1100,	1001,	110,	101,	101,	1001
2017-01-05 16:40:48 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:48 AI_Player.update()		1010,	1001,	1010,	1001,	110,	110,	1011
2017-01-05 16:40:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:48 AI_Player.update()		110,	1010,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:48 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:48 AI_Player.update()	update
2017-01-05 16:40:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:48 AI_Player.update()	update
2017-01-05 16:40:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:48 AI_Player.update()	Search took207ms
2017-01-05 16:40:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:48 AI_Player.update()		110,	1010,	111,	1001,	111,	11,	11
2017-01-05 16:40:48 AI_Player.update()		1100,	1100,	1001,	110,	101,	101,	1001
2017-01-05 16:40:48 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:48 AI_Player.update()		1001,	1010,	1001,	110,	110,	1011,	1010
2017-01-05 16:40:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:48 AI_Player.update()		110,	1010,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:48 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:48 AI_Player.update()	update
2017-01-05 16:40:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:48 AI_Player.update()	update
2017-01-05 16:40:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:49 AI_Player.update()	Search took870ms
2017-01-05 16:40:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:49 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 16:40:49 AI_Player.update()		1100,	11,	1001,	110,	101,	101,	1001
2017-01-05 16:40:49 AI_Player.update()		1110,	1010,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:49 AI_Player.update()		1001,	11,	1001,	110,	110,	1011,	1010
2017-01-05 16:40:49 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:49 AI_Player.update()		110,	110,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:49 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:49 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:49 AI_Player.update()	update
2017-01-05 16:40:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:49 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:49 AI_Player.update()	update
2017-01-05 16:40:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:50 AI_Player.update()	Search took901ms
2017-01-05 16:40:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:50 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 16:40:50 AI_Player.update()		1100,	1010,	1001,	110,	101,	101,	1001
2017-01-05 16:40:50 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:50 AI_Player.update()		1001,	1010,	1001,	110,	110,	1011,	1010
2017-01-05 16:40:50 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:50 AI_Player.update()		110,	1010,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:50 AI_Player.update()	update
2017-01-05 16:40:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:50 AI_Player.update()	update
2017-01-05 16:40:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:51 AI_Player.update()	Search took934ms
2017-01-05 16:40:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:51 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 16:40:51 AI_Player.update()		1100,	1010,	1001,	110,	101,	101,	1001
2017-01-05 16:40:51 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:51 AI_Player.update()		1010,	1001,	1010,	1001,	110,	110,	1011
2017-01-05 16:40:51 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:51 AI_Player.update()		110,	1010,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:51 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:51 AI_Player.update()	update
2017-01-05 16:40:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:51 AI_Player.update()	update
2017-01-05 16:40:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:52 AI_Player.update()	Search took956ms
2017-01-05 16:40:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:52 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 16:40:52 AI_Player.update()		1100,	11,	1001,	110,	101,	101,	1001
2017-01-05 16:40:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:52 AI_Player.update()		1010,	11,	1010,	1001,	110,	110,	1011
2017-01-05 16:40:52 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:52 AI_Player.update()		110,	110,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:52 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:52 AI_Player.update()	update
2017-01-05 16:40:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:52 AI_Player.update()	update
2017-01-05 16:40:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:52 AI_Player.update()	Search took96ms
2017-01-05 16:40:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:52 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 16:40:52 AI_Player.update()		1100,	11,	1001,	110,	101,	101,	1001
2017-01-05 16:40:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:52 AI_Player.update()		1010,	11,	1010,	1001,	110,	110,	1011
2017-01-05 16:40:52 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:52 AI_Player.update()		1011,	110,	110,	1010,	101,	1010,	110
2017-01-05 16:40:52 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:52 AI_Player.update()	update
2017-01-05 16:40:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:52 AI_Player.update()	update
2017-01-05 16:40:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:52 AI_Player.update()	Search took43ms
2017-01-05 16:40:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:52 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 16:40:52 AI_Player.update()		1100,	11,	1001,	110,	101,	101,	1001
2017-01-05 16:40:52 AI_Player.update()		1110,	1010,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:52 AI_Player.update()		1010,	11,	1010,	1001,	110,	110,	1011
2017-01-05 16:40:52 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:52 AI_Player.update()		110,	110,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:52 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:52 AI_Player.update()	update
2017-01-05 16:40:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:52 AI_Player.update()	update
2017-01-05 16:40:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:53 AI_Player.update()	Search took851ms
2017-01-05 16:40:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 16:40:53 AI_Player.update()		1100,	11,	1001,	110,	101,	101,	1001
2017-01-05 16:40:53 AI_Player.update()		1110,	1010,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:53 AI_Player.update()		1010,	11,	1010,	1001,	110,	110,	1011
2017-01-05 16:40:53 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:53 AI_Player.update()		110,	1010,	101,	1010,	110,	1011,	110
2017-01-05 16:40:53 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()	update
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()	update
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:53 AI_Player.update()	Search took57ms
2017-01-05 16:40:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 16:40:53 AI_Player.update()		1100,	1010,	1001,	110,	101,	101,	1001
2017-01-05 16:40:53 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:53 AI_Player.update()		1010,	1001,	1010,	1001,	110,	110,	1011
2017-01-05 16:40:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:53 AI_Player.update()		110,	1010,	101,	1010,	110,	1011,	110
2017-01-05 16:40:53 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()	update
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()	update
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:53 AI_Player.update()	Search took306ms
2017-01-05 16:40:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 16:40:53 AI_Player.update()		1100,	1010,	1001,	110,	101,	101,	1001
2017-01-05 16:40:53 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:53 AI_Player.update()		1011,	1010,	1001,	1010,	1001,	110,	110
2017-01-05 16:40:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:53 AI_Player.update()		110,	1010,	101,	1010,	110,	1011,	110
2017-01-05 16:40:53 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()	update
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:40:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()	update
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:53 AI_Player.update()	Search took294ms
2017-01-05 16:40:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 16:40:53 AI_Player.update()		1100,	1010,	1001,	110,	101,	101,	1001
2017-01-05 16:40:53 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:53 AI_Player.update()		1011,	1010,	1001,	1010,	1001,	110,	110
2017-01-05 16:40:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:53 AI_Player.update()		110,	110,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:53 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()	update
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()	update
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:53 AI_Player.update()	Search took127ms
2017-01-05 16:40:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 16:40:53 AI_Player.update()		1100,	1010,	1001,	110,	101,	101,	1001
2017-01-05 16:40:53 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-05 16:40:53 AI_Player.update()		110,	1011,	1010,	1001,	1010,	1001,	110
2017-01-05 16:40:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:40:53 AI_Player.update()		110,	110,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:53 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()	update
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:53 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:53 AI_Player.update()	update
2017-01-05 16:40:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:54 AI_Player.update()	Search took605ms
2017-01-05 16:40:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:54 AI_Player.update()		110,	11,	111,	110,	111,	11,	11
2017-01-05 16:40:54 AI_Player.update()		1100,	1010,	1001,	1100,	101,	101,	1001
2017-01-05 16:40:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-05 16:40:54 AI_Player.update()		110,	1011,	1010,	1100,	1010,	1001,	110
2017-01-05 16:40:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 16:40:54 AI_Player.update()		110,	110,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:54 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:54 AI_Player.update()	update
2017-01-05 16:40:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:40:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:54 AI_Player.update()	update
2017-01-05 16:40:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:54 AI_Player.update()	Search took150ms
2017-01-05 16:40:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:54 AI_Player.update()		110,	11,	111,	110,	111,	11,	11
2017-01-05 16:40:54 AI_Player.update()		1100,	1010,	1001,	1100,	101,	101,	1001
2017-01-05 16:40:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-05 16:40:54 AI_Player.update()		110,	110,	1011,	1010,	1100,	1010,	1001
2017-01-05 16:40:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 16:40:54 AI_Player.update()		110,	110,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:54 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:54 AI_Player.update()	update
2017-01-05 16:40:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:40:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:54 AI_Player.update()	update
2017-01-05 16:40:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:54 AI_Player.update()	Search took388ms
2017-01-05 16:40:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:54 AI_Player.update()		110,	11,	111,	110,	111,	11,	11
2017-01-05 16:40:54 AI_Player.update()		1100,	1010,	1001,	1100,	101,	101,	1001
2017-01-05 16:40:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-05 16:40:54 AI_Player.update()		110,	1011,	1010,	1100,	1010,	1001,	110
2017-01-05 16:40:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 16:40:54 AI_Player.update()		110,	110,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:54 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:54 AI_Player.update()	update
2017-01-05 16:40:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:40:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:54 AI_Player.update()	update
2017-01-05 16:40:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:55 AI_Player.update()	Search took560ms
2017-01-05 16:40:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:55 AI_Player.update()		110,	11,	111,	110,	111,	1001,	11
2017-01-05 16:40:55 AI_Player.update()		1100,	1010,	1001,	1100,	101,	11,	1001
2017-01-05 16:40:55 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 16:40:55 AI_Player.update()		110,	1011,	1010,	1100,	1010,	111,	110
2017-01-05 16:40:55 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:40:55 AI_Player.update()		110,	110,	1010,	101,	1010,	101,	1011
2017-01-05 16:40:55 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-05 16:40:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:40:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:55 AI_Player.update()	update
2017-01-05 16:40:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:55 AI_Player.update()	update
2017-01-05 16:40:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:55 AI_Player.update()	Search took414ms
2017-01-05 16:40:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:55 AI_Player.update()		110,	11,	111,	110,	111,	1001,	11
2017-01-05 16:40:55 AI_Player.update()		1001,	1100,	1010,	1001,	1100,	101,	11
2017-01-05 16:40:55 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 16:40:55 AI_Player.update()		110,	1011,	1010,	1100,	1010,	111,	110
2017-01-05 16:40:55 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:40:55 AI_Player.update()		110,	110,	1010,	101,	1010,	101,	1011
2017-01-05 16:40:55 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-05 16:40:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:55 AI_Player.update()	update
2017-01-05 16:40:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:55 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:55 AI_Player.update()	update
2017-01-05 16:40:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:56 AI_Player.update()	Search took705ms
2017-01-05 16:40:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:40:56 AI_Player.update()		1001,	1100,	1010,	1001,	1100,	101,	11
2017-01-05 16:40:56 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-05 16:40:56 AI_Player.update()		110,	1011,	1010,	1100,	1010,	1001,	110
2017-01-05 16:40:56 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 16:40:56 AI_Player.update()		110,	110,	1010,	101,	1010,	110,	1011
2017-01-05 16:40:56 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:40:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:40:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()	update
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:40:56 AI_Player.update()	Player b has won!
2017-01-05 16:40:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:56 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:40:56 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:40:56 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:40:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()	update
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:56 AI_Player.update()	Search took22ms
2017-01-05 16:40:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-05 16:40:56 AI_Player.update()		101,	1010,	111,	1100,	101,	110,	110
2017-01-05 16:40:56 AI_Player.update()		1110,	11,	1110,	1001,	111,	11,	1011
2017-01-05 16:40:56 AI_Player.update()		1100,	1001,	111,	1001,	101,	1010,	110
2017-01-05 16:40:56 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:40:56 AI_Player.update()		11,	1011,	110,	110,	1011,	1110,	110
2017-01-05 16:40:56 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:40:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()	update
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()	update
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:56 AI_Player.update()	Search took10ms
2017-01-05 16:40:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-05 16:40:56 AI_Player.update()		110,	101,	1010,	111,	1100,	101,	110
2017-01-05 16:40:56 AI_Player.update()		1110,	11,	1110,	1001,	111,	11,	1011
2017-01-05 16:40:56 AI_Player.update()		1100,	1001,	111,	1001,	101,	1010,	110
2017-01-05 16:40:56 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:40:56 AI_Player.update()		11,	1011,	110,	110,	1011,	1110,	110
2017-01-05 16:40:56 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:40:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()	update
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()	update
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:56 AI_Player.update()	Search took180ms
2017-01-05 16:40:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-05 16:40:56 AI_Player.update()		110,	11,	1010,	111,	1100,	101,	110
2017-01-05 16:40:56 AI_Player.update()		1110,	1001,	1110,	1001,	111,	11,	1011
2017-01-05 16:40:56 AI_Player.update()		1100,	101,	111,	1001,	101,	1010,	110
2017-01-05 16:40:56 AI_Player.update()		1110,	1011,	1101,	111,	1011,	1010,	1011
2017-01-05 16:40:56 AI_Player.update()		11,	1011,	110,	110,	1011,	1110,	110
2017-01-05 16:40:56 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:40:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:40:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()	update
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()	update
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:56 AI_Player.update()	Search took32ms
2017-01-05 16:40:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 16:40:56 AI_Player.update()		110,	11,	1010,	111,	1100,	11,	110
2017-01-05 16:40:56 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 16:40:56 AI_Player.update()		1100,	101,	111,	1001,	101,	1010,	110
2017-01-05 16:40:56 AI_Player.update()		1110,	1011,	1101,	111,	1011,	1110,	1011
2017-01-05 16:40:56 AI_Player.update()		11,	1011,	110,	110,	1011,	1010,	110
2017-01-05 16:40:56 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:40:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()	update
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:56 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:56 AI_Player.update()	update
2017-01-05 16:40:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:57 AI_Player.update()	Search took184ms
2017-01-05 16:40:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:57 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 16:40:57 AI_Player.update()		110,	11,	1010,	111,	1100,	11,	110
2017-01-05 16:40:57 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 16:40:57 AI_Player.update()		1100,	101,	111,	1001,	101,	1010,	110
2017-01-05 16:40:57 AI_Player.update()		1110,	1011,	1101,	111,	1011,	1110,	1011
2017-01-05 16:40:57 AI_Player.update()		1011,	110,	110,	1011,	1010,	110,	11
2017-01-05 16:40:57 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:40:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:57 AI_Player.update()	update
2017-01-05 16:40:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:57 AI_Player.update()	update
2017-01-05 16:40:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:57 AI_Player.update()	Search took224ms
2017-01-05 16:40:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:57 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 16:40:57 AI_Player.update()		110,	11,	1010,	111,	1100,	11,	110
2017-01-05 16:40:57 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 16:40:57 AI_Player.update()		110,	1100,	101,	111,	1001,	101,	1010
2017-01-05 16:40:57 AI_Player.update()		1110,	1011,	1101,	111,	1011,	1110,	1011
2017-01-05 16:40:57 AI_Player.update()		1011,	110,	110,	1011,	1010,	110,	11
2017-01-05 16:40:57 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:40:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:40:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:57 AI_Player.update()	update
2017-01-05 16:40:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:57 AI_Player.update()	update
2017-01-05 16:40:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:57 AI_Player.update()	Search took303ms
2017-01-05 16:40:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:57 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 16:40:57 AI_Player.update()		11,	1010,	111,	1100,	11,	110,	110
2017-01-05 16:40:57 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 16:40:57 AI_Player.update()		110,	1100,	101,	111,	1001,	101,	1010
2017-01-05 16:40:57 AI_Player.update()		1110,	1011,	1101,	111,	1011,	1110,	1011
2017-01-05 16:40:57 AI_Player.update()		1011,	110,	110,	1011,	1010,	110,	11
2017-01-05 16:40:57 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:40:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:40:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:57 AI_Player.update()	update
2017-01-05 16:40:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:57 AI_Player.update()	update
2017-01-05 16:40:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:58 AI_Player.update()	Search took525ms
2017-01-05 16:40:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:58 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-05 16:40:58 AI_Player.update()		11,	1001,	111,	1100,	11,	110,	110
2017-01-05 16:40:58 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 16:40:58 AI_Player.update()		110,	1011,	101,	111,	1001,	101,	1010
2017-01-05 16:40:58 AI_Player.update()		1110,	110,	1101,	111,	1011,	1110,	1011
2017-01-05 16:40:58 AI_Player.update()		1011,	101,	110,	1011,	1010,	110,	11
2017-01-05 16:40:58 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:58 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:58 AI_Player.update()	update
2017-01-05 16:40:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:58 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:58 AI_Player.update()	update
2017-01-05 16:40:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:40:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:40:58 AI_Player.update()	Search took127ms
2017-01-05 16:40:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:58 AI_Player.update()		110,	1010,	111,	1001,	111,	110,	11
2017-01-05 16:40:58 AI_Player.update()		11,	1001,	111,	1100,	11,	1010,	110
2017-01-05 16:40:58 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 16:40:58 AI_Player.update()		110,	1011,	101,	111,	1001,	1110,	1010
2017-01-05 16:40:58 AI_Player.update()		1110,	110,	1101,	111,	1011,	110,	1011
2017-01-05 16:40:58 AI_Player.update()		1011,	101,	110,	1011,	1010,	1010,	11
2017-01-05 16:40:58 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:58 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:58 AI_Player.update()	update
2017-01-05 16:40:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:40:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:40:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:40:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:58 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:58 AI_Player.update()	update
2017-01-05 16:40:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:40:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:40:59 AI_Player.update()	Search took641ms
2017-01-05 16:40:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:59 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 16:40:59 AI_Player.update()		11,	1001,	111,	1001,	11,	1010,	110
2017-01-05 16:40:59 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 16:40:59 AI_Player.update()		110,	1011,	101,	111,	1001,	1110,	1010
2017-01-05 16:40:59 AI_Player.update()		1110,	110,	1101,	1011,	1011,	110,	1011
2017-01-05 16:40:59 AI_Player.update()		1011,	101,	110,	1010,	1010,	1010,	11
2017-01-05 16:40:59 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:40:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:59 AI_Player.update()	update
2017-01-05 16:40:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:40:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:40:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:40:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:40:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:40:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:40:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:40:59 AI_Player.update()	update
2017-01-05 16:40:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:00 AI_Player.update()	Search took1150ms
2017-01-05 16:41:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:00 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 16:41:00 AI_Player.update()		11,	1010,	111,	1001,	11,	1010,	110
2017-01-05 16:41:00 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 16:41:00 AI_Player.update()		110,	1100,	101,	111,	1001,	1110,	1010
2017-01-05 16:41:00 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	110,	1011
2017-01-05 16:41:00 AI_Player.update()		1011,	110,	110,	1010,	1010,	1010,	11
2017-01-05 16:41:00 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:41:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:00 AI_Player.update()	update
2017-01-05 16:41:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:00 AI_Player.update()	update
2017-01-05 16:41:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:01 AI_Player.update()	Search took1029ms
2017-01-05 16:41:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:01 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 16:41:01 AI_Player.update()		11,	1010,	111,	1001,	11,	1010,	110
2017-01-05 16:41:01 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 16:41:01 AI_Player.update()		110,	1100,	101,	111,	1001,	1110,	1010
2017-01-05 16:41:01 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	110,	1011
2017-01-05 16:41:01 AI_Player.update()		11,	1011,	110,	110,	1010,	1010,	1010
2017-01-05 16:41:01 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:01 AI_Player.update()	update
2017-01-05 16:41:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:01 AI_Player.update()	update
2017-01-05 16:41:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:02 AI_Player.update()	Search took1088ms
2017-01-05 16:41:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:02 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 16:41:02 AI_Player.update()		11,	1010,	111,	1001,	11,	1010,	110
2017-01-05 16:41:02 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 16:41:02 AI_Player.update()		1100,	101,	111,	1001,	1110,	1010,	110
2017-01-05 16:41:02 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	110,	1011
2017-01-05 16:41:02 AI_Player.update()		11,	1011,	110,	110,	1010,	1010,	1010
2017-01-05 16:41:02 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:41:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:02 AI_Player.update()	update
2017-01-05 16:41:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:02 AI_Player.update()	update
2017-01-05 16:41:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:03 AI_Player.update()	Search took1340ms
2017-01-05 16:41:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:03 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 16:41:03 AI_Player.update()		1010,	111,	1001,	11,	1010,	110,	11
2017-01-05 16:41:03 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 16:41:03 AI_Player.update()		1100,	101,	111,	1001,	1110,	1010,	110
2017-01-05 16:41:03 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	110,	1011
2017-01-05 16:41:03 AI_Player.update()		11,	1011,	110,	110,	1010,	1010,	1010
2017-01-05 16:41:03 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:41:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:03 AI_Player.update()	update
2017-01-05 16:41:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:03 AI_Player.update()	update
2017-01-05 16:41:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:04 AI_Player.update()	Search took1022ms
2017-01-05 16:41:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:04 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 16:41:04 AI_Player.update()		1010,	111,	1001,	11,	1010,	101,	11
2017-01-05 16:41:04 AI_Player.update()		1110,	1001,	1110,	111,	111,	1010,	1011
2017-01-05 16:41:04 AI_Player.update()		1100,	101,	111,	1001,	1110,	110,	110
2017-01-05 16:41:04 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:41:04 AI_Player.update()		11,	1011,	110,	110,	1010,	101,	1010
2017-01-05 16:41:04 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-05 16:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:04 AI_Player.update()	update
2017-01-05 16:41:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:04 AI_Player.update()	update
2017-01-05 16:41:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:05 AI_Player.update()	Search took539ms
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 16:41:05 AI_Player.update()		1010,	111,	1001,	11,	1010,	101,	11
2017-01-05 16:41:05 AI_Player.update()		1110,	1001,	1110,	111,	111,	1010,	1011
2017-01-05 16:41:05 AI_Player.update()		1100,	101,	111,	1001,	1110,	110,	110
2017-01-05 16:41:05 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:41:05 AI_Player.update()		1010,	11,	1011,	110,	110,	1010,	101
2017-01-05 16:41:05 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:05 AI_Player.update()	Search took82ms
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 16:41:05 AI_Player.update()		1010,	111,	1001,	11,	1010,	101,	11
2017-01-05 16:41:05 AI_Player.update()		1110,	1001,	1110,	111,	111,	1010,	1011
2017-01-05 16:41:05 AI_Player.update()		1100,	101,	111,	1001,	1110,	110,	110
2017-01-05 16:41:05 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-05 16:41:05 AI_Player.update()		11,	1011,	110,	110,	1010,	101,	1010
2017-01-05 16:41:05 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:41:05 AI_Player.update()	Player a has won!
2017-01-05 16:41:05 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:05 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:05 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:05 AI_Player.update()	Search took15ms
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 16:41:05 AI_Player.update()		1100,	110,	1100,	1010,	11,	1010,	101
2017-01-05 16:41:05 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-05 16:41:05 AI_Player.update()		1100,	11,	1001,	1011,	1101,	1110,	101
2017-01-05 16:41:05 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-05 16:41:05 AI_Player.update()		1001,	11,	1010,	1100,	1010,	11,	111
2017-01-05 16:41:05 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:05 AI_Player.update()	Search took117ms
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 16:41:05 AI_Player.update()		1100,	110,	1100,	101,	11,	1010,	101
2017-01-05 16:41:05 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 16:41:05 AI_Player.update()		1100,	11,	1001,	11,	1101,	1110,	101
2017-01-05 16:41:05 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	110,	1011
2017-01-05 16:41:05 AI_Player.update()		1001,	11,	1010,	110,	1010,	11,	111
2017-01-05 16:41:05 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:05 AI_Player.update()	Search took21ms
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 16:41:05 AI_Player.update()		110,	1100,	101,	11,	1010,	101,	1100
2017-01-05 16:41:05 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 16:41:05 AI_Player.update()		1100,	11,	1001,	11,	1101,	1110,	101
2017-01-05 16:41:05 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	110,	1011
2017-01-05 16:41:05 AI_Player.update()		1001,	11,	1010,	110,	1010,	11,	111
2017-01-05 16:41:05 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:05 AI_Player.update()	Search took64ms
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-05 16:41:05 AI_Player.update()		110,	1100,	101,	101,	1010,	101,	1100
2017-01-05 16:41:05 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-05 16:41:05 AI_Player.update()		1100,	11,	1001,	1010,	1101,	1110,	101
2017-01-05 16:41:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-05 16:41:05 AI_Player.update()		1001,	11,	1010,	1011,	1010,	11,	111
2017-01-05 16:41:05 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:05 AI_Player.update()	Search took54ms
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 16:41:05 AI_Player.update()		110,	1100,	101,	11,	1010,	101,	1100
2017-01-05 16:41:05 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 16:41:05 AI_Player.update()		1100,	11,	1001,	11,	1101,	1110,	101
2017-01-05 16:41:05 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	110,	1011
2017-01-05 16:41:05 AI_Player.update()		1001,	11,	1010,	110,	1010,	11,	111
2017-01-05 16:41:05 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:05 AI_Player.update()	Search took159ms
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-05 16:41:05 AI_Player.update()		110,	1100,	101,	101,	1010,	101,	1100
2017-01-05 16:41:05 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-05 16:41:05 AI_Player.update()		1100,	11,	1001,	1010,	1101,	1110,	101
2017-01-05 16:41:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-05 16:41:05 AI_Player.update()		1001,	11,	1010,	1011,	1010,	11,	111
2017-01-05 16:41:05 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:05 AI_Player.update()	Search took51ms
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()		110,	1010,	111,	110,	111,	1101,	11
2017-01-05 16:41:05 AI_Player.update()		110,	1100,	101,	1100,	1010,	101,	1100
2017-01-05 16:41:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 16:41:05 AI_Player.update()		1100,	11,	1001,	11,	1101,	1110,	101
2017-01-05 16:41:05 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:05 AI_Player.update()		1001,	11,	1010,	11,	1010,	11,	111
2017-01-05 16:41:05 AI_Player.update()		1100,	110,	1101,	1011,	1101,	101,	1001
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:05 AI_Player.update()	Search took107ms
2017-01-05 16:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()		110,	1010,	111,	110,	111,	1101,	11
2017-01-05 16:41:05 AI_Player.update()		110,	1100,	101,	1100,	1010,	101,	1100
2017-01-05 16:41:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 16:41:05 AI_Player.update()		101,	1100,	11,	1001,	11,	1101,	1110
2017-01-05 16:41:05 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:05 AI_Player.update()		1001,	11,	1010,	11,	1010,	11,	111
2017-01-05 16:41:05 AI_Player.update()		1100,	110,	1101,	1011,	1101,	101,	1001
2017-01-05 16:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:05 AI_Player.update()	update
2017-01-05 16:41:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:06 AI_Player.update()	Search took144ms
2017-01-05 16:41:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-05 16:41:06 AI_Player.update()		110,	1100,	101,	101,	1010,	101,	1100
2017-01-05 16:41:06 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-05 16:41:06 AI_Player.update()		101,	1100,	11,	1010,	11,	1101,	1110
2017-01-05 16:41:06 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-05 16:41:06 AI_Player.update()		1001,	11,	1010,	1011,	1010,	11,	111
2017-01-05 16:41:06 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-05 16:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()	update
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()	update
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:06 AI_Player.update()	Search took115ms
2017-01-05 16:41:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-05 16:41:06 AI_Player.update()		110,	1100,	101,	101,	1010,	101,	1100
2017-01-05 16:41:06 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-05 16:41:06 AI_Player.update()		1100,	11,	1010,	11,	1101,	1110,	101
2017-01-05 16:41:06 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-05 16:41:06 AI_Player.update()		1001,	11,	1010,	1011,	1010,	11,	111
2017-01-05 16:41:06 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-05 16:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()	update
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()	update
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:06 AI_Player.update()	Search took82ms
2017-01-05 16:41:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-05 16:41:06 AI_Player.update()		110,	1100,	101,	101,	1010,	101,	1100
2017-01-05 16:41:06 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-05 16:41:06 AI_Player.update()		11,	1010,	11,	1101,	1110,	101,	1100
2017-01-05 16:41:06 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-05 16:41:06 AI_Player.update()		1001,	11,	1010,	1011,	1010,	11,	111
2017-01-05 16:41:06 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-05 16:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()	update
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()	update
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:06 AI_Player.update()	Search took100ms
2017-01-05 16:41:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()		110,	1010,	111,	110,	111,	1101,	11
2017-01-05 16:41:06 AI_Player.update()		110,	1100,	101,	1100,	1010,	101,	1100
2017-01-05 16:41:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 16:41:06 AI_Player.update()		11,	1010,	11,	1001,	1110,	101,	1100
2017-01-05 16:41:06 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-05 16:41:06 AI_Player.update()		1001,	11,	1010,	11,	1010,	11,	111
2017-01-05 16:41:06 AI_Player.update()		1100,	110,	1101,	1011,	1101,	101,	1001
2017-01-05 16:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()	update
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()	update
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:06 AI_Player.update()	Search took397ms
2017-01-05 16:41:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()		110,	1100,	111,	110,	111,	1101,	11
2017-01-05 16:41:06 AI_Player.update()		110,	1100,	101,	1100,	1010,	101,	1100
2017-01-05 16:41:06 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 16:41:06 AI_Player.update()		11,	1010,	11,	1001,	1110,	101,	1100
2017-01-05 16:41:06 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-05 16:41:06 AI_Player.update()		1001,	110,	1010,	11,	1010,	11,	111
2017-01-05 16:41:06 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-05 16:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()	update
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:06 AI_Player.update()	update
2017-01-05 16:41:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:07 AI_Player.update()	Search took588ms
2017-01-05 16:41:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:07 AI_Player.update()		110,	1100,	111,	110,	111,	1101,	11
2017-01-05 16:41:07 AI_Player.update()		110,	1010,	101,	1100,	1010,	101,	1100
2017-01-05 16:41:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 16:41:07 AI_Player.update()		11,	11,	11,	1001,	1110,	101,	1100
2017-01-05 16:41:07 AI_Player.update()		1110,	110,	1101,	1101,	1011,	110,	1011
2017-01-05 16:41:07 AI_Player.update()		1001,	1010,	1010,	11,	1010,	11,	111
2017-01-05 16:41:07 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-05 16:41:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:07 AI_Player.update()	update
2017-01-05 16:41:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:07 AI_Player.update()	update
2017-01-05 16:41:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:08 AI_Player.update()	Search took583ms
2017-01-05 16:41:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 16:41:08 AI_Player.update()		110,	1010,	101,	1100,	1010,	1101,	1100
2017-01-05 16:41:08 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:41:08 AI_Player.update()		11,	11,	11,	1001,	1110,	1100,	1100
2017-01-05 16:41:08 AI_Player.update()		1110,	110,	1101,	1101,	1011,	101,	1011
2017-01-05 16:41:08 AI_Player.update()		1001,	1010,	1010,	11,	1010,	110,	111
2017-01-05 16:41:08 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	11,	1001
2017-01-05 16:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()	update
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()	update
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:08 AI_Player.update()	Search took524ms
2017-01-05 16:41:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-05 16:41:08 AI_Player.update()		110,	1010,	101,	1100,	1010,	1101,	1100
2017-01-05 16:41:08 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:41:08 AI_Player.update()		11,	11,	11,	1001,	1110,	1100,	1100
2017-01-05 16:41:08 AI_Player.update()		1110,	110,	1101,	1101,	1011,	101,	1011
2017-01-05 16:41:08 AI_Player.update()		1010,	1010,	11,	1010,	110,	111,	1001
2017-01-05 16:41:08 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	11,	1001
2017-01-05 16:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()	update
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()	update
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:08 AI_Player.update()	Search took103ms
2017-01-05 16:41:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()		110,	1100,	111,	110,	111,	11,	11
2017-01-05 16:41:08 AI_Player.update()		110,	1010,	101,	1100,	1010,	101,	1100
2017-01-05 16:41:08 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:08 AI_Player.update()		11,	11,	11,	1001,	1110,	101,	1100
2017-01-05 16:41:08 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:08 AI_Player.update()		1010,	1010,	11,	1010,	110,	101,	1001
2017-01-05 16:41:08 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	111,	1001
2017-01-05 16:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()	update
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()	update
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:08 AI_Player.update()	Search took47ms
2017-01-05 16:41:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-05 16:41:08 AI_Player.update()		110,	1010,	101,	1100,	1010,	101,	1100
2017-01-05 16:41:08 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:08 AI_Player.update()		11,	110,	11,	1001,	1110,	101,	1100
2017-01-05 16:41:08 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:08 AI_Player.update()		1010,	1100,	11,	1010,	110,	101,	1001
2017-01-05 16:41:08 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	111,	1001
2017-01-05 16:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()	update
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:08 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:08 AI_Player.update()	update
2017-01-05 16:41:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:09 AI_Player.update()	Search took264ms
2017-01-05 16:41:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:09 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-05 16:41:09 AI_Player.update()		1100,	110,	1010,	101,	1100,	1010,	101
2017-01-05 16:41:09 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:09 AI_Player.update()		11,	110,	11,	1001,	1110,	101,	1100
2017-01-05 16:41:09 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:09 AI_Player.update()		1010,	1100,	11,	1010,	110,	101,	1001
2017-01-05 16:41:09 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	111,	1001
2017-01-05 16:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:09 AI_Player.update()	update
2017-01-05 16:41:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:09 AI_Player.update()	update
2017-01-05 16:41:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:09 AI_Player.update()	Search took193ms
2017-01-05 16:41:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:09 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-05 16:41:09 AI_Player.update()		1100,	110,	1010,	101,	1100,	1010,	101
2017-01-05 16:41:09 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:09 AI_Player.update()		110,	11,	1001,	1110,	101,	1100,	11
2017-01-05 16:41:09 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:09 AI_Player.update()		1010,	1100,	11,	1010,	110,	101,	1001
2017-01-05 16:41:09 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	111,	1001
2017-01-05 16:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:09 AI_Player.update()	update
2017-01-05 16:41:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:09 AI_Player.update()	update
2017-01-05 16:41:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:09 AI_Player.update()	Search took647ms
2017-01-05 16:41:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:09 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-05 16:41:09 AI_Player.update()		1100,	11,	1010,	101,	1100,	1010,	101
2017-01-05 16:41:09 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:09 AI_Player.update()		110,	1010,	1001,	1110,	101,	1100,	11
2017-01-05 16:41:09 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:09 AI_Player.update()		1010,	1100,	11,	1010,	110,	101,	1001
2017-01-05 16:41:09 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	111,	1001
2017-01-05 16:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:09 AI_Player.update()	update
2017-01-05 16:41:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:09 AI_Player.update()	update
2017-01-05 16:41:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:10 AI_Player.update()	Search took649ms
2017-01-05 16:41:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:10 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-05 16:41:10 AI_Player.update()		1100,	11,	1010,	101,	1100,	1010,	101
2017-01-05 16:41:10 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:10 AI_Player.update()		1010,	1001,	1110,	101,	1100,	11,	110
2017-01-05 16:41:10 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:10 AI_Player.update()		1010,	1100,	11,	1010,	110,	101,	1001
2017-01-05 16:41:10 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	111,	1001
2017-01-05 16:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:10 AI_Player.update()	update
2017-01-05 16:41:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:10 AI_Player.update()	update
2017-01-05 16:41:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:11 AI_Player.update()	Search took1185ms
2017-01-05 16:41:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:11 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-05 16:41:11 AI_Player.update()		11,	1010,	101,	1100,	1010,	101,	1100
2017-01-05 16:41:11 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:11 AI_Player.update()		1010,	1001,	1110,	101,	1100,	11,	110
2017-01-05 16:41:11 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:11 AI_Player.update()		1010,	1100,	11,	1010,	110,	101,	1001
2017-01-05 16:41:11 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	111,	1001
2017-01-05 16:41:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:11 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:11 AI_Player.update()	update
2017-01-05 16:41:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:11 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:11 AI_Player.update()	update
2017-01-05 16:41:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:12 AI_Player.update()	Search took639ms
2017-01-05 16:41:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:12 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-05 16:41:12 AI_Player.update()		11,	11,	101,	1100,	1010,	101,	1100
2017-01-05 16:41:12 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:12 AI_Player.update()		1010,	1100,	1110,	101,	1100,	11,	110
2017-01-05 16:41:12 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:12 AI_Player.update()		1010,	1010,	11,	1010,	110,	101,	1001
2017-01-05 16:41:12 AI_Player.update()		1100,	110,	1101,	1011,	1101,	111,	1001
2017-01-05 16:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:12 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:12 AI_Player.update()	update
2017-01-05 16:41:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:12 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:12 AI_Player.update()	update
2017-01-05 16:41:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:12 AI_Player.update()	Search took19ms
2017-01-05 16:41:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:12 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-05 16:41:12 AI_Player.update()		11,	1010,	101,	1100,	1010,	101,	1100
2017-01-05 16:41:12 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:12 AI_Player.update()		1010,	1001,	1110,	101,	1100,	11,	110
2017-01-05 16:41:12 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:12 AI_Player.update()		1010,	1100,	11,	1010,	110,	101,	1001
2017-01-05 16:41:12 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	111,	1001
2017-01-05 16:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:12 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:12 AI_Player.update()	update
2017-01-05 16:41:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:12 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:12 AI_Player.update()	update
2017-01-05 16:41:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:13 AI_Player.update()	Search took735ms
2017-01-05 16:41:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()		110,	110,	111,	110,	111,	111,	11
2017-01-05 16:41:13 AI_Player.update()		11,	1010,	101,	1100,	1010,	11,	1100
2017-01-05 16:41:13 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:41:13 AI_Player.update()		1010,	1001,	1110,	101,	1100,	1101,	110
2017-01-05 16:41:13 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-05 16:41:13 AI_Player.update()		1010,	1100,	11,	1010,	110,	1100,	1001
2017-01-05 16:41:13 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-05 16:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()	update
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:41:13 AI_Player.update()	Player b has won!
2017-01-05 16:41:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:13 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:13 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()	update
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:13 AI_Player.update()	Search took313ms
2017-01-05 16:41:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-05 16:41:13 AI_Player.update()		1101,	111,	1100,	1001,	110,	11,	1001
2017-01-05 16:41:13 AI_Player.update()		1110,	1101,	1110,	1010,	111,	110,	1011
2017-01-05 16:41:13 AI_Player.update()		1010,	1011,	1010,	1010,	1001,	1010,	1010
2017-01-05 16:41:13 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:41:13 AI_Player.update()		11,	1010,	11,	110,	110,	101,	1010
2017-01-05 16:41:13 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1011,	1001
2017-01-05 16:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()	update
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()	update
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:13 AI_Player.update()	Search took85ms
2017-01-05 16:41:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 16:41:13 AI_Player.update()		1101,	111,	1100,	1010,	110,	11,	1001
2017-01-05 16:41:13 AI_Player.update()		1110,	1101,	1110,	1001,	111,	110,	1011
2017-01-05 16:41:13 AI_Player.update()		1010,	1011,	1010,	1010,	1001,	1010,	1010
2017-01-05 16:41:13 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:41:13 AI_Player.update()		11,	1010,	11,	1001,	110,	101,	1010
2017-01-05 16:41:13 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1011,	1001
2017-01-05 16:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()	update
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()	update
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:13 AI_Player.update()	Search took259ms
2017-01-05 16:41:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 16:41:13 AI_Player.update()		1101,	111,	1100,	1010,	110,	11,	1001
2017-01-05 16:41:13 AI_Player.update()		1110,	1101,	1110,	1001,	111,	110,	1011
2017-01-05 16:41:13 AI_Player.update()		1011,	1010,	1010,	1001,	1010,	1010,	1010
2017-01-05 16:41:13 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:41:13 AI_Player.update()		11,	1010,	11,	1001,	110,	101,	1010
2017-01-05 16:41:13 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1011,	1001
2017-01-05 16:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()	update
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:13 AI_Player.update()	update
2017-01-05 16:41:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:14 AI_Player.update()	Search took302ms
2017-01-05 16:41:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()		110,	111,	111,	101,	111,	111,	11
2017-01-05 16:41:14 AI_Player.update()		1101,	1101,	1100,	1010,	110,	11,	1001
2017-01-05 16:41:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-05 16:41:14 AI_Player.update()		1011,	1001,	1010,	1001,	1010,	1010,	1010
2017-01-05 16:41:14 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:41:14 AI_Player.update()		11,	1110,	11,	1001,	110,	101,	1010
2017-01-05 16:41:14 AI_Player.update()		1100,	101,	1101,	110,	1101,	1011,	1001
2017-01-05 16:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()	update
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()	update
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:14 AI_Player.update()	Search took209ms
2017-01-05 16:41:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()		110,	1101,	111,	101,	111,	111,	11
2017-01-05 16:41:14 AI_Player.update()		1101,	1010,	1100,	1010,	110,	11,	1001
2017-01-05 16:41:14 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:41:14 AI_Player.update()		1011,	1010,	1010,	1001,	1010,	1010,	1010
2017-01-05 16:41:14 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:41:14 AI_Player.update()		11,	101,	11,	1001,	110,	101,	1010
2017-01-05 16:41:14 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-05 16:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()	update
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()	update
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:14 AI_Player.update()	Search took129ms
2017-01-05 16:41:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 16:41:14 AI_Player.update()		1101,	1010,	1100,	1001,	110,	11,	1001
2017-01-05 16:41:14 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:41:14 AI_Player.update()		1011,	1010,	1010,	1010,	1010,	1010,	1010
2017-01-05 16:41:14 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:41:14 AI_Player.update()		11,	101,	11,	110,	110,	101,	1010
2017-01-05 16:41:14 AI_Player.update()		1100,	111,	1101,	101,	1101,	1011,	1001
2017-01-05 16:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()	update
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()	update
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:14 AI_Player.update()	Search took288ms
2017-01-05 16:41:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 16:41:14 AI_Player.update()		1101,	1010,	1100,	1001,	110,	11,	1001
2017-01-05 16:41:14 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:41:14 AI_Player.update()		1010,	1011,	1010,	1010,	1010,	1010,	1010
2017-01-05 16:41:14 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:41:14 AI_Player.update()		11,	101,	11,	110,	110,	101,	1010
2017-01-05 16:41:14 AI_Player.update()		1100,	111,	1101,	101,	1101,	1011,	1001
2017-01-05 16:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()	update
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:14 AI_Player.update()	update
2017-01-05 16:41:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:15 AI_Player.update()	Search took356ms
2017-01-05 16:41:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-05 16:41:15 AI_Player.update()		1101,	1001,	1100,	1001,	110,	11,	1001
2017-01-05 16:41:15 AI_Player.update()		1110,	1011,	1110,	1001,	111,	110,	1011
2017-01-05 16:41:15 AI_Player.update()		1010,	1110,	1010,	1010,	1010,	1010,	1010
2017-01-05 16:41:15 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:41:15 AI_Player.update()		11,	111,	11,	110,	110,	101,	1010
2017-01-05 16:41:15 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1011,	1001
2017-01-05 16:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()	update
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()	update
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:15 AI_Player.update()	Search took392ms
2017-01-05 16:41:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()		110,	1010,	111,	1001,	111,	111,	11
2017-01-05 16:41:15 AI_Player.update()		1101,	1001,	1100,	1001,	110,	11,	1001
2017-01-05 16:41:15 AI_Player.update()		1110,	1011,	1110,	1010,	111,	110,	1011
2017-01-05 16:41:15 AI_Player.update()		1010,	1110,	1010,	1001,	1010,	1010,	1010
2017-01-05 16:41:15 AI_Player.update()		1110,	101,	1101,	110,	1011,	1110,	1011
2017-01-05 16:41:15 AI_Player.update()		11,	111,	11,	101,	110,	101,	1010
2017-01-05 16:41:15 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()	update
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()	update
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:15 AI_Player.update()	Search took189ms
2017-01-05 16:41:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()		110,	1101,	111,	1001,	111,	111,	11
2017-01-05 16:41:15 AI_Player.update()		1101,	1010,	1100,	1001,	110,	11,	1001
2017-01-05 16:41:15 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:41:15 AI_Player.update()		1010,	1011,	1010,	1001,	1010,	1010,	1010
2017-01-05 16:41:15 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1110,	1011
2017-01-05 16:41:15 AI_Player.update()		11,	101,	11,	101,	110,	101,	1010
2017-01-05 16:41:15 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()	update
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()	update
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:15 AI_Player.update()	Search took115ms
2017-01-05 16:41:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()		110,	1101,	111,	1001,	111,	111,	11
2017-01-05 16:41:15 AI_Player.update()		1101,	1010,	1100,	1010,	110,	11,	1001
2017-01-05 16:41:15 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:41:15 AI_Player.update()		1010,	1011,	1010,	110,	1010,	1010,	1010
2017-01-05 16:41:15 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1110,	1011
2017-01-05 16:41:15 AI_Player.update()		11,	101,	11,	1010,	110,	101,	1010
2017-01-05 16:41:15 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()	update
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:15 AI_Player.update()	update
2017-01-05 16:41:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:16 AI_Player.update()	Search took180ms
2017-01-05 16:41:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:16 AI_Player.update()		110,	1101,	111,	1001,	111,	111,	11
2017-01-05 16:41:16 AI_Player.update()		1010,	1100,	1010,	110,	11,	1001,	1101
2017-01-05 16:41:16 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:41:16 AI_Player.update()		1010,	1011,	1010,	110,	1010,	1010,	1010
2017-01-05 16:41:16 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1110,	1011
2017-01-05 16:41:16 AI_Player.update()		11,	101,	11,	1010,	110,	101,	1010
2017-01-05 16:41:16 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:16 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:16 AI_Player.update()	update
2017-01-05 16:41:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:16 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:16 AI_Player.update()	update
2017-01-05 16:41:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:16 AI_Player.update()	Search took688ms
2017-01-05 16:41:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:16 AI_Player.update()		110,	1101,	111,	1001,	111,	1011,	11
2017-01-05 16:41:16 AI_Player.update()		1010,	1100,	1010,	110,	11,	111,	1101
2017-01-05 16:41:16 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 16:41:16 AI_Player.update()		1010,	1011,	1010,	110,	1010,	110,	1010
2017-01-05 16:41:16 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 16:41:16 AI_Player.update()		11,	101,	11,	1010,	110,	1110,	1010
2017-01-05 16:41:16 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-05 16:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:16 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:16 AI_Player.update()	update
2017-01-05 16:41:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:16 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:16 AI_Player.update()	update
2017-01-05 16:41:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:17 AI_Player.update()	Search took900ms
2017-01-05 16:41:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:17 AI_Player.update()		110,	1101,	111,	110,	111,	1011,	11
2017-01-05 16:41:17 AI_Player.update()		1010,	1100,	1010,	1001,	11,	111,	1101
2017-01-05 16:41:17 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-05 16:41:17 AI_Player.update()		1010,	1011,	1010,	101,	1010,	110,	1010
2017-01-05 16:41:17 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:41:17 AI_Player.update()		11,	101,	11,	1001,	110,	1110,	1010
2017-01-05 16:41:17 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-05 16:41:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:17 AI_Player.update()	update
2017-01-05 16:41:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:17 AI_Player.update()	update
2017-01-05 16:41:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:18 AI_Player.update()	Search took509ms
2017-01-05 16:41:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()		110,	1101,	111,	110,	111,	1011,	11
2017-01-05 16:41:18 AI_Player.update()		1100,	1010,	1001,	11,	111,	1101,	1010
2017-01-05 16:41:18 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-05 16:41:18 AI_Player.update()		1010,	1011,	1010,	101,	1010,	110,	1010
2017-01-05 16:41:18 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:41:18 AI_Player.update()		11,	101,	11,	1001,	110,	1110,	1010
2017-01-05 16:41:18 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-05 16:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()	update
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()	update
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:18 AI_Player.update()	Search took191ms
2017-01-05 16:41:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-05 16:41:18 AI_Player.update()		1100,	1010,	1001,	11,	111,	1001,	1010
2017-01-05 16:41:18 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 16:41:18 AI_Player.update()		1010,	1011,	1010,	101,	1010,	1010,	1010
2017-01-05 16:41:18 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:41:18 AI_Player.update()		11,	101,	11,	1001,	110,	101,	1010
2017-01-05 16:41:18 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()	update
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()	update
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:18 AI_Player.update()	Search took194ms
2017-01-05 16:41:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-05 16:41:18 AI_Player.update()		1100,	1010,	1001,	11,	111,	1001,	1010
2017-01-05 16:41:18 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 16:41:18 AI_Player.update()		1011,	1010,	101,	1010,	1010,	1010,	1010
2017-01-05 16:41:18 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:41:18 AI_Player.update()		11,	101,	11,	1001,	110,	101,	1010
2017-01-05 16:41:18 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()	update
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()	update
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:18 AI_Player.update()	Search took301ms
2017-01-05 16:41:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-05 16:41:18 AI_Player.update()		1010,	1100,	1010,	1001,	11,	111,	1001
2017-01-05 16:41:18 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 16:41:18 AI_Player.update()		1011,	1010,	101,	1010,	1010,	1010,	1010
2017-01-05 16:41:18 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:41:18 AI_Player.update()		11,	101,	11,	1001,	110,	101,	1010
2017-01-05 16:41:18 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()	update
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:18 AI_Player.update()	update
2017-01-05 16:41:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:19 AI_Player.update()	Search took258ms
2017-01-05 16:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-05 16:41:19 AI_Player.update()		1100,	1010,	1001,	11,	111,	1001,	1010
2017-01-05 16:41:19 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 16:41:19 AI_Player.update()		1011,	1010,	101,	1010,	1010,	1010,	1010
2017-01-05 16:41:19 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:41:19 AI_Player.update()		11,	101,	11,	1001,	110,	101,	1010
2017-01-05 16:41:19 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:19 AI_Player.update()	Search took106ms
2017-01-05 16:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-05 16:41:19 AI_Player.update()		1010,	1100,	1010,	1001,	11,	111,	1001
2017-01-05 16:41:19 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 16:41:19 AI_Player.update()		1011,	1010,	101,	1010,	1010,	1010,	1010
2017-01-05 16:41:19 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:41:19 AI_Player.update()		11,	101,	11,	1001,	110,	101,	1010
2017-01-05 16:41:19 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:19 AI_Player.update()	Search took263ms
2017-01-05 16:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()		110,	1101,	111,	1001,	111,	1101,	11
2017-01-05 16:41:19 AI_Player.update()		1010,	1100,	1010,	110,	11,	111,	1001
2017-01-05 16:41:19 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:41:19 AI_Player.update()		1011,	1010,	101,	1010,	1010,	1010,	1010
2017-01-05 16:41:19 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:41:19 AI_Player.update()		11,	101,	11,	1001,	110,	101,	1010
2017-01-05 16:41:19 AI_Player.update()		1100,	111,	1101,	110,	1101,	1011,	1001
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:41:19 AI_Player.update()	Player a has won!
2017-01-05 16:41:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:19 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:19 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:19 AI_Player.update()	Search took157ms
2017-01-05 16:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-05 16:41:19 AI_Player.update()		1010,	11,	1010,	1001,	1101,	101,	1001
2017-01-05 16:41:19 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 16:41:19 AI_Player.update()		1010,	1100,	101,	111,	1001,	110,	1001
2017-01-05 16:41:19 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:19 AI_Player.update()		110,	1110,	1011,	1010,	1011,	1110,	101
2017-01-05 16:41:19 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:19 AI_Player.update()	Search took92ms
2017-01-05 16:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()		110,	11,	111,	1011,	111,	1001,	11
2017-01-05 16:41:19 AI_Player.update()		1010,	1100,	1010,	1001,	1101,	101,	1001
2017-01-05 16:41:19 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 16:41:19 AI_Player.update()		1010,	11,	101,	111,	1001,	110,	1001
2017-01-05 16:41:19 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:19 AI_Player.update()		110,	1010,	1011,	1010,	1011,	1110,	101
2017-01-05 16:41:19 AI_Player.update()		1100,	1001,	1101,	101,	1101,	11,	1001
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:19 AI_Player.update()	Search took216ms
2017-01-05 16:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()		110,	1100,	111,	1011,	111,	1001,	11
2017-01-05 16:41:19 AI_Player.update()		1010,	1100,	1010,	1001,	1101,	101,	1001
2017-01-05 16:41:19 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 16:41:19 AI_Player.update()		1010,	1110,	101,	111,	1001,	110,	1001
2017-01-05 16:41:19 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:19 AI_Player.update()		110,	1001,	1011,	1010,	1011,	1110,	101
2017-01-05 16:41:19 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-05 16:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:19 AI_Player.update()	update
2017-01-05 16:41:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:20 AI_Player.update()	Search took147ms
2017-01-05 16:41:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:20 AI_Player.update()		110,	1100,	111,	1011,	111,	11,	11
2017-01-05 16:41:20 AI_Player.update()		1010,	1100,	1010,	1001,	1101,	1001,	1001
2017-01-05 16:41:20 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:20 AI_Player.update()		1010,	1110,	101,	111,	1001,	1010,	1001
2017-01-05 16:41:20 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:20 AI_Player.update()		110,	1001,	1011,	1010,	1011,	110,	101
2017-01-05 16:41:20 AI_Player.update()		1100,	11,	1101,	101,	1101,	1110,	1001
2017-01-05 16:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:20 AI_Player.update()	update
2017-01-05 16:41:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:20 AI_Player.update()	update
2017-01-05 16:41:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:20 AI_Player.update()	Search took204ms
2017-01-05 16:41:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:20 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 16:41:20 AI_Player.update()		1010,	1100,	1010,	1011,	1101,	1001,	1001
2017-01-05 16:41:20 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:20 AI_Player.update()		1010,	1110,	101,	1001,	1001,	1010,	1001
2017-01-05 16:41:20 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-05 16:41:20 AI_Player.update()		110,	1001,	1011,	1010,	1011,	110,	101
2017-01-05 16:41:20 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:20 AI_Player.update()	update
2017-01-05 16:41:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:20 AI_Player.update()	update
2017-01-05 16:41:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:20 AI_Player.update()	Search took277ms
2017-01-05 16:41:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:20 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 16:41:20 AI_Player.update()		1010,	1100,	1010,	1011,	1101,	1001,	1001
2017-01-05 16:41:20 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:20 AI_Player.update()		1110,	101,	1001,	1001,	1010,	1001,	1010
2017-01-05 16:41:20 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-05 16:41:20 AI_Player.update()		110,	1001,	1011,	1010,	1011,	110,	101
2017-01-05 16:41:20 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:20 AI_Player.update()	update
2017-01-05 16:41:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:20 AI_Player.update()	update
2017-01-05 16:41:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:21 AI_Player.update()	Search took386ms
2017-01-05 16:41:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:21 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 16:41:21 AI_Player.update()		1100,	1010,	1011,	1101,	1001,	1001,	1010
2017-01-05 16:41:21 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:21 AI_Player.update()		1110,	101,	1001,	1001,	1010,	1001,	1010
2017-01-05 16:41:21 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-05 16:41:21 AI_Player.update()		110,	1001,	1011,	1010,	1011,	110,	101
2017-01-05 16:41:21 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:21 AI_Player.update()	update
2017-01-05 16:41:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:21 AI_Player.update()	update
2017-01-05 16:41:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:21 AI_Player.update()	Search took364ms
2017-01-05 16:41:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:21 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-05 16:41:21 AI_Player.update()		1100,	1100,	1011,	1101,	1001,	1001,	1010
2017-01-05 16:41:21 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:21 AI_Player.update()		1110,	11,	1001,	1001,	1010,	1001,	1010
2017-01-05 16:41:21 AI_Player.update()		1110,	101,	1101,	111,	1011,	110,	1011
2017-01-05 16:41:21 AI_Player.update()		110,	1010,	1011,	1010,	1011,	110,	101
2017-01-05 16:41:21 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:21 AI_Player.update()	update
2017-01-05 16:41:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:21 AI_Player.update()	update
2017-01-05 16:41:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:21 AI_Player.update()	Search took358ms
2017-01-05 16:41:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:21 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-05 16:41:21 AI_Player.update()		1100,	1100,	1011,	1101,	1001,	101,	1010
2017-01-05 16:41:21 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 16:41:21 AI_Player.update()		1110,	11,	1001,	1001,	1010,	110,	1010
2017-01-05 16:41:21 AI_Player.update()		1110,	101,	1101,	111,	1011,	110,	1011
2017-01-05 16:41:21 AI_Player.update()		110,	1010,	1011,	1010,	1011,	1110,	101
2017-01-05 16:41:21 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 16:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:21 AI_Player.update()	update
2017-01-05 16:41:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:21 AI_Player.update()	update
2017-01-05 16:41:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:22 AI_Player.update()	Search took451ms
2017-01-05 16:41:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:22 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-05 16:41:22 AI_Player.update()		1100,	1100,	1011,	1101,	1001,	1001,	1010
2017-01-05 16:41:22 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:22 AI_Player.update()		1110,	11,	1001,	1001,	1010,	1001,	1010
2017-01-05 16:41:22 AI_Player.update()		1110,	101,	1101,	111,	1011,	110,	1011
2017-01-05 16:41:22 AI_Player.update()		110,	1010,	1011,	1010,	1011,	110,	101
2017-01-05 16:41:22 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:22 AI_Player.update()	update
2017-01-05 16:41:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:22 AI_Player.update()	update
2017-01-05 16:41:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:22 AI_Player.update()	Search took368ms
2017-01-05 16:41:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:22 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 16:41:22 AI_Player.update()		1100,	1010,	1011,	1101,	1001,	1001,	1010
2017-01-05 16:41:22 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:22 AI_Player.update()		1110,	101,	1001,	1001,	1010,	1001,	1010
2017-01-05 16:41:22 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-05 16:41:22 AI_Player.update()		110,	1001,	1011,	1010,	1011,	110,	101
2017-01-05 16:41:22 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:22 AI_Player.update()	update
2017-01-05 16:41:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:22 AI_Player.update()	update
2017-01-05 16:41:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:23 AI_Player.update()	Search took452ms
2017-01-05 16:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-05 16:41:23 AI_Player.update()		1100,	11,	1011,	1101,	1001,	1001,	1010
2017-01-05 16:41:23 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:23 AI_Player.update()		1110,	1010,	1001,	1001,	1010,	1001,	1010
2017-01-05 16:41:23 AI_Player.update()		1110,	1001,	1101,	111,	1011,	110,	1011
2017-01-05 16:41:23 AI_Player.update()		110,	11,	1011,	1010,	1011,	110,	101
2017-01-05 16:41:23 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:23 AI_Player.update()	Search took144ms
2017-01-05 16:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-05 16:41:23 AI_Player.update()		1010,	1100,	11,	1011,	1101,	1001,	1001
2017-01-05 16:41:23 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:23 AI_Player.update()		1110,	1010,	1001,	1001,	1010,	1001,	1010
2017-01-05 16:41:23 AI_Player.update()		1110,	1001,	1101,	111,	1011,	110,	1011
2017-01-05 16:41:23 AI_Player.update()		110,	11,	1011,	1010,	1011,	110,	101
2017-01-05 16:41:23 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:41:23 AI_Player.update()	Player a has won!
2017-01-05 16:41:23 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:23 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:23 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:23 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:23 AI_Player.update()	Search took229ms
2017-01-05 16:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()		110,	1100,	111,	101,	111,	1101,	11
2017-01-05 16:41:23 AI_Player.update()		1010,	1001,	101,	11,	1010,	11,	1100
2017-01-05 16:41:23 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-05 16:41:23 AI_Player.update()		110,	101,	101,	1100,	111,	11,	1110
2017-01-05 16:41:23 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:23 AI_Player.update()		101,	110,	1100,	110,	11,	1100,	1100
2017-01-05 16:41:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:23 AI_Player.update()	Search took117ms
2017-01-05 16:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()		110,	1100,	111,	101,	111,	1101,	11
2017-01-05 16:41:23 AI_Player.update()		1001,	101,	11,	1010,	11,	1100,	1010
2017-01-05 16:41:23 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-05 16:41:23 AI_Player.update()		110,	101,	101,	1100,	111,	11,	1110
2017-01-05 16:41:23 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:23 AI_Player.update()		101,	110,	1100,	110,	11,	1100,	1100
2017-01-05 16:41:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:23 AI_Player.update()	Search took34ms
2017-01-05 16:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()		110,	1100,	111,	101,	111,	1101,	11
2017-01-05 16:41:23 AI_Player.update()		1001,	101,	11,	1010,	11,	1100,	1010
2017-01-05 16:41:23 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-05 16:41:23 AI_Player.update()		1110,	110,	101,	101,	1100,	111,	11
2017-01-05 16:41:23 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:23 AI_Player.update()		101,	110,	1100,	110,	11,	1100,	1100
2017-01-05 16:41:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:23 AI_Player.update()	Search took347ms
2017-01-05 16:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()		110,	1100,	111,	101,	111,	1101,	11
2017-01-05 16:41:23 AI_Player.update()		1001,	101,	11,	1010,	11,	1100,	1010
2017-01-05 16:41:23 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-05 16:41:23 AI_Player.update()		1110,	110,	101,	101,	1100,	111,	11
2017-01-05 16:41:23 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:23 AI_Player.update()		110,	1100,	110,	11,	1100,	1100,	101
2017-01-05 16:41:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:23 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:23 AI_Player.update()	update
2017-01-05 16:41:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:24 AI_Player.update()	Search took171ms
2017-01-05 16:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()		110,	1100,	111,	1010,	111,	1101,	11
2017-01-05 16:41:24 AI_Player.update()		1001,	101,	11,	101,	11,	1100,	1010
2017-01-05 16:41:24 AI_Player.update()		1110,	101,	1110,	1010,	111,	111,	1011
2017-01-05 16:41:24 AI_Player.update()		1110,	110,	101,	1100,	1100,	111,	11
2017-01-05 16:41:24 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:41:24 AI_Player.update()		110,	1100,	110,	1001,	1100,	1100,	101
2017-01-05 16:41:24 AI_Player.update()		1100,	11,	1101,	11,	1101,	1001,	1001
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:41:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:24 AI_Player.update()	Search took317ms
2017-01-05 16:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-05 16:41:24 AI_Player.update()		1001,	101,	11,	101,	11,	1101,	1010
2017-01-05 16:41:24 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:41:24 AI_Player.update()		1110,	110,	101,	1100,	1100,	111,	11
2017-01-05 16:41:24 AI_Player.update()		1110,	1101,	1101,	101,	1011,	111,	1011
2017-01-05 16:41:24 AI_Player.update()		110,	1100,	110,	1001,	1100,	101,	101
2017-01-05 16:41:24 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:24 AI_Player.update()	Search took58ms
2017-01-05 16:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()		110,	1100,	111,	11,	111,	1001,	11
2017-01-05 16:41:24 AI_Player.update()		1001,	101,	11,	1010,	11,	1101,	1010
2017-01-05 16:41:24 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:41:24 AI_Player.update()		1110,	110,	101,	1010,	1100,	111,	11
2017-01-05 16:41:24 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	111,	1011
2017-01-05 16:41:24 AI_Player.update()		110,	1100,	110,	101,	1100,	101,	101
2017-01-05 16:41:24 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:24 AI_Player.update()	Search took136ms
2017-01-05 16:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()		110,	1100,	111,	11,	111,	1001,	11
2017-01-05 16:41:24 AI_Player.update()		1001,	101,	11,	1010,	11,	1101,	1010
2017-01-05 16:41:24 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:41:24 AI_Player.update()		11,	1110,	110,	101,	1010,	1100,	111
2017-01-05 16:41:24 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	111,	1011
2017-01-05 16:41:24 AI_Player.update()		110,	1100,	110,	101,	1100,	101,	101
2017-01-05 16:41:24 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:24 AI_Player.update()	Search took96ms
2017-01-05 16:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()		110,	1100,	111,	1001,	111,	1001,	11
2017-01-05 16:41:24 AI_Player.update()		1001,	101,	11,	11,	11,	1101,	1010
2017-01-05 16:41:24 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:41:24 AI_Player.update()		11,	1110,	110,	101,	1010,	1100,	111
2017-01-05 16:41:24 AI_Player.update()		1110,	1101,	1101,	101,	1011,	111,	1011
2017-01-05 16:41:24 AI_Player.update()		110,	1100,	110,	1100,	1100,	101,	101
2017-01-05 16:41:24 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:24 AI_Player.update()	Search took96ms
2017-01-05 16:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 16:41:24 AI_Player.update()		1001,	101,	11,	11,	11,	1101,	1010
2017-01-05 16:41:24 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1100,	1011
2017-01-05 16:41:24 AI_Player.update()		11,	1101,	110,	101,	1010,	1100,	111
2017-01-05 16:41:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	111,	1011
2017-01-05 16:41:24 AI_Player.update()		110,	11,	110,	1100,	1100,	101,	101
2017-01-05 16:41:24 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:24 AI_Player.update()	Search took128ms
2017-01-05 16:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()		110,	101,	111,	1001,	111,	1101,	11
2017-01-05 16:41:24 AI_Player.update()		1001,	101,	11,	11,	11,	1100,	1010
2017-01-05 16:41:24 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1100,	1011
2017-01-05 16:41:24 AI_Player.update()		11,	1101,	110,	101,	1010,	111,	111
2017-01-05 16:41:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-05 16:41:24 AI_Player.update()		110,	11,	110,	1100,	1100,	1100,	101
2017-01-05 16:41:24 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:24 AI_Player.update()	update
2017-01-05 16:41:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:25 AI_Player.update()	Search took54ms
2017-01-05 16:41:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()		110,	101,	111,	1001,	111,	1101,	11
2017-01-05 16:41:25 AI_Player.update()		1001,	1110,	11,	11,	11,	1100,	1010
2017-01-05 16:41:25 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:41:25 AI_Player.update()		11,	1100,	110,	101,	1010,	111,	111
2017-01-05 16:41:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-05 16:41:25 AI_Player.update()		110,	1100,	110,	1100,	1100,	1100,	101
2017-01-05 16:41:25 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()	update
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()	update
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:25 AI_Player.update()	Search took149ms
2017-01-05 16:41:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-05 16:41:25 AI_Player.update()		1001,	1110,	11,	11,	11,	1100,	1010
2017-01-05 16:41:25 AI_Player.update()		1110,	1101,	1110,	1010,	111,	111,	1011
2017-01-05 16:41:25 AI_Player.update()		11,	1100,	110,	101,	1010,	101,	111
2017-01-05 16:41:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:41:25 AI_Player.update()		110,	1100,	110,	1100,	1100,	1001,	101
2017-01-05 16:41:25 AI_Player.update()		1100,	101,	1101,	101,	1101,	1101,	1001
2017-01-05 16:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()	update
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()	update
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:25 AI_Player.update()	Search took79ms
2017-01-05 16:41:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-05 16:41:25 AI_Player.update()		1001,	1110,	11,	11,	11,	1100,	1010
2017-01-05 16:41:25 AI_Player.update()		1110,	1101,	1110,	1010,	111,	111,	1011
2017-01-05 16:41:25 AI_Player.update()		11,	1100,	110,	101,	1010,	101,	111
2017-01-05 16:41:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:41:25 AI_Player.update()		1100,	110,	1100,	1100,	1001,	101,	110
2017-01-05 16:41:25 AI_Player.update()		1100,	101,	1101,	101,	1101,	1101,	1001
2017-01-05 16:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()	update
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()	update
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:25 AI_Player.update()	Search took317ms
2017-01-05 16:41:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()		110,	1110,	111,	1001,	111,	1100,	11
2017-01-05 16:41:25 AI_Player.update()		1001,	1101,	11,	11,	11,	1100,	1010
2017-01-05 16:41:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	111,	1011
2017-01-05 16:41:25 AI_Player.update()		11,	11,	110,	101,	1010,	101,	111
2017-01-05 16:41:25 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:41:25 AI_Player.update()		1100,	101,	1100,	1100,	1001,	101,	110
2017-01-05 16:41:25 AI_Player.update()		1100,	101,	1101,	101,	1101,	1101,	1001
2017-01-05 16:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()	update
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:41:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()	update
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:25 AI_Player.update()	Search took166ms
2017-01-05 16:41:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()		110,	1110,	111,	1001,	111,	1100,	11
2017-01-05 16:41:25 AI_Player.update()		1001,	1101,	11,	11,	11,	1100,	1010
2017-01-05 16:41:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	111,	1011
2017-01-05 16:41:25 AI_Player.update()		11,	11,	110,	101,	1010,	101,	111
2017-01-05 16:41:25 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:41:25 AI_Player.update()		101,	1100,	1100,	1001,	101,	110,	1100
2017-01-05 16:41:25 AI_Player.update()		1100,	101,	1101,	101,	1101,	1101,	1001
2017-01-05 16:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()	update
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:25 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:25 AI_Player.update()	update
2017-01-05 16:41:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:26 AI_Player.update()	Search took273ms
2017-01-05 16:41:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()		110,	1101,	111,	1001,	111,	1100,	11
2017-01-05 16:41:26 AI_Player.update()		1001,	1100,	11,	11,	11,	1100,	1010
2017-01-05 16:41:26 AI_Player.update()		1110,	11,	1110,	1010,	111,	111,	1011
2017-01-05 16:41:26 AI_Player.update()		11,	110,	110,	101,	1010,	101,	111
2017-01-05 16:41:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-05 16:41:26 AI_Player.update()		101,	101,	1100,	1001,	101,	110,	1100
2017-01-05 16:41:26 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1101,	1001
2017-01-05 16:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()	update
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()	update
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:26 AI_Player.update()	Search took121ms
2017-01-05 16:41:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()		110,	1101,	111,	1001,	111,	1100,	11
2017-01-05 16:41:26 AI_Player.update()		1001,	1100,	11,	11,	11,	111,	1010
2017-01-05 16:41:26 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:26 AI_Player.update()		11,	110,	110,	101,	1010,	1100,	111
2017-01-05 16:41:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:26 AI_Player.update()		101,	101,	1100,	1001,	101,	1101,	1100
2017-01-05 16:41:26 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1100,	1001
2017-01-05 16:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()	update
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()	update
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:26 AI_Player.update()	Search took332ms
2017-01-05 16:41:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()		110,	1101,	111,	1001,	111,	1100,	11
2017-01-05 16:41:26 AI_Player.update()		1010,	1001,	1100,	11,	11,	11,	111
2017-01-05 16:41:26 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:26 AI_Player.update()		11,	110,	110,	101,	1010,	1100,	111
2017-01-05 16:41:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:26 AI_Player.update()		101,	101,	1100,	1001,	101,	1101,	1100
2017-01-05 16:41:26 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1100,	1001
2017-01-05 16:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()	update
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:26 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:41:26 AI_Player.update()	Player a has won!
2017-01-05 16:41:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:26 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:26 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()	update
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:26 AI_Player.update()	Search took304ms
2017-01-05 16:41:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 16:41:26 AI_Player.update()		11,	101,	1001,	1110,	1010,	110,	1011
2017-01-05 16:41:26 AI_Player.update()		1110,	111,	1110,	11,	111,	11,	1011
2017-01-05 16:41:26 AI_Player.update()		1010,	101,	1010,	110,	1110,	101,	1101
2017-01-05 16:41:26 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:41:26 AI_Player.update()		11,	1001,	1100,	1001,	1010,	110,	1001
2017-01-05 16:41:26 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	111,	1001
2017-01-05 16:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()	update
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:26 AI_Player.update()	update
2017-01-05 16:41:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:27 AI_Player.update()	Search took1154ms
2017-01-05 16:41:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:27 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 16:41:27 AI_Player.update()		101,	1001,	1110,	1010,	110,	1011,	11
2017-01-05 16:41:27 AI_Player.update()		1110,	111,	1110,	11,	111,	11,	1011
2017-01-05 16:41:27 AI_Player.update()		1010,	101,	1010,	110,	1110,	101,	1101
2017-01-05 16:41:27 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:41:27 AI_Player.update()		11,	1001,	1100,	1001,	1010,	110,	1001
2017-01-05 16:41:27 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	111,	1001
2017-01-05 16:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:27 AI_Player.update()	update
2017-01-05 16:41:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:27 AI_Player.update()	update
2017-01-05 16:41:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:29 AI_Player.update()	Search took1172ms
2017-01-05 16:41:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:29 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 16:41:29 AI_Player.update()		11,	101,	1001,	1110,	1010,	110,	1011
2017-01-05 16:41:29 AI_Player.update()		1110,	111,	1110,	11,	111,	11,	1011
2017-01-05 16:41:29 AI_Player.update()		1010,	101,	1010,	110,	1110,	101,	1101
2017-01-05 16:41:29 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:41:29 AI_Player.update()		11,	1001,	1100,	1001,	1010,	110,	1001
2017-01-05 16:41:29 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	111,	1001
2017-01-05 16:41:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:29 AI_Player.update()	update
2017-01-05 16:41:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:29 AI_Player.update()	update
2017-01-05 16:41:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:30 AI_Player.update()	Search took1063ms
2017-01-05 16:41:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:30 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 16:41:30 AI_Player.update()		11,	101,	1001,	1110,	1010,	111,	1011
2017-01-05 16:41:30 AI_Player.update()		1110,	111,	1110,	11,	111,	110,	1011
2017-01-05 16:41:30 AI_Player.update()		1010,	101,	1010,	110,	1110,	11,	1101
2017-01-05 16:41:30 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-05 16:41:30 AI_Player.update()		11,	1001,	1100,	1001,	1010,	1010,	1001
2017-01-05 16:41:30 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:30 AI_Player.update()	update
2017-01-05 16:41:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:30 AI_Player.update()	update
2017-01-05 16:41:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:31 AI_Player.update()	Search took909ms
2017-01-05 16:41:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:31 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 16:41:31 AI_Player.update()		11,	101,	1001,	1110,	1010,	111,	1011
2017-01-05 16:41:31 AI_Player.update()		1110,	111,	1110,	11,	111,	110,	1011
2017-01-05 16:41:31 AI_Player.update()		101,	1010,	110,	1110,	11,	1101,	1010
2017-01-05 16:41:31 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-05 16:41:31 AI_Player.update()		11,	1001,	1100,	1001,	1010,	1010,	1001
2017-01-05 16:41:31 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:31 AI_Player.update()	update
2017-01-05 16:41:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:31 AI_Player.update()	update
2017-01-05 16:41:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:31 AI_Player.update()	Search took637ms
2017-01-05 16:41:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:31 AI_Player.update()		110,	101,	111,	1110,	111,	111,	11
2017-01-05 16:41:31 AI_Player.update()		11,	101,	1001,	11,	1010,	111,	1011
2017-01-05 16:41:31 AI_Player.update()		1110,	111,	1110,	1110,	111,	110,	1011
2017-01-05 16:41:31 AI_Player.update()		101,	1010,	110,	111,	11,	1101,	1010
2017-01-05 16:41:31 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:31 AI_Player.update()		11,	1001,	1100,	1001,	1010,	1010,	1001
2017-01-05 16:41:31 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-05 16:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:31 AI_Player.update()	update
2017-01-05 16:41:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:31 AI_Player.update()	update
2017-01-05 16:41:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:32 AI_Player.update()	Search took452ms
2017-01-05 16:41:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()		110,	101,	111,	1110,	111,	111,	11
2017-01-05 16:41:32 AI_Player.update()		11,	111,	1001,	11,	1010,	111,	1011
2017-01-05 16:41:32 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-05 16:41:32 AI_Player.update()		101,	101,	110,	111,	11,	1101,	1010
2017-01-05 16:41:32 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:32 AI_Player.update()		11,	1001,	1100,	1001,	1010,	1010,	1001
2017-01-05 16:41:32 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 16:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()	update
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()	update
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:32 AI_Player.update()	Search took83ms
2017-01-05 16:41:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()		110,	101,	111,	1110,	111,	111,	11
2017-01-05 16:41:32 AI_Player.update()		11,	111,	1001,	11,	1010,	111,	1011
2017-01-05 16:41:32 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-05 16:41:32 AI_Player.update()		101,	110,	111,	11,	1101,	1010,	101
2017-01-05 16:41:32 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:32 AI_Player.update()		11,	1001,	1100,	1001,	1010,	1010,	1001
2017-01-05 16:41:32 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 16:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()	update
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()	update
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:32 AI_Player.update()	Search took309ms
2017-01-05 16:41:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()		110,	101,	111,	1110,	111,	111,	11
2017-01-05 16:41:32 AI_Player.update()		1011,	11,	111,	1001,	11,	1010,	111
2017-01-05 16:41:32 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-05 16:41:32 AI_Player.update()		101,	110,	111,	11,	1101,	1010,	101
2017-01-05 16:41:32 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:32 AI_Player.update()		11,	1001,	1100,	1001,	1010,	1010,	1001
2017-01-05 16:41:32 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 16:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()	update
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()	update
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:32 AI_Player.update()	Search took195ms
2017-01-05 16:41:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()		110,	101,	111,	1110,	111,	111,	11
2017-01-05 16:41:32 AI_Player.update()		1011,	11,	111,	1001,	11,	1010,	111
2017-01-05 16:41:32 AI_Player.update()		1110,	1010,	1110,	1110,	111,	110,	1011
2017-01-05 16:41:32 AI_Player.update()		110,	111,	11,	1101,	1010,	101,	101
2017-01-05 16:41:32 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:32 AI_Player.update()		11,	1001,	1100,	1001,	1010,	1010,	1001
2017-01-05 16:41:32 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 16:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()	update
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:32 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:32 AI_Player.update()	update
2017-01-05 16:41:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:33 AI_Player.update()	Search took201ms
2017-01-05 16:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-05 16:41:33 AI_Player.update()		1011,	11,	111,	1110,	11,	1010,	111
2017-01-05 16:41:33 AI_Player.update()		1110,	1010,	1110,	1101,	111,	110,	1011
2017-01-05 16:41:33 AI_Player.update()		110,	111,	11,	1001,	1010,	101,	101
2017-01-05 16:41:33 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:33 AI_Player.update()		11,	1001,	1100,	101,	1010,	1010,	1001
2017-01-05 16:41:33 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-05 16:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()	update
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()	update
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:33 AI_Player.update()	Search took164ms
2017-01-05 16:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()		110,	11,	111,	1001,	111,	111,	11
2017-01-05 16:41:33 AI_Player.update()		1011,	1010,	111,	1110,	11,	1010,	111
2017-01-05 16:41:33 AI_Player.update()		1110,	111,	1110,	1101,	111,	110,	1011
2017-01-05 16:41:33 AI_Player.update()		110,	1001,	11,	1001,	1010,	101,	101
2017-01-05 16:41:33 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:33 AI_Player.update()		11,	101,	1100,	101,	1010,	1010,	1001
2017-01-05 16:41:33 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-05 16:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()	update
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()	update
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:33 AI_Player.update()	Search took296ms
2017-01-05 16:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()		110,	1010,	111,	1001,	111,	111,	11
2017-01-05 16:41:33 AI_Player.update()		1011,	111,	111,	1110,	11,	1010,	111
2017-01-05 16:41:33 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-05 16:41:33 AI_Player.update()		110,	1001,	11,	1001,	1010,	101,	101
2017-01-05 16:41:33 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:33 AI_Player.update()		11,	101,	1100,	101,	1010,	1010,	1001
2017-01-05 16:41:33 AI_Player.update()		1100,	11,	1101,	1110,	1101,	110,	1001
2017-01-05 16:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()	update
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:33 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:41:33 AI_Player.update()	Player a has won!
2017-01-05 16:41:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:33 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:33 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()	update
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:33 AI_Player.update()	Search took38ms
2017-01-05 16:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()		110,	1001,	111,	1101,	111,	1110,	11
2017-01-05 16:41:33 AI_Player.update()		1010,	1010,	11,	101,	101,	1101,	110
2017-01-05 16:41:33 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:41:33 AI_Player.update()		1011,	1100,	1011,	101,	1100,	110,	1110
2017-01-05 16:41:33 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:41:33 AI_Player.update()		101,	1001,	1011,	101,	1100,	110,	1010
2017-01-05 16:41:33 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-05 16:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()	update
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()	update
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:33 AI_Player.update()	Search took200ms
2017-01-05 16:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()		110,	1001,	111,	1101,	111,	1110,	11
2017-01-05 16:41:33 AI_Player.update()		1010,	11,	101,	101,	1101,	110,	1010
2017-01-05 16:41:33 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:41:33 AI_Player.update()		1011,	1100,	1011,	101,	1100,	110,	1110
2017-01-05 16:41:33 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:41:33 AI_Player.update()		101,	1001,	1011,	101,	1100,	110,	1010
2017-01-05 16:41:33 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-05 16:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()	update
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:33 AI_Player.update()	update
2017-01-05 16:41:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:34 AI_Player.update()	Search took246ms
2017-01-05 16:41:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()		110,	1001,	111,	1101,	111,	1110,	11
2017-01-05 16:41:34 AI_Player.update()		1010,	11,	101,	101,	1101,	110,	1010
2017-01-05 16:41:34 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:41:34 AI_Player.update()		1011,	1100,	1011,	101,	1100,	110,	1110
2017-01-05 16:41:34 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:41:34 AI_Player.update()		1001,	1011,	101,	1100,	110,	1010,	101
2017-01-05 16:41:34 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-05 16:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()	update
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()	update
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:34 AI_Player.update()	Search took184ms
2017-01-05 16:41:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()		110,	1001,	111,	1101,	111,	1110,	11
2017-01-05 16:41:34 AI_Player.update()		1010,	1010,	11,	101,	101,	1101,	110
2017-01-05 16:41:34 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:41:34 AI_Player.update()		1011,	1100,	1011,	101,	1100,	110,	1110
2017-01-05 16:41:34 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:41:34 AI_Player.update()		1001,	1011,	101,	1100,	110,	1010,	101
2017-01-05 16:41:34 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-05 16:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()	update
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()	update
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:34 AI_Player.update()	Search took189ms
2017-01-05 16:41:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-05 16:41:34 AI_Player.update()		1010,	1010,	11,	101,	101,	1110,	110
2017-01-05 16:41:34 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:34 AI_Player.update()		1011,	1100,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:34 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:34 AI_Player.update()		1001,	1011,	101,	1100,	110,	1010,	101
2017-01-05 16:41:34 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-05 16:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()	update
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()	update
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:34 AI_Player.update()	Search took276ms
2017-01-05 16:41:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()		110,	1010,	111,	1101,	111,	110,	11
2017-01-05 16:41:34 AI_Player.update()		1010,	1001,	11,	101,	101,	1110,	110
2017-01-05 16:41:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:34 AI_Player.update()		1011,	1110,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:34 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:34 AI_Player.update()		1001,	110,	101,	1100,	110,	1010,	101
2017-01-05 16:41:34 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-05 16:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()	update
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:34 AI_Player.update()	update
2017-01-05 16:41:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:35 AI_Player.update()	Search took815ms
2017-01-05 16:41:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:35 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-05 16:41:35 AI_Player.update()		1010,	1010,	11,	101,	101,	1110,	110
2017-01-05 16:41:35 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:35 AI_Player.update()		1011,	1100,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:35 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:35 AI_Player.update()		1001,	1011,	101,	1100,	110,	1010,	101
2017-01-05 16:41:35 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-05 16:41:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:35 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:35 AI_Player.update()	update
2017-01-05 16:41:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:35 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:35 AI_Player.update()	update
2017-01-05 16:41:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:36 AI_Player.update()	Search took659ms
2017-01-05 16:41:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-05 16:41:36 AI_Player.update()		1010,	1010,	11,	101,	101,	1110,	110
2017-01-05 16:41:36 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:36 AI_Player.update()		1011,	1100,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:36 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:36 AI_Player.update()		1011,	101,	1100,	110,	1010,	101,	1001
2017-01-05 16:41:36 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-05 16:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()	update
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()	update
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:36 AI_Player.update()	Search took441ms
2017-01-05 16:41:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()		110,	110,	111,	1101,	111,	110,	11
2017-01-05 16:41:36 AI_Player.update()		1010,	1001,	11,	101,	101,	1110,	110
2017-01-05 16:41:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:36 AI_Player.update()		1011,	1001,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:36 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:36 AI_Player.update()		1011,	1110,	1100,	110,	1010,	101,	1001
2017-01-05 16:41:36 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 16:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()	update
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()	update
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:36 AI_Player.update()	Search took199ms
2017-01-05 16:41:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-05 16:41:36 AI_Player.update()		1010,	1010,	11,	101,	101,	1110,	110
2017-01-05 16:41:36 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:36 AI_Player.update()		1011,	1100,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:36 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:36 AI_Player.update()		1011,	101,	1100,	110,	1010,	101,	1001
2017-01-05 16:41:36 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-05 16:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()	update
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()	update
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:36 AI_Player.update()	Search took75ms
2017-01-05 16:41:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()		110,	110,	111,	1101,	111,	110,	11
2017-01-05 16:41:36 AI_Player.update()		1010,	1001,	11,	101,	101,	1110,	110
2017-01-05 16:41:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:36 AI_Player.update()		1011,	1001,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:36 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 16:41:36 AI_Player.update()		1011,	1110,	1100,	110,	1010,	101,	1001
2017-01-05 16:41:36 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 16:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()	update
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:36 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:36 AI_Player.update()	update
2017-01-05 16:41:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:37 AI_Player.update()	Search took198ms
2017-01-05 16:41:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:37 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-05 16:41:37 AI_Player.update()		1010,	1001,	11,	1101,	101,	1110,	110
2017-01-05 16:41:37 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:37 AI_Player.update()		1011,	1001,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:37 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:37 AI_Player.update()		1011,	1110,	1100,	1010,	1010,	101,	1001
2017-01-05 16:41:37 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-05 16:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:37 AI_Player.update()	update
2017-01-05 16:41:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:41:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:37 AI_Player.update()	update
2017-01-05 16:41:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:37 AI_Player.update()	Search took372ms
2017-01-05 16:41:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:37 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 16:41:37 AI_Player.update()		1010,	110,	11,	1101,	101,	1110,	110
2017-01-05 16:41:37 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:37 AI_Player.update()		1011,	1010,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:37 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:37 AI_Player.update()		1011,	1100,	1100,	1010,	1010,	101,	1001
2017-01-05 16:41:37 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1010,	1001
2017-01-05 16:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:37 AI_Player.update()	update
2017-01-05 16:41:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:37 AI_Player.update()	update
2017-01-05 16:41:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:39 AI_Player.update()	Search took1605ms
2017-01-05 16:41:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:39 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-05 16:41:39 AI_Player.update()		1010,	110,	11,	11,	101,	1110,	110
2017-01-05 16:41:39 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1101,	1011
2017-01-05 16:41:39 AI_Player.update()		1011,	1010,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:39 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:39 AI_Player.update()		1011,	1100,	1100,	101,	1010,	101,	1001
2017-01-05 16:41:39 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:39 AI_Player.update()	update
2017-01-05 16:41:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:41:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:39 AI_Player.update()	update
2017-01-05 16:41:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:40 AI_Player.update()	Search took1439ms
2017-01-05 16:41:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:40 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-05 16:41:40 AI_Player.update()		1010,	110,	11,	11,	101,	1110,	110
2017-01-05 16:41:40 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1101,	1011
2017-01-05 16:41:40 AI_Player.update()		1011,	1010,	1011,	101,	1100,	11,	1110
2017-01-05 16:41:40 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:40 AI_Player.update()		1100,	1100,	101,	1010,	101,	1001,	1011
2017-01-05 16:41:40 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:41:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:40 AI_Player.update()	update
2017-01-05 16:41:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:40 AI_Player.update()	update
2017-01-05 16:41:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:41 AI_Player.update()	Search took996ms
2017-01-05 16:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-05 16:41:41 AI_Player.update()		1010,	110,	11,	11,	101,	1110,	110
2017-01-05 16:41:41 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1101,	1011
2017-01-05 16:41:41 AI_Player.update()		1110,	1011,	1010,	1011,	101,	1100,	11
2017-01-05 16:41:41 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:41 AI_Player.update()		1100,	1100,	101,	1010,	101,	1001,	1011
2017-01-05 16:41:41 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:41:41 AI_Player.update()	Player b has won!
2017-01-05 16:41:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:41 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:41 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:41 AI_Player.update()	Search took31ms
2017-01-05 16:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 16:41:41 AI_Player.update()		11,	1001,	101,	110,	1100,	1001,	1110
2017-01-05 16:41:41 AI_Player.update()		1110,	11,	1110,	11,	111,	110,	1011
2017-01-05 16:41:41 AI_Player.update()		1001,	1001,	1010,	1100,	110,	1010,	1010
2017-01-05 16:41:41 AI_Player.update()		1110,	1100,	1101,	110,	1011,	11,	1011
2017-01-05 16:41:41 AI_Player.update()		110,	1100,	110,	101,	101,	110,	1010
2017-01-05 16:41:41 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:41 AI_Player.update()	Search took146ms
2017-01-05 16:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 16:41:41 AI_Player.update()		1110,	11,	1001,	101,	110,	1100,	1001
2017-01-05 16:41:41 AI_Player.update()		1110,	11,	1110,	11,	111,	110,	1011
2017-01-05 16:41:41 AI_Player.update()		1001,	1001,	1010,	1100,	110,	1010,	1010
2017-01-05 16:41:41 AI_Player.update()		1110,	1100,	1101,	110,	1011,	11,	1011
2017-01-05 16:41:41 AI_Player.update()		110,	1100,	110,	101,	101,	110,	1010
2017-01-05 16:41:41 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:41 AI_Player.update()	Search took30ms
2017-01-05 16:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 16:41:41 AI_Player.update()		1110,	11,	1001,	101,	110,	1100,	1001
2017-01-05 16:41:41 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 16:41:41 AI_Player.update()		1001,	1100,	1010,	1100,	110,	1010,	1010
2017-01-05 16:41:41 AI_Player.update()		1110,	1100,	1101,	110,	1011,	11,	1011
2017-01-05 16:41:41 AI_Player.update()		110,	1001,	110,	101,	101,	110,	1010
2017-01-05 16:41:41 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:41 AI_Player.update()	Search took69ms
2017-01-05 16:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 16:41:41 AI_Player.update()		11,	1001,	101,	110,	1100,	1001,	1110
2017-01-05 16:41:41 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 16:41:41 AI_Player.update()		1001,	1100,	1010,	1100,	110,	1010,	1010
2017-01-05 16:41:41 AI_Player.update()		1110,	1100,	1101,	110,	1011,	11,	1011
2017-01-05 16:41:41 AI_Player.update()		110,	1001,	110,	101,	101,	110,	1010
2017-01-05 16:41:41 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:41 AI_Player.update()	Search took57ms
2017-01-05 16:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 16:41:41 AI_Player.update()		11,	1001,	101,	11,	1100,	1001,	1110
2017-01-05 16:41:41 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 16:41:41 AI_Player.update()		1001,	1100,	1010,	110,	110,	1010,	1010
2017-01-05 16:41:41 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 16:41:41 AI_Player.update()		110,	1001,	110,	1100,	101,	110,	1010
2017-01-05 16:41:41 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:41 AI_Player.update()	Search took51ms
2017-01-05 16:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 16:41:41 AI_Player.update()		11,	1001,	101,	11,	1100,	1001,	1110
2017-01-05 16:41:41 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 16:41:41 AI_Player.update()		1001,	1100,	1010,	110,	110,	1010,	1010
2017-01-05 16:41:41 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 16:41:41 AI_Player.update()		1001,	110,	1100,	101,	110,	1010,	110
2017-01-05 16:41:41 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:41 AI_Player.update()	update
2017-01-05 16:41:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:42 AI_Player.update()	Search took82ms
2017-01-05 16:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 16:41:42 AI_Player.update()		1001,	101,	11,	1100,	1001,	1110,	11
2017-01-05 16:41:42 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	1100,	1010,	110,	110,	1010,	1010
2017-01-05 16:41:42 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	110,	1100,	101,	110,	1010,	110
2017-01-05 16:41:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:42 AI_Player.update()	Search took166ms
2017-01-05 16:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()		110,	11,	111,	110,	111,	1110,	11
2017-01-05 16:41:42 AI_Player.update()		1001,	101,	11,	1100,	1001,	110,	11
2017-01-05 16:41:42 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	1100,	1010,	110,	110,	11,	1010
2017-01-05 16:41:42 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	110,	1100,	101,	110,	1010,	110
2017-01-05 16:41:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:42 AI_Player.update()	Search took86ms
2017-01-05 16:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-05 16:41:42 AI_Player.update()		1001,	101,	11,	110,	1001,	110,	11
2017-01-05 16:41:42 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	1100,	1010,	1100,	110,	11,	1010
2017-01-05 16:41:42 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	110,	1100,	101,	110,	1010,	110
2017-01-05 16:41:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:42 AI_Player.update()	Search took84ms
2017-01-05 16:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()		110,	11,	111,	110,	111,	1110,	11
2017-01-05 16:41:42 AI_Player.update()		1001,	101,	11,	1100,	1001,	110,	11
2017-01-05 16:41:42 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	1100,	1010,	110,	110,	11,	1010
2017-01-05 16:41:42 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	110,	1100,	101,	110,	1010,	110
2017-01-05 16:41:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:42 AI_Player.update()	Search took45ms
2017-01-05 16:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 16:41:42 AI_Player.update()		1001,	101,	11,	1100,	1001,	1010,	11
2017-01-05 16:41:42 AI_Player.update()		1110,	1001,	1110,	1100,	111,	11,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	1100,	1010,	110,	110,	1010,	1010
2017-01-05 16:41:42 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	110,	1100,	101,	110,	1010,	110
2017-01-05 16:41:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	1110,	1001
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:42 AI_Player.update()	Search took210ms
2017-01-05 16:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 16:41:42 AI_Player.update()		1001,	101,	11,	110,	1001,	1010,	11
2017-01-05 16:41:42 AI_Player.update()		1110,	1001,	1110,	1100,	111,	11,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	1100,	1010,	1100,	110,	1010,	1010
2017-01-05 16:41:42 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	110,	1100,	101,	110,	1010,	110
2017-01-05 16:41:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	1110,	1001
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:42 AI_Player.update()	Search took236ms
2017-01-05 16:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 16:41:42 AI_Player.update()		1001,	101,	11,	110,	1001,	1010,	11
2017-01-05 16:41:42 AI_Player.update()		1110,	1001,	1110,	1100,	111,	11,	1011
2017-01-05 16:41:42 AI_Player.update()		1010,	1001,	1100,	1010,	1100,	110,	1010
2017-01-05 16:41:42 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 16:41:42 AI_Player.update()		1001,	110,	1100,	101,	110,	1010,	110
2017-01-05 16:41:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	1110,	1001
2017-01-05 16:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:42 AI_Player.update()	update
2017-01-05 16:41:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:43 AI_Player.update()	Search took149ms
2017-01-05 16:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 16:41:43 AI_Player.update()		1001,	101,	11,	1100,	1001,	1010,	11
2017-01-05 16:41:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-05 16:41:43 AI_Player.update()		1010,	1001,	1100,	110,	1100,	110,	1010
2017-01-05 16:41:43 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:41:43 AI_Player.update()		1001,	110,	1100,	101,	110,	1010,	110
2017-01-05 16:41:43 AI_Player.update()		1100,	11,	1101,	101,	1101,	1110,	1001
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:43 AI_Player.update()	Search took113ms
2017-01-05 16:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 16:41:43 AI_Player.update()		1001,	101,	11,	1100,	1001,	11,	11
2017-01-05 16:41:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:41:43 AI_Player.update()		1010,	1001,	1100,	110,	1100,	1010,	1010
2017-01-05 16:41:43 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:41:43 AI_Player.update()		1001,	110,	1100,	101,	110,	1110,	110
2017-01-05 16:41:43 AI_Player.update()		1100,	11,	1101,	101,	1101,	110,	1001
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:43 AI_Player.update()	Search took59ms
2017-01-05 16:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 16:41:43 AI_Player.update()		1001,	101,	11,	1100,	1001,	11,	11
2017-01-05 16:41:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:41:43 AI_Player.update()		1010,	1001,	1100,	110,	1100,	1010,	1010
2017-01-05 16:41:43 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:41:43 AI_Player.update()		110,	1100,	101,	110,	1110,	110,	1001
2017-01-05 16:41:43 AI_Player.update()		1100,	11,	1101,	101,	1101,	110,	1001
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:43 AI_Player.update()	Search took207ms
2017-01-05 16:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 16:41:43 AI_Player.update()		1001,	101,	11,	1100,	1001,	11,	11
2017-01-05 16:41:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:41:43 AI_Player.update()		1001,	1100,	110,	1100,	1010,	1010,	1010
2017-01-05 16:41:43 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:41:43 AI_Player.update()		110,	1100,	101,	110,	1110,	110,	1001
2017-01-05 16:41:43 AI_Player.update()		1100,	11,	1101,	101,	1101,	110,	1001
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:43 AI_Player.update()	Search took200ms
2017-01-05 16:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 16:41:43 AI_Player.update()		1001,	101,	11,	1100,	1001,	11,	11
2017-01-05 16:41:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:41:43 AI_Player.update()		1100,	110,	1100,	1010,	1010,	1010,	1001
2017-01-05 16:41:43 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:41:43 AI_Player.update()		110,	1100,	101,	110,	1110,	110,	1001
2017-01-05 16:41:43 AI_Player.update()		1100,	11,	1101,	101,	1101,	110,	1001
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:43 AI_Player.update()	Search took244ms
2017-01-05 16:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 16:41:43 AI_Player.update()		1001,	101,	11,	110,	1001,	11,	11
2017-01-05 16:41:43 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 16:41:43 AI_Player.update()		1100,	110,	1100,	1010,	1010,	1010,	1001
2017-01-05 16:41:43 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:41:43 AI_Player.update()		110,	1100,	101,	101,	1110,	110,	1001
2017-01-05 16:41:43 AI_Player.update()		1100,	11,	1101,	110,	1101,	110,	1001
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:43 AI_Player.update()	Search took55ms
2017-01-05 16:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 16:41:43 AI_Player.update()		1001,	101,	11,	110,	1001,	11,	11
2017-01-05 16:41:43 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 16:41:43 AI_Player.update()		110,	1100,	1010,	1010,	1010,	1001,	1100
2017-01-05 16:41:43 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:41:43 AI_Player.update()		110,	1100,	101,	101,	1110,	110,	1001
2017-01-05 16:41:43 AI_Player.update()		1100,	11,	1101,	110,	1101,	110,	1001
2017-01-05 16:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:43 AI_Player.update()	update
2017-01-05 16:41:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:44 AI_Player.update()	Search took193ms
2017-01-05 16:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 16:41:44 AI_Player.update()		1001,	1001,	11,	110,	1001,	11,	11
2017-01-05 16:41:44 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-05 16:41:44 AI_Player.update()		110,	1100,	1010,	1010,	1010,	1001,	1100
2017-01-05 16:41:44 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:41:44 AI_Player.update()		110,	11,	101,	101,	1110,	110,	1001
2017-01-05 16:41:44 AI_Player.update()		1100,	11,	1101,	110,	1101,	110,	1001
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:41:44 AI_Player.update()	Player a has won!
2017-01-05 16:41:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:44 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:44 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:44 AI_Player.update()	Search took46ms
2017-01-05 16:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-05 16:41:44 AI_Player.update()		110,	1001,	11,	101,	101,	101,	1010
2017-01-05 16:41:44 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-05 16:41:44 AI_Player.update()		11,	11,	101,	101,	110,	1001,	1010
2017-01-05 16:41:44 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:44 AI_Player.update()		1001,	110,	111,	1001,	1100,	11,	101
2017-01-05 16:41:44 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:44 AI_Player.update()	Search took107ms
2017-01-05 16:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 16:41:44 AI_Player.update()		110,	1001,	11,	101,	101,	11,	1010
2017-01-05 16:41:44 AI_Player.update()		1110,	11,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:44 AI_Player.update()		11,	11,	101,	101,	110,	1001,	1010
2017-01-05 16:41:44 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:44 AI_Player.update()		1001,	110,	111,	1001,	1100,	110,	101
2017-01-05 16:41:44 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	11,	1001
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:44 AI_Player.update()	Search took64ms
2017-01-05 16:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 16:41:44 AI_Player.update()		110,	1001,	11,	101,	101,	11,	1010
2017-01-05 16:41:44 AI_Player.update()		1110,	11,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:44 AI_Player.update()		1010,	11,	11,	101,	101,	110,	1001
2017-01-05 16:41:44 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:44 AI_Player.update()		1001,	110,	111,	1001,	1100,	110,	101
2017-01-05 16:41:44 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	11,	1001
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:44 AI_Player.update()	Search took216ms
2017-01-05 16:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-05 16:41:44 AI_Player.update()		110,	1001,	11,	101,	101,	11,	1010
2017-01-05 16:41:44 AI_Player.update()		1110,	11,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:44 AI_Player.update()		11,	11,	101,	101,	110,	1001,	1010
2017-01-05 16:41:44 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:44 AI_Player.update()		1001,	110,	111,	1001,	1100,	110,	101
2017-01-05 16:41:44 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	11,	1001
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:44 AI_Player.update()	Search took59ms
2017-01-05 16:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 16:41:44 AI_Player.update()		110,	11,	11,	101,	101,	11,	1010
2017-01-05 16:41:44 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:44 AI_Player.update()		11,	11,	101,	101,	110,	1001,	1010
2017-01-05 16:41:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:44 AI_Player.update()		1001,	1100,	111,	1001,	1100,	110,	101
2017-01-05 16:41:44 AI_Player.update()		1100,	110,	1101,	1011,	1101,	11,	1001
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:44 AI_Player.update()	Search took257ms
2017-01-05 16:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 16:41:44 AI_Player.update()		110,	11,	11,	101,	101,	11,	1010
2017-01-05 16:41:44 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:44 AI_Player.update()		1010,	11,	11,	101,	101,	110,	1001
2017-01-05 16:41:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:44 AI_Player.update()		1001,	1100,	111,	1001,	1100,	110,	101
2017-01-05 16:41:44 AI_Player.update()		1100,	110,	1101,	1011,	1101,	11,	1001
2017-01-05 16:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:44 AI_Player.update()	update
2017-01-05 16:41:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:45 AI_Player.update()	Search took339ms
2017-01-05 16:41:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-05 16:41:45 AI_Player.update()		110,	1100,	11,	101,	101,	11,	1010
2017-01-05 16:41:45 AI_Player.update()		1110,	11,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:45 AI_Player.update()		1010,	1001,	11,	101,	101,	110,	1001
2017-01-05 16:41:45 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:45 AI_Player.update()		1001,	11,	111,	1001,	1100,	110,	101
2017-01-05 16:41:45 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	11,	1001
2017-01-05 16:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()	update
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()	update
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:45 AI_Player.update()	Search took270ms
2017-01-05 16:41:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-05 16:41:45 AI_Player.update()		110,	1100,	11,	101,	101,	1010,	1010
2017-01-05 16:41:45 AI_Player.update()		1110,	11,	1110,	1101,	111,	11,	1011
2017-01-05 16:41:45 AI_Player.update()		1010,	1001,	11,	101,	101,	101,	1001
2017-01-05 16:41:45 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:45 AI_Player.update()		1001,	11,	111,	1001,	1100,	1001,	101
2017-01-05 16:41:45 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	110,	1001
2017-01-05 16:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()	update
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()	update
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:45 AI_Player.update()	Search took220ms
2017-01-05 16:41:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-05 16:41:45 AI_Player.update()		110,	1100,	11,	1101,	101,	1010,	1010
2017-01-05 16:41:45 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-05 16:41:45 AI_Player.update()		1010,	1001,	11,	101,	101,	101,	1001
2017-01-05 16:41:45 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-05 16:41:45 AI_Player.update()		1001,	11,	111,	1011,	1100,	1001,	101
2017-01-05 16:41:45 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-05 16:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()	update
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()	update
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:45 AI_Player.update()	Search took99ms
2017-01-05 16:41:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-05 16:41:45 AI_Player.update()		110,	1100,	11,	101,	101,	1010,	1010
2017-01-05 16:41:45 AI_Player.update()		1110,	11,	1110,	1101,	111,	11,	1011
2017-01-05 16:41:45 AI_Player.update()		1010,	1001,	11,	101,	101,	101,	1001
2017-01-05 16:41:45 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:45 AI_Player.update()		1001,	11,	111,	1001,	1100,	1001,	101
2017-01-05 16:41:45 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	110,	1001
2017-01-05 16:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()	update
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:41:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:45 AI_Player.update()	update
2017-01-05 16:41:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:46 AI_Player.update()	Search took240ms
2017-01-05 16:41:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 16:41:46 AI_Player.update()		110,	11,	11,	101,	101,	1010,	1010
2017-01-05 16:41:46 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-05 16:41:46 AI_Player.update()		1010,	11,	11,	101,	101,	101,	1001
2017-01-05 16:41:46 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:46 AI_Player.update()		1001,	1100,	111,	1001,	1100,	1001,	101
2017-01-05 16:41:46 AI_Player.update()		1100,	110,	1101,	1011,	1101,	110,	1001
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:46 AI_Player.update()	Search took153ms
2017-01-05 16:41:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 16:41:46 AI_Player.update()		110,	11,	11,	101,	101,	1010,	1010
2017-01-05 16:41:46 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-05 16:41:46 AI_Player.update()		1010,	11,	11,	101,	101,	101,	1001
2017-01-05 16:41:46 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:46 AI_Player.update()		101,	1001,	1100,	111,	1001,	1100,	1001
2017-01-05 16:41:46 AI_Player.update()		1100,	110,	1101,	1011,	1101,	110,	1001
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:41:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:46 AI_Player.update()	Search took174ms
2017-01-05 16:41:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 16:41:46 AI_Player.update()		1010,	110,	11,	11,	101,	101,	1010
2017-01-05 16:41:46 AI_Player.update()		1110,	1001,	1110,	1101,	111,	11,	1011
2017-01-05 16:41:46 AI_Player.update()		1010,	11,	11,	101,	101,	101,	1001
2017-01-05 16:41:46 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:46 AI_Player.update()		101,	1001,	1100,	111,	1001,	1100,	1001
2017-01-05 16:41:46 AI_Player.update()		1100,	110,	1101,	1011,	1101,	110,	1001
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:46 AI_Player.update()	Search took224ms
2017-01-05 16:41:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()		110,	1100,	111,	1011,	111,	11,	11
2017-01-05 16:41:46 AI_Player.update()		1010,	110,	11,	101,	101,	101,	1010
2017-01-05 16:41:46 AI_Player.update()		1110,	1001,	1110,	11,	111,	11,	1011
2017-01-05 16:41:46 AI_Player.update()		1010,	11,	11,	1101,	101,	101,	1001
2017-01-05 16:41:46 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:46 AI_Player.update()		101,	1001,	1100,	101,	1001,	1100,	1001
2017-01-05 16:41:46 AI_Player.update()		1100,	110,	1101,	111,	1101,	110,	1001
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:46 AI_Player.update()	Search took165ms
2017-01-05 16:41:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()		110,	1100,	111,	1011,	111,	101,	11
2017-01-05 16:41:46 AI_Player.update()		1010,	110,	11,	101,	101,	11,	1010
2017-01-05 16:41:46 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:41:46 AI_Player.update()		1010,	11,	11,	1101,	101,	110,	1001
2017-01-05 16:41:46 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:41:46 AI_Player.update()		101,	1001,	1100,	101,	1001,	110,	1001
2017-01-05 16:41:46 AI_Player.update()		1100,	110,	1101,	111,	1101,	11,	1001
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:46 AI_Player.update()	Search took112ms
2017-01-05 16:41:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()		110,	1100,	111,	1011,	111,	11,	11
2017-01-05 16:41:46 AI_Player.update()		1010,	110,	11,	101,	101,	101,	1010
2017-01-05 16:41:46 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 16:41:46 AI_Player.update()		1010,	11,	11,	1101,	101,	1100,	1001
2017-01-05 16:41:46 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:46 AI_Player.update()		101,	1001,	1100,	101,	1001,	11,	1001
2017-01-05 16:41:46 AI_Player.update()		1100,	110,	1101,	111,	1101,	101,	1001
2017-01-05 16:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:46 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:46 AI_Player.update()	update
2017-01-05 16:41:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:47 AI_Player.update()	Search took80ms
2017-01-05 16:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 16:41:47 AI_Player.update()		1010,	110,	11,	11,	101,	101,	1010
2017-01-05 16:41:47 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-05 16:41:47 AI_Player.update()		1010,	11,	11,	101,	101,	1100,	1001
2017-01-05 16:41:47 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:41:47 AI_Player.update()		101,	1001,	1100,	111,	1001,	11,	1001
2017-01-05 16:41:47 AI_Player.update()		1100,	110,	1101,	1011,	1101,	101,	1001
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:47 AI_Player.update()	Search took170ms
2017-01-05 16:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:41:47 AI_Player.update()		1010,	110,	11,	11,	101,	11,	1010
2017-01-05 16:41:47 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:47 AI_Player.update()		1010,	11,	11,	101,	101,	110,	1001
2017-01-05 16:41:47 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:41:47 AI_Player.update()		101,	1001,	1100,	111,	1001,	110,	1001
2017-01-05 16:41:47 AI_Player.update()		1100,	110,	1101,	1011,	1101,	11,	1001
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:41:47 AI_Player.update()	Player b has won!
2017-01-05 16:41:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:47 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:47 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:47 AI_Player.update()	Search took20ms
2017-01-05 16:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()		110,	11,	111,	1010,	111,	111,	11
2017-01-05 16:41:47 AI_Player.update()		1001,	1110,	1010,	1110,	1100,	1001,	1010
2017-01-05 16:41:47 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-05 16:41:47 AI_Player.update()		1001,	110,	1010,	101,	1001,	1110,	101
2017-01-05 16:41:47 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:41:47 AI_Player.update()		11,	101,	1010,	1101,	1011,	1100,	11
2017-01-05 16:41:47 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:47 AI_Player.update()	Search took293ms
2017-01-05 16:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-05 16:41:47 AI_Player.update()		1001,	1110,	1010,	1110,	1100,	1100,	1010
2017-01-05 16:41:47 AI_Player.update()		1110,	110,	1110,	11,	111,	1110,	1011
2017-01-05 16:41:47 AI_Player.update()		1001,	110,	1010,	101,	1001,	1010,	101
2017-01-05 16:41:47 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-05 16:41:47 AI_Player.update()		11,	101,	1010,	1101,	1011,	101,	11
2017-01-05 16:41:47 AI_Player.update()		1100,	1001,	1101,	11,	1101,	111,	1001
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:47 AI_Player.update()	Search took136ms
2017-01-05 16:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()		110,	1110,	111,	1010,	111,	1001,	11
2017-01-05 16:41:47 AI_Player.update()		1001,	110,	1010,	1110,	1100,	1100,	1010
2017-01-05 16:41:47 AI_Player.update()		1110,	110,	1110,	11,	111,	1110,	1011
2017-01-05 16:41:47 AI_Player.update()		1001,	1100,	1010,	101,	1001,	1010,	101
2017-01-05 16:41:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:41:47 AI_Player.update()		11,	1001,	1010,	1101,	1011,	101,	11
2017-01-05 16:41:47 AI_Player.update()		1100,	11,	1101,	11,	1101,	111,	1001
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:47 AI_Player.update()	Search took136ms
2017-01-05 16:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()		110,	1110,	111,	1110,	111,	1001,	11
2017-01-05 16:41:47 AI_Player.update()		1001,	110,	1010,	11,	1100,	1100,	1010
2017-01-05 16:41:47 AI_Player.update()		1110,	110,	1110,	101,	111,	1110,	1011
2017-01-05 16:41:47 AI_Player.update()		1001,	1100,	1010,	101,	1001,	1010,	101
2017-01-05 16:41:47 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:47 AI_Player.update()		11,	1001,	1010,	11,	1011,	101,	11
2017-01-05 16:41:47 AI_Player.update()		1100,	11,	1101,	1010,	1101,	111,	1001
2017-01-05 16:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:47 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:47 AI_Player.update()	update
2017-01-05 16:41:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:48 AI_Player.update()	Search took522ms
2017-01-05 16:41:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:48 AI_Player.update()		110,	110,	111,	1110,	111,	1001,	11
2017-01-05 16:41:48 AI_Player.update()		1001,	110,	1010,	11,	1100,	1100,	1010
2017-01-05 16:41:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	1110,	1011
2017-01-05 16:41:48 AI_Player.update()		1001,	101,	1010,	101,	1001,	1010,	101
2017-01-05 16:41:48 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:48 AI_Player.update()		11,	11,	1010,	11,	1011,	101,	11
2017-01-05 16:41:48 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	111,	1001
2017-01-05 16:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:48 AI_Player.update()	update
2017-01-05 16:41:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:48 AI_Player.update()	update
2017-01-05 16:41:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:48 AI_Player.update()	Search took183ms
2017-01-05 16:41:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:48 AI_Player.update()		110,	110,	111,	1110,	111,	1001,	11
2017-01-05 16:41:48 AI_Player.update()		1001,	110,	1010,	11,	1100,	1100,	1010
2017-01-05 16:41:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	1110,	1011
2017-01-05 16:41:48 AI_Player.update()		101,	1001,	101,	1010,	101,	1001,	1010
2017-01-05 16:41:48 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:41:48 AI_Player.update()		11,	11,	1010,	11,	1011,	101,	11
2017-01-05 16:41:48 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	111,	1001
2017-01-05 16:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:48 AI_Player.update()	update
2017-01-05 16:41:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:48 AI_Player.update()	update
2017-01-05 16:41:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:48 AI_Player.update()	Search took295ms
2017-01-05 16:41:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:48 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-05 16:41:48 AI_Player.update()		1001,	110,	1010,	101,	1100,	1100,	1010
2017-01-05 16:41:48 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1110,	1011
2017-01-05 16:41:48 AI_Player.update()		101,	1001,	101,	1101,	101,	1001,	1010
2017-01-05 16:41:48 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-05 16:41:48 AI_Player.update()		11,	11,	1010,	1010,	1011,	101,	11
2017-01-05 16:41:48 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	111,	1001
2017-01-05 16:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:48 AI_Player.update()	update
2017-01-05 16:41:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:48 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:48 AI_Player.update()	update
2017-01-05 16:41:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:49 AI_Player.update()	Search took232ms
2017-01-05 16:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-05 16:41:49 AI_Player.update()		1001,	110,	1010,	101,	1100,	1100,	1010
2017-01-05 16:41:49 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1110,	1011
2017-01-05 16:41:49 AI_Player.update()		1010,	101,	1001,	101,	1101,	101,	1001
2017-01-05 16:41:49 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-05 16:41:49 AI_Player.update()		11,	11,	1010,	1010,	1011,	101,	11
2017-01-05 16:41:49 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	111,	1001
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:49 AI_Player.update()	Search took243ms
2017-01-05 16:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 16:41:49 AI_Player.update()		1001,	110,	1010,	101,	1100,	1110,	1010
2017-01-05 16:41:49 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:49 AI_Player.update()		1010,	101,	1001,	101,	1101,	1100,	1001
2017-01-05 16:41:49 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-05 16:41:49 AI_Player.update()		11,	11,	1010,	1010,	1011,	111,	11
2017-01-05 16:41:49 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:49 AI_Player.update()	Search took83ms
2017-01-05 16:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 16:41:49 AI_Player.update()		1001,	1100,	1010,	101,	1100,	1110,	1010
2017-01-05 16:41:49 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:49 AI_Player.update()		1010,	1001,	1001,	101,	1101,	1100,	1001
2017-01-05 16:41:49 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-05 16:41:49 AI_Player.update()		11,	1110,	1010,	1010,	1011,	111,	11
2017-01-05 16:41:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:49 AI_Player.update()	Search took50ms
2017-01-05 16:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()		110,	110,	111,	11,	111,	1110,	11
2017-01-05 16:41:49 AI_Player.update()		1001,	1100,	1010,	101,	1100,	101,	1010
2017-01-05 16:41:49 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:41:49 AI_Player.update()		1010,	1001,	1001,	101,	1101,	101,	1001
2017-01-05 16:41:49 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-05 16:41:49 AI_Player.update()		11,	1110,	1010,	1010,	1011,	1001,	11
2017-01-05 16:41:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1100,	1001
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:49 AI_Player.update()	Search took83ms
2017-01-05 16:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()		110,	110,	111,	11,	111,	1110,	11
2017-01-05 16:41:49 AI_Player.update()		1001,	1100,	1010,	101,	1100,	101,	1010
2017-01-05 16:41:49 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:41:49 AI_Player.update()		1010,	1001,	1001,	101,	1101,	101,	1001
2017-01-05 16:41:49 AI_Player.update()		1110,	11,	1101,	11,	1011,	111,	1011
2017-01-05 16:41:49 AI_Player.update()		11,	11,	1110,	1010,	1010,	1011,	1001
2017-01-05 16:41:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1100,	1001
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:49 AI_Player.update()	Search took184ms
2017-01-05 16:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-05 16:41:49 AI_Player.update()		1001,	1100,	1010,	101,	1100,	1100,	1010
2017-01-05 16:41:49 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:49 AI_Player.update()		1010,	1001,	1001,	101,	1101,	111,	1001
2017-01-05 16:41:49 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 16:41:49 AI_Player.update()		11,	11,	1110,	1010,	1010,	1100,	1001
2017-01-05 16:41:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:49 AI_Player.update()	Search took37ms
2017-01-05 16:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-05 16:41:49 AI_Player.update()		1001,	101,	1010,	101,	1100,	1100,	1010
2017-01-05 16:41:49 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:49 AI_Player.update()		1010,	11,	1001,	101,	1101,	111,	1001
2017-01-05 16:41:49 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 16:41:49 AI_Player.update()		11,	110,	1110,	1010,	1010,	1100,	1001
2017-01-05 16:41:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-05 16:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:49 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:49 AI_Player.update()	update
2017-01-05 16:41:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:50 AI_Player.update()	Search took380ms
2017-01-05 16:41:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:50 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:41:50 AI_Player.update()		1001,	1001,	1010,	101,	1100,	1100,	1010
2017-01-05 16:41:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:50 AI_Player.update()		1010,	11,	1001,	101,	1101,	111,	1001
2017-01-05 16:41:50 AI_Player.update()		1110,	110,	1101,	11,	1011,	1011,	1011
2017-01-05 16:41:50 AI_Player.update()		11,	110,	1110,	1010,	1010,	1100,	1001
2017-01-05 16:41:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1110,	1001
2017-01-05 16:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:50 AI_Player.update()	update
2017-01-05 16:41:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:50 AI_Player.update()	update
2017-01-05 16:41:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:50 AI_Player.update()	Search took89ms
2017-01-05 16:41:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:50 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:41:50 AI_Player.update()		1001,	1001,	1010,	101,	1100,	1100,	1010
2017-01-05 16:41:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:50 AI_Player.update()		1010,	11,	1001,	101,	1101,	111,	1001
2017-01-05 16:41:50 AI_Player.update()		1110,	110,	1101,	11,	1011,	1011,	1011
2017-01-05 16:41:50 AI_Player.update()		1001,	11,	110,	1110,	1010,	1010,	1100
2017-01-05 16:41:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1110,	1001
2017-01-05 16:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:50 AI_Player.update()	update
2017-01-05 16:41:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:50 AI_Player.update()	update
2017-01-05 16:41:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:50 AI_Player.update()	Search took468ms
2017-01-05 16:41:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:50 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:41:50 AI_Player.update()		1010,	1001,	1001,	1010,	101,	1100,	1100
2017-01-05 16:41:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:50 AI_Player.update()		1010,	11,	1001,	101,	1101,	111,	1001
2017-01-05 16:41:50 AI_Player.update()		1110,	110,	1101,	11,	1011,	1011,	1011
2017-01-05 16:41:50 AI_Player.update()		1001,	11,	110,	1110,	1010,	1010,	1100
2017-01-05 16:41:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1110,	1001
2017-01-05 16:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:50 AI_Player.update()	update
2017-01-05 16:41:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:50 AI_Player.update()	update
2017-01-05 16:41:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:51 AI_Player.update()	Search took251ms
2017-01-05 16:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:41:51 AI_Player.update()		1010,	1001,	1001,	1010,	101,	1100,	1100
2017-01-05 16:41:51 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:51 AI_Player.update()		11,	1001,	101,	1101,	111,	1001,	1010
2017-01-05 16:41:51 AI_Player.update()		1110,	110,	1101,	11,	1011,	1011,	1011
2017-01-05 16:41:51 AI_Player.update()		1001,	11,	110,	1110,	1010,	1010,	1100
2017-01-05 16:41:51 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1110,	1001
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:51 AI_Player.update()	Search took341ms
2017-01-05 16:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-05 16:41:51 AI_Player.update()		1010,	101,	1001,	1010,	101,	1100,	1100
2017-01-05 16:41:51 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:51 AI_Player.update()		11,	11,	101,	1101,	111,	1001,	1010
2017-01-05 16:41:51 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1011,	1011
2017-01-05 16:41:51 AI_Player.update()		1001,	110,	110,	1110,	1010,	1010,	1100
2017-01-05 16:41:51 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1110,	1001
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:41:51 AI_Player.update()	Player a has won!
2017-01-05 16:41:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:51 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:51 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:51 AI_Player.update()	Search took10ms
2017-01-05 16:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 16:41:51 AI_Player.update()		1010,	1101,	11,	101,	1100,	11,	11
2017-01-05 16:41:51 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:51 AI_Player.update()		1001,	1010,	11,	101,	1101,	1010,	1001
2017-01-05 16:41:51 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:41:51 AI_Player.update()		101,	1010,	1010,	101,	1110,	1010,	1001
2017-01-05 16:41:51 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	101,	1001
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:51 AI_Player.update()	Search took31ms
2017-01-05 16:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 16:41:51 AI_Player.update()		1101,	11,	101,	1100,	11,	11,	1010
2017-01-05 16:41:51 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:51 AI_Player.update()		1001,	1010,	11,	101,	1101,	1010,	1001
2017-01-05 16:41:51 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:41:51 AI_Player.update()		101,	1010,	1010,	101,	1110,	1010,	1001
2017-01-05 16:41:51 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	101,	1001
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:51 AI_Player.update()	Search took94ms
2017-01-05 16:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 16:41:51 AI_Player.update()		1010,	1101,	11,	101,	1100,	11,	11
2017-01-05 16:41:51 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:51 AI_Player.update()		1001,	1010,	11,	101,	1101,	1010,	1001
2017-01-05 16:41:51 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:41:51 AI_Player.update()		101,	1010,	1010,	101,	1110,	1010,	1001
2017-01-05 16:41:51 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	101,	1001
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:51 AI_Player.update()	Search took325ms
2017-01-05 16:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-05 16:41:51 AI_Player.update()		1010,	1101,	11,	101,	1100,	11,	11
2017-01-05 16:41:51 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:51 AI_Player.update()		1001,	1001,	1010,	11,	101,	1101,	1010
2017-01-05 16:41:51 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:41:51 AI_Player.update()		101,	1010,	1010,	101,	1110,	1010,	1001
2017-01-05 16:41:51 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	101,	1001
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:41:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:51 AI_Player.update()	Search took85ms
2017-01-05 16:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-05 16:41:51 AI_Player.update()		1010,	1001,	11,	101,	1100,	11,	11
2017-01-05 16:41:51 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:51 AI_Player.update()		1001,	101,	1010,	11,	101,	1101,	1010
2017-01-05 16:41:51 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:41:51 AI_Player.update()		101,	1001,	1010,	101,	1110,	1010,	1001
2017-01-05 16:41:51 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-05 16:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:51 AI_Player.update()	update
2017-01-05 16:41:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:52 AI_Player.update()	Search took76ms
2017-01-05 16:41:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-05 16:41:52 AI_Player.update()		1010,	1001,	11,	101,	1100,	11,	11
2017-01-05 16:41:52 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-05 16:41:52 AI_Player.update()		1010,	1001,	101,	1010,	11,	101,	1101
2017-01-05 16:41:52 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:41:52 AI_Player.update()		101,	1001,	1010,	101,	1110,	1010,	1001
2017-01-05 16:41:52 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-05 16:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()	update
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()	update
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:52 AI_Player.update()	Search took113ms
2017-01-05 16:41:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-05 16:41:52 AI_Player.update()		1010,	1001,	11,	1101,	1100,	11,	11
2017-01-05 16:41:52 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:52 AI_Player.update()		1010,	1001,	101,	1001,	11,	101,	1101
2017-01-05 16:41:52 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:52 AI_Player.update()		101,	1001,	1010,	1110,	1110,	1010,	1001
2017-01-05 16:41:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-05 16:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()	update
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()	update
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:52 AI_Player.update()	Search took191ms
2017-01-05 16:41:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-05 16:41:52 AI_Player.update()		1010,	1001,	11,	1101,	1100,	11,	11
2017-01-05 16:41:52 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:52 AI_Player.update()		1010,	1010,	101,	1001,	11,	101,	1101
2017-01-05 16:41:52 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:52 AI_Player.update()		101,	1100,	1010,	1110,	1110,	1010,	1001
2017-01-05 16:41:52 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-05 16:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()	update
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:41:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()	update
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:52 AI_Player.update()	Search took124ms
2017-01-05 16:41:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 16:41:52 AI_Player.update()		1010,	1001,	11,	1010,	1100,	11,	11
2017-01-05 16:41:52 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:52 AI_Player.update()		1010,	1010,	101,	101,	11,	101,	1101
2017-01-05 16:41:52 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1001,	1011
2017-01-05 16:41:52 AI_Player.update()		101,	1100,	1010,	11,	1110,	1010,	1001
2017-01-05 16:41:52 AI_Player.update()		1100,	1101,	1101,	101,	1101,	101,	1001
2017-01-05 16:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()	update
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()	update
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:52 AI_Player.update()	Search took369ms
2017-01-05 16:41:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 16:41:52 AI_Player.update()		1010,	1001,	11,	1010,	1100,	11,	11
2017-01-05 16:41:52 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:52 AI_Player.update()		1010,	1001,	101,	101,	11,	101,	1101
2017-01-05 16:41:52 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-05 16:41:52 AI_Player.update()		101,	1101,	1010,	11,	1110,	1010,	1001
2017-01-05 16:41:52 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-05 16:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()	update
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:52 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:52 AI_Player.update()	update
2017-01-05 16:41:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:53 AI_Player.update()	Search took314ms
2017-01-05 16:41:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 16:41:53 AI_Player.update()		1010,	1001,	11,	1010,	1100,	11,	11
2017-01-05 16:41:53 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 16:41:53 AI_Player.update()		1010,	1001,	101,	101,	11,	101,	1101
2017-01-05 16:41:53 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-05 16:41:53 AI_Player.update()		1001,	101,	1101,	1010,	11,	1110,	1010
2017-01-05 16:41:53 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-05 16:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()	update
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()	update
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:53 AI_Player.update()	Search took165ms
2017-01-05 16:41:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-05 16:41:53 AI_Player.update()		1010,	1001,	11,	1101,	1100,	11,	11
2017-01-05 16:41:53 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:53 AI_Player.update()		1010,	1001,	101,	1001,	11,	101,	1101
2017-01-05 16:41:53 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:53 AI_Player.update()		1001,	101,	1101,	1110,	11,	1110,	1010
2017-01-05 16:41:53 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 16:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()	update
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()	update
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:53 AI_Player.update()	Search took190ms
2017-01-05 16:41:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-05 16:41:53 AI_Player.update()		1010,	1010,	11,	1101,	1100,	11,	11
2017-01-05 16:41:53 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:53 AI_Player.update()		1010,	1100,	101,	1001,	11,	101,	1101
2017-01-05 16:41:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:53 AI_Player.update()		1001,	1001,	1101,	1110,	11,	1110,	1010
2017-01-05 16:41:53 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 16:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()	update
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()	update
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:53 AI_Player.update()	Search took285ms
2017-01-05 16:41:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-05 16:41:53 AI_Player.update()		1010,	1010,	11,	1101,	1100,	11,	11
2017-01-05 16:41:53 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:53 AI_Player.update()		1100,	101,	1001,	11,	101,	1101,	1010
2017-01-05 16:41:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:41:53 AI_Player.update()		1001,	1001,	1101,	1110,	11,	1110,	1010
2017-01-05 16:41:53 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 16:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()	update
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:53 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:53 AI_Player.update()	update
2017-01-05 16:41:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:54 AI_Player.update()	Search took380ms
2017-01-05 16:41:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 16:41:54 AI_Player.update()		1010,	1010,	11,	1101,	1100,	1010,	11
2017-01-05 16:41:54 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-05 16:41:54 AI_Player.update()		1100,	101,	1001,	11,	101,	101,	1010
2017-01-05 16:41:54 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-05 16:41:54 AI_Player.update()		1001,	1001,	1101,	1110,	11,	1001,	1010
2017-01-05 16:41:54 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1110,	1001
2017-01-05 16:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()	update
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()	update
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:54 AI_Player.update()	Search took137ms
2017-01-05 16:41:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()		110,	1001,	111,	1101,	111,	101,	11
2017-01-05 16:41:54 AI_Player.update()		1010,	1010,	11,	1010,	1100,	1010,	11
2017-01-05 16:41:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	11,	1011
2017-01-05 16:41:54 AI_Player.update()		1100,	101,	1001,	101,	101,	101,	1010
2017-01-05 16:41:54 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1101,	1011
2017-01-05 16:41:54 AI_Player.update()		1001,	1001,	1101,	1010,	11,	1001,	1010
2017-01-05 16:41:54 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1110,	1001
2017-01-05 16:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()	update
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()	update
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:54 AI_Player.update()	Search took231ms
2017-01-05 16:41:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()		110,	1001,	111,	1101,	111,	101,	11
2017-01-05 16:41:54 AI_Player.update()		1010,	11,	1010,	1100,	1010,	11,	1010
2017-01-05 16:41:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	11,	1011
2017-01-05 16:41:54 AI_Player.update()		1100,	101,	1001,	101,	101,	101,	1010
2017-01-05 16:41:54 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1101,	1011
2017-01-05 16:41:54 AI_Player.update()		1001,	1001,	1101,	1010,	11,	1001,	1010
2017-01-05 16:41:54 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1110,	1001
2017-01-05 16:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()	update
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()	update
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:54 AI_Player.update()	Search took73ms
2017-01-05 16:41:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-05 16:41:54 AI_Player.update()		1010,	11,	1010,	11,	1010,	11,	1010
2017-01-05 16:41:54 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:41:54 AI_Player.update()		1100,	101,	1001,	1110,	101,	101,	1010
2017-01-05 16:41:54 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-05 16:41:54 AI_Player.update()		1001,	1001,	1101,	101,	11,	1001,	1010
2017-01-05 16:41:54 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1110,	1001
2017-01-05 16:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()	update
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:54 AI_Player.update()	update
2017-01-05 16:41:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:55 AI_Player.update()	Search took402ms
2017-01-05 16:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 16:41:55 AI_Player.update()		1010,	1001,	1010,	11,	1010,	11,	1010
2017-01-05 16:41:55 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:41:55 AI_Player.update()		1100,	101,	1001,	1110,	101,	101,	1010
2017-01-05 16:41:55 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 16:41:55 AI_Player.update()		1001,	1001,	1101,	101,	11,	1001,	1010
2017-01-05 16:41:55 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1110,	1001
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:41:55 AI_Player.update()	Player a has won!
2017-01-05 16:41:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:55 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:55 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:55 AI_Player.update()	Search took29ms
2017-01-05 16:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-05 16:41:55 AI_Player.update()		1001,	1100,	11,	1100,	110,	1101,	1010
2017-01-05 16:41:55 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-05 16:41:55 AI_Player.update()		1100,	101,	1010,	1110,	110,	101,	1100
2017-01-05 16:41:55 AI_Player.update()		1110,	110,	1101,	111,	1011,	101,	1011
2017-01-05 16:41:55 AI_Player.update()		11,	111,	101,	101,	110,	1101,	1010
2017-01-05 16:41:55 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:55 AI_Player.update()	Search took152ms
2017-01-05 16:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-05 16:41:55 AI_Player.update()		1001,	1100,	11,	1100,	110,	1101,	1010
2017-01-05 16:41:55 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-05 16:41:55 AI_Player.update()		1100,	1100,	101,	1010,	1110,	110,	101
2017-01-05 16:41:55 AI_Player.update()		1110,	110,	1101,	111,	1011,	101,	1011
2017-01-05 16:41:55 AI_Player.update()		11,	111,	101,	101,	110,	1101,	1010
2017-01-05 16:41:55 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:55 AI_Player.update()	Search took60ms
2017-01-05 16:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 16:41:55 AI_Player.update()		1001,	1100,	11,	1100,	110,	1101,	1010
2017-01-05 16:41:55 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-05 16:41:55 AI_Player.update()		1100,	110,	101,	1010,	1110,	110,	101
2017-01-05 16:41:55 AI_Player.update()		1110,	111,	1101,	111,	1011,	101,	1011
2017-01-05 16:41:55 AI_Player.update()		11,	1010,	101,	101,	110,	1101,	1010
2017-01-05 16:41:55 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:55 AI_Player.update()	Search took115ms
2017-01-05 16:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()		110,	1100,	111,	1001,	111,	1101,	11
2017-01-05 16:41:55 AI_Player.update()		1001,	1100,	11,	1100,	110,	1010,	1010
2017-01-05 16:41:55 AI_Player.update()		1110,	1100,	1110,	1101,	111,	110,	1011
2017-01-05 16:41:55 AI_Player.update()		1100,	110,	101,	1010,	1110,	101,	101
2017-01-05 16:41:55 AI_Player.update()		1110,	111,	1101,	111,	1011,	1101,	1011
2017-01-05 16:41:55 AI_Player.update()		11,	1010,	101,	101,	110,	101,	1010
2017-01-05 16:41:55 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:55 AI_Player.update()	Search took449ms
2017-01-05 16:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()		110,	1100,	111,	1100,	111,	1101,	11
2017-01-05 16:41:55 AI_Player.update()		1001,	1100,	11,	1101,	110,	1010,	1010
2017-01-05 16:41:55 AI_Player.update()		1110,	1100,	1110,	1010,	111,	110,	1011
2017-01-05 16:41:55 AI_Player.update()		1100,	110,	101,	111,	1110,	101,	101
2017-01-05 16:41:55 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-05 16:41:55 AI_Player.update()		11,	1010,	101,	1001,	110,	101,	1010
2017-01-05 16:41:55 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:55 AI_Player.update()	update
2017-01-05 16:41:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:56 AI_Player.update()	Search took146ms
2017-01-05 16:41:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:56 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-05 16:41:56 AI_Player.update()		1001,	1100,	11,	1101,	110,	110,	1010
2017-01-05 16:41:56 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 16:41:56 AI_Player.update()		1100,	110,	101,	111,	1110,	1101,	101
2017-01-05 16:41:56 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-05 16:41:56 AI_Player.update()		11,	1010,	101,	1001,	110,	1010,	1010
2017-01-05 16:41:56 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1101,	1001
2017-01-05 16:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:56 AI_Player.update()	update
2017-01-05 16:41:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:56 AI_Player.update()	update
2017-01-05 16:41:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:56 AI_Player.update()	Search took433ms
2017-01-05 16:41:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:56 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:41:56 AI_Player.update()		1001,	1100,	11,	1010,	110,	110,	1010
2017-01-05 16:41:56 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 16:41:56 AI_Player.update()		1100,	110,	101,	101,	1110,	1101,	101
2017-01-05 16:41:56 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:56 AI_Player.update()		11,	1010,	101,	1001,	110,	1010,	1010
2017-01-05 16:41:56 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:56 AI_Player.update()	update
2017-01-05 16:41:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:56 AI_Player.update()	update
2017-01-05 16:41:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:56 AI_Player.update()	Search took248ms
2017-01-05 16:41:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:56 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:41:56 AI_Player.update()		1001,	1100,	11,	1010,	110,	110,	1010
2017-01-05 16:41:56 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 16:41:56 AI_Player.update()		1100,	110,	101,	101,	1110,	1101,	101
2017-01-05 16:41:56 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:56 AI_Player.update()		1010,	101,	1001,	110,	1010,	1010,	11
2017-01-05 16:41:56 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:56 AI_Player.update()	update
2017-01-05 16:41:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:56 AI_Player.update()	update
2017-01-05 16:41:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:57 AI_Player.update()	Search took281ms
2017-01-05 16:41:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:57 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:41:57 AI_Player.update()		1001,	1100,	11,	1010,	110,	110,	1010
2017-01-05 16:41:57 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 16:41:57 AI_Player.update()		110,	101,	101,	1110,	1101,	101,	1100
2017-01-05 16:41:57 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:57 AI_Player.update()		1010,	101,	1001,	110,	1010,	1010,	11
2017-01-05 16:41:57 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:57 AI_Player.update()	update
2017-01-05 16:41:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:57 AI_Player.update()	update
2017-01-05 16:41:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:57 AI_Player.update()	Search took360ms
2017-01-05 16:41:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:57 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:41:57 AI_Player.update()		1001,	1100,	11,	1010,	110,	110,	1010
2017-01-05 16:41:57 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 16:41:57 AI_Player.update()		1100,	110,	101,	101,	1110,	1101,	101
2017-01-05 16:41:57 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:57 AI_Player.update()		1010,	101,	1001,	110,	1010,	1010,	11
2017-01-05 16:41:57 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:57 AI_Player.update()	update
2017-01-05 16:41:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:57 AI_Player.update()	update
2017-01-05 16:41:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:57 AI_Player.update()	Search took145ms
2017-01-05 16:41:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:57 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 16:41:57 AI_Player.update()		1001,	1100,	11,	1010,	110,	110,	1010
2017-01-05 16:41:57 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-05 16:41:57 AI_Player.update()		1100,	111,	101,	101,	1110,	1101,	101
2017-01-05 16:41:57 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:41:57 AI_Player.update()		1010,	1001,	1001,	110,	1010,	1010,	11
2017-01-05 16:41:57 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:57 AI_Player.update()	update
2017-01-05 16:41:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:57 AI_Player.update()	update
2017-01-05 16:41:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:58 AI_Player.update()	Search took819ms
2017-01-05 16:41:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:58 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 16:41:58 AI_Player.update()		1001,	1100,	11,	111,	110,	110,	1010
2017-01-05 16:41:58 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:41:58 AI_Player.update()		1100,	111,	101,	1001,	1110,	1101,	101
2017-01-05 16:41:58 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:41:58 AI_Player.update()		1010,	1001,	1001,	1100,	1010,	1010,	11
2017-01-05 16:41:58 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1101,	1001
2017-01-05 16:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:58 AI_Player.update()	update
2017-01-05 16:41:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:58 AI_Player.update()	update
2017-01-05 16:41:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:58 AI_Player.update()	Search took62ms
2017-01-05 16:41:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:58 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 16:41:58 AI_Player.update()		1001,	1100,	11,	111,	110,	110,	1010
2017-01-05 16:41:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 16:41:58 AI_Player.update()		1100,	110,	101,	1001,	1110,	1101,	101
2017-01-05 16:41:58 AI_Player.update()		1110,	111,	1101,	110,	1011,	101,	1011
2017-01-05 16:41:58 AI_Player.update()		1010,	101,	1001,	1100,	1010,	1010,	11
2017-01-05 16:41:58 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1101,	1001
2017-01-05 16:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:58 AI_Player.update()	update
2017-01-05 16:41:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:58 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:58 AI_Player.update()	update
2017-01-05 16:41:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:59 AI_Player.update()	Search took607ms
2017-01-05 16:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 16:41:59 AI_Player.update()		1001,	1100,	11,	111,	110,	110,	1010
2017-01-05 16:41:59 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:41:59 AI_Player.update()		1100,	111,	101,	1001,	1110,	1101,	101
2017-01-05 16:41:59 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 16:41:59 AI_Player.update()		1010,	1001,	1001,	1100,	1010,	1010,	11
2017-01-05 16:41:59 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1101,	1001
2017-01-05 16:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()	update
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:41:59 AI_Player.update()	Player b has won!
2017-01-05 16:41:59 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:59 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:41:59 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:41:59 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()	update
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:59 AI_Player.update()	Search took102ms
2017-01-05 16:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()		110,	1011,	111,	110,	111,	101,	11
2017-01-05 16:41:59 AI_Player.update()		110,	1011,	1010,	11,	1001,	101,	101
2017-01-05 16:41:59 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1101,	1011
2017-01-05 16:41:59 AI_Player.update()		11,	1010,	1011,	101,	101,	101,	1100
2017-01-05 16:41:59 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-05 16:41:59 AI_Player.update()		1011,	1101,	11,	11,	1010,	11,	1001
2017-01-05 16:41:59 AI_Player.update()		1100,	11,	1101,	11,	1101,	101,	1001
2017-01-05 16:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()	update
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()	update
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:59 AI_Player.update()	Search took169ms
2017-01-05 16:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()		110,	1011,	111,	11,	111,	101,	11
2017-01-05 16:41:59 AI_Player.update()		110,	1011,	1010,	1100,	1001,	101,	101
2017-01-05 16:41:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:59 AI_Player.update()		11,	1010,	1011,	101,	101,	101,	1100
2017-01-05 16:41:59 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:41:59 AI_Player.update()		1011,	1101,	11,	11,	1010,	11,	1001
2017-01-05 16:41:59 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-05 16:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()	update
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()	update
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:41:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:41:59 AI_Player.update()	Search took233ms
2017-01-05 16:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()		110,	1011,	111,	11,	111,	101,	11
2017-01-05 16:41:59 AI_Player.update()		1011,	1010,	1100,	1001,	101,	101,	110
2017-01-05 16:41:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:59 AI_Player.update()		11,	1010,	1011,	101,	101,	101,	1100
2017-01-05 16:41:59 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:41:59 AI_Player.update()		1011,	1101,	11,	11,	1010,	11,	1001
2017-01-05 16:41:59 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-05 16:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()	update
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:41:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:41:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()	update
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:41:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:41:59 AI_Player.update()	Search took314ms
2017-01-05 16:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 16:41:59 AI_Player.update()		1011,	1011,	1100,	1001,	101,	101,	110
2017-01-05 16:41:59 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 16:41:59 AI_Player.update()		11,	1100,	1011,	101,	101,	101,	1100
2017-01-05 16:41:59 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:41:59 AI_Player.update()		1011,	1010,	11,	11,	1010,	11,	1001
2017-01-05 16:41:59 AI_Player.update()		1100,	1101,	1101,	110,	1101,	101,	1001
2017-01-05 16:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()	update
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:41:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:41:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:41:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:41:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:41:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:41:59 AI_Player.update()	update
2017-01-05 16:41:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:00 AI_Player.update()	Search took462ms
2017-01-05 16:42:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:00 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 16:42:00 AI_Player.update()		1011,	1100,	1001,	101,	101,	110,	1011
2017-01-05 16:42:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 16:42:00 AI_Player.update()		11,	1100,	1011,	101,	101,	101,	1100
2017-01-05 16:42:00 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:42:00 AI_Player.update()		1011,	1010,	11,	11,	1010,	11,	1001
2017-01-05 16:42:00 AI_Player.update()		1100,	1101,	1101,	110,	1101,	101,	1001
2017-01-05 16:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:00 AI_Player.update()	update
2017-01-05 16:42:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:00 AI_Player.update()	update
2017-01-05 16:42:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:00 AI_Player.update()	Search took283ms
2017-01-05 16:42:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:00 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:42:00 AI_Player.update()		1011,	1100,	1001,	101,	101,	110,	1011
2017-01-05 16:42:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 16:42:00 AI_Player.update()		11,	1100,	1011,	11,	101,	101,	1100
2017-01-05 16:42:00 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:42:00 AI_Player.update()		1011,	1010,	11,	110,	1010,	11,	1001
2017-01-05 16:42:00 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-05 16:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:00 AI_Player.update()	update
2017-01-05 16:42:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:00 AI_Player.update()	update
2017-01-05 16:42:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:01 AI_Player.update()	Search took711ms
2017-01-05 16:42:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:42:01 AI_Player.update()		1011,	1100,	1001,	101,	101,	110,	1011
2017-01-05 16:42:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 16:42:01 AI_Player.update()		1100,	1011,	11,	101,	101,	1100,	11
2017-01-05 16:42:01 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:42:01 AI_Player.update()		1011,	1010,	11,	110,	1010,	11,	1001
2017-01-05 16:42:01 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-05 16:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:01 AI_Player.update()	update
2017-01-05 16:42:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:01 AI_Player.update()	update
2017-01-05 16:42:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:01 AI_Player.update()	Search took649ms
2017-01-05 16:42:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:42:01 AI_Player.update()		1011,	1100,	1001,	101,	101,	110,	1011
2017-01-05 16:42:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 16:42:01 AI_Player.update()		1100,	1011,	11,	11,	101,	1100,	11
2017-01-05 16:42:01 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 16:42:01 AI_Player.update()		1011,	1010,	11,	11,	1010,	11,	1001
2017-01-05 16:42:01 AI_Player.update()		1100,	1101,	1101,	101,	1101,	101,	1001
2017-01-05 16:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:01 AI_Player.update()	update
2017-01-05 16:42:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:01 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:02 AI_Player.update()	update
2017-01-05 16:42:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:03 AI_Player.update()	Search took1094ms
2017-01-05 16:42:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:03 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:42:03 AI_Player.update()		1011,	1010,	1001,	101,	101,	110,	1011
2017-01-05 16:42:03 AI_Player.update()		1110,	1011,	1110,	101,	111,	1101,	1011
2017-01-05 16:42:03 AI_Player.update()		1100,	1010,	11,	11,	101,	1100,	11
2017-01-05 16:42:03 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 16:42:03 AI_Player.update()		1011,	1101,	11,	11,	1010,	11,	1001
2017-01-05 16:42:03 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 16:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:03 AI_Player.update()	update
2017-01-05 16:42:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:03 AI_Player.update()	update
2017-01-05 16:42:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:03 AI_Player.update()	Search took230ms
2017-01-05 16:42:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:03 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:42:03 AI_Player.update()		1011,	1100,	1001,	101,	101,	110,	1011
2017-01-05 16:42:03 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 16:42:03 AI_Player.update()		1100,	1011,	11,	11,	101,	1100,	11
2017-01-05 16:42:03 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 16:42:03 AI_Player.update()		1011,	1010,	11,	11,	1010,	11,	1001
2017-01-05 16:42:03 AI_Player.update()		1100,	1101,	1101,	101,	1101,	101,	1001
2017-01-05 16:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:03 AI_Player.update()	update
2017-01-05 16:42:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:03 AI_Player.update()	update
2017-01-05 16:42:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:04 AI_Player.update()	Search took835ms
2017-01-05 16:42:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:04 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 16:42:04 AI_Player.update()		1011,	1100,	1001,	101,	101,	1101,	1011
2017-01-05 16:42:04 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:04 AI_Player.update()		1100,	1011,	11,	11,	101,	11,	11
2017-01-05 16:42:04 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 16:42:04 AI_Player.update()		1011,	1010,	11,	11,	1010,	101,	1001
2017-01-05 16:42:04 AI_Player.update()		1100,	1101,	1101,	101,	1101,	101,	1001
2017-01-05 16:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:04 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:04 AI_Player.update()	update
2017-01-05 16:42:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:04 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:04 AI_Player.update()	update
2017-01-05 16:42:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:04 AI_Player.update()	Search took662ms
2017-01-05 16:42:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:04 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 16:42:04 AI_Player.update()		1011,	1100,	1001,	101,	101,	1101,	1011
2017-01-05 16:42:04 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:04 AI_Player.update()		1100,	1011,	11,	101,	101,	11,	11
2017-01-05 16:42:04 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:42:04 AI_Player.update()		1011,	1010,	11,	110,	1010,	101,	1001
2017-01-05 16:42:04 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-05 16:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:04 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:04 AI_Player.update()	update
2017-01-05 16:42:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:04 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:04 AI_Player.update()	update
2017-01-05 16:42:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:05 AI_Player.update()	Search took517ms
2017-01-05 16:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 16:42:05 AI_Player.update()		1011,	1100,	1001,	101,	101,	1101,	1011
2017-01-05 16:42:05 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:05 AI_Player.update()		11,	1100,	1011,	11,	101,	101,	11
2017-01-05 16:42:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:42:05 AI_Player.update()		1011,	1010,	11,	110,	1010,	101,	1001
2017-01-05 16:42:05 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:05 AI_Player.update()	Search took264ms
2017-01-05 16:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 16:42:05 AI_Player.update()		1011,	1100,	1001,	101,	101,	1101,	1011
2017-01-05 16:42:05 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:05 AI_Player.update()		11,	1100,	1011,	11,	101,	101,	11
2017-01-05 16:42:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-05 16:42:05 AI_Player.update()		1010,	11,	110,	1010,	101,	1001,	1011
2017-01-05 16:42:05 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:05 AI_Player.update()	Search took268ms
2017-01-05 16:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()		110,	11,	111,	101,	111,	1101,	11
2017-01-05 16:42:05 AI_Player.update()		1011,	1100,	1001,	101,	101,	1100,	1011
2017-01-05 16:42:05 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:42:05 AI_Player.update()		11,	1100,	1011,	11,	101,	11,	11
2017-01-05 16:42:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:42:05 AI_Player.update()		1010,	11,	110,	1010,	101,	101,	1011
2017-01-05 16:42:05 AI_Player.update()		1100,	1101,	1101,	11,	1101,	110,	1001
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:42:05 AI_Player.update()	Player a has won!
2017-01-05 16:42:05 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:05 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:42:05 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:05 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:05 AI_Player.update()	Search took14ms
2017-01-05 16:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 16:42:05 AI_Player.update()		110,	110,	101,	110,	11,	1001,	11
2017-01-05 16:42:05 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1010,	1011
2017-01-05 16:42:05 AI_Player.update()		110,	111,	1010,	11,	1100,	101,	101
2017-01-05 16:42:05 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1110,	1011
2017-01-05 16:42:05 AI_Player.update()		1010,	101,	101,	1100,	101,	101,	1100
2017-01-05 16:42:05 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:05 AI_Player.update()	Search took15ms
2017-01-05 16:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 16:42:05 AI_Player.update()		11,	110,	110,	101,	110,	11,	1001
2017-01-05 16:42:05 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1010,	1011
2017-01-05 16:42:05 AI_Player.update()		110,	111,	1010,	11,	1100,	101,	101
2017-01-05 16:42:05 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1110,	1011
2017-01-05 16:42:05 AI_Player.update()		1010,	101,	101,	1100,	101,	101,	1100
2017-01-05 16:42:05 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:05 AI_Player.update()	Search took28ms
2017-01-05 16:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-05 16:42:05 AI_Player.update()		11,	1011,	110,	101,	110,	11,	1001
2017-01-05 16:42:05 AI_Player.update()		1110,	111,	1110,	1010,	111,	1010,	1011
2017-01-05 16:42:05 AI_Player.update()		110,	1010,	1010,	11,	1100,	101,	101
2017-01-05 16:42:05 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-05 16:42:05 AI_Player.update()		1010,	1001,	101,	1100,	101,	101,	1100
2017-01-05 16:42:05 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-05 16:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:05 AI_Player.update()	update
2017-01-05 16:42:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:06 AI_Player.update()	Search took18ms
2017-01-05 16:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()		110,	1011,	111,	1100,	111,	1010,	11
2017-01-05 16:42:06 AI_Player.update()		11,	111,	110,	101,	110,	11,	1001
2017-01-05 16:42:06 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 16:42:06 AI_Player.update()		110,	101,	1010,	11,	1100,	101,	101
2017-01-05 16:42:06 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 16:42:06 AI_Player.update()		1010,	101,	101,	1100,	101,	101,	1100
2017-01-05 16:42:06 AI_Player.update()		1100,	110,	1101,	1001,	1101,	110,	1001
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:06 AI_Player.update()	Search took50ms
2017-01-05 16:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-05 16:42:06 AI_Player.update()		11,	1010,	110,	101,	110,	11,	1001
2017-01-05 16:42:06 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 16:42:06 AI_Player.update()		110,	1001,	1010,	11,	1100,	101,	101
2017-01-05 16:42:06 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-05 16:42:06 AI_Player.update()		1010,	110,	101,	1100,	101,	101,	1100
2017-01-05 16:42:06 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	110,	1001
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:42:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:06 AI_Player.update()	Search took67ms
2017-01-05 16:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-05 16:42:06 AI_Player.update()		1001,	11,	1010,	110,	101,	110,	11
2017-01-05 16:42:06 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 16:42:06 AI_Player.update()		110,	1001,	1010,	11,	1100,	101,	101
2017-01-05 16:42:06 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-05 16:42:06 AI_Player.update()		1010,	110,	101,	1100,	101,	101,	1100
2017-01-05 16:42:06 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	110,	1001
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:06 AI_Player.update()	Search took377ms
2017-01-05 16:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-05 16:42:06 AI_Player.update()		11,	1010,	110,	101,	110,	11,	1001
2017-01-05 16:42:06 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 16:42:06 AI_Player.update()		110,	1001,	1010,	11,	1100,	101,	101
2017-01-05 16:42:06 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-05 16:42:06 AI_Player.update()		1010,	110,	101,	1100,	101,	101,	1100
2017-01-05 16:42:06 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	110,	1001
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:06 AI_Player.update()	Search took302ms
2017-01-05 16:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-05 16:42:06 AI_Player.update()		11,	101,	110,	101,	110,	11,	1001
2017-01-05 16:42:06 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 16:42:06 AI_Player.update()		110,	101,	1010,	11,	1100,	101,	101
2017-01-05 16:42:06 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-05 16:42:06 AI_Player.update()		1010,	1011,	101,	1100,	101,	101,	1100
2017-01-05 16:42:06 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:06 AI_Player.update()	Search took147ms
2017-01-05 16:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:42:06 AI_Player.update()		11,	101,	110,	1010,	110,	11,	1001
2017-01-05 16:42:06 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 16:42:06 AI_Player.update()		110,	101,	1010,	101,	1100,	101,	101
2017-01-05 16:42:06 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1110,	1011
2017-01-05 16:42:06 AI_Player.update()		1010,	1011,	101,	1001,	101,	101,	1100
2017-01-05 16:42:06 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:42:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()	update
2017-01-05 16:42:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:06 AI_Player.update()	Search took27ms
2017-01-05 16:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:06 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 16:42:06 AI_Player.update()		11,	101,	110,	11,	110,	11,	1001
2017-01-05 16:42:06 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:06 AI_Player.update()		110,	101,	1010,	1100,	1100,	101,	101
2017-01-05 16:42:06 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:42:06 AI_Player.update()		1010,	1011,	101,	1100,	101,	101,	1100
2017-01-05 16:42:06 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-05 16:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:07 AI_Player.update()	Search took14ms
2017-01-05 16:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:42:07 AI_Player.update()		11,	101,	110,	1010,	110,	11,	1001
2017-01-05 16:42:07 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 16:42:07 AI_Player.update()		110,	101,	1010,	101,	1100,	101,	101
2017-01-05 16:42:07 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1110,	1011
2017-01-05 16:42:07 AI_Player.update()		1010,	1011,	101,	1001,	101,	101,	1100
2017-01-05 16:42:07 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:07 AI_Player.update()	Search took57ms
2017-01-05 16:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 16:42:07 AI_Player.update()		11,	101,	110,	11,	110,	11,	1001
2017-01-05 16:42:07 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:07 AI_Player.update()		110,	101,	1010,	1100,	1100,	101,	101
2017-01-05 16:42:07 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:42:07 AI_Player.update()		1010,	1011,	101,	1100,	101,	101,	1100
2017-01-05 16:42:07 AI_Player.update()		1100,	111,	1101,	101,	1101,	110,	1001
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:07 AI_Player.update()	Search took126ms
2017-01-05 16:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 16:42:07 AI_Player.update()		11,	101,	110,	11,	110,	1010,	1001
2017-01-05 16:42:07 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 16:42:07 AI_Player.update()		110,	101,	1010,	1100,	1100,	1110,	101
2017-01-05 16:42:07 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:42:07 AI_Player.update()		1010,	1011,	101,	1100,	101,	110,	1100
2017-01-05 16:42:07 AI_Player.update()		1100,	111,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:07 AI_Player.update()	Search took110ms
2017-01-05 16:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-05 16:42:07 AI_Player.update()		11,	1010,	110,	11,	110,	1010,	1001
2017-01-05 16:42:07 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:42:07 AI_Player.update()		110,	1001,	1010,	1100,	1100,	1110,	101
2017-01-05 16:42:07 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:42:07 AI_Player.update()		1010,	110,	101,	1100,	101,	110,	1100
2017-01-05 16:42:07 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:07 AI_Player.update()	Search took402ms
2017-01-05 16:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-05 16:42:07 AI_Player.update()		11,	1010,	110,	101,	110,	1010,	1001
2017-01-05 16:42:07 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 16:42:07 AI_Player.update()		110,	1001,	1010,	1001,	1100,	1110,	101
2017-01-05 16:42:07 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-05 16:42:07 AI_Player.update()		1010,	110,	101,	101,	101,	110,	1100
2017-01-05 16:42:07 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:42:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:07 AI_Player.update()	Search took153ms
2017-01-05 16:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-05 16:42:07 AI_Player.update()		11,	1010,	110,	11,	110,	1010,	1001
2017-01-05 16:42:07 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:42:07 AI_Player.update()		110,	1001,	1010,	1100,	1100,	1110,	101
2017-01-05 16:42:07 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-05 16:42:07 AI_Player.update()		1010,	110,	101,	1100,	101,	110,	1100
2017-01-05 16:42:07 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:07 AI_Player.update()	update
2017-01-05 16:42:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:08 AI_Player.update()	Search took453ms
2017-01-05 16:42:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:08 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 16:42:08 AI_Player.update()		11,	101,	110,	11,	110,	1010,	1001
2017-01-05 16:42:08 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 16:42:08 AI_Player.update()		110,	101,	1010,	1100,	1100,	1110,	101
2017-01-05 16:42:08 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:42:08 AI_Player.update()		1010,	1011,	101,	1100,	101,	110,	1100
2017-01-05 16:42:08 AI_Player.update()		1100,	111,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:08 AI_Player.update()	update
2017-01-05 16:42:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:42:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:08 AI_Player.update()	update
2017-01-05 16:42:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:08 AI_Player.update()	Search took181ms
2017-01-05 16:42:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:08 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 16:42:08 AI_Player.update()		11,	1001,	110,	11,	110,	1010,	1001
2017-01-05 16:42:08 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:42:08 AI_Player.update()		110,	110,	1010,	1100,	1100,	1110,	101
2017-01-05 16:42:08 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	101,	1011
2017-01-05 16:42:08 AI_Player.update()		1010,	111,	101,	1100,	101,	110,	1100
2017-01-05 16:42:08 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:08 AI_Player.update()	update
2017-01-05 16:42:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:08 AI_Player.update()	update
2017-01-05 16:42:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:08 AI_Player.update()	Search took243ms
2017-01-05 16:42:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:08 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 16:42:08 AI_Player.update()		11,	101,	110,	11,	110,	1010,	1001
2017-01-05 16:42:08 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:42:08 AI_Player.update()		110,	1011,	1010,	1100,	1100,	1110,	101
2017-01-05 16:42:08 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-05 16:42:08 AI_Player.update()		1010,	1010,	101,	1100,	101,	110,	1100
2017-01-05 16:42:08 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:08 AI_Player.update()	update
2017-01-05 16:42:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:08 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:08 AI_Player.update()	update
2017-01-05 16:42:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:09 AI_Player.update()	Search took576ms
2017-01-05 16:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 16:42:09 AI_Player.update()		11,	101,	110,	11,	110,	1010,	1001
2017-01-05 16:42:09 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 16:42:09 AI_Player.update()		1011,	1010,	1100,	1100,	1110,	101,	110
2017-01-05 16:42:09 AI_Player.update()		1110,	111,	1101,	1001,	1011,	101,	1011
2017-01-05 16:42:09 AI_Player.update()		1010,	1010,	101,	1100,	101,	110,	1100
2017-01-05 16:42:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:09 AI_Player.update()	Search took320ms
2017-01-05 16:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 16:42:09 AI_Player.update()		11,	1001,	110,	11,	110,	1010,	1001
2017-01-05 16:42:09 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:42:09 AI_Player.update()		1011,	110,	1100,	1100,	1110,	101,	110
2017-01-05 16:42:09 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-05 16:42:09 AI_Player.update()		1010,	111,	101,	1100,	101,	110,	1100
2017-01-05 16:42:09 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:42:09 AI_Player.update()	Player a has won!
2017-01-05 16:42:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:09 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:42:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:09 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:09 AI_Player.update()	Search took24ms
2017-01-05 16:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()		110,	1100,	111,	1011,	111,	1010,	11
2017-01-05 16:42:09 AI_Player.update()		1011,	101,	11,	110,	1100,	1010,	110
2017-01-05 16:42:09 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 16:42:09 AI_Player.update()		1011,	101,	1010,	101,	1010,	1010,	1010
2017-01-05 16:42:09 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1011,	1011
2017-01-05 16:42:09 AI_Player.update()		1010,	1001,	1010,	110,	11,	110,	1001
2017-01-05 16:42:09 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:09 AI_Player.update()	Search took58ms
2017-01-05 16:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()		110,	1100,	111,	1011,	111,	101,	11
2017-01-05 16:42:09 AI_Player.update()		1011,	101,	11,	110,	1100,	1010,	110
2017-01-05 16:42:09 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:42:09 AI_Player.update()		1011,	101,	1010,	101,	1010,	110,	1010
2017-01-05 16:42:09 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-05 16:42:09 AI_Player.update()		1010,	1001,	1010,	110,	11,	1011,	1001
2017-01-05 16:42:09 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:09 AI_Player.update()	Search took131ms
2017-01-05 16:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-05 16:42:09 AI_Player.update()		1011,	101,	11,	110,	1100,	1010,	110
2017-01-05 16:42:09 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:42:09 AI_Player.update()		1011,	1100,	1010,	101,	1010,	110,	1010
2017-01-05 16:42:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:42:09 AI_Player.update()		1010,	1001,	1010,	110,	11,	1011,	1001
2017-01-05 16:42:09 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:09 AI_Player.update()	Search took47ms
2017-01-05 16:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-05 16:42:09 AI_Player.update()		101,	11,	110,	1100,	1010,	110,	1011
2017-01-05 16:42:09 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:42:09 AI_Player.update()		1011,	1100,	1010,	101,	1010,	110,	1010
2017-01-05 16:42:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:42:09 AI_Player.update()		1010,	1001,	1010,	110,	11,	1011,	1001
2017-01-05 16:42:09 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:42:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:09 AI_Player.update()	update
2017-01-05 16:42:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:10 AI_Player.update()	Search took148ms
2017-01-05 16:42:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 16:42:10 AI_Player.update()		101,	11,	110,	1001,	1010,	110,	1011
2017-01-05 16:42:10 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:10 AI_Player.update()		1011,	1100,	1010,	11,	1010,	110,	1010
2017-01-05 16:42:10 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1010,	1011
2017-01-05 16:42:10 AI_Player.update()		1010,	1001,	1010,	1100,	11,	1011,	1001
2017-01-05 16:42:10 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	110,	1001
2017-01-05 16:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()	update
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()	update
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:10 AI_Player.update()	Search took46ms
2017-01-05 16:42:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-05 16:42:10 AI_Player.update()		101,	11,	110,	1100,	1010,	110,	1011
2017-01-05 16:42:10 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:42:10 AI_Player.update()		1011,	1100,	1010,	101,	1010,	110,	1010
2017-01-05 16:42:10 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:42:10 AI_Player.update()		1010,	1001,	1010,	110,	11,	1011,	1001
2017-01-05 16:42:10 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()	update
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()	update
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:10 AI_Player.update()	Search took105ms
2017-01-05 16:42:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 16:42:10 AI_Player.update()		101,	11,	110,	1011,	1010,	110,	1011
2017-01-05 16:42:10 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 16:42:10 AI_Player.update()		1011,	1100,	1010,	1001,	1010,	110,	1010
2017-01-05 16:42:10 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:42:10 AI_Player.update()		1010,	1001,	1010,	11,	11,	1011,	1001
2017-01-05 16:42:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	110,	1001
2017-01-05 16:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()	update
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()	update
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:10 AI_Player.update()	Search took219ms
2017-01-05 16:42:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 16:42:10 AI_Player.update()		1011,	101,	11,	110,	1011,	1010,	110
2017-01-05 16:42:10 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 16:42:10 AI_Player.update()		1011,	1100,	1010,	1001,	1010,	110,	1010
2017-01-05 16:42:10 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:42:10 AI_Player.update()		1010,	1001,	1010,	11,	11,	1011,	1001
2017-01-05 16:42:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	110,	1001
2017-01-05 16:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()	update
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()	update
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:10 AI_Player.update()	Search took272ms
2017-01-05 16:42:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 16:42:10 AI_Player.update()		101,	11,	110,	1011,	1010,	110,	1011
2017-01-05 16:42:10 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 16:42:10 AI_Player.update()		1011,	1100,	1010,	1001,	1010,	110,	1010
2017-01-05 16:42:10 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:42:10 AI_Player.update()		1010,	1001,	1010,	11,	11,	1011,	1001
2017-01-05 16:42:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	110,	1001
2017-01-05 16:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()	update
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:10 AI_Player.update()	update
2017-01-05 16:42:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:11 AI_Player.update()	Search took285ms
2017-01-05 16:42:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 16:42:11 AI_Player.update()		1011,	101,	11,	110,	1011,	1010,	110
2017-01-05 16:42:11 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 16:42:11 AI_Player.update()		1011,	1100,	1010,	1001,	1010,	110,	1010
2017-01-05 16:42:11 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:42:11 AI_Player.update()		1010,	1001,	1010,	11,	11,	1011,	1001
2017-01-05 16:42:11 AI_Player.update()		1100,	1100,	1101,	110,	1101,	110,	1001
2017-01-05 16:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()	update
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()	update
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:11 AI_Player.update()	Search took283ms
2017-01-05 16:42:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 16:42:11 AI_Player.update()		1011,	101,	11,	110,	1011,	1010,	110
2017-01-05 16:42:11 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 16:42:11 AI_Player.update()		1011,	1001,	1010,	1001,	1010,	110,	1010
2017-01-05 16:42:11 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 16:42:11 AI_Player.update()		1010,	1100,	1010,	11,	11,	1011,	1001
2017-01-05 16:42:11 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-05 16:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()	update
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()	update
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:11 AI_Player.update()	Search took214ms
2017-01-05 16:42:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 16:42:11 AI_Player.update()		1011,	101,	11,	1100,	1011,	1010,	110
2017-01-05 16:42:11 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 16:42:11 AI_Player.update()		1011,	1001,	1010,	101,	1010,	110,	1010
2017-01-05 16:42:11 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:42:11 AI_Player.update()		1010,	1100,	1010,	110,	11,	1011,	1001
2017-01-05 16:42:11 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()	update
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()	update
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:11 AI_Player.update()	Search took186ms
2017-01-05 16:42:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 16:42:11 AI_Player.update()		110,	1011,	101,	11,	1100,	1011,	1010
2017-01-05 16:42:11 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 16:42:11 AI_Player.update()		1011,	1001,	1010,	101,	1010,	110,	1010
2017-01-05 16:42:11 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:42:11 AI_Player.update()		1010,	1100,	1010,	110,	11,	1011,	1001
2017-01-05 16:42:11 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()	update
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:11 AI_Player.update()	update
2017-01-05 16:42:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:12 AI_Player.update()	Search took286ms
2017-01-05 16:42:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:12 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 16:42:12 AI_Player.update()		1010,	110,	1011,	101,	11,	1100,	1011
2017-01-05 16:42:12 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 16:42:12 AI_Player.update()		1011,	1001,	1010,	101,	1010,	110,	1010
2017-01-05 16:42:12 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:42:12 AI_Player.update()		1010,	1100,	1010,	110,	11,	1011,	1001
2017-01-05 16:42:12 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:12 AI_Player.update()	update
2017-01-05 16:42:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:12 AI_Player.update()	update
2017-01-05 16:42:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:12 AI_Player.update()	Search took432ms
2017-01-05 16:42:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:12 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 16:42:12 AI_Player.update()		1011,	1010,	110,	1011,	101,	11,	1100
2017-01-05 16:42:12 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 16:42:12 AI_Player.update()		1011,	1001,	1010,	101,	1010,	110,	1010
2017-01-05 16:42:12 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:42:12 AI_Player.update()		1010,	1100,	1010,	110,	11,	1011,	1001
2017-01-05 16:42:12 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:12 AI_Player.update()	update
2017-01-05 16:42:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:12 AI_Player.update()	update
2017-01-05 16:42:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:12 AI_Player.update()	Search took399ms
2017-01-05 16:42:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:12 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-05 16:42:12 AI_Player.update()		1011,	1010,	110,	1001,	101,	11,	1100
2017-01-05 16:42:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:12 AI_Player.update()		1011,	1001,	1010,	11,	1010,	110,	1010
2017-01-05 16:42:12 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1010,	1011
2017-01-05 16:42:12 AI_Player.update()		1010,	1100,	1010,	1100,	11,	1011,	1001
2017-01-05 16:42:12 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-05 16:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:12 AI_Player.update()	update
2017-01-05 16:42:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:12 AI_Player.update()	update
2017-01-05 16:42:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:13 AI_Player.update()	Search took260ms
2017-01-05 16:42:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-05 16:42:13 AI_Player.update()		1011,	1010,	110,	1001,	101,	101,	1100
2017-01-05 16:42:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 16:42:13 AI_Player.update()		1011,	1001,	1010,	11,	1010,	1010,	1010
2017-01-05 16:42:13 AI_Player.update()		1110,	1001,	1101,	110,	1011,	110,	1011
2017-01-05 16:42:13 AI_Player.update()		1010,	1100,	1010,	1100,	11,	1010,	1001
2017-01-05 16:42:13 AI_Player.update()		1100,	101,	1101,	110,	1101,	1011,	1001
2017-01-05 16:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()	update
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:13 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:42:13 AI_Player.update()	Player a has won!
2017-01-05 16:42:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:13 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:42:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:13 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:42:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()	update
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:13 AI_Player.update()	Search took15ms
2017-01-05 16:42:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 16:42:13 AI_Player.update()		101,	11,	101,	1011,	111,	1010,	101
2017-01-05 16:42:13 AI_Player.update()		1110,	110,	1110,	111,	111,	111,	1011
2017-01-05 16:42:13 AI_Player.update()		110,	1001,	111,	1100,	1010,	1011,	101
2017-01-05 16:42:13 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:42:13 AI_Player.update()		1001,	1010,	11,	1100,	11,	1100,	1101
2017-01-05 16:42:13 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()	update
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()	update
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:13 AI_Player.update()	Search took96ms
2017-01-05 16:42:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 16:42:13 AI_Player.update()		101,	101,	11,	101,	1011,	111,	1010
2017-01-05 16:42:13 AI_Player.update()		1110,	110,	1110,	111,	111,	111,	1011
2017-01-05 16:42:13 AI_Player.update()		110,	1001,	111,	1100,	1010,	1011,	101
2017-01-05 16:42:13 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:42:13 AI_Player.update()		1001,	1010,	11,	1100,	11,	1100,	1101
2017-01-05 16:42:13 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()	update
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()	update
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:13 AI_Player.update()	Search took93ms
2017-01-05 16:42:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 16:42:13 AI_Player.update()		1010,	101,	101,	11,	101,	1011,	111
2017-01-05 16:42:13 AI_Player.update()		1110,	110,	1110,	111,	111,	111,	1011
2017-01-05 16:42:13 AI_Player.update()		110,	1001,	111,	1100,	1010,	1011,	101
2017-01-05 16:42:13 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:42:13 AI_Player.update()		1001,	1010,	11,	1100,	11,	1100,	1101
2017-01-05 16:42:13 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()	update
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:13 AI_Player.update()	update
2017-01-05 16:42:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:14 AI_Player.update()	Search took715ms
2017-01-05 16:42:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-05 16:42:14 AI_Player.update()		1010,	101,	101,	11,	101,	111,	111
2017-01-05 16:42:14 AI_Player.update()		1110,	110,	1110,	111,	111,	1011,	1011
2017-01-05 16:42:14 AI_Player.update()		110,	1001,	111,	1100,	1010,	1001,	101
2017-01-05 16:42:14 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:42:14 AI_Player.update()		1001,	1010,	11,	1100,	11,	1001,	1101
2017-01-05 16:42:14 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()	update
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()	update
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:14 AI_Player.update()	Search took68ms
2017-01-05 16:42:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-05 16:42:14 AI_Player.update()		1010,	101,	101,	1001,	101,	111,	111
2017-01-05 16:42:14 AI_Player.update()		1110,	110,	1110,	11,	111,	1011,	1011
2017-01-05 16:42:14 AI_Player.update()		110,	1001,	111,	111,	1010,	1001,	101
2017-01-05 16:42:14 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:42:14 AI_Player.update()		1001,	1010,	11,	101,	11,	1001,	1101
2017-01-05 16:42:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()	update
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()	update
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:14 AI_Player.update()	Search took493ms
2017-01-05 16:42:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-05 16:42:14 AI_Player.update()		1010,	110,	101,	1001,	101,	111,	111
2017-01-05 16:42:14 AI_Player.update()		1110,	1001,	1110,	11,	111,	1011,	1011
2017-01-05 16:42:14 AI_Player.update()		110,	101,	111,	111,	1010,	1001,	101
2017-01-05 16:42:14 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:42:14 AI_Player.update()		1001,	1010,	11,	101,	11,	1001,	1101
2017-01-05 16:42:14 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()	update
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:42:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()	update
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:14 AI_Player.update()	Search took124ms
2017-01-05 16:42:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-05 16:42:14 AI_Player.update()		111,	1010,	110,	101,	1001,	101,	111
2017-01-05 16:42:14 AI_Player.update()		1110,	1001,	1110,	11,	111,	1011,	1011
2017-01-05 16:42:14 AI_Player.update()		110,	101,	111,	111,	1010,	1001,	101
2017-01-05 16:42:14 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:42:14 AI_Player.update()		1001,	1010,	11,	101,	11,	1001,	1101
2017-01-05 16:42:14 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()	update
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:14 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:14 AI_Player.update()	update
2017-01-05 16:42:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:15 AI_Player.update()	Search took486ms
2017-01-05 16:42:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:15 AI_Player.update()		110,	1010,	111,	1001,	111,	1011,	11
2017-01-05 16:42:15 AI_Player.update()		111,	1001,	110,	101,	1001,	101,	111
2017-01-05 16:42:15 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-05 16:42:15 AI_Player.update()		110,	1010,	111,	111,	1010,	1001,	101
2017-01-05 16:42:15 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:42:15 AI_Player.update()		1001,	101,	11,	101,	11,	1001,	1101
2017-01-05 16:42:15 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:15 AI_Player.update()	update
2017-01-05 16:42:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:42:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:15 AI_Player.update()	update
2017-01-05 16:42:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:15 AI_Player.update()	Search took116ms
2017-01-05 16:42:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:15 AI_Player.update()		110,	1010,	111,	1100,	111,	1011,	11
2017-01-05 16:42:15 AI_Player.update()		111,	1001,	110,	1001,	1001,	101,	111
2017-01-05 16:42:15 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-05 16:42:15 AI_Player.update()		110,	1010,	111,	11,	1010,	1001,	101
2017-01-05 16:42:15 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-05 16:42:15 AI_Player.update()		1001,	101,	11,	1100,	11,	1001,	1101
2017-01-05 16:42:15 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:15 AI_Player.update()	update
2017-01-05 16:42:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:42:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:15 AI_Player.update()	update
2017-01-05 16:42:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:16 AI_Player.update()	Search took796ms
2017-01-05 16:42:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:16 AI_Player.update()		110,	1010,	111,	1100,	111,	1011,	11
2017-01-05 16:42:16 AI_Player.update()		111,	1001,	110,	1001,	1001,	101,	111
2017-01-05 16:42:16 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-05 16:42:16 AI_Player.update()		101,	110,	1010,	111,	11,	1010,	1001
2017-01-05 16:42:16 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-05 16:42:16 AI_Player.update()		1001,	101,	11,	1100,	11,	1001,	1101
2017-01-05 16:42:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:16 AI_Player.update()	update
2017-01-05 16:42:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:42:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:16 AI_Player.update()	update
2017-01-05 16:42:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:17 AI_Player.update()	Search took860ms
2017-01-05 16:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 16:42:17 AI_Player.update()		111,	1001,	110,	1100,	1001,	101,	111
2017-01-05 16:42:17 AI_Player.update()		1110,	101,	1110,	1001,	111,	1011,	1011
2017-01-05 16:42:17 AI_Player.update()		101,	110,	1010,	101,	11,	1010,	1001
2017-01-05 16:42:17 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-05 16:42:17 AI_Player.update()		1001,	101,	11,	111,	11,	1001,	1101
2017-01-05 16:42:17 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:17 AI_Player.update()	Search took226ms
2017-01-05 16:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 16:42:17 AI_Player.update()		111,	1001,	110,	1100,	1001,	101,	111
2017-01-05 16:42:17 AI_Player.update()		1110,	101,	1110,	1001,	111,	1011,	1011
2017-01-05 16:42:17 AI_Player.update()		1001,	101,	110,	1010,	101,	11,	1010
2017-01-05 16:42:17 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1100,	1011
2017-01-05 16:42:17 AI_Player.update()		1001,	101,	11,	111,	11,	1001,	1101
2017-01-05 16:42:17 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:17 AI_Player.update()	Search took187ms
2017-01-05 16:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()		110,	1010,	111,	1100,	111,	1011,	11
2017-01-05 16:42:17 AI_Player.update()		111,	1001,	110,	101,	1001,	101,	111
2017-01-05 16:42:17 AI_Player.update()		1110,	101,	1110,	1100,	111,	1011,	1011
2017-01-05 16:42:17 AI_Player.update()		1001,	101,	110,	1001,	101,	11,	1010
2017-01-05 16:42:17 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:42:17 AI_Player.update()		1001,	101,	11,	111,	11,	1001,	1101
2017-01-05 16:42:17 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:42:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:17 AI_Player.update()	Search took180ms
2017-01-05 16:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-05 16:42:17 AI_Player.update()		111,	1001,	110,	101,	1001,	1011,	111
2017-01-05 16:42:17 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-05 16:42:17 AI_Player.update()		1001,	101,	110,	1001,	101,	1100,	1010
2017-01-05 16:42:17 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:42:17 AI_Player.update()		1001,	101,	11,	111,	11,	1001,	1101
2017-01-05 16:42:17 AI_Player.update()		1100,	101,	1101,	111,	1101,	1011,	1001
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:42:17 AI_Player.update()	Player b has won!
2017-01-05 16:42:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:17 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:42:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:17 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:17 AI_Player.update()	Search took7ms
2017-01-05 16:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 16:42:17 AI_Player.update()		111,	111,	101,	1001,	1100,	1010,	110
2017-01-05 16:42:17 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:17 AI_Player.update()		1010,	111,	1101,	101,	1001,	1001,	1101
2017-01-05 16:42:17 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:42:17 AI_Player.update()		101,	1001,	101,	111,	101,	1001,	11
2017-01-05 16:42:17 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:17 AI_Player.update()	Search took83ms
2017-01-05 16:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 16:42:17 AI_Player.update()		110,	111,	111,	101,	1001,	1100,	1010
2017-01-05 16:42:17 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:17 AI_Player.update()		1010,	111,	1101,	101,	1001,	1001,	1101
2017-01-05 16:42:17 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:42:17 AI_Player.update()		101,	1001,	101,	111,	101,	1001,	11
2017-01-05 16:42:17 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:17 AI_Player.update()	Search took39ms
2017-01-05 16:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()		110,	111,	111,	1001,	111,	110,	11
2017-01-05 16:42:17 AI_Player.update()		110,	101,	111,	101,	1001,	1100,	1010
2017-01-05 16:42:17 AI_Player.update()		1110,	111,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:17 AI_Player.update()		1010,	101,	1101,	101,	1001,	1001,	1101
2017-01-05 16:42:17 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1010,	1011
2017-01-05 16:42:17 AI_Player.update()		101,	1010,	101,	111,	101,	1001,	11
2017-01-05 16:42:17 AI_Player.update()		1100,	1001,	1101,	101,	1101,	111,	1001
2017-01-05 16:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:17 AI_Player.update()	update
2017-01-05 16:42:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:18 AI_Player.update()	Search took197ms
2017-01-05 16:42:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:18 AI_Player.update()		110,	111,	111,	1001,	111,	111,	11
2017-01-05 16:42:18 AI_Player.update()		110,	101,	111,	101,	1001,	110,	1010
2017-01-05 16:42:18 AI_Player.update()		1110,	111,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:18 AI_Player.update()		1010,	101,	1101,	101,	1001,	1010,	1101
2017-01-05 16:42:18 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1001,	1011
2017-01-05 16:42:18 AI_Player.update()		101,	1010,	101,	111,	101,	1010,	11
2017-01-05 16:42:18 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:18 AI_Player.update()	update
2017-01-05 16:42:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:42:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:18 AI_Player.update()	update
2017-01-05 16:42:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:18 AI_Player.update()	Search took304ms
2017-01-05 16:42:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:18 AI_Player.update()		110,	1001,	111,	1001,	111,	111,	11
2017-01-05 16:42:18 AI_Player.update()		110,	111,	111,	101,	1001,	110,	1010
2017-01-05 16:42:18 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:18 AI_Player.update()		1010,	111,	1101,	101,	1001,	1010,	1101
2017-01-05 16:42:18 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 16:42:18 AI_Player.update()		101,	1001,	101,	111,	101,	1010,	11
2017-01-05 16:42:18 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:18 AI_Player.update()	update
2017-01-05 16:42:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:18 AI_Player.update()	update
2017-01-05 16:42:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:19 AI_Player.update()	Search took903ms
2017-01-05 16:42:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:19 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:42:19 AI_Player.update()		110,	111,	111,	101,	1001,	110,	1010
2017-01-05 16:42:19 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:19 AI_Player.update()		1010,	111,	1101,	111,	1001,	1010,	1101
2017-01-05 16:42:19 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 16:42:19 AI_Player.update()		101,	1001,	101,	101,	101,	1010,	11
2017-01-05 16:42:19 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:19 AI_Player.update()	update
2017-01-05 16:42:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:42:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:19 AI_Player.update()	update
2017-01-05 16:42:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:20 AI_Player.update()	Search took1088ms
2017-01-05 16:42:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:20 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:42:20 AI_Player.update()		110,	111,	111,	101,	1001,	110,	1010
2017-01-05 16:42:20 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:20 AI_Player.update()		1010,	111,	1101,	111,	1001,	1010,	1101
2017-01-05 16:42:20 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 16:42:20 AI_Player.update()		1001,	101,	101,	101,	1010,	11,	101
2017-01-05 16:42:20 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:20 AI_Player.update()	update
2017-01-05 16:42:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:20 AI_Player.update()	update
2017-01-05 16:42:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:21 AI_Player.update()	Search took1209ms
2017-01-05 16:42:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:21 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:42:21 AI_Player.update()		111,	111,	101,	1001,	110,	1010,	110
2017-01-05 16:42:21 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:21 AI_Player.update()		1010,	111,	1101,	111,	1001,	1010,	1101
2017-01-05 16:42:21 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 16:42:21 AI_Player.update()		1001,	101,	101,	101,	1010,	11,	101
2017-01-05 16:42:21 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:21 AI_Player.update()	update
2017-01-05 16:42:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:42:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:21 AI_Player.update()	update
2017-01-05 16:42:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:22 AI_Player.update()	Search took613ms
2017-01-05 16:42:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:22 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:42:22 AI_Player.update()		110,	111,	111,	101,	1001,	110,	1010
2017-01-05 16:42:22 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:22 AI_Player.update()		1010,	111,	1101,	111,	1001,	1010,	1101
2017-01-05 16:42:22 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 16:42:22 AI_Player.update()		1001,	101,	101,	101,	1010,	11,	101
2017-01-05 16:42:22 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:22 AI_Player.update()	update
2017-01-05 16:42:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:22 AI_Player.update()	update
2017-01-05 16:42:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:23 AI_Player.update()	Search took1116ms
2017-01-05 16:42:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:23 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:42:23 AI_Player.update()		110,	111,	111,	101,	1001,	110,	1010
2017-01-05 16:42:23 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:23 AI_Player.update()		111,	1101,	111,	1001,	1010,	1101,	1010
2017-01-05 16:42:23 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 16:42:23 AI_Player.update()		1001,	101,	101,	101,	1010,	11,	101
2017-01-05 16:42:23 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:42:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:23 AI_Player.update()	update
2017-01-05 16:42:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:42:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:23 AI_Player.update()	update
2017-01-05 16:42:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:24 AI_Player.update()	Search took1517ms
2017-01-05 16:42:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:24 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:42:24 AI_Player.update()		110,	111,	111,	101,	1001,	110,	1010
2017-01-05 16:42:24 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:42:24 AI_Player.update()		111,	1101,	111,	111,	1010,	1101,	1010
2017-01-05 16:42:24 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:42:24 AI_Player.update()		1001,	101,	101,	1001,	1010,	11,	101
2017-01-05 16:42:24 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:24 AI_Player.update()	update
2017-01-05 16:42:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:24 AI_Player.update()	update
2017-01-05 16:42:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:25 AI_Player.update()	Search took639ms
2017-01-05 16:42:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:25 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 16:42:25 AI_Player.update()		110,	111,	111,	101,	1001,	110,	1010
2017-01-05 16:42:25 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:25 AI_Player.update()		111,	1101,	111,	1001,	1010,	1101,	1010
2017-01-05 16:42:25 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 16:42:25 AI_Player.update()		1001,	101,	101,	101,	1010,	11,	101
2017-01-05 16:42:25 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:25 AI_Player.update()	update
2017-01-05 16:42:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:42:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:25 AI_Player.update()	update
2017-01-05 16:42:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:25 AI_Player.update()	Search took435ms
2017-01-05 16:42:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:25 AI_Player.update()		110,	1001,	111,	1001,	111,	111,	11
2017-01-05 16:42:25 AI_Player.update()		110,	111,	111,	101,	1001,	110,	1010
2017-01-05 16:42:25 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:25 AI_Player.update()		111,	1101,	111,	101,	1010,	1101,	1010
2017-01-05 16:42:25 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:42:25 AI_Player.update()		1001,	101,	101,	111,	1010,	11,	101
2017-01-05 16:42:25 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:25 AI_Player.update()	update
2017-01-05 16:42:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:25 AI_Player.update()	update
2017-01-05 16:42:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:26 AI_Player.update()	Search took893ms
2017-01-05 16:42:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:26 AI_Player.update()		110,	1001,	111,	1001,	111,	111,	11
2017-01-05 16:42:26 AI_Player.update()		1010,	110,	111,	111,	101,	1001,	110
2017-01-05 16:42:26 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:42:26 AI_Player.update()		111,	1101,	111,	101,	1010,	1101,	1010
2017-01-05 16:42:26 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:42:26 AI_Player.update()		1001,	101,	101,	111,	1010,	11,	101
2017-01-05 16:42:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:26 AI_Player.update()	update
2017-01-05 16:42:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:26 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:42:26 AI_Player.update()	Player b has won!
2017-01-05 16:42:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:26 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:42:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:26 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:42:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:26 AI_Player.update()	update
2017-01-05 16:42:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:27 AI_Player.update()	Search took299ms
2017-01-05 16:42:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:27 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-05 16:42:27 AI_Player.update()		11,	1011,	1101,	11,	1001,	101,	1010
2017-01-05 16:42:27 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-05 16:42:27 AI_Player.update()		1101,	1001,	1110,	1110,	101,	1011,	1001
2017-01-05 16:42:27 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:42:27 AI_Player.update()		1101,	1010,	110,	101,	1011,	1110,	101
2017-01-05 16:42:27 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-05 16:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:27 AI_Player.update()	update
2017-01-05 16:42:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:27 AI_Player.update()	update
2017-01-05 16:42:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:27 AI_Player.update()	Search took124ms
2017-01-05 16:42:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:27 AI_Player.update()		110,	101,	111,	1001,	111,	1011,	11
2017-01-05 16:42:27 AI_Player.update()		11,	1011,	1101,	11,	1001,	101,	1010
2017-01-05 16:42:27 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-05 16:42:27 AI_Player.update()		1001,	1101,	1001,	1110,	1110,	101,	1011
2017-01-05 16:42:27 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:42:27 AI_Player.update()		1101,	1010,	110,	101,	1011,	1110,	101
2017-01-05 16:42:27 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-05 16:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:27 AI_Player.update()	update
2017-01-05 16:42:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:42:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:27 AI_Player.update()	update
2017-01-05 16:42:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:27 AI_Player.update()	Search took211ms
2017-01-05 16:42:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:27 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-05 16:42:27 AI_Player.update()		11,	1011,	1101,	11,	1001,	101,	1010
2017-01-05 16:42:27 AI_Player.update()		1110,	101,	1110,	1110,	111,	1001,	1011
2017-01-05 16:42:27 AI_Player.update()		1001,	1101,	1001,	1010,	1110,	101,	1011
2017-01-05 16:42:27 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:42:27 AI_Player.update()		1101,	1010,	110,	110,	1011,	1110,	101
2017-01-05 16:42:27 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-05 16:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:27 AI_Player.update()	update
2017-01-05 16:42:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:27 AI_Player.update()	update
2017-01-05 16:42:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:28 AI_Player.update()	Search took1071ms
2017-01-05 16:42:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:28 AI_Player.update()		110,	1011,	111,	11,	111,	1011,	11
2017-01-05 16:42:28 AI_Player.update()		11,	101,	1101,	11,	1001,	101,	1010
2017-01-05 16:42:28 AI_Player.update()		1110,	1101,	1110,	1110,	111,	1001,	1011
2017-01-05 16:42:28 AI_Player.update()		1001,	1010,	1001,	1010,	1110,	101,	1011
2017-01-05 16:42:28 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:42:28 AI_Player.update()		1101,	101,	110,	110,	1011,	1110,	101
2017-01-05 16:42:28 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-05 16:42:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:28 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:28 AI_Player.update()	update
2017-01-05 16:42:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:28 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:28 AI_Player.update()	update
2017-01-05 16:42:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:29 AI_Player.update()	Search took1252ms
2017-01-05 16:42:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:29 AI_Player.update()		110,	1011,	111,	11,	111,	1011,	11
2017-01-05 16:42:29 AI_Player.update()		11,	101,	1101,	1110,	1001,	101,	1010
2017-01-05 16:42:29 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1001,	1011
2017-01-05 16:42:29 AI_Player.update()		1001,	1010,	1001,	101,	1110,	101,	1011
2017-01-05 16:42:29 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 16:42:29 AI_Player.update()		1101,	101,	110,	1001,	1011,	1110,	101
2017-01-05 16:42:29 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-05 16:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:29 AI_Player.update()	update
2017-01-05 16:42:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:29 AI_Player.update()	update
2017-01-05 16:42:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:30 AI_Player.update()	Search took369ms
2017-01-05 16:42:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:30 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-05 16:42:30 AI_Player.update()		11,	1011,	1101,	1110,	1001,	101,	1010
2017-01-05 16:42:30 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 16:42:30 AI_Player.update()		1001,	1101,	1001,	101,	1110,	101,	1011
2017-01-05 16:42:30 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 16:42:30 AI_Player.update()		1101,	1010,	110,	1001,	1011,	1110,	101
2017-01-05 16:42:30 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-05 16:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:30 AI_Player.update()	update
2017-01-05 16:42:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:30 AI_Player.update()	update
2017-01-05 16:42:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:30 AI_Player.update()	Search took782ms
2017-01-05 16:42:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:30 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:42:30 AI_Player.update()		11,	1011,	1101,	1110,	1001,	1001,	1010
2017-01-05 16:42:30 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:42:30 AI_Player.update()		1001,	1101,	1001,	101,	1110,	1001,	1011
2017-01-05 16:42:30 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1110,	1011
2017-01-05 16:42:30 AI_Player.update()		1101,	1010,	110,	1001,	1011,	11,	101
2017-01-05 16:42:30 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-05 16:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:30 AI_Player.update()	update
2017-01-05 16:42:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:30 AI_Player.update()	update
2017-01-05 16:42:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:31 AI_Player.update()	Search took121ms
2017-01-05 16:42:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:31 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:42:31 AI_Player.update()		1010,	11,	1011,	1101,	1110,	1001,	1001
2017-01-05 16:42:31 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:42:31 AI_Player.update()		1001,	1101,	1001,	101,	1110,	1001,	1011
2017-01-05 16:42:31 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1110,	1011
2017-01-05 16:42:31 AI_Player.update()		1101,	1010,	110,	1001,	1011,	11,	101
2017-01-05 16:42:31 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-05 16:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:31 AI_Player.update()	update
2017-01-05 16:42:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:31 AI_Player.update()	update
2017-01-05 16:42:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:31 AI_Player.update()	Search took364ms
2017-01-05 16:42:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:31 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-05 16:42:31 AI_Player.update()		1010,	11,	1011,	1010,	1110,	1001,	1001
2017-01-05 16:42:31 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 16:42:31 AI_Player.update()		1001,	1101,	1001,	110,	1110,	1001,	1011
2017-01-05 16:42:31 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:42:31 AI_Player.update()		1101,	1010,	110,	11,	1011,	11,	101
2017-01-05 16:42:31 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-05 16:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:31 AI_Player.update()	update
2017-01-05 16:42:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:31 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:31 AI_Player.update()	update
2017-01-05 16:42:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:32 AI_Player.update()	Search took1439ms
2017-01-05 16:42:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:32 AI_Player.update()		110,	101,	111,	1101,	111,	1011,	11
2017-01-05 16:42:32 AI_Player.update()		1010,	11,	1011,	1010,	1110,	101,	1001
2017-01-05 16:42:32 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 16:42:32 AI_Player.update()		1001,	1101,	1001,	110,	1110,	101,	1011
2017-01-05 16:42:32 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:42:32 AI_Player.update()		1101,	1010,	110,	11,	1011,	1110,	101
2017-01-05 16:42:32 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-05 16:42:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:32 AI_Player.update()	update
2017-01-05 16:42:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:42:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:32 AI_Player.update()	update
2017-01-05 16:42:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:34 AI_Player.update()	Search took1315ms
2017-01-05 16:42:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:34 AI_Player.update()		110,	101,	111,	1101,	111,	1011,	11
2017-01-05 16:42:34 AI_Player.update()		1010,	101,	1011,	1010,	1110,	101,	1001
2017-01-05 16:42:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 16:42:34 AI_Player.update()		1001,	101,	1001,	110,	1110,	101,	1011
2017-01-05 16:42:34 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:42:34 AI_Player.update()		1101,	1010,	110,	11,	1011,	1110,	101
2017-01-05 16:42:34 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-05 16:42:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:34 AI_Player.update()	update
2017-01-05 16:42:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:34 AI_Player.update()	update
2017-01-05 16:42:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:35 AI_Player.update()	Search took1160ms
2017-01-05 16:42:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:35 AI_Player.update()		110,	101,	111,	1101,	111,	1011,	11
2017-01-05 16:42:35 AI_Player.update()		1001,	1010,	101,	1011,	1010,	1110,	101
2017-01-05 16:42:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 16:42:35 AI_Player.update()		1001,	101,	1001,	110,	1110,	101,	1011
2017-01-05 16:42:35 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:42:35 AI_Player.update()		1101,	1010,	110,	11,	1011,	1110,	101
2017-01-05 16:42:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-05 16:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:35 AI_Player.update()	update
2017-01-05 16:42:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:42:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:35 AI_Player.update()	update
2017-01-05 16:42:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:35 AI_Player.update()	Search took160ms
2017-01-05 16:42:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:35 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-05 16:42:35 AI_Player.update()		1001,	1010,	101,	1101,	1010,	1110,	101
2017-01-05 16:42:35 AI_Player.update()		1110,	11,	1110,	1011,	111,	1001,	1011
2017-01-05 16:42:35 AI_Player.update()		1001,	101,	1001,	101,	1110,	101,	1011
2017-01-05 16:42:35 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1001,	1011
2017-01-05 16:42:35 AI_Player.update()		1101,	1010,	110,	1001,	1011,	1110,	101
2017-01-05 16:42:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-05 16:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:35 AI_Player.update()	update
2017-01-05 16:42:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:35 AI_Player.update()	update
2017-01-05 16:42:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:35 AI_Player.update()	Search took273ms
2017-01-05 16:42:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:35 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-05 16:42:35 AI_Player.update()		1001,	1010,	101,	11,	1010,	1110,	101
2017-01-05 16:42:35 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-05 16:42:35 AI_Player.update()		1001,	101,	1001,	1011,	1110,	101,	1011
2017-01-05 16:42:35 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:42:35 AI_Player.update()		1101,	1010,	110,	110,	1011,	1110,	101
2017-01-05 16:42:35 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-05 16:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:35 AI_Player.update()	update
2017-01-05 16:42:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:35 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:35 AI_Player.update()	update
2017-01-05 16:42:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:37 AI_Player.update()	Search took1635ms
2017-01-05 16:42:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:37 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-05 16:42:37 AI_Player.update()		101,	1001,	1010,	101,	11,	1010,	1110
2017-01-05 16:42:37 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-05 16:42:37 AI_Player.update()		1001,	101,	1001,	1011,	1110,	101,	1011
2017-01-05 16:42:37 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:42:37 AI_Player.update()		1101,	1010,	110,	110,	1011,	1110,	101
2017-01-05 16:42:37 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-05 16:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:37 AI_Player.update()	update
2017-01-05 16:42:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:37 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:42:37 AI_Player.update()	Player a has won!
2017-01-05 16:42:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:37 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:42:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:37 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:42:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:37 AI_Player.update()	update
2017-01-05 16:42:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:37 AI_Player.update()	Search took104ms
2017-01-05 16:42:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:37 AI_Player.update()		110,	1011,	111,	110,	111,	1010,	11
2017-01-05 16:42:37 AI_Player.update()		110,	1110,	11,	11,	110,	1100,	1010
2017-01-05 16:42:37 AI_Player.update()		1110,	111,	1110,	101,	111,	110,	1011
2017-01-05 16:42:37 AI_Player.update()		111,	11,	101,	1001,	1011,	1010,	1010
2017-01-05 16:42:37 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	110,	1011
2017-01-05 16:42:37 AI_Player.update()		1001,	1110,	1010,	101,	1010,	1010,	101
2017-01-05 16:42:37 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:37 AI_Player.update()	update
2017-01-05 16:42:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:37 AI_Player.update()	update
2017-01-05 16:42:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:38 AI_Player.update()	Search took504ms
2017-01-05 16:42:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:38 AI_Player.update()		110,	1011,	111,	1100,	111,	1010,	11
2017-01-05 16:42:38 AI_Player.update()		110,	1110,	11,	110,	110,	1100,	1010
2017-01-05 16:42:38 AI_Player.update()		1110,	111,	1110,	11,	111,	110,	1011
2017-01-05 16:42:38 AI_Player.update()		111,	11,	101,	101,	1011,	1010,	1010
2017-01-05 16:42:38 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-05 16:42:38 AI_Player.update()		1001,	1110,	1010,	1011,	1010,	1010,	101
2017-01-05 16:42:38 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:38 AI_Player.update()	update
2017-01-05 16:42:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:38 AI_Player.update()	update
2017-01-05 16:42:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:38 AI_Player.update()	Search took596ms
2017-01-05 16:42:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:38 AI_Player.update()		110,	1011,	111,	1100,	111,	1010,	11
2017-01-05 16:42:38 AI_Player.update()		110,	1011,	11,	110,	110,	1100,	1010
2017-01-05 16:42:38 AI_Player.update()		1110,	1110,	1110,	11,	111,	110,	1011
2017-01-05 16:42:38 AI_Player.update()		111,	111,	101,	101,	1011,	1010,	1010
2017-01-05 16:42:38 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-05 16:42:38 AI_Player.update()		1001,	1010,	1010,	1011,	1010,	1010,	101
2017-01-05 16:42:38 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:38 AI_Player.update()	update
2017-01-05 16:42:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:38 AI_Player.update()	update
2017-01-05 16:42:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:39 AI_Player.update()	Search took925ms
2017-01-05 16:42:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:39 AI_Player.update()		110,	1011,	111,	1100,	111,	1010,	11
2017-01-05 16:42:39 AI_Player.update()		110,	1011,	11,	110,	110,	1100,	1010
2017-01-05 16:42:39 AI_Player.update()		1110,	1110,	1110,	11,	111,	110,	1011
2017-01-05 16:42:39 AI_Player.update()		1010,	111,	111,	101,	101,	1011,	1010
2017-01-05 16:42:39 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-05 16:42:39 AI_Player.update()		1001,	1010,	1010,	1011,	1010,	1010,	101
2017-01-05 16:42:39 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:39 AI_Player.update()	update
2017-01-05 16:42:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:39 AI_Player.update()	update
2017-01-05 16:42:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:40 AI_Player.update()	Search took889ms
2017-01-05 16:42:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:40 AI_Player.update()		110,	1011,	111,	1100,	111,	1010,	11
2017-01-05 16:42:40 AI_Player.update()		110,	1011,	11,	110,	110,	1100,	1010
2017-01-05 16:42:40 AI_Player.update()		1110,	1110,	1110,	11,	111,	110,	1011
2017-01-05 16:42:40 AI_Player.update()		1010,	1010,	111,	111,	101,	101,	1011
2017-01-05 16:42:40 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-05 16:42:40 AI_Player.update()		1001,	1010,	1010,	1011,	1010,	1010,	101
2017-01-05 16:42:40 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:40 AI_Player.update()	update
2017-01-05 16:42:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:40 AI_Player.update()	update
2017-01-05 16:42:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:41 AI_Player.update()	Search took1123ms
2017-01-05 16:42:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:41 AI_Player.update()		110,	1110,	111,	1100,	111,	1010,	11
2017-01-05 16:42:41 AI_Player.update()		110,	1011,	11,	110,	110,	1100,	1010
2017-01-05 16:42:41 AI_Player.update()		1110,	1011,	1110,	11,	111,	110,	1011
2017-01-05 16:42:41 AI_Player.update()		1010,	1110,	111,	111,	101,	101,	1011
2017-01-05 16:42:41 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-05 16:42:41 AI_Player.update()		1001,	11,	1010,	1011,	1010,	1010,	101
2017-01-05 16:42:41 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:41 AI_Player.update()	update
2017-01-05 16:42:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:41 AI_Player.update()	update
2017-01-05 16:42:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:43 AI_Player.update()	Search took1378ms
2017-01-05 16:42:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:43 AI_Player.update()		110,	1110,	111,	1100,	111,	1010,	11
2017-01-05 16:42:43 AI_Player.update()		110,	1011,	11,	110,	110,	1100,	1010
2017-01-05 16:42:43 AI_Player.update()		1110,	1011,	1110,	11,	111,	110,	1011
2017-01-05 16:42:43 AI_Player.update()		1011,	1010,	1110,	111,	111,	101,	101
2017-01-05 16:42:43 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-05 16:42:43 AI_Player.update()		1001,	11,	1010,	1011,	1010,	1010,	101
2017-01-05 16:42:43 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:43 AI_Player.update()	update
2017-01-05 16:42:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:43 AI_Player.update()	update
2017-01-05 16:42:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:43 AI_Player.update()	Search took488ms
2017-01-05 16:42:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:43 AI_Player.update()		110,	1110,	111,	101,	111,	1010,	11
2017-01-05 16:42:43 AI_Player.update()		110,	1011,	11,	1100,	110,	1100,	1010
2017-01-05 16:42:43 AI_Player.update()		1110,	1011,	1110,	110,	111,	110,	1011
2017-01-05 16:42:43 AI_Player.update()		1011,	1010,	1110,	11,	111,	101,	101
2017-01-05 16:42:43 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-05 16:42:43 AI_Player.update()		1001,	11,	1010,	1001,	1010,	1010,	101
2017-01-05 16:42:43 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:43 AI_Player.update()	update
2017-01-05 16:42:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:43 AI_Player.update()	update
2017-01-05 16:42:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:44 AI_Player.update()	Search took780ms
2017-01-05 16:42:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:44 AI_Player.update()		110,	1011,	111,	101,	111,	1010,	11
2017-01-05 16:42:44 AI_Player.update()		110,	1011,	11,	1100,	110,	1100,	1010
2017-01-05 16:42:44 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 16:42:44 AI_Player.update()		1011,	1010,	1110,	11,	111,	101,	101
2017-01-05 16:42:44 AI_Player.update()		1110,	11,	1101,	111,	1011,	110,	1011
2017-01-05 16:42:44 AI_Player.update()		1001,	1010,	1010,	1001,	1010,	1010,	101
2017-01-05 16:42:44 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:44 AI_Player.update()	update
2017-01-05 16:42:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:44 AI_Player.update()	update
2017-01-05 16:42:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:44 AI_Player.update()	Search took159ms
2017-01-05 16:42:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:44 AI_Player.update()		110,	1110,	111,	101,	111,	1010,	11
2017-01-05 16:42:44 AI_Player.update()		110,	1011,	11,	1100,	110,	1100,	1010
2017-01-05 16:42:44 AI_Player.update()		1110,	1011,	1110,	110,	111,	110,	1011
2017-01-05 16:42:44 AI_Player.update()		1011,	1010,	1110,	11,	111,	101,	101
2017-01-05 16:42:44 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-05 16:42:44 AI_Player.update()		1001,	11,	1010,	1001,	1010,	1010,	101
2017-01-05 16:42:44 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:44 AI_Player.update()	update
2017-01-05 16:42:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:44 AI_Player.update()	update
2017-01-05 16:42:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took658ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	1110,	111,	101,	111,	1010,	11
2017-01-05 16:42:45 AI_Player.update()		1010,	110,	1011,	11,	1100,	110,	1100
2017-01-05 16:42:45 AI_Player.update()		1110,	1011,	1110,	110,	111,	110,	1011
2017-01-05 16:42:45 AI_Player.update()		1011,	1010,	1110,	11,	111,	101,	101
2017-01-05 16:42:45 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	11,	1010,	1001,	1010,	1010,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:42:45 AI_Player.update()	Player a has won!
2017-01-05 16:42:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:42:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:45 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took32ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	1101,	111,	101,	111,	110,	11
2017-01-05 16:42:45 AI_Player.update()		101,	1010,	1100,	1100,	11,	110,	1010
2017-01-05 16:42:45 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:42:45 AI_Player.update()		1010,	1001,	1011,	111,	110,	1010,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	101,	1101,	1100,	1011,	11,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	101,	1100,	11,	1100,	1100,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took78ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	1101,	111,	1100,	111,	110,	11
2017-01-05 16:42:45 AI_Player.update()		101,	1010,	1100,	1010,	11,	110,	1010
2017-01-05 16:42:45 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-05 16:42:45 AI_Player.update()		1010,	1001,	1011,	1100,	110,	1010,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	101,	1100,	1101,	1100,	1100,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took25ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	1101,	111,	1010,	111,	110,	11
2017-01-05 16:42:45 AI_Player.update()		101,	1010,	1100,	111,	11,	110,	1010
2017-01-05 16:42:45 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 16:42:45 AI_Player.update()		1010,	1001,	1011,	11,	110,	1010,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	101,	1100,	101,	1100,	1100,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took142ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	1101,	111,	1010,	111,	110,	11
2017-01-05 16:42:45 AI_Player.update()		1010,	101,	1010,	1100,	111,	11,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 16:42:45 AI_Player.update()		1010,	1001,	1011,	11,	110,	1010,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	101,	1100,	101,	1100,	1100,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took22ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	1101,	111,	1010,	111,	110,	11
2017-01-05 16:42:45 AI_Player.update()		110,	1010,	101,	1010,	1100,	111,	11
2017-01-05 16:42:45 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 16:42:45 AI_Player.update()		1010,	1001,	1011,	11,	110,	1010,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	101,	1100,	101,	1100,	1100,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took142ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:42:45 AI_Player.update()		110,	1001,	101,	1010,	1100,	111,	11
2017-01-05 16:42:45 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 16:42:45 AI_Player.update()		1010,	101,	1011,	11,	110,	1010,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	1100,	1100,	101,	1100,	1100,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took124ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-05 16:42:45 AI_Player.update()		110,	1001,	101,	1010,	1100,	110,	11
2017-01-05 16:42:45 AI_Player.update()		1110,	1001,	1110,	1100,	111,	111,	1011
2017-01-05 16:42:45 AI_Player.update()		1010,	101,	1011,	11,	110,	110,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	1100,	1100,	101,	1100,	11,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took33ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-05 16:42:45 AI_Player.update()		1001,	101,	1010,	1100,	110,	11,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	1001,	1110,	1100,	111,	111,	1011
2017-01-05 16:42:45 AI_Player.update()		1010,	101,	1011,	11,	110,	110,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	1100,	1100,	101,	1100,	11,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took79ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:42:45 AI_Player.update()		1001,	1001,	1010,	1100,	110,	11,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-05 16:42:45 AI_Player.update()		1010,	101,	1011,	11,	110,	110,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	1101,	1100,	101,	1100,	11,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:45 AI_Player.update()	Search took72ms
2017-01-05 16:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-05 16:42:45 AI_Player.update()		1001,	101,	1010,	1100,	110,	11,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-05 16:42:45 AI_Player.update()		1010,	1100,	1011,	11,	110,	110,	110
2017-01-05 16:42:45 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:42:45 AI_Player.update()		1001,	1010,	1100,	101,	1100,	11,	101
2017-01-05 16:42:45 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:45 AI_Player.update()	update
2017-01-05 16:42:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:46 AI_Player.update()	Search took146ms
2017-01-05 16:42:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:46 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-05 16:42:46 AI_Player.update()		110,	1001,	101,	1010,	1100,	110,	11
2017-01-05 16:42:46 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-05 16:42:46 AI_Player.update()		1010,	1100,	1011,	11,	110,	110,	110
2017-01-05 16:42:46 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:42:46 AI_Player.update()		1001,	1010,	1100,	101,	1100,	11,	101
2017-01-05 16:42:46 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:46 AI_Player.update()	update
2017-01-05 16:42:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:46 AI_Player.update()	update
2017-01-05 16:42:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:46 AI_Player.update()	Search took666ms
2017-01-05 16:42:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:46 AI_Player.update()		110,	1001,	111,	1010,	111,	110,	11
2017-01-05 16:42:46 AI_Player.update()		110,	1001,	101,	1010,	1100,	111,	11
2017-01-05 16:42:46 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-05 16:42:46 AI_Player.update()		1010,	1100,	1011,	11,	110,	1010,	110
2017-01-05 16:42:46 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-05 16:42:46 AI_Player.update()		1001,	1010,	1100,	101,	1100,	1100,	101
2017-01-05 16:42:46 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:46 AI_Player.update()	update
2017-01-05 16:42:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:46 AI_Player.update()	update
2017-01-05 16:42:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:47 AI_Player.update()	Search took513ms
2017-01-05 16:42:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:47 AI_Player.update()		110,	1001,	111,	1010,	111,	110,	11
2017-01-05 16:42:47 AI_Player.update()		1001,	101,	1010,	1100,	111,	11,	110
2017-01-05 16:42:47 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-05 16:42:47 AI_Player.update()		1010,	1100,	1011,	11,	110,	1010,	110
2017-01-05 16:42:47 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-05 16:42:47 AI_Player.update()		1001,	1010,	1100,	101,	1100,	1100,	101
2017-01-05 16:42:47 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:47 AI_Player.update()	update
2017-01-05 16:42:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:47 AI_Player.update()	update
2017-01-05 16:42:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:47 AI_Player.update()	Search took538ms
2017-01-05 16:42:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:47 AI_Player.update()		110,	1001,	111,	1100,	111,	110,	11
2017-01-05 16:42:47 AI_Player.update()		1001,	101,	1010,	1100,	111,	11,	110
2017-01-05 16:42:47 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-05 16:42:47 AI_Player.update()		1010,	1100,	1011,	1101,	110,	1010,	110
2017-01-05 16:42:47 AI_Player.update()		1110,	1101,	1101,	101,	1011,	11,	1011
2017-01-05 16:42:47 AI_Player.update()		1001,	1010,	1100,	1100,	1100,	1100,	101
2017-01-05 16:42:47 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:47 AI_Player.update()	update
2017-01-05 16:42:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:47 AI_Player.update()	update
2017-01-05 16:42:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:48 AI_Player.update()	Search took425ms
2017-01-05 16:42:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:48 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-05 16:42:48 AI_Player.update()		1001,	101,	1010,	1100,	111,	110,	110
2017-01-05 16:42:48 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 16:42:48 AI_Player.update()		1010,	1100,	1011,	1101,	110,	11,	110
2017-01-05 16:42:48 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:42:48 AI_Player.update()		1001,	1010,	1100,	1100,	1100,	1001,	101
2017-01-05 16:42:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 16:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:48 AI_Player.update()	update
2017-01-05 16:42:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:48 AI_Player.update()	update
2017-01-05 16:42:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:48 AI_Player.update()	Search took565ms
2017-01-05 16:42:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:48 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 16:42:48 AI_Player.update()		1001,	101,	1010,	1100,	111,	110,	110
2017-01-05 16:42:48 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 16:42:48 AI_Player.update()		1010,	1100,	1011,	11,	110,	11,	110
2017-01-05 16:42:48 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:42:48 AI_Player.update()		1001,	1010,	1100,	101,	1100,	1001,	101
2017-01-05 16:42:48 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:48 AI_Player.update()	update
2017-01-05 16:42:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:48 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:48 AI_Player.update()	update
2017-01-05 16:42:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:49 AI_Player.update()	Search took517ms
2017-01-05 16:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 16:42:49 AI_Player.update()		1001,	101,	1010,	1100,	111,	110,	110
2017-01-05 16:42:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 16:42:49 AI_Player.update()		1010,	1101,	1011,	11,	110,	11,	110
2017-01-05 16:42:49 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:42:49 AI_Player.update()		1001,	101,	1100,	101,	1100,	1001,	101
2017-01-05 16:42:49 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:42:49 AI_Player.update()	Player a has won!
2017-01-05 16:42:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:49 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:42:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:49 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:49 AI_Player.update()	Search took20ms
2017-01-05 16:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-05 16:42:49 AI_Player.update()		110,	1110,	110,	1010,	1001,	101,	111
2017-01-05 16:42:49 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 16:42:49 AI_Player.update()		101,	101,	111,	110,	1010,	101,	101
2017-01-05 16:42:49 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	101,	1011
2017-01-05 16:42:49 AI_Player.update()		11,	111,	101,	1001,	1011,	1100,	1101
2017-01-05 16:42:49 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:49 AI_Player.update()	Search took16ms
2017-01-05 16:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:42:49 AI_Player.update()		110,	1110,	110,	1010,	1001,	1100,	111
2017-01-05 16:42:49 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 16:42:49 AI_Player.update()		101,	101,	111,	110,	1010,	101,	101
2017-01-05 16:42:49 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	1100,	1011
2017-01-05 16:42:49 AI_Player.update()		11,	111,	101,	1001,	1011,	11,	1101
2017-01-05 16:42:49 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:42:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:49 AI_Player.update()	Search took169ms
2017-01-05 16:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 16:42:49 AI_Player.update()		110,	1110,	110,	1010,	1001,	1100,	111
2017-01-05 16:42:49 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 16:42:49 AI_Player.update()		101,	101,	111,	1110,	1010,	101,	101
2017-01-05 16:42:49 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:49 AI_Player.update()		11,	111,	101,	1100,	1011,	11,	1101
2017-01-05 16:42:49 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:49 AI_Player.update()	Search took49ms
2017-01-05 16:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 16:42:49 AI_Player.update()		1110,	110,	1010,	1001,	1100,	111,	110
2017-01-05 16:42:49 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 16:42:49 AI_Player.update()		101,	101,	111,	1110,	1010,	101,	101
2017-01-05 16:42:49 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:49 AI_Player.update()		11,	111,	101,	1100,	1011,	11,	1101
2017-01-05 16:42:49 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:42:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:49 AI_Player.update()	Search took242ms
2017-01-05 16:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:42:49 AI_Player.update()		1110,	1100,	1010,	1001,	1100,	111,	110
2017-01-05 16:42:49 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 16:42:49 AI_Player.update()		101,	1011,	111,	1110,	1010,	101,	101
2017-01-05 16:42:49 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:49 AI_Player.update()		11,	110,	101,	1100,	1011,	11,	1101
2017-01-05 16:42:49 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	1 3
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:42:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:49 AI_Player.update()	update
2017-01-05 16:42:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:50 AI_Player.update()	Search took172ms
2017-01-05 16:42:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 16:42:50 AI_Player.update()		1110,	110,	1010,	1001,	1100,	111,	110
2017-01-05 16:42:50 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 16:42:50 AI_Player.update()		101,	101,	111,	1110,	1010,	101,	101
2017-01-05 16:42:50 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:50 AI_Player.update()		11,	111,	101,	1100,	1011,	11,	1101
2017-01-05 16:42:50 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()	update
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:42:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()	update
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:50 AI_Player.update()	Search took194ms
2017-01-05 16:42:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:42:50 AI_Player.update()		1110,	1100,	1010,	1001,	1100,	111,	110
2017-01-05 16:42:50 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 16:42:50 AI_Player.update()		101,	1011,	111,	1110,	1010,	101,	101
2017-01-05 16:42:50 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:50 AI_Player.update()		11,	110,	101,	1100,	1011,	11,	1101
2017-01-05 16:42:50 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()	update
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()	update
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:50 AI_Player.update()	Search took110ms
2017-01-05 16:42:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 16:42:50 AI_Player.update()		1110,	110,	1010,	1001,	1100,	111,	110
2017-01-05 16:42:50 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 16:42:50 AI_Player.update()		101,	101,	111,	1110,	1010,	101,	101
2017-01-05 16:42:50 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:50 AI_Player.update()		11,	111,	101,	1100,	1011,	11,	1101
2017-01-05 16:42:50 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()	update
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()	update
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:50 AI_Player.update()	Search took600ms
2017-01-05 16:42:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 16:42:50 AI_Player.update()		110,	1010,	1001,	1100,	111,	110,	1110
2017-01-05 16:42:50 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 16:42:50 AI_Player.update()		101,	101,	111,	1110,	1010,	101,	101
2017-01-05 16:42:50 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:50 AI_Player.update()		11,	111,	101,	1100,	1011,	11,	1101
2017-01-05 16:42:50 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	2 4
2017-01-05 16:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()	update
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:42:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:50 AI_Player.update()	update
2017-01-05 16:42:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:51 AI_Player.update()	Search took238ms
2017-01-05 16:42:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:51 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:42:51 AI_Player.update()		110,	1100,	1001,	1100,	111,	110,	1110
2017-01-05 16:42:51 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 16:42:51 AI_Player.update()		101,	1011,	111,	1110,	1010,	101,	101
2017-01-05 16:42:51 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:51 AI_Player.update()		11,	110,	101,	1100,	1011,	11,	1101
2017-01-05 16:42:51 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:51 AI_Player.update()	update
2017-01-05 16:42:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:42:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:51 AI_Player.update()	update
2017-01-05 16:42:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:51 AI_Player.update()	Search took664ms
2017-01-05 16:42:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:51 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:42:51 AI_Player.update()		110,	1100,	1001,	1100,	111,	110,	1110
2017-01-05 16:42:51 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 16:42:51 AI_Player.update()		101,	1011,	111,	1110,	1010,	101,	101
2017-01-05 16:42:51 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:51 AI_Player.update()		1101,	11,	110,	101,	1100,	1011,	11
2017-01-05 16:42:51 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:51 AI_Player.update()	update
2017-01-05 16:42:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:42:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:51 AI_Player.update()	update
2017-01-05 16:42:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:52 AI_Player.update()	Search took891ms
2017-01-05 16:42:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:52 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:42:52 AI_Player.update()		110,	1100,	1001,	1100,	111,	110,	1110
2017-01-05 16:42:52 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 16:42:52 AI_Player.update()		101,	1011,	111,	1110,	1010,	101,	101
2017-01-05 16:42:52 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:52 AI_Player.update()		11,	1101,	11,	110,	101,	1100,	1011
2017-01-05 16:42:52 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:52 AI_Player.update()	update
2017-01-05 16:42:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:42:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:52 AI_Player.update()	update
2017-01-05 16:42:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:53 AI_Player.update()	Search took863ms
2017-01-05 16:42:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:53 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:42:53 AI_Player.update()		110,	1100,	1001,	1100,	111,	101,	1110
2017-01-05 16:42:53 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 16:42:53 AI_Player.update()		101,	1011,	111,	1110,	1010,	1100,	101
2017-01-05 16:42:53 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:53 AI_Player.update()		11,	1101,	11,	110,	101,	1010,	1011
2017-01-05 16:42:53 AI_Player.update()		1100,	1101,	1101,	101,	1101,	101,	1001
2017-01-05 16:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	4 6
2017-01-05 16:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:53 AI_Player.update()	update
2017-01-05 16:42:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:42:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:53 AI_Player.update()	update
2017-01-05 16:42:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:54 AI_Player.update()	Search took989ms
2017-01-05 16:42:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:54 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 16:42:54 AI_Player.update()		110,	1100,	1001,	110,	111,	101,	1110
2017-01-05 16:42:54 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:42:54 AI_Player.update()		101,	1011,	111,	1001,	1010,	1100,	101
2017-01-05 16:42:54 AI_Player.update()		1110,	111,	1101,	110,	1011,	1100,	1011
2017-01-05 16:42:54 AI_Player.update()		11,	1101,	11,	101,	101,	1010,	1011
2017-01-05 16:42:54 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:54 AI_Player.update()	update
2017-01-05 16:42:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:42:54 AI_Player.update()	Player b has won!
2017-01-05 16:42:54 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:54 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:42:54 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:42:54 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:42:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:54 AI_Player.update()	update
2017-01-05 16:42:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:54 AI_Player.update()	Search took68ms
2017-01-05 16:42:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:54 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-05 16:42:54 AI_Player.update()		110,	101,	110,	1011,	1100,	110,	111
2017-01-05 16:42:54 AI_Player.update()		1110,	1001,	1110,	111,	111,	1101,	1011
2017-01-05 16:42:54 AI_Player.update()		1001,	110,	101,	101,	1010,	1010,	101
2017-01-05 16:42:54 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:54 AI_Player.update()		1011,	110,	1010,	1001,	101,	1101,	1100
2017-01-05 16:42:54 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-05 16:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:54 AI_Player.update()	update
2017-01-05 16:42:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:54 AI_Player.update()	update
2017-01-05 16:42:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:54 AI_Player.update()	Search took85ms
2017-01-05 16:42:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:54 AI_Player.update()		110,	101,	111,	111,	111,	110,	11
2017-01-05 16:42:54 AI_Player.update()		110,	101,	110,	1011,	1100,	1101,	111
2017-01-05 16:42:54 AI_Player.update()		1110,	1001,	1110,	111,	111,	1010,	1011
2017-01-05 16:42:54 AI_Player.update()		1001,	110,	101,	101,	1010,	1100,	101
2017-01-05 16:42:54 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:54 AI_Player.update()		1011,	110,	1010,	1001,	101,	101,	1100
2017-01-05 16:42:54 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:54 AI_Player.update()	update
2017-01-05 16:42:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:54 AI_Player.update()	update
2017-01-05 16:42:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:55 AI_Player.update()	Search took454ms
2017-01-05 16:42:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:55 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 16:42:55 AI_Player.update()		110,	101,	110,	111,	1100,	1101,	111
2017-01-05 16:42:55 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1010,	1011
2017-01-05 16:42:55 AI_Player.update()		1001,	110,	101,	111,	1010,	1100,	101
2017-01-05 16:42:55 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1101,	1011
2017-01-05 16:42:55 AI_Player.update()		1011,	110,	1010,	1001,	101,	101,	1100
2017-01-05 16:42:55 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:55 AI_Player.update()	update
2017-01-05 16:42:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:55 AI_Player.update()	update
2017-01-05 16:42:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:55 AI_Player.update()	Search took158ms
2017-01-05 16:42:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:55 AI_Player.update()		110,	101,	111,	111,	111,	110,	11
2017-01-05 16:42:55 AI_Player.update()		110,	101,	110,	1011,	1100,	1101,	111
2017-01-05 16:42:55 AI_Player.update()		1110,	1001,	1110,	111,	111,	1010,	1011
2017-01-05 16:42:55 AI_Player.update()		1001,	110,	101,	101,	1010,	1100,	101
2017-01-05 16:42:55 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:55 AI_Player.update()		1011,	110,	1010,	1001,	101,	101,	1100
2017-01-05 16:42:55 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:55 AI_Player.update()	update
2017-01-05 16:42:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:55 AI_Player.update()	update
2017-01-05 16:42:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:55 AI_Player.update()	Search took108ms
2017-01-05 16:42:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:55 AI_Player.update()		110,	101,	111,	111,	111,	110,	11
2017-01-05 16:42:55 AI_Player.update()		110,	1001,	110,	1011,	1100,	1101,	111
2017-01-05 16:42:55 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-05 16:42:55 AI_Player.update()		1001,	1010,	101,	101,	1010,	1100,	101
2017-01-05 16:42:55 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:55 AI_Player.update()		1011,	1100,	1010,	1001,	101,	101,	1100
2017-01-05 16:42:55 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:55 AI_Player.update()	update
2017-01-05 16:42:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:55 AI_Player.update()	update
2017-01-05 16:42:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:56 AI_Player.update()	Search took484ms
2017-01-05 16:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-05 16:42:56 AI_Player.update()		110,	1001,	110,	111,	1100,	1101,	111
2017-01-05 16:42:56 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:56 AI_Player.update()		1001,	1010,	101,	1001,	1010,	1100,	101
2017-01-05 16:42:56 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:56 AI_Player.update()		1011,	1100,	1010,	1010,	101,	101,	1100
2017-01-05 16:42:56 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:56 AI_Player.update()	Search took81ms
2017-01-05 16:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-05 16:42:56 AI_Player.update()		110,	1001,	110,	111,	1100,	1101,	111
2017-01-05 16:42:56 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:56 AI_Player.update()		1001,	1010,	101,	1001,	1010,	1100,	101
2017-01-05 16:42:56 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	1010,	1010,	101,	101,	1100,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:56 AI_Player.update()	Search took103ms
2017-01-05 16:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()		110,	1001,	111,	1011,	111,	110,	11
2017-01-05 16:42:56 AI_Player.update()		110,	110,	110,	111,	1100,	1101,	111
2017-01-05 16:42:56 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:56 AI_Player.update()		1001,	110,	101,	1001,	1010,	1100,	101
2017-01-05 16:42:56 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	101,	1010,	101,	101,	1100,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:56 AI_Player.update()	Search took98ms
2017-01-05 16:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()		110,	110,	111,	1011,	111,	110,	11
2017-01-05 16:42:56 AI_Player.update()		110,	1010,	110,	111,	1100,	1101,	111
2017-01-05 16:42:56 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:42:56 AI_Player.update()		1001,	1010,	101,	1001,	1010,	1100,	101
2017-01-05 16:42:56 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	101,	1010,	101,	101,	1100,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1010,	1001
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:56 AI_Player.update()	Search took105ms
2017-01-05 16:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()		110,	110,	111,	111,	111,	110,	11
2017-01-05 16:42:56 AI_Player.update()		110,	1010,	110,	1011,	1100,	1101,	111
2017-01-05 16:42:56 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-05 16:42:56 AI_Player.update()		1001,	1010,	101,	101,	1010,	1100,	101
2017-01-05 16:42:56 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	101,	1010,	1001,	101,	1100,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:56 AI_Player.update()	Search took286ms
2017-01-05 16:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()		110,	110,	111,	111,	111,	110,	11
2017-01-05 16:42:56 AI_Player.update()		110,	1010,	110,	1011,	1100,	1101,	111
2017-01-05 16:42:56 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-05 16:42:56 AI_Player.update()		1010,	101,	101,	1010,	1100,	101,	1001
2017-01-05 16:42:56 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	101,	1010,	1001,	101,	1100,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:56 AI_Player.update()	Search took62ms
2017-01-05 16:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()		110,	110,	111,	111,	111,	110,	11
2017-01-05 16:42:56 AI_Player.update()		110,	1010,	110,	1011,	1100,	1101,	111
2017-01-05 16:42:56 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-05 16:42:56 AI_Player.update()		1001,	1010,	101,	101,	1010,	1100,	101
2017-01-05 16:42:56 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	101,	1010,	1001,	101,	1100,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:56 AI_Player.update()	Search took157ms
2017-01-05 16:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()		110,	110,	111,	111,	111,	110,	11
2017-01-05 16:42:56 AI_Player.update()		110,	1010,	110,	1011,	1100,	1101,	111
2017-01-05 16:42:56 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-05 16:42:56 AI_Player.update()		1010,	101,	101,	1010,	1100,	101,	1001
2017-01-05 16:42:56 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	101,	1010,	1001,	101,	1100,	1011
2017-01-05 16:42:56 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:56 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:56 AI_Player.update()	update
2017-01-05 16:42:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:57 AI_Player.update()	Search took1000ms
2017-01-05 16:42:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:57 AI_Player.update()		110,	1010,	111,	111,	111,	110,	11
2017-01-05 16:42:57 AI_Player.update()		110,	110,	110,	1011,	1100,	1101,	111
2017-01-05 16:42:57 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-05 16:42:57 AI_Player.update()		1010,	101,	101,	1010,	1100,	101,	1001
2017-01-05 16:42:57 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-05 16:42:57 AI_Player.update()		1100,	1001,	1010,	1001,	101,	1100,	1011
2017-01-05 16:42:57 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 16:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:57 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:57 AI_Player.update()	update
2017-01-05 16:42:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:57 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:57 AI_Player.update()	update
2017-01-05 16:42:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:58 AI_Player.update()	Search took689ms
2017-01-05 16:42:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:58 AI_Player.update()		110,	1010,	111,	111,	111,	1101,	11
2017-01-05 16:42:58 AI_Player.update()		110,	110,	110,	1011,	1100,	1010,	111
2017-01-05 16:42:58 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 16:42:58 AI_Player.update()		1010,	101,	101,	1010,	1100,	1101,	1001
2017-01-05 16:42:58 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:58 AI_Player.update()		1100,	1001,	1010,	1001,	101,	1010,	1011
2017-01-05 16:42:58 AI_Player.update()		1100,	110,	1101,	101,	1101,	110,	1001
2017-01-05 16:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:58 AI_Player.update()	update
2017-01-05 16:42:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:58 AI_Player.update()	update
2017-01-05 16:42:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:42:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:42:59 AI_Player.update()	Search took1003ms
2017-01-05 16:42:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:59 AI_Player.update()		110,	1010,	111,	1011,	111,	1101,	11
2017-01-05 16:42:59 AI_Player.update()		110,	110,	110,	111,	1100,	1010,	111
2017-01-05 16:42:59 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:42:59 AI_Player.update()		1010,	101,	101,	1001,	1100,	1101,	1001
2017-01-05 16:42:59 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:42:59 AI_Player.update()		1100,	1001,	1010,	101,	101,	1010,	1011
2017-01-05 16:42:59 AI_Player.update()		1100,	110,	1101,	111,	1101,	110,	1001
2017-01-05 16:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:59 AI_Player.update()	update
2017-01-05 16:42:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:42:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:42:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:42:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:59 AI_Player.update()	update
2017-01-05 16:42:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:42:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:42:59 AI_Player.update()	Search took160ms
2017-01-05 16:42:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:59 AI_Player.update()		110,	1010,	111,	1011,	111,	1010,	11
2017-01-05 16:42:59 AI_Player.update()		110,	110,	110,	111,	1100,	101,	111
2017-01-05 16:42:59 AI_Player.update()		1110,	101,	1110,	1010,	111,	1101,	1011
2017-01-05 16:42:59 AI_Player.update()		1010,	101,	101,	1001,	1100,	1100,	1001
2017-01-05 16:42:59 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:42:59 AI_Player.update()		1100,	1001,	1010,	101,	101,	110,	1011
2017-01-05 16:42:59 AI_Player.update()		1100,	110,	1101,	111,	1101,	1101,	1001
2017-01-05 16:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:42:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:59 AI_Player.update()	update
2017-01-05 16:42:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:42:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:42:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:42:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:42:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:42:59 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:42:59 AI_Player.update()	update
2017-01-05 16:42:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:00 AI_Player.update()	Search took239ms
2017-01-05 16:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()		110,	110,	111,	1011,	111,	1010,	11
2017-01-05 16:43:00 AI_Player.update()		110,	101,	110,	111,	1100,	101,	111
2017-01-05 16:43:00 AI_Player.update()		1110,	101,	1110,	1010,	111,	1101,	1011
2017-01-05 16:43:00 AI_Player.update()		1010,	101,	101,	1001,	1100,	1100,	1001
2017-01-05 16:43:00 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:43:00 AI_Player.update()		1100,	110,	1010,	101,	101,	110,	1011
2017-01-05 16:43:00 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1101,	1001
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:00 AI_Player.update()	Search took52ms
2017-01-05 16:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-05 16:43:00 AI_Player.update()		110,	101,	110,	1011,	1100,	101,	111
2017-01-05 16:43:00 AI_Player.update()		1110,	101,	1110,	111,	111,	1101,	1011
2017-01-05 16:43:00 AI_Player.update()		1010,	101,	101,	1010,	1100,	1100,	1001
2017-01-05 16:43:00 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:43:00 AI_Player.update()		1100,	110,	1010,	1001,	101,	110,	1011
2017-01-05 16:43:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1101,	1001
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:00 AI_Player.update()	Search took367ms
2017-01-05 16:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()		110,	110,	111,	111,	111,	1101,	11
2017-01-05 16:43:00 AI_Player.update()		110,	101,	110,	1011,	1100,	1010,	111
2017-01-05 16:43:00 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 16:43:00 AI_Player.update()		1010,	101,	101,	1010,	1100,	1101,	1001
2017-01-05 16:43:00 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:43:00 AI_Player.update()		1100,	110,	1010,	1001,	101,	1010,	1011
2017-01-05 16:43:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:43:00 AI_Player.update()	Player b has won!
2017-01-05 16:43:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:00 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:43:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:00 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:00 AI_Player.update()	Search took154ms
2017-01-05 16:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 16:43:00 AI_Player.update()		1010,	1110,	101,	101,	1010,	1100,	101
2017-01-05 16:43:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 16:43:00 AI_Player.update()		110,	1100,	1010,	1001,	110,	110,	1010
2017-01-05 16:43:00 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-05 16:43:00 AI_Player.update()		1100,	1010,	1100,	110,	110,	1001,	111
2017-01-05 16:43:00 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:00 AI_Player.update()	Search took38ms
2017-01-05 16:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 16:43:00 AI_Player.update()		1110,	101,	101,	1010,	1100,	101,	1010
2017-01-05 16:43:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 16:43:00 AI_Player.update()		110,	1100,	1010,	1001,	110,	110,	1010
2017-01-05 16:43:00 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-05 16:43:00 AI_Player.update()		1100,	1010,	1100,	110,	110,	1001,	111
2017-01-05 16:43:00 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:00 AI_Player.update()	Search took146ms
2017-01-05 16:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 16:43:00 AI_Player.update()		101,	101,	1010,	1100,	101,	1010,	1110
2017-01-05 16:43:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 16:43:00 AI_Player.update()		110,	1100,	1010,	1001,	110,	110,	1010
2017-01-05 16:43:00 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-05 16:43:00 AI_Player.update()		1100,	1010,	1100,	110,	110,	1001,	111
2017-01-05 16:43:00 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:43:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:00 AI_Player.update()	Search took39ms
2017-01-05 16:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 16:43:00 AI_Player.update()		1110,	101,	101,	1010,	1100,	101,	1010
2017-01-05 16:43:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 16:43:00 AI_Player.update()		110,	1100,	1010,	1001,	110,	110,	1010
2017-01-05 16:43:00 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-05 16:43:00 AI_Player.update()		1100,	1010,	1100,	110,	110,	1001,	111
2017-01-05 16:43:00 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-05 16:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:00 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:00 AI_Player.update()	update
2017-01-05 16:43:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:01 AI_Player.update()	Search took342ms
2017-01-05 16:43:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:01 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 16:43:01 AI_Player.update()		1110,	101,	101,	1010,	1100,	1010,	1010
2017-01-05 16:43:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:43:01 AI_Player.update()		110,	1100,	1010,	1001,	110,	110,	1010
2017-01-05 16:43:01 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 16:43:01 AI_Player.update()		1100,	1010,	1100,	110,	110,	1101,	111
2017-01-05 16:43:01 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:01 AI_Player.update()	update
2017-01-05 16:43:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	4 1
2017-01-05 16:43:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:01 AI_Player.update()	update
2017-01-05 16:43:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:01 AI_Player.update()	Search took612ms
2017-01-05 16:43:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:01 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 16:43:01 AI_Player.update()		1010,	1110,	101,	101,	1010,	1100,	1010
2017-01-05 16:43:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:43:01 AI_Player.update()		110,	1100,	1010,	1001,	110,	110,	1010
2017-01-05 16:43:01 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 16:43:01 AI_Player.update()		1100,	1010,	1100,	110,	110,	1101,	111
2017-01-05 16:43:01 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	4 1
2017-01-05 16:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:01 AI_Player.update()	update
2017-01-05 16:43:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:01 AI_Player.update()	update
2017-01-05 16:43:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:02 AI_Player.update()	Search took826ms
2017-01-05 16:43:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:02 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 16:43:02 AI_Player.update()		1010,	1110,	101,	101,	1010,	1100,	1010
2017-01-05 16:43:02 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:43:02 AI_Player.update()		1100,	1010,	1001,	110,	110,	1010,	110
2017-01-05 16:43:02 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 16:43:02 AI_Player.update()		1100,	1010,	1100,	110,	110,	1101,	111
2017-01-05 16:43:02 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:02 AI_Player.update()	update
2017-01-05 16:43:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:43:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:02 AI_Player.update()	update
2017-01-05 16:43:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:02 AI_Player.update()	Search took283ms
2017-01-05 16:43:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:02 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:43:02 AI_Player.update()		1010,	1110,	101,	101,	1010,	1100,	1010
2017-01-05 16:43:02 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 16:43:02 AI_Player.update()		1100,	1010,	1001,	110,	110,	1010,	110
2017-01-05 16:43:02 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 16:43:02 AI_Player.update()		1100,	1010,	1100,	101,	110,	1101,	111
2017-01-05 16:43:02 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:02 AI_Player.update()	update
2017-01-05 16:43:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:02 AI_Player.update()	update
2017-01-05 16:43:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:03 AI_Player.update()	Search took126ms
2017-01-05 16:43:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:03 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 16:43:03 AI_Player.update()		1010,	1110,	101,	101,	1010,	1100,	1010
2017-01-05 16:43:03 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:43:03 AI_Player.update()		1100,	1010,	1001,	110,	110,	1010,	110
2017-01-05 16:43:03 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 16:43:03 AI_Player.update()		1100,	1010,	1100,	110,	110,	1101,	111
2017-01-05 16:43:03 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:03 AI_Player.update()	update
2017-01-05 16:43:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:43:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:03 AI_Player.update()	update
2017-01-05 16:43:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:03 AI_Player.update()	Search took523ms
2017-01-05 16:43:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:03 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:43:03 AI_Player.update()		1010,	1110,	101,	101,	1010,	1100,	1010
2017-01-05 16:43:03 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 16:43:03 AI_Player.update()		1100,	1010,	1001,	110,	110,	1010,	110
2017-01-05 16:43:03 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 16:43:03 AI_Player.update()		1100,	1010,	1100,	101,	110,	1101,	111
2017-01-05 16:43:03 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:03 AI_Player.update()	update
2017-01-05 16:43:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:03 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:03 AI_Player.update()	update
2017-01-05 16:43:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:04 AI_Player.update()	Search took690ms
2017-01-05 16:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:43:04 AI_Player.update()		1010,	1110,	101,	101,	1010,	1100,	1010
2017-01-05 16:43:04 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 16:43:04 AI_Player.update()		1010,	1001,	110,	110,	1010,	110,	1100
2017-01-05 16:43:04 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 16:43:04 AI_Player.update()		1100,	1010,	1100,	101,	110,	1101,	111
2017-01-05 16:43:04 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1001,	1001
2017-01-05 16:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()	update
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:04 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:43:04 AI_Player.update()	Player a has won!
2017-01-05 16:43:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:04 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:43:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:04 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()	update
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:04 AI_Player.update()	Search took36ms
2017-01-05 16:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()		110,	101,	111,	1101,	111,	1001,	11
2017-01-05 16:43:04 AI_Player.update()		110,	101,	1001,	1100,	1010,	101,	110
2017-01-05 16:43:04 AI_Player.update()		1110,	1011,	1110,	1010,	111,	110,	1011
2017-01-05 16:43:04 AI_Player.update()		110,	110,	1110,	1010,	110,	1100,	101
2017-01-05 16:43:04 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-05 16:43:04 AI_Player.update()		101,	1100,	101,	1100,	1100,	110,	1001
2017-01-05 16:43:04 AI_Player.update()		1100,	110,	1101,	111,	1101,	101,	1001
2017-01-05 16:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()	update
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()	update
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:04 AI_Player.update()	Search took73ms
2017-01-05 16:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-05 16:43:04 AI_Player.update()		110,	101,	1001,	1100,	1010,	110,	110
2017-01-05 16:43:04 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1100,	1011
2017-01-05 16:43:04 AI_Player.update()		110,	110,	1110,	1010,	110,	110,	101
2017-01-05 16:43:04 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-05 16:43:04 AI_Player.update()		101,	1100,	101,	1100,	1100,	101,	1001
2017-01-05 16:43:04 AI_Player.update()		1100,	110,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()	update
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()	update
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:04 AI_Player.update()	Search took210ms
2017-01-05 16:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-05 16:43:04 AI_Player.update()		110,	101,	1001,	1100,	1010,	110,	110
2017-01-05 16:43:04 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:43:04 AI_Player.update()		110,	1011,	1110,	1010,	110,	110,	101
2017-01-05 16:43:04 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-05 16:43:04 AI_Player.update()		101,	1011,	101,	1100,	1100,	101,	1001
2017-01-05 16:43:04 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()	update
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()	update
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:04 AI_Player.update()	Search took258ms
2017-01-05 16:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-05 16:43:04 AI_Player.update()		101,	1001,	1100,	1010,	110,	110,	110
2017-01-05 16:43:04 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:43:04 AI_Player.update()		110,	1011,	1110,	1010,	110,	110,	101
2017-01-05 16:43:04 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-05 16:43:04 AI_Player.update()		101,	1011,	101,	1100,	1100,	101,	1001
2017-01-05 16:43:04 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()	update
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:43:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:04 AI_Player.update()	update
2017-01-05 16:43:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:05 AI_Player.update()	Search took452ms
2017-01-05 16:43:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-05 16:43:05 AI_Player.update()		101,	1001,	1100,	1010,	110,	110,	110
2017-01-05 16:43:05 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:43:05 AI_Player.update()		101,	110,	1011,	1110,	1010,	110,	110
2017-01-05 16:43:05 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-05 16:43:05 AI_Player.update()		101,	1011,	101,	1100,	1100,	101,	1001
2017-01-05 16:43:05 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()	update
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()	update
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:05 AI_Player.update()	Search took59ms
2017-01-05 16:43:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-05 16:43:05 AI_Player.update()		101,	1001,	1100,	1010,	110,	110,	110
2017-01-05 16:43:05 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:43:05 AI_Player.update()		110,	101,	110,	1011,	1110,	1010,	110
2017-01-05 16:43:05 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-05 16:43:05 AI_Player.update()		101,	1011,	101,	1100,	1100,	101,	1001
2017-01-05 16:43:05 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()	update
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()	update
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:05 AI_Player.update()	Search took344ms
2017-01-05 16:43:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:43:05 AI_Player.update()		101,	1001,	1100,	1010,	110,	110,	110
2017-01-05 16:43:05 AI_Player.update()		1110,	101,	1110,	1011,	111,	1100,	1011
2017-01-05 16:43:05 AI_Player.update()		110,	101,	110,	1001,	1110,	1010,	110
2017-01-05 16:43:05 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:05 AI_Player.update()		101,	1011,	101,	111,	1100,	101,	1001
2017-01-05 16:43:05 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()	update
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()	update
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:05 AI_Player.update()	Search took149ms
2017-01-05 16:43:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:43:05 AI_Player.update()		1001,	1100,	1010,	110,	110,	110,	101
2017-01-05 16:43:05 AI_Player.update()		1110,	101,	1110,	1011,	111,	1100,	1011
2017-01-05 16:43:05 AI_Player.update()		110,	101,	110,	1001,	1110,	1010,	110
2017-01-05 16:43:05 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:05 AI_Player.update()		101,	1011,	101,	111,	1100,	101,	1001
2017-01-05 16:43:05 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()	update
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:05 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:05 AI_Player.update()	update
2017-01-05 16:43:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:06 AI_Player.update()	Search took470ms
2017-01-05 16:43:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:06 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:43:06 AI_Player.update()		1001,	1100,	1010,	110,	110,	110,	101
2017-01-05 16:43:06 AI_Player.update()		1110,	101,	1110,	1011,	111,	1100,	1011
2017-01-05 16:43:06 AI_Player.update()		110,	110,	101,	110,	1001,	1110,	1010
2017-01-05 16:43:06 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:06 AI_Player.update()		101,	1011,	101,	111,	1100,	101,	1001
2017-01-05 16:43:06 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:06 AI_Player.update()	update
2017-01-05 16:43:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:06 AI_Player.update()	update
2017-01-05 16:43:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:06 AI_Player.update()	Search took91ms
2017-01-05 16:43:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:06 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 16:43:06 AI_Player.update()		101,	1001,	1100,	1010,	110,	110,	110
2017-01-05 16:43:06 AI_Player.update()		1110,	101,	1110,	1011,	111,	1100,	1011
2017-01-05 16:43:06 AI_Player.update()		110,	110,	101,	110,	1001,	1110,	1010
2017-01-05 16:43:06 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:06 AI_Player.update()		101,	1011,	101,	111,	1100,	101,	1001
2017-01-05 16:43:06 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:06 AI_Player.update()	update
2017-01-05 16:43:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:06 AI_Player.update()	update
2017-01-05 16:43:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:06 AI_Player.update()	Search took103ms
2017-01-05 16:43:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:06 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 16:43:06 AI_Player.update()		101,	101,	1100,	1010,	110,	110,	110
2017-01-05 16:43:06 AI_Player.update()		1110,	110,	1110,	1011,	111,	1100,	1011
2017-01-05 16:43:06 AI_Player.update()		110,	110,	101,	110,	1001,	1110,	1010
2017-01-05 16:43:06 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:06 AI_Player.update()		101,	1100,	101,	111,	1100,	101,	1001
2017-01-05 16:43:06 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1001,	1001
2017-01-05 16:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:06 AI_Player.update()	update
2017-01-05 16:43:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:06 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:06 AI_Player.update()	update
2017-01-05 16:43:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:07 AI_Player.update()	Search took647ms
2017-01-05 16:43:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:07 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-05 16:43:07 AI_Player.update()		101,	101,	1100,	1010,	110,	101,	110
2017-01-05 16:43:07 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-05 16:43:07 AI_Player.update()		110,	110,	101,	110,	1001,	1100,	1010
2017-01-05 16:43:07 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1110,	1011
2017-01-05 16:43:07 AI_Player.update()		101,	1100,	101,	111,	1100,	110,	1001
2017-01-05 16:43:07 AI_Player.update()		1100,	110,	1101,	1101,	1101,	101,	1001
2017-01-05 16:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:07 AI_Player.update()	update
2017-01-05 16:43:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:07 AI_Player.update()	update
2017-01-05 16:43:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:07 AI_Player.update()	Search took553ms
2017-01-05 16:43:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:07 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:43:07 AI_Player.update()		101,	110,	1100,	1010,	110,	101,	110
2017-01-05 16:43:07 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-05 16:43:07 AI_Player.update()		110,	1011,	101,	110,	1001,	1100,	1010
2017-01-05 16:43:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1110,	1011
2017-01-05 16:43:07 AI_Player.update()		101,	110,	101,	111,	1100,	110,	1001
2017-01-05 16:43:07 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	101,	1001
2017-01-05 16:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:07 AI_Player.update()	update
2017-01-05 16:43:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:07 AI_Player.update()	update
2017-01-05 16:43:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:08 AI_Player.update()	Search took332ms
2017-01-05 16:43:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:43:08 AI_Player.update()		101,	110,	1100,	1010,	110,	101,	110
2017-01-05 16:43:08 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-05 16:43:08 AI_Player.update()		110,	1011,	101,	110,	1001,	1100,	1010
2017-01-05 16:43:08 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1110,	1011
2017-01-05 16:43:08 AI_Player.update()		110,	101,	111,	1100,	110,	1001,	101
2017-01-05 16:43:08 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	101,	1001
2017-01-05 16:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()	update
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()	update
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:08 AI_Player.update()	Search took103ms
2017-01-05 16:43:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 16:43:08 AI_Player.update()		101,	110,	1100,	1011,	110,	101,	110
2017-01-05 16:43:08 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 16:43:08 AI_Player.update()		110,	1011,	101,	1100,	1001,	1100,	1010
2017-01-05 16:43:08 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1110,	1011
2017-01-05 16:43:08 AI_Player.update()		110,	101,	111,	1101,	110,	1001,	101
2017-01-05 16:43:08 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 16:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()	update
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()	update
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:08 AI_Player.update()	Search took280ms
2017-01-05 16:43:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:43:08 AI_Player.update()		101,	110,	1100,	1011,	110,	101,	110
2017-01-05 16:43:08 AI_Player.update()		1110,	1011,	1110,	110,	111,	110,	1011
2017-01-05 16:43:08 AI_Player.update()		110,	1100,	101,	1100,	1001,	1100,	1010
2017-01-05 16:43:08 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1110,	1011
2017-01-05 16:43:08 AI_Player.update()		110,	1001,	111,	1101,	110,	1001,	101
2017-01-05 16:43:08 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()	update
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()	update
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:08 AI_Player.update()	Search took67ms
2017-01-05 16:43:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 16:43:08 AI_Player.update()		101,	110,	1100,	110,	110,	101,	110
2017-01-05 16:43:08 AI_Player.update()		1110,	1011,	1110,	1100,	111,	110,	1011
2017-01-05 16:43:08 AI_Player.update()		110,	1100,	101,	1100,	1001,	1100,	1010
2017-01-05 16:43:08 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1110,	1011
2017-01-05 16:43:08 AI_Player.update()		110,	1001,	111,	1010,	110,	1001,	101
2017-01-05 16:43:08 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()	update
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()	update
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:08 AI_Player.update()	Search took261ms
2017-01-05 16:43:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 16:43:08 AI_Player.update()		101,	110,	1100,	110,	110,	101,	110
2017-01-05 16:43:08 AI_Player.update()		1110,	1011,	1110,	1100,	111,	110,	1011
2017-01-05 16:43:08 AI_Player.update()		110,	1100,	101,	1100,	1001,	1100,	1010
2017-01-05 16:43:08 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1110,	1011
2017-01-05 16:43:08 AI_Player.update()		1001,	111,	1010,	110,	1001,	101,	110
2017-01-05 16:43:08 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()	update
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:08 AI_Player.update()	update
2017-01-05 16:43:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:09 AI_Player.update()	Search took87ms
2017-01-05 16:43:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 16:43:09 AI_Player.update()		101,	110,	1100,	110,	110,	101,	110
2017-01-05 16:43:09 AI_Player.update()		1110,	1011,	1110,	1100,	111,	110,	1011
2017-01-05 16:43:09 AI_Player.update()		1010,	110,	1100,	101,	1100,	1001,	1100
2017-01-05 16:43:09 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1110,	1011
2017-01-05 16:43:09 AI_Player.update()		1001,	111,	1010,	110,	1001,	101,	110
2017-01-05 16:43:09 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()	update
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()	update
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:09 AI_Player.update()	Search took246ms
2017-01-05 16:43:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 16:43:09 AI_Player.update()		101,	1011,	1100,	110,	110,	101,	110
2017-01-05 16:43:09 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-05 16:43:09 AI_Player.update()		1010,	101,	1100,	101,	1100,	1001,	1100
2017-01-05 16:43:09 AI_Player.update()		1110,	111,	1101,	1101,	1011,	1110,	1011
2017-01-05 16:43:09 AI_Player.update()		1001,	101,	1010,	110,	1001,	101,	110
2017-01-05 16:43:09 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-05 16:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()	update
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()	update
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:09 AI_Player.update()	Search took242ms
2017-01-05 16:43:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-05 16:43:09 AI_Player.update()		101,	1011,	1100,	110,	110,	101,	110
2017-01-05 16:43:09 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-05 16:43:09 AI_Player.update()		101,	1100,	101,	1100,	1001,	1100,	1010
2017-01-05 16:43:09 AI_Player.update()		1110,	111,	1101,	1101,	1011,	1110,	1011
2017-01-05 16:43:09 AI_Player.update()		1001,	101,	1010,	110,	1001,	101,	110
2017-01-05 16:43:09 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-05 16:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()	update
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()	update
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:09 AI_Player.update()	Search took168ms
2017-01-05 16:43:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-05 16:43:09 AI_Player.update()		101,	1011,	1100,	1100,	110,	101,	110
2017-01-05 16:43:09 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-05 16:43:09 AI_Player.update()		101,	1100,	101,	1101,	1001,	1100,	1010
2017-01-05 16:43:09 AI_Player.update()		1110,	111,	1101,	110,	1011,	1110,	1011
2017-01-05 16:43:09 AI_Player.update()		1001,	101,	1010,	1010,	1001,	101,	110
2017-01-05 16:43:09 AI_Player.update()		1100,	110,	1101,	1011,	1101,	101,	1001
2017-01-05 16:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()	update
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()	update
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:09 AI_Player.update()	Search took162ms
2017-01-05 16:43:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-05 16:43:09 AI_Player.update()		1011,	1100,	1100,	110,	101,	110,	101
2017-01-05 16:43:09 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-05 16:43:09 AI_Player.update()		101,	1100,	101,	1101,	1001,	1100,	1010
2017-01-05 16:43:09 AI_Player.update()		1110,	111,	1101,	110,	1011,	1110,	1011
2017-01-05 16:43:09 AI_Player.update()		1001,	101,	1010,	1010,	1001,	101,	110
2017-01-05 16:43:09 AI_Player.update()		1100,	110,	1101,	1011,	1101,	101,	1001
2017-01-05 16:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()	update
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:09 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:09 AI_Player.update()	update
2017-01-05 16:43:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:10 AI_Player.update()	Search took182ms
2017-01-05 16:43:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-05 16:43:10 AI_Player.update()		1011,	1100,	1100,	1100,	101,	110,	101
2017-01-05 16:43:10 AI_Player.update()		1110,	110,	1110,	1101,	111,	110,	1011
2017-01-05 16:43:10 AI_Player.update()		101,	1100,	101,	110,	1001,	1100,	1010
2017-01-05 16:43:10 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:43:10 AI_Player.update()		1001,	101,	1010,	1011,	1001,	101,	110
2017-01-05 16:43:10 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-05 16:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()	update
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()	update
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:10 AI_Player.update()	Search took190ms
2017-01-05 16:43:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-05 16:43:10 AI_Player.update()		1011,	1100,	1100,	1100,	101,	110,	101
2017-01-05 16:43:10 AI_Player.update()		1110,	110,	1110,	1101,	111,	110,	1011
2017-01-05 16:43:10 AI_Player.update()		1010,	101,	1100,	101,	110,	1001,	1100
2017-01-05 16:43:10 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1110,	1011
2017-01-05 16:43:10 AI_Player.update()		1001,	101,	1010,	1011,	1001,	101,	110
2017-01-05 16:43:10 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-05 16:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()	update
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:10 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:43:10 AI_Player.update()	Player a has won!
2017-01-05 16:43:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:10 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:43:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:10 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:43:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()	update
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:10 AI_Player.update()	Search took376ms
2017-01-05 16:43:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-05 16:43:10 AI_Player.update()		1100,	1100,	111,	1100,	101,	101,	1100
2017-01-05 16:43:10 AI_Player.update()		1110,	11,	1110,	110,	111,	1100,	1011
2017-01-05 16:43:10 AI_Player.update()		1010,	1010,	11,	1010,	1010,	110,	101
2017-01-05 16:43:10 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:43:10 AI_Player.update()		1010,	1010,	101,	1100,	1010,	1010,	1010
2017-01-05 16:43:10 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-05 16:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()	update
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()	update
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:10 AI_Player.update()	Search took116ms
2017-01-05 16:43:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()		110,	101,	111,	111,	111,	1101,	11
2017-01-05 16:43:10 AI_Player.update()		1100,	1100,	111,	1010,	101,	101,	1100
2017-01-05 16:43:10 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-05 16:43:10 AI_Player.update()		1010,	1010,	11,	110,	1010,	110,	101
2017-01-05 16:43:10 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:10 AI_Player.update()		1010,	1010,	101,	1100,	1010,	1010,	1010
2017-01-05 16:43:10 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-05 16:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()	update
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:10 AI_Player.update()	update
2017-01-05 16:43:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:11 AI_Player.update()	Search took488ms
2017-01-05 16:43:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()		110,	101,	111,	111,	111,	1101,	11
2017-01-05 16:43:11 AI_Player.update()		1100,	1100,	111,	1010,	101,	101,	1100
2017-01-05 16:43:11 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-05 16:43:11 AI_Player.update()		1010,	1010,	11,	110,	1010,	110,	101
2017-01-05 16:43:11 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:11 AI_Player.update()		1010,	1010,	1010,	101,	1100,	1010,	1010
2017-01-05 16:43:11 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-05 16:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()	update
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()	update
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:11 AI_Player.update()	Search took291ms
2017-01-05 16:43:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()		110,	1100,	111,	111,	111,	1101,	11
2017-01-05 16:43:11 AI_Player.update()		1100,	11,	111,	1010,	101,	101,	1100
2017-01-05 16:43:11 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 16:43:11 AI_Player.update()		1010,	101,	11,	110,	1010,	110,	101
2017-01-05 16:43:11 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:11 AI_Player.update()		1010,	11,	1010,	101,	1100,	1010,	1010
2017-01-05 16:43:11 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 16:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()	update
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()	update
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:11 AI_Player.update()	Search took181ms
2017-01-05 16:43:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()		110,	1100,	111,	1010,	111,	1101,	11
2017-01-05 16:43:11 AI_Player.update()		1100,	11,	111,	1100,	101,	101,	1100
2017-01-05 16:43:11 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 16:43:11 AI_Player.update()		1010,	101,	11,	1010,	1010,	110,	101
2017-01-05 16:43:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-05 16:43:11 AI_Player.update()		1010,	11,	1010,	1100,	1100,	1010,	1010
2017-01-05 16:43:11 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 16:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()	update
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()	update
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:11 AI_Player.update()	Search took250ms
2017-01-05 16:43:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-05 16:43:11 AI_Player.update()		1100,	1100,	111,	1100,	101,	101,	1100
2017-01-05 16:43:11 AI_Player.update()		1110,	11,	1110,	110,	111,	1100,	1011
2017-01-05 16:43:11 AI_Player.update()		1010,	1010,	11,	1010,	1010,	110,	101
2017-01-05 16:43:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:43:11 AI_Player.update()		1010,	1010,	1010,	1100,	1100,	1010,	1010
2017-01-05 16:43:11 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-05 16:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()	update
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:11 AI_Player.update()	update
2017-01-05 16:43:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:12 AI_Player.update()	Search took510ms
2017-01-05 16:43:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:12 AI_Player.update()		110,	1100,	111,	1010,	111,	1101,	11
2017-01-05 16:43:12 AI_Player.update()		1100,	11,	111,	1100,	101,	101,	1100
2017-01-05 16:43:12 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-05 16:43:12 AI_Player.update()		1010,	101,	11,	1010,	1010,	110,	101
2017-01-05 16:43:12 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-05 16:43:12 AI_Player.update()		1010,	11,	1010,	1100,	1100,	1010,	1010
2017-01-05 16:43:12 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-05 16:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:12 AI_Player.update()	update
2017-01-05 16:43:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:12 AI_Player.update()	update
2017-01-05 16:43:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:12 AI_Player.update()	Search took284ms
2017-01-05 16:43:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:12 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-05 16:43:12 AI_Player.update()		1100,	1100,	111,	1100,	101,	101,	1100
2017-01-05 16:43:12 AI_Player.update()		1110,	11,	1110,	110,	111,	1100,	1011
2017-01-05 16:43:12 AI_Player.update()		1010,	1010,	11,	1010,	1010,	110,	101
2017-01-05 16:43:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 16:43:12 AI_Player.update()		1010,	1010,	1010,	1100,	1100,	1010,	1010
2017-01-05 16:43:12 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-05 16:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:12 AI_Player.update()	update
2017-01-05 16:43:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:43:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:12 AI_Player.update()	update
2017-01-05 16:43:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:13 AI_Player.update()	Search took465ms
2017-01-05 16:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()		110,	101,	111,	111,	111,	1101,	11
2017-01-05 16:43:13 AI_Player.update()		1100,	1100,	111,	1010,	101,	101,	1100
2017-01-05 16:43:13 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-05 16:43:13 AI_Player.update()		1010,	1010,	11,	110,	1010,	110,	101
2017-01-05 16:43:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:13 AI_Player.update()		1010,	1010,	1010,	101,	1100,	1010,	1010
2017-01-05 16:43:13 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-05 16:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()	update
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:43:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()	update
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:13 AI_Player.update()	Search took240ms
2017-01-05 16:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()		110,	11,	111,	111,	111,	1101,	11
2017-01-05 16:43:13 AI_Player.update()		1100,	101,	111,	1010,	101,	101,	1100
2017-01-05 16:43:13 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-05 16:43:13 AI_Player.update()		1010,	11,	11,	110,	1010,	110,	101
2017-01-05 16:43:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:13 AI_Player.update()		1010,	101,	1010,	101,	1100,	1010,	1010
2017-01-05 16:43:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 16:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()	update
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()	update
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:13 AI_Player.update()	Search took231ms
2017-01-05 16:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()		110,	11,	111,	111,	111,	1101,	11
2017-01-05 16:43:13 AI_Player.update()		101,	111,	1010,	101,	101,	1100,	1100
2017-01-05 16:43:13 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-05 16:43:13 AI_Player.update()		1010,	11,	11,	110,	1010,	110,	101
2017-01-05 16:43:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:13 AI_Player.update()		1010,	101,	1010,	101,	1100,	1010,	1010
2017-01-05 16:43:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 16:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()	update
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()	update
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:13 AI_Player.update()	Search took120ms
2017-01-05 16:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()		110,	11,	111,	111,	111,	1101,	11
2017-01-05 16:43:13 AI_Player.update()		101,	111,	1010,	101,	101,	1100,	1100
2017-01-05 16:43:13 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-05 16:43:13 AI_Player.update()		11,	11,	110,	1010,	110,	101,	1010
2017-01-05 16:43:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:13 AI_Player.update()		1010,	101,	1010,	101,	1100,	1010,	1010
2017-01-05 16:43:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 16:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()	update
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:43:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()	update
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:13 AI_Player.update()	Search took129ms
2017-01-05 16:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:43:13 AI_Player.update()		101,	111,	1010,	111,	101,	1100,	1100
2017-01-05 16:43:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 16:43:13 AI_Player.update()		11,	11,	110,	1100,	110,	101,	1010
2017-01-05 16:43:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:13 AI_Player.update()		1010,	101,	1010,	1010,	1100,	1010,	1010
2017-01-05 16:43:13 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()	update
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:13 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:13 AI_Player.update()	update
2017-01-05 16:43:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:14 AI_Player.update()	Search took333ms
2017-01-05 16:43:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:14 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-05 16:43:14 AI_Player.update()		101,	111,	1010,	111,	101,	1100,	1100
2017-01-05 16:43:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 16:43:14 AI_Player.update()		11,	11,	110,	1100,	110,	101,	1010
2017-01-05 16:43:14 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:14 AI_Player.update()		101,	1010,	1010,	1100,	1010,	1010,	1010
2017-01-05 16:43:14 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:14 AI_Player.update()	update
2017-01-05 16:43:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:43:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:14 AI_Player.update()	update
2017-01-05 16:43:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:14 AI_Player.update()	Search took146ms
2017-01-05 16:43:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:14 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-05 16:43:14 AI_Player.update()		101,	111,	1010,	111,	101,	1100,	1100
2017-01-05 16:43:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 16:43:14 AI_Player.update()		11,	11,	110,	1100,	110,	1010,	1010
2017-01-05 16:43:14 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:14 AI_Player.update()		101,	1010,	1010,	1100,	1010,	101,	1010
2017-01-05 16:43:14 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1101,	1001
2017-01-05 16:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:14 AI_Player.update()	update
2017-01-05 16:43:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:14 AI_Player.update()	update
2017-01-05 16:43:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:15 AI_Player.update()	Search took527ms
2017-01-05 16:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()		110,	111,	111,	1100,	111,	1100,	11
2017-01-05 16:43:15 AI_Player.update()		101,	1100,	1010,	111,	101,	1100,	1100
2017-01-05 16:43:15 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:43:15 AI_Player.update()		11,	1010,	110,	1100,	110,	1010,	1010
2017-01-05 16:43:15 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:15 AI_Player.update()		101,	1010,	1010,	1100,	1010,	101,	1010
2017-01-05 16:43:15 AI_Player.update()		1100,	11,	1101,	101,	1101,	1101,	1001
2017-01-05 16:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()	update
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()	update
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:15 AI_Player.update()	Search took599ms
2017-01-05 16:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()		110,	111,	111,	101,	111,	1100,	11
2017-01-05 16:43:15 AI_Player.update()		101,	1100,	1010,	1100,	101,	1100,	1100
2017-01-05 16:43:15 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 16:43:15 AI_Player.update()		11,	1010,	110,	101,	110,	1010,	1010
2017-01-05 16:43:15 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:43:15 AI_Player.update()		101,	1010,	1010,	1010,	1010,	101,	1010
2017-01-05 16:43:15 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1101,	1001
2017-01-05 16:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()	update
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:15 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:43:15 AI_Player.update()	Player a has won!
2017-01-05 16:43:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:15 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:43:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:15 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()	update
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:15 AI_Player.update()	Search took68ms
2017-01-05 16:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()		110,	1001,	111,	1011,	111,	110,	11
2017-01-05 16:43:15 AI_Player.update()		1010,	1011,	1100,	1010,	1010,	1100,	1010
2017-01-05 16:43:15 AI_Player.update()		1110,	101,	1110,	11,	111,	1100,	1011
2017-01-05 16:43:15 AI_Player.update()		1010,	110,	110,	1010,	1010,	1010,	1011
2017-01-05 16:43:15 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:43:15 AI_Player.update()		1100,	101,	1100,	110,	101,	1110,	1010
2017-01-05 16:43:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()	update
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()	update
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:15 AI_Player.update()	Search took283ms
2017-01-05 16:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()		110,	1001,	111,	1011,	111,	1100,	11
2017-01-05 16:43:15 AI_Player.update()		1010,	1011,	1100,	1010,	1010,	1100,	1010
2017-01-05 16:43:15 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 16:43:15 AI_Player.update()		1010,	110,	110,	1010,	1010,	1010,	1011
2017-01-05 16:43:15 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:43:15 AI_Player.update()		1100,	101,	1100,	110,	101,	1010,	1010
2017-01-05 16:43:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-05 16:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()	update
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:15 AI_Player.update()	update
2017-01-05 16:43:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:16 AI_Player.update()	Search took170ms
2017-01-05 16:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()		110,	1011,	111,	1011,	111,	1100,	11
2017-01-05 16:43:16 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1100,	1010
2017-01-05 16:43:16 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 16:43:16 AI_Player.update()		1010,	1001,	110,	1010,	1010,	1010,	1011
2017-01-05 16:43:16 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:43:16 AI_Player.update()		1100,	1100,	1100,	110,	101,	1010,	1010
2017-01-05 16:43:16 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-05 16:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()	update
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()	update
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:16 AI_Player.update()	Search took337ms
2017-01-05 16:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()		110,	1011,	111,	1011,	111,	1100,	11
2017-01-05 16:43:16 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1100,	1010
2017-01-05 16:43:16 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 16:43:16 AI_Player.update()		1001,	110,	1010,	1010,	1010,	1011,	1010
2017-01-05 16:43:16 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1110,	1011
2017-01-05 16:43:16 AI_Player.update()		1100,	1100,	1100,	110,	101,	1010,	1010
2017-01-05 16:43:16 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-05 16:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()	update
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()	update
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:16 AI_Player.update()	Search took187ms
2017-01-05 16:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-05 16:43:16 AI_Player.update()		1010,	101,	1100,	11,	1010,	1100,	1010
2017-01-05 16:43:16 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-05 16:43:16 AI_Player.update()		1001,	110,	1010,	1001,	1010,	1011,	1010
2017-01-05 16:43:16 AI_Player.update()		1110,	101,	1101,	110,	1011,	1110,	1011
2017-01-05 16:43:16 AI_Player.update()		1100,	1100,	1100,	1010,	101,	1010,	1010
2017-01-05 16:43:16 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	110,	1001
2017-01-05 16:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()	update
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()	update
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:16 AI_Player.update()	Search took122ms
2017-01-05 16:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-05 16:43:16 AI_Player.update()		1010,	101,	1100,	11,	1010,	1010,	1010
2017-01-05 16:43:16 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:16 AI_Player.update()		1001,	110,	1010,	1001,	1010,	1110,	1010
2017-01-05 16:43:16 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-05 16:43:16 AI_Player.update()		1100,	1100,	1100,	1010,	101,	110,	1010
2017-01-05 16:43:16 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()	update
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()	update
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:16 AI_Player.update()	Search took105ms
2017-01-05 16:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-05 16:43:16 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1010,	1010
2017-01-05 16:43:16 AI_Player.update()		1110,	110,	1110,	1001,	111,	1011,	1011
2017-01-05 16:43:16 AI_Player.update()		1001,	110,	1010,	110,	1010,	1110,	1010
2017-01-05 16:43:16 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:16 AI_Player.update()		1100,	1100,	1100,	1011,	101,	110,	1010
2017-01-05 16:43:16 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()	update
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:16 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:16 AI_Player.update()	update
2017-01-05 16:43:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:17 AI_Player.update()	Search took260ms
2017-01-05 16:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()		110,	1011,	111,	11,	111,	1010,	11
2017-01-05 16:43:17 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1011,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	110,	1110,	1001,	111,	1110,	1011
2017-01-05 16:43:17 AI_Player.update()		1001,	110,	1010,	110,	1010,	1010,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:17 AI_Player.update()		1100,	1100,	1100,	1011,	101,	1100,	1010
2017-01-05 16:43:17 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:17 AI_Player.update()	Search took156ms
2017-01-05 16:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()		110,	1011,	111,	11,	111,	1010,	11
2017-01-05 16:43:17 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1011,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	110,	1110,	1001,	111,	1110,	1011
2017-01-05 16:43:17 AI_Player.update()		1001,	110,	1010,	110,	1010,	1010,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:17 AI_Player.update()		1010,	1100,	1100,	1100,	1011,	101,	1100
2017-01-05 16:43:17 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:17 AI_Player.update()	Search took282ms
2017-01-05 16:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()		110,	1011,	111,	11,	111,	1010,	11
2017-01-05 16:43:17 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1011,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	110,	1110,	1001,	111,	1110,	1011
2017-01-05 16:43:17 AI_Player.update()		1001,	110,	1010,	110,	1010,	1010,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:17 AI_Player.update()		1100,	1010,	1100,	1100,	1100,	1011,	101
2017-01-05 16:43:17 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:43:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:17 AI_Player.update()	Search took147ms
2017-01-05 16:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()		110,	1011,	111,	11,	111,	1010,	11
2017-01-05 16:43:17 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1011,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	110,	1110,	1001,	111,	1110,	1011
2017-01-05 16:43:17 AI_Player.update()		1010,	1001,	110,	1010,	110,	1010,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:17 AI_Player.update()		1100,	1010,	1100,	1100,	1100,	1011,	101
2017-01-05 16:43:17 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:17 AI_Player.update()	Search took112ms
2017-01-05 16:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-05 16:43:17 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1010,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	110,	1110,	1001,	111,	1011,	1011
2017-01-05 16:43:17 AI_Player.update()		1010,	1001,	110,	1010,	110,	1110,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:17 AI_Player.update()		1100,	1010,	1100,	1100,	1100,	110,	101
2017-01-05 16:43:17 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:17 AI_Player.update()	Search took51ms
2017-01-05 16:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-05 16:43:17 AI_Player.update()		1010,	101,	1100,	11,	1010,	1010,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:17 AI_Player.update()		1010,	1001,	110,	1001,	110,	1110,	1010
2017-01-05 16:43:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:17 AI_Player.update()		1100,	1010,	1100,	1010,	1100,	110,	101
2017-01-05 16:43:17 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1011,	1001
2017-01-05 16:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:43:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:17 AI_Player.update()	update
2017-01-05 16:43:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:18 AI_Player.update()	Search took173ms
2017-01-05 16:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-05 16:43:18 AI_Player.update()		101,	1100,	11,	1010,	1010,	1010,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:18 AI_Player.update()		1010,	1001,	110,	1001,	110,	1110,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:18 AI_Player.update()		1100,	1010,	1100,	1010,	1100,	110,	101
2017-01-05 16:43:18 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1011,	1001
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:43:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:18 AI_Player.update()	Search took119ms
2017-01-05 16:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 16:43:18 AI_Player.update()		101,	110,	11,	1010,	1010,	1010,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:18 AI_Player.update()		1010,	101,	110,	1001,	110,	1110,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:18 AI_Player.update()		1100,	1001,	1100,	1010,	1100,	110,	101
2017-01-05 16:43:18 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1011,	1001
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:18 AI_Player.update()	Search took22ms
2017-01-05 16:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-05 16:43:18 AI_Player.update()		101,	110,	11,	1010,	1010,	1010,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:18 AI_Player.update()		1010,	101,	110,	1010,	110,	1110,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:43:18 AI_Player.update()		1100,	1001,	1100,	1010,	1100,	110,	101
2017-01-05 16:43:18 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:18 AI_Player.update()	Search took39ms
2017-01-05 16:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 16:43:18 AI_Player.update()		101,	110,	11,	1100,	1010,	1010,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:18 AI_Player.update()		1010,	101,	110,	1010,	110,	1110,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:18 AI_Player.update()		1100,	1001,	1100,	1001,	1100,	110,	101
2017-01-05 16:43:18 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:18 AI_Player.update()	Search took32ms
2017-01-05 16:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 16:43:18 AI_Player.update()		110,	11,	1100,	1010,	1010,	1010,	101
2017-01-05 16:43:18 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:18 AI_Player.update()		1010,	101,	110,	1010,	110,	1110,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:18 AI_Player.update()		1100,	1001,	1100,	1001,	1100,	110,	101
2017-01-05 16:43:18 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:18 AI_Player.update()	Search took21ms
2017-01-05 16:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 16:43:18 AI_Player.update()		110,	1001,	1100,	1010,	1010,	1010,	101
2017-01-05 16:43:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:18 AI_Player.update()		1010,	1010,	110,	1010,	110,	1110,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:18 AI_Player.update()		1100,	1011,	1100,	1001,	1100,	110,	101
2017-01-05 16:43:18 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:43:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:18 AI_Player.update()	Search took226ms
2017-01-05 16:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 16:43:18 AI_Player.update()		110,	1001,	1100,	1010,	1010,	1010,	101
2017-01-05 16:43:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:18 AI_Player.update()		1010,	1010,	110,	1010,	110,	1110,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:43:18 AI_Player.update()		1100,	1011,	1100,	1010,	1100,	110,	101
2017-01-05 16:43:18 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:43:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:18 AI_Player.update()	Search took18ms
2017-01-05 16:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 16:43:18 AI_Player.update()		101,	110,	1001,	1100,	1010,	1010,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:18 AI_Player.update()		1010,	1010,	110,	1010,	110,	1110,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:43:18 AI_Player.update()		1100,	1011,	1100,	1010,	1100,	110,	101
2017-01-05 16:43:18 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:18 AI_Player.update()	Search took155ms
2017-01-05 16:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 16:43:18 AI_Player.update()		1010,	101,	110,	1001,	1100,	1010,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:18 AI_Player.update()		1010,	1010,	110,	1010,	110,	1110,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:43:18 AI_Player.update()		1100,	1011,	1100,	1010,	1100,	110,	101
2017-01-05 16:43:18 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:18 AI_Player.update()	Search took64ms
2017-01-05 16:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-05 16:43:18 AI_Player.update()		1010,	101,	110,	1010,	1100,	1010,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:18 AI_Player.update()		1010,	1010,	110,	1001,	110,	1110,	1010
2017-01-05 16:43:18 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:18 AI_Player.update()		1100,	1011,	1100,	1010,	1100,	110,	101
2017-01-05 16:43:18 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:18 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:18 AI_Player.update()	update
2017-01-05 16:43:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:19 AI_Player.update()	Search took261ms
2017-01-05 16:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-05 16:43:19 AI_Player.update()		101,	110,	1010,	1100,	1010,	1010,	1010
2017-01-05 16:43:19 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-05 16:43:19 AI_Player.update()		1010,	1010,	110,	1001,	110,	1110,	1010
2017-01-05 16:43:19 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:19 AI_Player.update()		1100,	1011,	1100,	1010,	1100,	110,	101
2017-01-05 16:43:19 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:43:19 AI_Player.update()	Player b has won!
2017-01-05 16:43:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:19 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:43:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:19 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:19 AI_Player.update()	Search took19ms
2017-01-05 16:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()		110,	1001,	111,	111,	111,	1010,	11
2017-01-05 16:43:19 AI_Player.update()		1010,	110,	110,	11,	110,	11,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-05 16:43:19 AI_Player.update()		1100,	1011,	1101,	111,	1100,	1010,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 16:43:19 AI_Player.update()		101,	1010,	1010,	1100,	1101,	11,	1001
2017-01-05 16:43:19 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:19 AI_Player.update()	Search took15ms
2017-01-05 16:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()		110,	1001,	111,	111,	111,	1100,	11
2017-01-05 16:43:19 AI_Player.update()		1010,	110,	110,	11,	110,	1010,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-05 16:43:19 AI_Player.update()		1100,	1011,	1101,	111,	1100,	110,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 16:43:19 AI_Player.update()		101,	1010,	1010,	1100,	1101,	1001,	1001
2017-01-05 16:43:19 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:19 AI_Player.update()	Search took198ms
2017-01-05 16:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()		110,	1001,	111,	111,	111,	1100,	11
2017-01-05 16:43:19 AI_Player.update()		1010,	1001,	110,	11,	110,	1010,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-05 16:43:19 AI_Player.update()		1100,	110,	1101,	111,	1100,	110,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1010,	1011
2017-01-05 16:43:19 AI_Player.update()		101,	11,	1010,	1100,	1101,	1001,	1001
2017-01-05 16:43:19 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:19 AI_Player.update()	Search took45ms
2017-01-05 16:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()		110,	1001,	111,	111,	111,	11,	11
2017-01-05 16:43:19 AI_Player.update()		1010,	1001,	110,	11,	110,	1100,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-05 16:43:19 AI_Player.update()		1100,	110,	1101,	111,	1100,	11,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	1011,	1101,	101,	1011,	110,	1011
2017-01-05 16:43:19 AI_Player.update()		101,	11,	1010,	1100,	1101,	1010,	1001
2017-01-05 16:43:19 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:19 AI_Player.update()	Search took174ms
2017-01-05 16:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-05 16:43:19 AI_Player.update()		1010,	1001,	110,	1001,	110,	1100,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-05 16:43:19 AI_Player.update()		1100,	110,	1101,	101,	1100,	11,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:19 AI_Player.update()		101,	11,	1010,	1001,	1101,	1010,	1001
2017-01-05 16:43:19 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:19 AI_Player.update()	Search took165ms
2017-01-05 16:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()		110,	1001,	111,	11,	111,	1001,	11
2017-01-05 16:43:19 AI_Player.update()		1010,	1001,	110,	1001,	110,	11,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	110,	1110,	111,	111,	1100,	1011
2017-01-05 16:43:19 AI_Player.update()		1100,	110,	1101,	101,	1100,	1010,	11
2017-01-05 16:43:19 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	11,	1011
2017-01-05 16:43:19 AI_Player.update()		101,	11,	1010,	1001,	1101,	110,	1001
2017-01-05 16:43:19 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1010,	1001
2017-01-05 16:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:19 AI_Player.update()	update
2017-01-05 16:43:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:20 AI_Player.update()	Search took263ms
2017-01-05 16:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-05 16:43:20 AI_Player.update()		1010,	1001,	110,	1001,	110,	1100,	11
2017-01-05 16:43:20 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-05 16:43:20 AI_Player.update()		1100,	110,	1101,	101,	1100,	11,	11
2017-01-05 16:43:20 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:20 AI_Player.update()		101,	11,	1010,	1001,	1101,	1010,	1001
2017-01-05 16:43:20 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:20 AI_Player.update()	Search took157ms
2017-01-05 16:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-05 16:43:20 AI_Player.update()		1001,	110,	1001,	110,	1100,	11,	1010
2017-01-05 16:43:20 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-05 16:43:20 AI_Player.update()		1100,	110,	1101,	101,	1100,	11,	11
2017-01-05 16:43:20 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:20 AI_Player.update()		101,	11,	1010,	1001,	1101,	1010,	1001
2017-01-05 16:43:20 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:20 AI_Player.update()	Search took205ms
2017-01-05 16:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-05 16:43:20 AI_Player.update()		1001,	110,	1001,	110,	1100,	11,	1010
2017-01-05 16:43:20 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-05 16:43:20 AI_Player.update()		11,	1100,	110,	1101,	101,	1100,	11
2017-01-05 16:43:20 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:20 AI_Player.update()		101,	11,	1010,	1001,	1101,	1010,	1001
2017-01-05 16:43:20 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:20 AI_Player.update()	Search took59ms
2017-01-05 16:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 16:43:20 AI_Player.update()		1001,	110,	1001,	110,	1100,	11,	1010
2017-01-05 16:43:20 AI_Player.update()		1110,	1100,	1110,	111,	111,	1010,	1011
2017-01-05 16:43:20 AI_Player.update()		11,	1011,	110,	1101,	101,	1100,	11
2017-01-05 16:43:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:20 AI_Player.update()		101,	1010,	1010,	1001,	1101,	1010,	1001
2017-01-05 16:43:20 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:20 AI_Player.update()	Search took324ms
2017-01-05 16:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 16:43:20 AI_Player.update()		110,	1001,	110,	1100,	11,	1010,	1001
2017-01-05 16:43:20 AI_Player.update()		1110,	1100,	1110,	111,	111,	1010,	1011
2017-01-05 16:43:20 AI_Player.update()		11,	1011,	110,	1101,	101,	1100,	11
2017-01-05 16:43:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:20 AI_Player.update()		101,	1010,	1010,	1001,	1101,	1010,	1001
2017-01-05 16:43:20 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:20 AI_Player.update()	Search took85ms
2017-01-05 16:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 16:43:20 AI_Player.update()		110,	1001,	110,	1100,	11,	1010,	1001
2017-01-05 16:43:20 AI_Player.update()		1110,	1100,	1110,	111,	111,	1010,	1011
2017-01-05 16:43:20 AI_Player.update()		1011,	110,	1101,	101,	1100,	11,	11
2017-01-05 16:43:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:20 AI_Player.update()		101,	1010,	1010,	1001,	1101,	1010,	1001
2017-01-05 16:43:20 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:20 AI_Player.update()	update
2017-01-05 16:43:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:21 AI_Player.update()	Search took147ms
2017-01-05 16:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()		110,	110,	111,	111,	111,	11,	11
2017-01-05 16:43:21 AI_Player.update()		110,	1001,	110,	11,	11,	1010,	1001
2017-01-05 16:43:21 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 16:43:21 AI_Player.update()		1011,	110,	1101,	111,	1100,	11,	11
2017-01-05 16:43:21 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 16:43:21 AI_Player.update()		101,	1010,	1010,	1100,	1101,	1010,	1001
2017-01-05 16:43:21 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()	update
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()	update
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:21 AI_Player.update()	Search took316ms
2017-01-05 16:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()		110,	1001,	111,	111,	111,	11,	11
2017-01-05 16:43:21 AI_Player.update()		110,	110,	110,	11,	11,	1010,	1001
2017-01-05 16:43:21 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-05 16:43:21 AI_Player.update()		1011,	1100,	1101,	111,	1100,	11,	11
2017-01-05 16:43:21 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 16:43:21 AI_Player.update()		101,	11,	1010,	1100,	1101,	1010,	1001
2017-01-05 16:43:21 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()	update
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()	update
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:21 AI_Player.update()	Search took165ms
2017-01-05 16:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()		110,	1001,	111,	111,	111,	11,	11
2017-01-05 16:43:21 AI_Player.update()		110,	110,	11,	11,	1010,	1001,	110
2017-01-05 16:43:21 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-05 16:43:21 AI_Player.update()		1011,	1100,	1101,	111,	1100,	11,	11
2017-01-05 16:43:21 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 16:43:21 AI_Player.update()		101,	11,	1010,	1100,	1101,	1010,	1001
2017-01-05 16:43:21 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()	update
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()	update
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:21 AI_Player.update()	Search took353ms
2017-01-05 16:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()		110,	1001,	111,	111,	111,	11,	11
2017-01-05 16:43:21 AI_Player.update()		110,	110,	11,	11,	1010,	1001,	110
2017-01-05 16:43:21 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-05 16:43:21 AI_Player.update()		1100,	1101,	111,	1100,	11,	11,	1011
2017-01-05 16:43:21 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 16:43:21 AI_Player.update()		101,	11,	1010,	1100,	1101,	1010,	1001
2017-01-05 16:43:21 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()	update
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:21 AI_Player.update()	update
2017-01-05 16:43:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:22 AI_Player.update()	Search took580ms
2017-01-05 16:43:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:22 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-05 16:43:22 AI_Player.update()		110,	110,	11,	1100,	1010,	1001,	110
2017-01-05 16:43:22 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-05 16:43:22 AI_Player.update()		1100,	1101,	111,	101,	11,	11,	1011
2017-01-05 16:43:22 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 16:43:22 AI_Player.update()		101,	11,	1010,	1001,	1101,	1010,	1001
2017-01-05 16:43:22 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-05 16:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:22 AI_Player.update()	update
2017-01-05 16:43:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:22 AI_Player.update()	update
2017-01-05 16:43:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:22 AI_Player.update()	Search took412ms
2017-01-05 16:43:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:22 AI_Player.update()		110,	1001,	111,	11,	111,	1001,	11
2017-01-05 16:43:22 AI_Player.update()		110,	110,	11,	1100,	1010,	1010,	110
2017-01-05 16:43:22 AI_Player.update()		1110,	1001,	1110,	1100,	111,	11,	1011
2017-01-05 16:43:22 AI_Player.update()		1100,	1101,	111,	101,	11,	110,	1011
2017-01-05 16:43:22 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:43:22 AI_Player.update()		101,	11,	1010,	1001,	1101,	1001,	1001
2017-01-05 16:43:22 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 16:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:22 AI_Player.update()	update
2017-01-05 16:43:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:22 AI_Player.update()	update
2017-01-05 16:43:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:23 AI_Player.update()	Search took921ms
2017-01-05 16:43:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:23 AI_Player.update()		110,	1001,	111,	11,	111,	1001,	11
2017-01-05 16:43:23 AI_Player.update()		110,	110,	110,	11,	1100,	1010,	1010
2017-01-05 16:43:23 AI_Player.update()		1110,	1001,	1110,	1100,	111,	11,	1011
2017-01-05 16:43:23 AI_Player.update()		1100,	1101,	111,	101,	11,	110,	1011
2017-01-05 16:43:23 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:43:23 AI_Player.update()		101,	11,	1010,	1001,	1101,	1001,	1001
2017-01-05 16:43:23 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 16:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:23 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:23 AI_Player.update()	update
2017-01-05 16:43:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:23 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:23 AI_Player.update()	update
2017-01-05 16:43:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:24 AI_Player.update()	Search took951ms
2017-01-05 16:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:24 AI_Player.update()		110,	1001,	111,	111,	111,	1001,	11
2017-01-05 16:43:24 AI_Player.update()		110,	110,	110,	11,	1100,	1010,	1010
2017-01-05 16:43:24 AI_Player.update()		1110,	1001,	1110,	11,	111,	11,	1011
2017-01-05 16:43:24 AI_Player.update()		1100,	1101,	111,	1100,	11,	110,	1011
2017-01-05 16:43:24 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 16:43:24 AI_Player.update()		101,	11,	1010,	1100,	1101,	1001,	1001
2017-01-05 16:43:24 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-05 16:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:24 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:24 AI_Player.update()	update
2017-01-05 16:43:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:24 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:24 AI_Player.update()	update
2017-01-05 16:43:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:25 AI_Player.update()	Search took931ms
2017-01-05 16:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:25 AI_Player.update()		110,	1001,	111,	111,	111,	1001,	11
2017-01-05 16:43:25 AI_Player.update()		1010,	110,	110,	110,	11,	1100,	1010
2017-01-05 16:43:25 AI_Player.update()		1110,	1001,	1110,	11,	111,	11,	1011
2017-01-05 16:43:25 AI_Player.update()		1100,	1101,	111,	1100,	11,	110,	1011
2017-01-05 16:43:25 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 16:43:25 AI_Player.update()		101,	11,	1010,	1100,	1101,	1001,	1001
2017-01-05 16:43:25 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-05 16:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:25 AI_Player.update()	update
2017-01-05 16:43:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:25 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:43:25 AI_Player.update()	Player a has won!
2017-01-05 16:43:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:25 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:43:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:25 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:25 AI_Player.update()	update
2017-01-05 16:43:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:25 AI_Player.update()	Search took78ms
2017-01-05 16:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:25 AI_Player.update()		110,	101,	111,	1110,	111,	1001,	11
2017-01-05 16:43:25 AI_Player.update()		101,	101,	1110,	1010,	1001,	101,	101
2017-01-05 16:43:25 AI_Player.update()		1110,	1101,	1110,	1001,	111,	11,	1011
2017-01-05 16:43:25 AI_Player.update()		1010,	1010,	1101,	11,	1010,	11,	1010
2017-01-05 16:43:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 16:43:25 AI_Player.update()		101,	1101,	1010,	1101,	110,	1101,	110
2017-01-05 16:43:25 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 16:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:25 AI_Player.update()	update
2017-01-05 16:43:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:25 AI_Player.update()	update
2017-01-05 16:43:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:25 AI_Player.update()	Search took55ms
2017-01-05 16:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:25 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-05 16:43:25 AI_Player.update()		101,	101,	1110,	1010,	1001,	11,	101
2017-01-05 16:43:25 AI_Player.update()		1110,	1101,	1110,	1001,	111,	11,	1011
2017-01-05 16:43:25 AI_Player.update()		1010,	1010,	1101,	11,	1010,	1010,	1010
2017-01-05 16:43:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-05 16:43:25 AI_Player.update()		101,	1101,	1010,	1101,	110,	1011,	110
2017-01-05 16:43:25 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:25 AI_Player.update()	update
2017-01-05 16:43:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:25 AI_Player.update()	update
2017-01-05 16:43:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:26 AI_Player.update()	Search took450ms
2017-01-05 16:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:26 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-05 16:43:26 AI_Player.update()		101,	1101,	1110,	1010,	1001,	11,	101
2017-01-05 16:43:26 AI_Player.update()		1110,	1010,	1110,	1001,	111,	11,	1011
2017-01-05 16:43:26 AI_Player.update()		1010,	1100,	1101,	11,	1010,	1010,	1010
2017-01-05 16:43:26 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1101,	1011
2017-01-05 16:43:26 AI_Player.update()		101,	1100,	1010,	1101,	110,	1011,	110
2017-01-05 16:43:26 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:26 AI_Player.update()	update
2017-01-05 16:43:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:26 AI_Player.update()	update
2017-01-05 16:43:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:26 AI_Player.update()	Search took574ms
2017-01-05 16:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:26 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-05 16:43:26 AI_Player.update()		101,	1101,	1110,	1010,	1001,	11,	101
2017-01-05 16:43:26 AI_Player.update()		1110,	1010,	1110,	1001,	111,	11,	1011
2017-01-05 16:43:26 AI_Player.update()		1010,	1010,	1100,	1101,	11,	1010,	1010
2017-01-05 16:43:26 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1101,	1011
2017-01-05 16:43:26 AI_Player.update()		101,	1100,	1010,	1101,	110,	1011,	110
2017-01-05 16:43:26 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:26 AI_Player.update()	update
2017-01-05 16:43:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:26 AI_Player.update()	update
2017-01-05 16:43:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:27 AI_Player.update()	Search took947ms
2017-01-05 16:43:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:27 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:43:27 AI_Player.update()		101,	1101,	1110,	1001,	1001,	11,	101
2017-01-05 16:43:27 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-05 16:43:27 AI_Player.update()		1010,	1010,	1100,	101,	11,	1010,	1010
2017-01-05 16:43:27 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-05 16:43:27 AI_Player.update()		101,	1100,	1010,	1010,	110,	1011,	110
2017-01-05 16:43:27 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:27 AI_Player.update()	update
2017-01-05 16:43:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:27 AI_Player.update()	update
2017-01-05 16:43:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:29 AI_Player.update()	Search took1385ms
2017-01-05 16:43:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:29 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:43:29 AI_Player.update()		1101,	1110,	1001,	1001,	11,	101,	101
2017-01-05 16:43:29 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-05 16:43:29 AI_Player.update()		1010,	1010,	1100,	101,	11,	1010,	1010
2017-01-05 16:43:29 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-05 16:43:29 AI_Player.update()		101,	1100,	1010,	1010,	110,	1011,	110
2017-01-05 16:43:29 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:29 AI_Player.update()	update
2017-01-05 16:43:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:29 AI_Player.update()	update
2017-01-05 16:43:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:29 AI_Player.update()	Search took655ms
2017-01-05 16:43:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:29 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:43:29 AI_Player.update()		1101,	1110,	1001,	1001,	11,	101,	101
2017-01-05 16:43:29 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-05 16:43:29 AI_Player.update()		1010,	1010,	1100,	101,	11,	1010,	1010
2017-01-05 16:43:29 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-05 16:43:29 AI_Player.update()		1100,	1010,	1010,	110,	1011,	110,	101
2017-01-05 16:43:29 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:29 AI_Player.update()	update
2017-01-05 16:43:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:29 AI_Player.update()	update
2017-01-05 16:43:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:31 AI_Player.update()	Search took1929ms
2017-01-05 16:43:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:31 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:43:31 AI_Player.update()		1110,	1001,	1001,	11,	101,	101,	1101
2017-01-05 16:43:31 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-05 16:43:31 AI_Player.update()		1010,	1010,	1100,	101,	11,	1010,	1010
2017-01-05 16:43:31 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-05 16:43:31 AI_Player.update()		1100,	1010,	1010,	110,	1011,	110,	101
2017-01-05 16:43:31 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:31 AI_Player.update()	update
2017-01-05 16:43:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:43:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:31 AI_Player.update()	update
2017-01-05 16:43:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:33 AI_Player.update()	Search took1879ms
2017-01-05 16:43:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:33 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:43:33 AI_Player.update()		1110,	1001,	1001,	11,	101,	101,	1101
2017-01-05 16:43:33 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-05 16:43:33 AI_Player.update()		1010,	1010,	1100,	101,	11,	1010,	1010
2017-01-05 16:43:33 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1101,	1011
2017-01-05 16:43:33 AI_Player.update()		1010,	1010,	110,	1011,	110,	101,	1100
2017-01-05 16:43:33 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1001,	1001
2017-01-05 16:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:33 AI_Player.update()	update
2017-01-05 16:43:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:33 AI_Player.update()	update
2017-01-05 16:43:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:35 AI_Player.update()	Search took1642ms
2017-01-05 16:43:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:35 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-05 16:43:35 AI_Player.update()		1110,	1001,	1001,	11,	101,	11,	1101
2017-01-05 16:43:35 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1010,	1011
2017-01-05 16:43:35 AI_Player.update()		1010,	1010,	1100,	101,	11,	1101,	1010
2017-01-05 16:43:35 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	101,	1011
2017-01-05 16:43:35 AI_Player.update()		1010,	1010,	110,	1011,	110,	1001,	1100
2017-01-05 16:43:35 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:35 AI_Player.update()	update
2017-01-05 16:43:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:43:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:35 AI_Player.update()	update
2017-01-05 16:43:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:36 AI_Player.update()	Search took1550ms
2017-01-05 16:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:36 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-05 16:43:36 AI_Player.update()		1110,	1001,	1001,	1010,	101,	11,	1101
2017-01-05 16:43:36 AI_Player.update()		1110,	1010,	1110,	11,	111,	1010,	1011
2017-01-05 16:43:36 AI_Player.update()		1010,	1010,	1100,	1101,	11,	1101,	1010
2017-01-05 16:43:36 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:43:36 AI_Player.update()		1010,	1010,	110,	1101,	110,	1001,	1100
2017-01-05 16:43:36 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-05 16:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:36 AI_Player.update()	update
2017-01-05 16:43:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:36 AI_Player.update()	update
2017-01-05 16:43:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:37 AI_Player.update()	Search took187ms
2017-01-05 16:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:37 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-05 16:43:37 AI_Player.update()		1110,	1001,	1001,	1110,	101,	11,	1101
2017-01-05 16:43:37 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 16:43:37 AI_Player.update()		1010,	1010,	1100,	11,	11,	1101,	1010
2017-01-05 16:43:37 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	101,	1011
2017-01-05 16:43:37 AI_Player.update()		1010,	1010,	110,	101,	110,	1001,	1100
2017-01-05 16:43:37 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-05 16:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:37 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:37 AI_Player.update()	update
2017-01-05 16:43:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:37 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:37 AI_Player.update()	update
2017-01-05 16:43:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:38 AI_Player.update()	Search took1456ms
2017-01-05 16:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-05 16:43:38 AI_Player.update()		1001,	1001,	1110,	101,	11,	1101,	1110
2017-01-05 16:43:38 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	1010,	1100,	11,	11,	1101,	1010
2017-01-05 16:43:38 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	101,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	1010,	110,	101,	110,	1001,	1100
2017-01-05 16:43:38 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:43:38 AI_Player.update()	Player a has won!
2017-01-05 16:43:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:38 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:43:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:38 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:38 AI_Player.update()	Search took16ms
2017-01-05 16:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 16:43:38 AI_Player.update()		11,	1010,	1001,	110,	101,	1010,	110
2017-01-05 16:43:38 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	1010,	101,	1010,	110,	1100,	1010
2017-01-05 16:43:38 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	110,	101,	1010,	1001,	1010,	1001
2017-01-05 16:43:38 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:38 AI_Player.update()	Search took26ms
2017-01-05 16:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 16:43:38 AI_Player.update()		11,	1100,	1001,	110,	101,	1010,	110
2017-01-05 16:43:38 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	101,	101,	1010,	110,	1100,	1010
2017-01-05 16:43:38 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	1001,	101,	1010,	1001,	1010,	1001
2017-01-05 16:43:38 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:38 AI_Player.update()	Search took9ms
2017-01-05 16:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 16:43:38 AI_Player.update()		11,	1010,	1001,	110,	101,	1010,	110
2017-01-05 16:43:38 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	110,	101,	1010,	110,	1100,	1010
2017-01-05 16:43:38 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	1100,	101,	1010,	1001,	1010,	1001
2017-01-05 16:43:38 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:38 AI_Player.update()	Search took32ms
2017-01-05 16:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 16:43:38 AI_Player.update()		11,	1010,	1001,	110,	101,	1010,	110
2017-01-05 16:43:38 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	110,	101,	1010,	110,	1001,	1010
2017-01-05 16:43:38 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	1100,	101,	1010,	1001,	1010,	1001
2017-01-05 16:43:38 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:38 AI_Player.update()	Search took26ms
2017-01-05 16:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 16:43:38 AI_Player.update()		1010,	1001,	110,	101,	1010,	110,	11
2017-01-05 16:43:38 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	110,	101,	1010,	110,	1001,	1010
2017-01-05 16:43:38 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	1100,	101,	1010,	1001,	1010,	1001
2017-01-05 16:43:38 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:38 AI_Player.update()	Search took122ms
2017-01-05 16:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 16:43:38 AI_Player.update()		1010,	1001,	110,	101,	1010,	110,	11
2017-01-05 16:43:38 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:43:38 AI_Player.update()		1010,	110,	101,	1010,	110,	1001,	1010
2017-01-05 16:43:38 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 16:43:38 AI_Player.update()		1100,	101,	1010,	1001,	1010,	1001,	1010
2017-01-05 16:43:38 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:38 AI_Player.update()	update
2017-01-05 16:43:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:39 AI_Player.update()	Search took219ms
2017-01-05 16:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 16:43:39 AI_Player.update()		1010,	1001,	110,	1010,	1010,	110,	11
2017-01-05 16:43:39 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-05 16:43:39 AI_Player.update()		1010,	110,	101,	1001,	110,	1001,	1010
2017-01-05 16:43:39 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:39 AI_Player.update()		1100,	101,	1010,	11,	1010,	1001,	1010
2017-01-05 16:43:39 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()	update
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()	update
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:39 AI_Player.update()	Search took70ms
2017-01-05 16:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-05 16:43:39 AI_Player.update()		1010,	101,	110,	1010,	1010,	110,	11
2017-01-05 16:43:39 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-05 16:43:39 AI_Player.update()		1010,	1001,	101,	1001,	110,	1001,	1010
2017-01-05 16:43:39 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:39 AI_Player.update()		1100,	1010,	1010,	11,	1010,	1001,	1010
2017-01-05 16:43:39 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()	update
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()	update
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:39 AI_Player.update()	Search took85ms
2017-01-05 16:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-05 16:43:39 AI_Player.update()		1010,	101,	110,	1010,	1010,	110,	11
2017-01-05 16:43:39 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-05 16:43:39 AI_Player.update()		1010,	1010,	1001,	101,	1001,	110,	1001
2017-01-05 16:43:39 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:43:39 AI_Player.update()		1100,	1010,	1010,	11,	1010,	1001,	1010
2017-01-05 16:43:39 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()	update
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()	update
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:39 AI_Player.update()	Search took177ms
2017-01-05 16:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 16:43:39 AI_Player.update()		1010,	101,	110,	1010,	1010,	1010,	11
2017-01-05 16:43:39 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 16:43:39 AI_Player.update()		1010,	1010,	1001,	101,	1001,	1100,	1001
2017-01-05 16:43:39 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:39 AI_Player.update()		1100,	1010,	1010,	11,	1010,	1010,	1010
2017-01-05 16:43:39 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()	update
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()	update
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:39 AI_Player.update()	Search took189ms
2017-01-05 16:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 16:43:39 AI_Player.update()		1010,	101,	110,	1010,	1010,	1010,	11
2017-01-05 16:43:39 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 16:43:39 AI_Player.update()		1010,	1001,	101,	1001,	1100,	1001,	1010
2017-01-05 16:43:39 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:39 AI_Player.update()		1100,	1010,	1010,	11,	1010,	1010,	1010
2017-01-05 16:43:39 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()	update
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:39 AI_Player.update()	update
2017-01-05 16:43:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:40 AI_Player.update()	Search took588ms
2017-01-05 16:43:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:40 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-05 16:43:40 AI_Player.update()		1010,	110,	110,	1010,	1010,	1010,	11
2017-01-05 16:43:40 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 16:43:40 AI_Player.update()		1010,	101,	101,	1001,	1100,	1001,	1010
2017-01-05 16:43:40 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:40 AI_Player.update()		1100,	1100,	1010,	11,	1010,	1010,	1010
2017-01-05 16:43:40 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:40 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:40 AI_Player.update()	update
2017-01-05 16:43:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:40 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:40 AI_Player.update()	update
2017-01-05 16:43:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:40 AI_Player.update()	Search took618ms
2017-01-05 16:43:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:40 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-05 16:43:40 AI_Player.update()		110,	110,	1010,	1010,	1010,	11,	1010
2017-01-05 16:43:40 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 16:43:40 AI_Player.update()		1010,	101,	101,	1001,	1100,	1001,	1010
2017-01-05 16:43:40 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:40 AI_Player.update()		1100,	1100,	1010,	11,	1010,	1010,	1010
2017-01-05 16:43:40 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:40 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:40 AI_Player.update()	update
2017-01-05 16:43:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:40 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:40 AI_Player.update()	update
2017-01-05 16:43:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:41 AI_Player.update()	Search took697ms
2017-01-05 16:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:41 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 16:43:41 AI_Player.update()		110,	110,	1010,	1010,	1010,	1100,	1010
2017-01-05 16:43:41 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:43:41 AI_Player.update()		1010,	101,	101,	1001,	1100,	110,	1010
2017-01-05 16:43:41 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:43:41 AI_Player.update()		1100,	1100,	1010,	11,	1010,	110,	1010
2017-01-05 16:43:41 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:41 AI_Player.update()	update
2017-01-05 16:43:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:43:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:41 AI_Player.update()	update
2017-01-05 16:43:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:41 AI_Player.update()	Search took271ms
2017-01-05 16:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:41 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-05 16:43:41 AI_Player.update()		110,	1001,	1010,	1010,	1010,	1100,	1010
2017-01-05 16:43:41 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:43:41 AI_Player.update()		1010,	1010,	101,	1001,	1100,	110,	1010
2017-01-05 16:43:41 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:43:41 AI_Player.update()		1100,	1001,	1010,	11,	1010,	110,	1010
2017-01-05 16:43:41 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:41 AI_Player.update()	update
2017-01-05 16:43:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:41 AI_Player.update()	update
2017-01-05 16:43:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:41 AI_Player.update()	Search took30ms
2017-01-05 16:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:41 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-05 16:43:41 AI_Player.update()		110,	1001,	1010,	101,	1010,	1100,	1010
2017-01-05 16:43:41 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-05 16:43:41 AI_Player.update()		1010,	1010,	101,	1010,	1100,	110,	1010
2017-01-05 16:43:41 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-05 16:43:41 AI_Player.update()		1100,	1001,	1010,	1001,	1010,	110,	1010
2017-01-05 16:43:41 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-05 16:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:41 AI_Player.update()	update
2017-01-05 16:43:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:41 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:41 AI_Player.update()	update
2017-01-05 16:43:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:42 AI_Player.update()	Search took137ms
2017-01-05 16:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:42 AI_Player.update()		110,	110,	111,	1010,	111,	1100,	11
2017-01-05 16:43:42 AI_Player.update()		110,	1001,	1010,	101,	1010,	11,	1010
2017-01-05 16:43:42 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 16:43:42 AI_Player.update()		1010,	1010,	101,	1010,	1100,	1001,	1010
2017-01-05 16:43:42 AI_Player.update()		1110,	1100,	1101,	11,	1011,	110,	1011
2017-01-05 16:43:42 AI_Player.update()		1100,	1001,	1010,	1001,	1010,	1010,	1010
2017-01-05 16:43:42 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:42 AI_Player.update()	update
2017-01-05 16:43:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:42 AI_Player.update()	update
2017-01-05 16:43:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:42 AI_Player.update()	Search took578ms
2017-01-05 16:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:42 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-05 16:43:42 AI_Player.update()		110,	1001,	1010,	1010,	1010,	11,	1010
2017-01-05 16:43:42 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 16:43:42 AI_Player.update()		1010,	1010,	101,	1001,	1100,	1001,	1010
2017-01-05 16:43:42 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:42 AI_Player.update()		1100,	1001,	1010,	11,	1010,	1010,	1010
2017-01-05 16:43:42 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:42 AI_Player.update()	update
2017-01-05 16:43:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:43:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:42 AI_Player.update()	update
2017-01-05 16:43:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:43 AI_Player.update()	Search took699ms
2017-01-05 16:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:43 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-05 16:43:43 AI_Player.update()		110,	1001,	1010,	1010,	1010,	11,	1010
2017-01-05 16:43:43 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 16:43:43 AI_Player.update()		1010,	1010,	101,	1001,	1100,	1001,	1010
2017-01-05 16:43:43 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:43 AI_Player.update()		1010,	1100,	1001,	1010,	11,	1010,	1010
2017-01-05 16:43:43 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:43 AI_Player.update()	update
2017-01-05 16:43:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:43 AI_Player.update()	update
2017-01-05 16:43:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:43 AI_Player.update()	Search took679ms
2017-01-05 16:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:43 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-05 16:43:43 AI_Player.update()		110,	1001,	1010,	1001,	1010,	11,	1010
2017-01-05 16:43:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-05 16:43:43 AI_Player.update()		1010,	1010,	101,	101,	1100,	1001,	1010
2017-01-05 16:43:43 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-05 16:43:43 AI_Player.update()		1010,	1100,	1001,	1010,	11,	1010,	1010
2017-01-05 16:43:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:43 AI_Player.update()	update
2017-01-05 16:43:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:43 AI_Player.update()	update
2017-01-05 16:43:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:44 AI_Player.update()	Search took516ms
2017-01-05 16:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 16:43:44 AI_Player.update()		110,	101,	1010,	1001,	1010,	11,	1010
2017-01-05 16:43:44 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-05 16:43:44 AI_Player.update()		1010,	1100,	101,	101,	1100,	1001,	1010
2017-01-05 16:43:44 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-05 16:43:44 AI_Player.update()		1010,	101,	1001,	1010,	11,	1010,	1010
2017-01-05 16:43:44 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-05 16:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()	update
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()	update
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:44 AI_Player.update()	Search took160ms
2017-01-05 16:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 16:43:44 AI_Player.update()		110,	101,	1010,	1010,	1010,	11,	1010
2017-01-05 16:43:44 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 16:43:44 AI_Player.update()		1010,	1100,	101,	1001,	1100,	1001,	1010
2017-01-05 16:43:44 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 16:43:44 AI_Player.update()		1010,	101,	1001,	1010,	11,	1010,	1010
2017-01-05 16:43:44 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1001,	1001
2017-01-05 16:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()	update
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:43:44 AI_Player.update()	Player b has won!
2017-01-05 16:43:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:44 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:43:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:44 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()	update
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:44 AI_Player.update()	Search took38ms
2017-01-05 16:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()		110,	1011,	111,	1101,	111,	1100,	11
2017-01-05 16:43:44 AI_Player.update()		1100,	1100,	1010,	11,	1010,	1100,	110
2017-01-05 16:43:44 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-05 16:43:44 AI_Player.update()		101,	110,	110,	1100,	1001,	101,	111
2017-01-05 16:43:44 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:43:44 AI_Player.update()		1001,	1110,	1011,	1010,	1010,	110,	11
2017-01-05 16:43:44 AI_Player.update()		1100,	1011,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()	update
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()	update
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:44 AI_Player.update()	Search took48ms
2017-01-05 16:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()		110,	1011,	111,	1101,	111,	101,	11
2017-01-05 16:43:44 AI_Player.update()		1100,	1100,	1010,	11,	1010,	1100,	110
2017-01-05 16:43:44 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-05 16:43:44 AI_Player.update()		101,	110,	110,	1100,	1001,	1010,	111
2017-01-05 16:43:44 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 16:43:44 AI_Player.update()		1001,	1110,	1011,	1010,	1010,	1001,	11
2017-01-05 16:43:44 AI_Player.update()		1100,	1011,	1101,	1110,	1101,	110,	1001
2017-01-05 16:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()	update
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()	update
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:44 AI_Player.update()	Search took71ms
2017-01-05 16:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-05 16:43:44 AI_Player.update()		1100,	110,	1010,	11,	1010,	1100,	110
2017-01-05 16:43:44 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-05 16:43:44 AI_Player.update()		101,	1010,	110,	1100,	1001,	1010,	111
2017-01-05 16:43:44 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	101,	1011
2017-01-05 16:43:44 AI_Player.update()		1001,	1011,	1011,	1010,	1010,	1001,	11
2017-01-05 16:43:44 AI_Player.update()		1100,	1011,	1101,	1110,	1101,	110,	1001
2017-01-05 16:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()	update
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:44 AI_Player.update()	update
2017-01-05 16:43:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:45 AI_Player.update()	Search took233ms
2017-01-05 16:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:45 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-05 16:43:45 AI_Player.update()		1100,	110,	1010,	11,	1010,	1100,	110
2017-01-05 16:43:45 AI_Player.update()		1110,	110,	1110,	1100,	111,	1100,	1011
2017-01-05 16:43:45 AI_Player.update()		101,	1010,	110,	1100,	1001,	1010,	111
2017-01-05 16:43:45 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:43:45 AI_Player.update()		1001,	1011,	1011,	1110,	1010,	1001,	11
2017-01-05 16:43:45 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	110,	1001
2017-01-05 16:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:45 AI_Player.update()	update
2017-01-05 16:43:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:45 AI_Player.update()	update
2017-01-05 16:43:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:45 AI_Player.update()	Search took298ms
2017-01-05 16:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:45 AI_Player.update()		110,	1011,	111,	11,	111,	101,	11
2017-01-05 16:43:45 AI_Player.update()		1100,	1100,	1010,	11,	1010,	1100,	110
2017-01-05 16:43:45 AI_Player.update()		1110,	110,	1110,	1100,	111,	1100,	1011
2017-01-05 16:43:45 AI_Player.update()		101,	110,	110,	1100,	1001,	1010,	111
2017-01-05 16:43:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:43:45 AI_Player.update()		1001,	1110,	1011,	1110,	1010,	1001,	11
2017-01-05 16:43:45 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	110,	1001
2017-01-05 16:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:45 AI_Player.update()	update
2017-01-05 16:43:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:45 AI_Player.update()	update
2017-01-05 16:43:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:45 AI_Player.update()	Search took312ms
2017-01-05 16:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:45 AI_Player.update()		110,	1011,	111,	11,	111,	101,	11
2017-01-05 16:43:45 AI_Player.update()		1100,	1011,	1010,	11,	1010,	1100,	110
2017-01-05 16:43:45 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-05 16:43:45 AI_Player.update()		101,	110,	110,	1100,	1001,	1010,	111
2017-01-05 16:43:45 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:43:45 AI_Player.update()		1001,	1010,	1011,	1110,	1010,	1001,	11
2017-01-05 16:43:45 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	110,	1001
2017-01-05 16:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:45 AI_Player.update()	update
2017-01-05 16:43:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:45 AI_Player.update()	update
2017-01-05 16:43:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:46 AI_Player.update()	Search took353ms
2017-01-05 16:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-05 16:43:46 AI_Player.update()		1100,	1011,	1010,	11,	1010,	1100,	110
2017-01-05 16:43:46 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 16:43:46 AI_Player.update()		101,	110,	110,	1100,	1001,	101,	111
2017-01-05 16:43:46 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:43:46 AI_Player.update()		1001,	1010,	1011,	1110,	1010,	110,	11
2017-01-05 16:43:46 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	101,	1001
2017-01-05 16:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()	update
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()	update
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:46 AI_Player.update()	Search took435ms
2017-01-05 16:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-05 16:43:46 AI_Player.update()		1100,	1011,	1010,	11,	1010,	1100,	110
2017-01-05 16:43:46 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 16:43:46 AI_Player.update()		101,	110,	110,	1100,	1001,	101,	111
2017-01-05 16:43:46 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:43:46 AI_Player.update()		1010,	1011,	1110,	1010,	110,	11,	1001
2017-01-05 16:43:46 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	101,	1001
2017-01-05 16:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()	update
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()	update
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:46 AI_Player.update()	Search took424ms
2017-01-05 16:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-05 16:43:46 AI_Player.update()		1100,	1011,	1010,	11,	1010,	1010,	110
2017-01-05 16:43:46 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 16:43:46 AI_Player.update()		101,	110,	110,	1100,	1001,	1001,	111
2017-01-05 16:43:46 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 16:43:46 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:46 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()	update
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()	update
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:46 AI_Player.update()	Search took62ms
2017-01-05 16:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-05 16:43:46 AI_Player.update()		1100,	1011,	1010,	11,	1010,	1010,	110
2017-01-05 16:43:46 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 16:43:46 AI_Player.update()		110,	110,	1100,	1001,	1001,	111,	101
2017-01-05 16:43:46 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 16:43:46 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:46 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:46 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:46 AI_Player.update()	update
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()	update
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:47 AI_Player.update()	Search took262ms
2017-01-05 16:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-05 16:43:47 AI_Player.update()		1100,	1100,	1010,	11,	1010,	1010,	110
2017-01-05 16:43:47 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-05 16:43:47 AI_Player.update()		110,	110,	1100,	1001,	1001,	111,	101
2017-01-05 16:43:47 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	11,	1011
2017-01-05 16:43:47 AI_Player.update()		1010,	1110,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:47 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()	update
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()	update
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:47 AI_Player.update()	Search took169ms
2017-01-05 16:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-05 16:43:47 AI_Player.update()		1100,	1011,	1010,	11,	1010,	1010,	110
2017-01-05 16:43:47 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 16:43:47 AI_Player.update()		110,	110,	1100,	1001,	1001,	111,	101
2017-01-05 16:43:47 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 16:43:47 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:47 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()	update
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()	update
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:47 AI_Player.update()	Search took360ms
2017-01-05 16:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()		110,	1011,	111,	1101,	111,	1100,	11
2017-01-05 16:43:47 AI_Player.update()		1100,	1011,	1010,	11,	1010,	1010,	110
2017-01-05 16:43:47 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 16:43:47 AI_Player.update()		110,	110,	1100,	1100,	1001,	111,	101
2017-01-05 16:43:47 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-05 16:43:47 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:47 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()	update
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()	update
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:47 AI_Player.update()	Search took64ms
2017-01-05 16:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()		110,	1011,	111,	1101,	111,	1100,	11
2017-01-05 16:43:47 AI_Player.update()		1100,	1100,	1010,	11,	1010,	1010,	110
2017-01-05 16:43:47 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-05 16:43:47 AI_Player.update()		110,	110,	1100,	1100,	1001,	111,	101
2017-01-05 16:43:47 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	11,	1011
2017-01-05 16:43:47 AI_Player.update()		1010,	1110,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:47 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()	update
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:47 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:47 AI_Player.update()	update
2017-01-05 16:43:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:48 AI_Player.update()	Search took216ms
2017-01-05 16:43:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:48 AI_Player.update()		110,	1100,	111,	1101,	111,	1100,	11
2017-01-05 16:43:48 AI_Player.update()		1100,	110,	1010,	11,	1010,	1010,	110
2017-01-05 16:43:48 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-05 16:43:48 AI_Player.update()		110,	1011,	1100,	1100,	1001,	111,	101
2017-01-05 16:43:48 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-05 16:43:48 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:48 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:48 AI_Player.update()	update
2017-01-05 16:43:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:48 AI_Player.update()	update
2017-01-05 16:43:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:48 AI_Player.update()	Search took294ms
2017-01-05 16:43:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:48 AI_Player.update()		110,	110,	111,	1101,	111,	1100,	11
2017-01-05 16:43:48 AI_Player.update()		1100,	110,	1010,	11,	1010,	1010,	110
2017-01-05 16:43:48 AI_Player.update()		1110,	1011,	1110,	11,	111,	101,	1011
2017-01-05 16:43:48 AI_Player.update()		110,	1110,	1100,	1100,	1001,	111,	101
2017-01-05 16:43:48 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	11,	1011
2017-01-05 16:43:48 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:48 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:48 AI_Player.update()	update
2017-01-05 16:43:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:48 AI_Player.update()	update
2017-01-05 16:43:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:48 AI_Player.update()	Search took445ms
2017-01-05 16:43:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:48 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 16:43:48 AI_Player.update()		1100,	110,	1010,	11,	1010,	1010,	110
2017-01-05 16:43:48 AI_Player.update()		1110,	1011,	1110,	1100,	111,	101,	1011
2017-01-05 16:43:48 AI_Player.update()		110,	1110,	1100,	1001,	1001,	111,	101
2017-01-05 16:43:48 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	11,	1011
2017-01-05 16:43:48 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:48 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:48 AI_Player.update()	update
2017-01-05 16:43:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:43:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:48 AI_Player.update()	update
2017-01-05 16:43:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:49 AI_Player.update()	Search took735ms
2017-01-05 16:43:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:49 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 16:43:49 AI_Player.update()		110,	1010,	11,	1010,	1010,	110,	1100
2017-01-05 16:43:49 AI_Player.update()		1110,	1011,	1110,	1100,	111,	101,	1011
2017-01-05 16:43:49 AI_Player.update()		110,	1110,	1100,	1001,	1001,	111,	101
2017-01-05 16:43:49 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	11,	1011
2017-01-05 16:43:49 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:49 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:49 AI_Player.update()	update
2017-01-05 16:43:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:49 AI_Player.update()	update
2017-01-05 16:43:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:50 AI_Player.update()	Search took891ms
2017-01-05 16:43:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:50 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-05 16:43:50 AI_Player.update()		110,	110,	11,	1010,	1010,	110,	1100
2017-01-05 16:43:50 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 16:43:50 AI_Player.update()		110,	1011,	1100,	1001,	1001,	111,	101
2017-01-05 16:43:50 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-05 16:43:50 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:50 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:50 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:50 AI_Player.update()	update
2017-01-05 16:43:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:50 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:50 AI_Player.update()	update
2017-01-05 16:43:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:50 AI_Player.update()	Search took320ms
2017-01-05 16:43:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:50 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 16:43:50 AI_Player.update()		110,	1010,	11,	1010,	1010,	110,	1100
2017-01-05 16:43:50 AI_Player.update()		1110,	1011,	1110,	1100,	111,	101,	1011
2017-01-05 16:43:50 AI_Player.update()		110,	1110,	1100,	1001,	1001,	111,	101
2017-01-05 16:43:50 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	11,	1011
2017-01-05 16:43:50 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:50 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:50 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:50 AI_Player.update()	update
2017-01-05 16:43:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:50 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:50 AI_Player.update()	update
2017-01-05 16:43:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:51 AI_Player.update()	Search took965ms
2017-01-05 16:43:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:51 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-05 16:43:51 AI_Player.update()		110,	110,	11,	1010,	1010,	110,	1100
2017-01-05 16:43:51 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 16:43:51 AI_Player.update()		110,	1011,	1100,	1001,	1001,	111,	101
2017-01-05 16:43:51 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	11,	1011
2017-01-05 16:43:51 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:51 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1100,	1001
2017-01-05 16:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:51 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:51 AI_Player.update()	update
2017-01-05 16:43:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:51 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:51 AI_Player.update()	update
2017-01-05 16:43:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:52 AI_Player.update()	Search took329ms
2017-01-05 16:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()		110,	1100,	111,	1101,	111,	1100,	11
2017-01-05 16:43:52 AI_Player.update()		110,	110,	11,	11,	1010,	110,	1100
2017-01-05 16:43:52 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 16:43:52 AI_Player.update()		110,	1011,	1100,	1100,	1001,	111,	101
2017-01-05 16:43:52 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-05 16:43:52 AI_Player.update()		1010,	1011,	1110,	1010,	110,	101,	1001
2017-01-05 16:43:52 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:52 AI_Player.update()	Search took138ms
2017-01-05 16:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()		110,	1100,	111,	1101,	111,	1100,	11
2017-01-05 16:43:52 AI_Player.update()		110,	110,	11,	11,	1010,	110,	1100
2017-01-05 16:43:52 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 16:43:52 AI_Player.update()		110,	1011,	1100,	1100,	1001,	111,	101
2017-01-05 16:43:52 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-05 16:43:52 AI_Player.update()		1011,	1110,	1010,	110,	101,	1001,	1010
2017-01-05 16:43:52 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:52 AI_Player.update()	Search took92ms
2017-01-05 16:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()		110,	110,	111,	1101,	111,	1100,	11
2017-01-05 16:43:52 AI_Player.update()		110,	1010,	11,	11,	1010,	110,	1100
2017-01-05 16:43:52 AI_Player.update()		1110,	1011,	1110,	1010,	111,	101,	1011
2017-01-05 16:43:52 AI_Player.update()		110,	1110,	1100,	1100,	1001,	111,	101
2017-01-05 16:43:52 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-05 16:43:52 AI_Player.update()		1011,	1011,	1010,	110,	101,	1001,	1010
2017-01-05 16:43:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:52 AI_Player.update()	Search took421ms
2017-01-05 16:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()		110,	110,	111,	1101,	111,	1100,	11
2017-01-05 16:43:52 AI_Player.update()		1010,	11,	11,	1010,	110,	1100,	110
2017-01-05 16:43:52 AI_Player.update()		1110,	1011,	1110,	1010,	111,	101,	1011
2017-01-05 16:43:52 AI_Player.update()		110,	1110,	1100,	1100,	1001,	111,	101
2017-01-05 16:43:52 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	11,	1011
2017-01-05 16:43:52 AI_Player.update()		1011,	1011,	1010,	110,	101,	1001,	1010
2017-01-05 16:43:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:43:52 AI_Player.update()	Player a has won!
2017-01-05 16:43:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:52 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:43:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:52 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:52 AI_Player.update()	Search took45ms
2017-01-05 16:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()		110,	101,	111,	1110,	111,	1010,	11
2017-01-05 16:43:52 AI_Player.update()		1011,	110,	101,	11,	110,	11,	111
2017-01-05 16:43:52 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-05 16:43:52 AI_Player.update()		1100,	110,	101,	1001,	11,	1010,	110
2017-01-05 16:43:52 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 16:43:52 AI_Player.update()		101,	1010,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:52 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:52 AI_Player.update()	Search took15ms
2017-01-05 16:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()		110,	101,	111,	1110,	111,	1010,	11
2017-01-05 16:43:52 AI_Player.update()		110,	101,	11,	110,	11,	111,	1011
2017-01-05 16:43:52 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-05 16:43:52 AI_Player.update()		1100,	110,	101,	1001,	11,	1010,	110
2017-01-05 16:43:52 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 16:43:52 AI_Player.update()		101,	1010,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:52 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:52 AI_Player.update()	Search took116ms
2017-01-05 16:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()		110,	1110,	111,	1110,	111,	1010,	11
2017-01-05 16:43:52 AI_Player.update()		110,	101,	11,	110,	11,	111,	1011
2017-01-05 16:43:52 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:43:52 AI_Player.update()		1100,	11,	101,	1001,	11,	1010,	110
2017-01-05 16:43:52 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-05 16:43:52 AI_Player.update()		101,	1001,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:52 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 16:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:52 AI_Player.update()	update
2017-01-05 16:43:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:53 AI_Player.update()	Search took89ms
2017-01-05 16:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()		110,	1110,	111,	1110,	111,	1010,	11
2017-01-05 16:43:53 AI_Player.update()		110,	101,	11,	110,	11,	111,	1011
2017-01-05 16:43:53 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-05 16:43:53 AI_Player.update()		110,	1100,	11,	101,	1001,	11,	1010
2017-01-05 16:43:53 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-05 16:43:53 AI_Player.update()		101,	1001,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:53 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 16:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()	update
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()	update
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:53 AI_Player.update()	Search took96ms
2017-01-05 16:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()		110,	1110,	111,	110,	111,	1010,	11
2017-01-05 16:43:53 AI_Player.update()		110,	101,	11,	110,	11,	111,	1011
2017-01-05 16:43:53 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:43:53 AI_Player.update()		110,	1100,	11,	101,	1001,	11,	1010
2017-01-05 16:43:53 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:53 AI_Player.update()		101,	1001,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()	update
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()	update
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:53 AI_Player.update()	Search took281ms
2017-01-05 16:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()		110,	1110,	111,	110,	111,	1010,	11
2017-01-05 16:43:53 AI_Player.update()		110,	101,	11,	110,	11,	111,	1011
2017-01-05 16:43:53 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:43:53 AI_Player.update()		1010,	110,	1100,	11,	101,	1001,	11
2017-01-05 16:43:53 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:53 AI_Player.update()		101,	1001,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()	update
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()	update
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:53 AI_Player.update()	Search took283ms
2017-01-05 16:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:43:53 AI_Player.update()		110,	101,	11,	110,	11,	111,	1011
2017-01-05 16:43:53 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:43:53 AI_Player.update()		1010,	110,	1100,	11,	101,	1001,	11
2017-01-05 16:43:53 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:53 AI_Player.update()		101,	1010,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:53 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()	update
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:53 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:53 AI_Player.update()	update
2017-01-05 16:43:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:54 AI_Player.update()	Search took276ms
2017-01-05 16:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:43:54 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:54 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:43:54 AI_Player.update()		1010,	1001,	1100,	11,	101,	1001,	11
2017-01-05 16:43:54 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:54 AI_Player.update()		101,	1110,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:54 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:54 AI_Player.update()	Search took207ms
2017-01-05 16:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:43:54 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:54 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:43:54 AI_Player.update()		11,	1010,	1001,	1100,	11,	101,	1001
2017-01-05 16:43:54 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:54 AI_Player.update()		101,	1110,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:54 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:54 AI_Player.update()	Search took136ms
2017-01-05 16:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:43:54 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:54 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:43:54 AI_Player.update()		1010,	1001,	1100,	11,	101,	1001,	11
2017-01-05 16:43:54 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:54 AI_Player.update()		101,	1110,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:54 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:54 AI_Player.update()	Search took131ms
2017-01-05 16:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:43:54 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:54 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:43:54 AI_Player.update()		11,	1010,	1001,	1100,	11,	101,	1001
2017-01-05 16:43:54 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:54 AI_Player.update()		101,	1110,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:54 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:54 AI_Player.update()	Search took125ms
2017-01-05 16:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:43:54 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:54 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:43:54 AI_Player.update()		1010,	1001,	1100,	11,	101,	1001,	11
2017-01-05 16:43:54 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:54 AI_Player.update()		101,	1110,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:54 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:54 AI_Player.update()	Search took229ms
2017-01-05 16:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 16:43:54 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:54 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:43:54 AI_Player.update()		1010,	1010,	1100,	11,	101,	1001,	11
2017-01-05 16:43:54 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:54 AI_Player.update()		101,	101,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:54 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:54 AI_Player.update()	update
2017-01-05 16:43:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:55 AI_Player.update()	Search took280ms
2017-01-05 16:43:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 16:43:55 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:55 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:43:55 AI_Player.update()		1010,	1100,	11,	101,	1001,	11,	1010
2017-01-05 16:43:55 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:55 AI_Player.update()		101,	101,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:55 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()	update
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()	update
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:55 AI_Player.update()	Search took326ms
2017-01-05 16:43:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:43:55 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:55 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:43:55 AI_Player.update()		1010,	1001,	11,	101,	1001,	11,	1010
2017-01-05 16:43:55 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:55 AI_Player.update()		101,	1110,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:55 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()	update
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()	update
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:55 AI_Player.update()	Search took249ms
2017-01-05 16:43:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 16:43:55 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:55 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:43:55 AI_Player.update()		1010,	1001,	11,	101,	1001,	11,	1010
2017-01-05 16:43:55 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:55 AI_Player.update()		1101,	101,	1110,	1010,	110,	11,	1110
2017-01-05 16:43:55 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()	update
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()	update
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:55 AI_Player.update()	Search took197ms
2017-01-05 16:43:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 16:43:55 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:55 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:43:55 AI_Player.update()		1010,	1100,	11,	101,	1001,	11,	1010
2017-01-05 16:43:55 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:55 AI_Player.update()		1101,	101,	1110,	1010,	110,	11,	1110
2017-01-05 16:43:55 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()	update
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:55 AI_Player.update()	update
2017-01-05 16:43:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:56 AI_Player.update()	Search took391ms
2017-01-05 16:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 16:43:56 AI_Player.update()		110,	110,	11,	110,	11,	111,	1011
2017-01-05 16:43:56 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:43:56 AI_Player.update()		1010,	1100,	11,	101,	1001,	11,	1010
2017-01-05 16:43:56 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:56 AI_Player.update()		101,	1110,	1010,	110,	11,	1110,	1101
2017-01-05 16:43:56 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 16:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()	update
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()	update
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:56 AI_Player.update()	Search took25ms
2017-01-05 16:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 16:43:56 AI_Player.update()		110,	110,	11,	101,	11,	111,	1011
2017-01-05 16:43:56 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 16:43:56 AI_Player.update()		1010,	1100,	11,	110,	1001,	11,	1010
2017-01-05 16:43:56 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 16:43:56 AI_Player.update()		101,	1110,	1010,	1110,	11,	1110,	1101
2017-01-05 16:43:56 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-05 16:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()	update
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()	update
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:56 AI_Player.update()	Search took128ms
2017-01-05 16:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-05 16:43:56 AI_Player.update()		110,	110,	11,	101,	11,	1010,	1011
2017-01-05 16:43:56 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-05 16:43:56 AI_Player.update()		1010,	1100,	11,	110,	1001,	11,	1010
2017-01-05 16:43:56 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 16:43:56 AI_Player.update()		101,	1110,	1010,	1110,	11,	1001,	1101
2017-01-05 16:43:56 AI_Player.update()		1100,	101,	1101,	110,	1101,	1110,	1001
2017-01-05 16:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()	update
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()	update
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:56 AI_Player.update()	Search took126ms
2017-01-05 16:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 16:43:56 AI_Player.update()		110,	110,	11,	101,	11,	1010,	1011
2017-01-05 16:43:56 AI_Player.update()		1110,	110,	1110,	101,	111,	111,	1011
2017-01-05 16:43:56 AI_Player.update()		1010,	1001,	11,	110,	1001,	11,	1010
2017-01-05 16:43:56 AI_Player.update()		1110,	1100,	1101,	110,	1011,	11,	1011
2017-01-05 16:43:56 AI_Player.update()		101,	101,	1010,	1110,	11,	1001,	1101
2017-01-05 16:43:56 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1110,	1001
2017-01-05 16:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()	update
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:43:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()	update
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:56 AI_Player.update()	Search took20ms
2017-01-05 16:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-05 16:43:56 AI_Player.update()		110,	110,	11,	101,	11,	1010,	1011
2017-01-05 16:43:56 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-05 16:43:56 AI_Player.update()		1010,	1100,	11,	110,	1001,	11,	1010
2017-01-05 16:43:56 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 16:43:56 AI_Player.update()		101,	1110,	1010,	1110,	11,	1001,	1101
2017-01-05 16:43:56 AI_Player.update()		1100,	101,	1101,	110,	1101,	1110,	1001
2017-01-05 16:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()	update
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:56 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:56 AI_Player.update()	update
2017-01-05 16:43:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:57 AI_Player.update()	Search took670ms
2017-01-05 16:43:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:57 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-05 16:43:57 AI_Player.update()		110,	1001,	11,	101,	11,	1010,	1011
2017-01-05 16:43:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-05 16:43:57 AI_Player.update()		1010,	101,	11,	110,	1001,	11,	1010
2017-01-05 16:43:57 AI_Player.update()		1110,	1110,	1101,	110,	1011,	11,	1011
2017-01-05 16:43:57 AI_Player.update()		101,	101,	1010,	1110,	11,	1001,	1101
2017-01-05 16:43:57 AI_Player.update()		1100,	110,	1101,	110,	1101,	1110,	1001
2017-01-05 16:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:57 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:57 AI_Player.update()	update
2017-01-05 16:43:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:57 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:57 AI_Player.update()	update
2017-01-05 16:43:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:57 AI_Player.update()	Search took39ms
2017-01-05 16:43:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:57 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-05 16:43:57 AI_Player.update()		110,	110,	11,	101,	11,	1010,	1011
2017-01-05 16:43:57 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-05 16:43:57 AI_Player.update()		1010,	1100,	11,	110,	1001,	11,	1010
2017-01-05 16:43:57 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 16:43:57 AI_Player.update()		101,	1110,	1010,	1110,	11,	1001,	1101
2017-01-05 16:43:57 AI_Player.update()		1100,	101,	1101,	110,	1101,	1110,	1001
2017-01-05 16:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:57 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:57 AI_Player.update()	update
2017-01-05 16:43:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:57 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:57 AI_Player.update()	update
2017-01-05 16:43:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:58 AI_Player.update()	Search took671ms
2017-01-05 16:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:58 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-05 16:43:58 AI_Player.update()		1011,	110,	110,	11,	101,	11,	1010
2017-01-05 16:43:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-05 16:43:58 AI_Player.update()		1010,	1100,	11,	110,	1001,	11,	1010
2017-01-05 16:43:58 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-05 16:43:58 AI_Player.update()		101,	1110,	1010,	1110,	11,	1001,	1101
2017-01-05 16:43:58 AI_Player.update()		1100,	101,	1101,	110,	1101,	1110,	1001
2017-01-05 16:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:58 AI_Player.update()	update
2017-01-05 16:43:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:58 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:43:58 AI_Player.update()	Player a has won!
2017-01-05 16:43:58 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:58 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:43:58 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:43:58 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:58 AI_Player.update()	update
2017-01-05 16:43:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:58 AI_Player.update()	Search took207ms
2017-01-05 16:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:58 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:43:58 AI_Player.update()		1011,	111,	11,	1001,	101,	110,	1011
2017-01-05 16:43:58 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 16:43:58 AI_Player.update()		111,	1010,	101,	110,	110,	101,	1010
2017-01-05 16:43:58 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	110,	1011
2017-01-05 16:43:58 AI_Player.update()		101,	101,	110,	11,	1001,	110,	110
2017-01-05 16:43:58 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 16:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:58 AI_Player.update()	update
2017-01-05 16:43:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:58 AI_Player.update()	update
2017-01-05 16:43:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:58 AI_Player.update()	Search took405ms
2017-01-05 16:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:58 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 16:43:58 AI_Player.update()		1011,	110,	11,	1001,	101,	110,	1011
2017-01-05 16:43:58 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 16:43:58 AI_Player.update()		111,	1001,	101,	110,	110,	101,	1010
2017-01-05 16:43:58 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-05 16:43:58 AI_Player.update()		101,	11,	110,	11,	1001,	110,	110
2017-01-05 16:43:58 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 16:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:58 AI_Player.update()	update
2017-01-05 16:43:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:58 AI_Player.update()	update
2017-01-05 16:43:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:59 AI_Player.update()	Search took342ms
2017-01-05 16:43:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:59 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:43:59 AI_Player.update()		1011,	1010,	11,	1001,	101,	110,	1011
2017-01-05 16:43:59 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-05 16:43:59 AI_Player.update()		111,	101,	101,	110,	110,	101,	1010
2017-01-05 16:43:59 AI_Player.update()		1110,	11,	1101,	1011,	1011,	110,	1011
2017-01-05 16:43:59 AI_Player.update()		101,	101,	110,	11,	1001,	110,	110
2017-01-05 16:43:59 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-05 16:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:59 AI_Player.update()	update
2017-01-05 16:43:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:59 AI_Player.update()	update
2017-01-05 16:43:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:43:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:43:59 AI_Player.update()	Search took367ms
2017-01-05 16:43:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:59 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 16:43:59 AI_Player.update()		1011,	1010,	11,	101,	101,	110,	1011
2017-01-05 16:43:59 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 16:43:59 AI_Player.update()		111,	101,	101,	101,	110,	101,	1010
2017-01-05 16:43:59 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-05 16:43:59 AI_Player.update()		101,	101,	110,	1011,	1001,	110,	110
2017-01-05 16:43:59 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-05 16:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:59 AI_Player.update()	update
2017-01-05 16:43:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:43:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:43:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:59 AI_Player.update()	update
2017-01-05 16:43:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:43:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:43:59 AI_Player.update()	Search took409ms
2017-01-05 16:43:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:59 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:43:59 AI_Player.update()		1011,	1001,	11,	101,	101,	110,	1011
2017-01-05 16:43:59 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:43:59 AI_Player.update()		111,	11,	101,	101,	110,	101,	1010
2017-01-05 16:43:59 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-05 16:43:59 AI_Player.update()		101,	111,	110,	1011,	1001,	110,	110
2017-01-05 16:43:59 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-05 16:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:43:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:59 AI_Player.update()	update
2017-01-05 16:43:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:43:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:43:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:43:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:43:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:43:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:43:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:43:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:43:59 AI_Player.update()	update
2017-01-05 16:43:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:00 AI_Player.update()	Search took211ms
2017-01-05 16:44:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:44:00 AI_Player.update()		1011,	1001,	11,	1001,	101,	110,	1011
2017-01-05 16:44:00 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 16:44:00 AI_Player.update()		111,	11,	101,	110,	110,	101,	1010
2017-01-05 16:44:00 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-05 16:44:00 AI_Player.update()		101,	111,	110,	11,	1001,	110,	110
2017-01-05 16:44:00 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 16:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()	update
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()	update
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:00 AI_Player.update()	Search took232ms
2017-01-05 16:44:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 16:44:00 AI_Player.update()		1011,	101,	11,	1001,	101,	110,	1011
2017-01-05 16:44:00 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-05 16:44:00 AI_Player.update()		111,	101,	101,	110,	110,	101,	1010
2017-01-05 16:44:00 AI_Player.update()		1110,	111,	1101,	1011,	1011,	110,	1011
2017-01-05 16:44:00 AI_Player.update()		101,	110,	110,	11,	1001,	110,	110
2017-01-05 16:44:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()	update
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()	update
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:00 AI_Player.update()	Search took282ms
2017-01-05 16:44:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-05 16:44:00 AI_Player.update()		1011,	101,	11,	101,	101,	110,	1011
2017-01-05 16:44:00 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-05 16:44:00 AI_Player.update()		111,	101,	101,	1011,	110,	101,	1010
2017-01-05 16:44:00 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-05 16:44:00 AI_Player.update()		101,	110,	110,	101,	1001,	110,	110
2017-01-05 16:44:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 16:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()	update
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()	update
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:00 AI_Player.update()	Search took343ms
2017-01-05 16:44:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 16:44:00 AI_Player.update()		1011,	101,	11,	101,	101,	1010,	1011
2017-01-05 16:44:00 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:44:00 AI_Player.update()		111,	101,	101,	1011,	110,	110,	1010
2017-01-05 16:44:00 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-05 16:44:00 AI_Player.update()		101,	110,	110,	101,	1001,	1001,	110
2017-01-05 16:44:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()	update
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:00 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:00 AI_Player.update()	update
2017-01-05 16:44:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:01 AI_Player.update()	Search took336ms
2017-01-05 16:44:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:01 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 16:44:01 AI_Player.update()		1011,	101,	11,	101,	101,	1010,	1011
2017-01-05 16:44:01 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:44:01 AI_Player.update()		1010,	111,	101,	101,	1011,	110,	110
2017-01-05 16:44:01 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-05 16:44:01 AI_Player.update()		101,	110,	110,	101,	1001,	1001,	110
2017-01-05 16:44:01 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:01 AI_Player.update()	update
2017-01-05 16:44:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:44:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:01 AI_Player.update()	update
2017-01-05 16:44:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:01 AI_Player.update()	Search took640ms
2017-01-05 16:44:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:01 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:44:01 AI_Player.update()		1011,	101,	11,	110,	101,	1010,	1011
2017-01-05 16:44:01 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:44:01 AI_Player.update()		1010,	111,	101,	11,	1011,	110,	110
2017-01-05 16:44:01 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 16:44:01 AI_Player.update()		101,	110,	110,	101,	1001,	1001,	110
2017-01-05 16:44:01 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	3 5
2017-01-05 16:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:01 AI_Player.update()	update
2017-01-05 16:44:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:44:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:01 AI_Player.update()	update
2017-01-05 16:44:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:02 AI_Player.update()	Search took774ms
2017-01-05 16:44:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:02 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 16:44:02 AI_Player.update()		1011,	11,	11,	110,	101,	1010,	1011
2017-01-05 16:44:02 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-05 16:44:02 AI_Player.update()		1010,	111,	101,	11,	1011,	110,	110
2017-01-05 16:44:02 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 16:44:02 AI_Player.update()		101,	1010,	110,	101,	1001,	1001,	110
2017-01-05 16:44:02 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:02 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:02 AI_Player.update()	update
2017-01-05 16:44:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:02 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:02 AI_Player.update()	update
2017-01-05 16:44:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:03 AI_Player.update()	Search took555ms
2017-01-05 16:44:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:03 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:44:03 AI_Player.update()		1011,	101,	11,	110,	101,	1010,	1011
2017-01-05 16:44:03 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:44:03 AI_Player.update()		1010,	111,	101,	11,	1011,	110,	110
2017-01-05 16:44:03 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 16:44:03 AI_Player.update()		101,	110,	110,	101,	1001,	1001,	110
2017-01-05 16:44:03 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 16:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:03 AI_Player.update()	update
2017-01-05 16:44:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:03 AI_Player.update()	update
2017-01-05 16:44:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:03 AI_Player.update()	Search took560ms
2017-01-05 16:44:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:03 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 16:44:03 AI_Player.update()		1011,	101,	11,	101,	101,	1010,	1011
2017-01-05 16:44:03 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:44:03 AI_Player.update()		1010,	111,	101,	101,	1011,	110,	110
2017-01-05 16:44:03 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-05 16:44:03 AI_Player.update()		101,	110,	110,	101,	1001,	1001,	110
2017-01-05 16:44:03 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:03 AI_Player.update()	update
2017-01-05 16:44:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:44:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:03 AI_Player.update()	update
2017-01-05 16:44:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:04 AI_Player.update()	Search took404ms
2017-01-05 16:44:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:04 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 16:44:04 AI_Player.update()		101,	11,	101,	101,	1010,	1011,	1011
2017-01-05 16:44:04 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 16:44:04 AI_Player.update()		1010,	111,	101,	101,	1011,	110,	110
2017-01-05 16:44:04 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-05 16:44:04 AI_Player.update()		101,	110,	110,	101,	1001,	1001,	110
2017-01-05 16:44:04 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:04 AI_Player.update()	update
2017-01-05 16:44:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:04 AI_Player.update()	update
2017-01-05 16:44:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:04 AI_Player.update()	Search took26ms
2017-01-05 16:44:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:04 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 16:44:04 AI_Player.update()		101,	11,	101,	101,	1010,	1011,	1011
2017-01-05 16:44:04 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-05 16:44:04 AI_Player.update()		1010,	111,	101,	101,	1011,	110,	110
2017-01-05 16:44:04 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-05 16:44:04 AI_Player.update()		101,	1010,	110,	101,	1001,	1001,	110
2017-01-05 16:44:04 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:04 AI_Player.update()	update
2017-01-05 16:44:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:04 AI_Player.update()	update
2017-01-05 16:44:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:04 AI_Player.update()	Search took244ms
2017-01-05 16:44:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:04 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 16:44:04 AI_Player.update()		101,	11,	101,	110,	1010,	1011,	1011
2017-01-05 16:44:04 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-05 16:44:04 AI_Player.update()		1010,	111,	101,	11,	1011,	110,	110
2017-01-05 16:44:04 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 16:44:04 AI_Player.update()		101,	1010,	110,	101,	1001,	1001,	110
2017-01-05 16:44:04 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-05 16:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:04 AI_Player.update()	update
2017-01-05 16:44:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:04 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:04 AI_Player.update()	update
2017-01-05 16:44:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:05 AI_Player.update()	Search took508ms
2017-01-05 16:44:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-05 16:44:05 AI_Player.update()		101,	111,	101,	110,	1010,	1011,	1011
2017-01-05 16:44:05 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-05 16:44:05 AI_Player.update()		1010,	110,	101,	11,	1011,	110,	110
2017-01-05 16:44:05 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-05 16:44:05 AI_Player.update()		101,	1001,	110,	101,	1001,	1001,	110
2017-01-05 16:44:05 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-05 16:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()	update
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:44:05 AI_Player.update()	Player b has won!
2017-01-05 16:44:05 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:05 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:05 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:05 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()	update
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:05 AI_Player.update()	Search took202ms
2017-01-05 16:44:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:44:05 AI_Player.update()		110,	1100,	1010,	101,	1010,	1010,	101
2017-01-05 16:44:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 16:44:05 AI_Player.update()		110,	1001,	111,	11,	1100,	101,	11
2017-01-05 16:44:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:05 AI_Player.update()		1010,	1101,	101,	1011,	111,	1010,	101
2017-01-05 16:44:05 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()	update
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()	update
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:05 AI_Player.update()	Search took18ms
2017-01-05 16:44:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:44:05 AI_Player.update()		110,	1100,	1010,	101,	1010,	1010,	101
2017-01-05 16:44:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 16:44:05 AI_Player.update()		110,	1001,	111,	11,	1100,	101,	11
2017-01-05 16:44:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:05 AI_Player.update()		1101,	101,	1011,	111,	1010,	101,	1010
2017-01-05 16:44:05 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()	update
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()	update
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:05 AI_Player.update()	Search took166ms
2017-01-05 16:44:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:44:05 AI_Player.update()		110,	1100,	1010,	101,	1010,	1010,	101
2017-01-05 16:44:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 16:44:05 AI_Player.update()		11,	110,	1001,	111,	11,	1100,	101
2017-01-05 16:44:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:05 AI_Player.update()		1101,	101,	1011,	111,	1010,	101,	1010
2017-01-05 16:44:05 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()	update
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()	update
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:05 AI_Player.update()	Search took95ms
2017-01-05 16:44:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 16:44:05 AI_Player.update()		110,	1100,	1010,	101,	1010,	1010,	101
2017-01-05 16:44:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 16:44:05 AI_Player.update()		11,	110,	1001,	111,	11,	1001,	101
2017-01-05 16:44:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:05 AI_Player.update()		1101,	101,	1011,	111,	1010,	1011,	1010
2017-01-05 16:44:05 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:44:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()	update
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:05 AI_Player.update()	update
2017-01-05 16:44:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:06 AI_Player.update()	Search took481ms
2017-01-05 16:44:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 16:44:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	101,	110
2017-01-05 16:44:06 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 16:44:06 AI_Player.update()		11,	110,	1001,	111,	11,	1001,	101
2017-01-05 16:44:06 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:06 AI_Player.update()		1101,	101,	1011,	111,	1010,	1011,	1010
2017-01-05 16:44:06 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()	update
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()	update
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:06 AI_Player.update()	Search took96ms
2017-01-05 16:44:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:06 AI_Player.update()		1100,	1001,	101,	1010,	1010,	101,	110
2017-01-05 16:44:06 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-05 16:44:06 AI_Player.update()		11,	1001,	1001,	111,	11,	1001,	101
2017-01-05 16:44:06 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:06 AI_Player.update()		1101,	1100,	1011,	111,	1010,	1011,	1010
2017-01-05 16:44:06 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()	update
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()	update
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:06 AI_Player.update()	Search took64ms
2017-01-05 16:44:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:06 AI_Player.update()		1001,	101,	1010,	1010,	101,	110,	1100
2017-01-05 16:44:06 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-05 16:44:06 AI_Player.update()		11,	1001,	1001,	111,	11,	1001,	101
2017-01-05 16:44:06 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:06 AI_Player.update()		1101,	1100,	1011,	111,	1010,	1011,	1010
2017-01-05 16:44:06 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()	update
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:44:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()	update
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:06 AI_Player.update()	Search took132ms
2017-01-05 16:44:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-05 16:44:06 AI_Player.update()		1001,	101,	1010,	1010,	101,	1010,	1100
2017-01-05 16:44:06 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-05 16:44:06 AI_Player.update()		11,	1001,	1001,	111,	11,	1100,	101
2017-01-05 16:44:06 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:06 AI_Player.update()		1101,	1100,	1011,	111,	1010,	101,	1010
2017-01-05 16:44:06 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()	update
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()	update
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:06 AI_Player.update()	Search took153ms
2017-01-05 16:44:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-05 16:44:06 AI_Player.update()		1001,	101,	1010,	101,	101,	1010,	1100
2017-01-05 16:44:06 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-05 16:44:06 AI_Player.update()		11,	1001,	1001,	1010,	11,	1100,	101
2017-01-05 16:44:06 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 16:44:06 AI_Player.update()		1101,	1100,	1011,	1010,	1010,	101,	1010
2017-01-05 16:44:06 AI_Player.update()		1100,	101,	1101,	111,	1101,	1011,	1001
2017-01-05 16:44:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()	update
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:06 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:06 AI_Player.update()	update
2017-01-05 16:44:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:07 AI_Player.update()	Search took588ms
2017-01-05 16:44:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-05 16:44:07 AI_Player.update()		1001,	110,	1010,	101,	101,	1010,	1100
2017-01-05 16:44:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:44:07 AI_Player.update()		11,	101,	1001,	1010,	11,	1100,	101
2017-01-05 16:44:07 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1001,	1011
2017-01-05 16:44:07 AI_Player.update()		1101,	101,	1011,	1010,	1010,	101,	1010
2017-01-05 16:44:07 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1011,	1001
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:07 AI_Player.update()	Search took121ms
2017-01-05 16:44:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:44:07 AI_Player.update()		1001,	110,	1010,	1010,	101,	1010,	1100
2017-01-05 16:44:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:44:07 AI_Player.update()		11,	101,	1001,	111,	11,	1100,	101
2017-01-05 16:44:07 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:07 AI_Player.update()		1101,	101,	1011,	111,	1010,	101,	1010
2017-01-05 16:44:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:07 AI_Player.update()	Search took197ms
2017-01-05 16:44:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-05 16:44:07 AI_Player.update()		1001,	1001,	1010,	1010,	101,	1010,	1100
2017-01-05 16:44:07 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-05 16:44:07 AI_Player.update()		11,	1100,	1001,	111,	11,	1100,	101
2017-01-05 16:44:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:07 AI_Player.update()		1101,	1010,	1011,	111,	1010,	101,	1010
2017-01-05 16:44:07 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:07 AI_Player.update()	Search took30ms
2017-01-05 16:44:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:44:07 AI_Player.update()		1001,	110,	1010,	1010,	101,	1010,	1100
2017-01-05 16:44:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:44:07 AI_Player.update()		11,	101,	1001,	111,	11,	1100,	101
2017-01-05 16:44:07 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:07 AI_Player.update()		1101,	101,	1011,	111,	1010,	101,	1010
2017-01-05 16:44:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:07 AI_Player.update()	Search took189ms
2017-01-05 16:44:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:44:07 AI_Player.update()		1001,	110,	1010,	1010,	101,	1010,	1100
2017-01-05 16:44:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:44:07 AI_Player.update()		101,	1001,	111,	11,	1100,	101,	11
2017-01-05 16:44:07 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:07 AI_Player.update()		1101,	101,	1011,	111,	1010,	101,	1010
2017-01-05 16:44:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:07 AI_Player.update()	Search took28ms
2017-01-05 16:44:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:44:07 AI_Player.update()		1001,	110,	1010,	1010,	101,	1010,	1100
2017-01-05 16:44:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:44:07 AI_Player.update()		11,	101,	1001,	111,	11,	1100,	101
2017-01-05 16:44:07 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:07 AI_Player.update()		1101,	101,	1011,	111,	1010,	101,	1010
2017-01-05 16:44:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:07 AI_Player.update()	Search took40ms
2017-01-05 16:44:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 16:44:07 AI_Player.update()		1100,	1001,	110,	1010,	1010,	101,	1010
2017-01-05 16:44:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:44:07 AI_Player.update()		11,	101,	1001,	111,	11,	1100,	101
2017-01-05 16:44:07 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:07 AI_Player.update()		1101,	101,	1011,	111,	1010,	101,	1010
2017-01-05 16:44:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:07 AI_Player.update()	Search took51ms
2017-01-05 16:44:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-05 16:44:07 AI_Player.update()		1100,	101,	110,	1010,	1010,	101,	1010
2017-01-05 16:44:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 16:44:07 AI_Player.update()		11,	1001,	1001,	111,	11,	1100,	101
2017-01-05 16:44:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:07 AI_Player.update()		1101,	1100,	1011,	111,	1010,	101,	1010
2017-01-05 16:44:07 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1011,	1001
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:44:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:07 AI_Player.update()	Search took36ms
2017-01-05 16:44:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-05 16:44:07 AI_Player.update()		1100,	101,	110,	1010,	1010,	1100,	1010
2017-01-05 16:44:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 16:44:07 AI_Player.update()		11,	1001,	1001,	111,	11,	110,	101
2017-01-05 16:44:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:44:07 AI_Player.update()		1101,	1100,	1011,	111,	1010,	1001,	1010
2017-01-05 16:44:07 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 16:44:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:07 AI_Player.update()	update
2017-01-05 16:44:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:08 AI_Player.update()	Search took286ms
2017-01-05 16:44:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:08 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-05 16:44:08 AI_Player.update()		1100,	101,	110,	1010,	1010,	1100,	1010
2017-01-05 16:44:08 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 16:44:08 AI_Player.update()		11,	1001,	1001,	1010,	11,	110,	101
2017-01-05 16:44:08 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-05 16:44:08 AI_Player.update()		1101,	1100,	1011,	1001,	1010,	1001,	1010
2017-01-05 16:44:08 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:08 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:08 AI_Player.update()	update
2017-01-05 16:44:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:08 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:08 AI_Player.update()	update
2017-01-05 16:44:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:08 AI_Player.update()	Search took435ms
2017-01-05 16:44:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:08 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 16:44:08 AI_Player.update()		1100,	1001,	110,	1010,	1010,	1100,	1010
2017-01-05 16:44:08 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 16:44:08 AI_Player.update()		11,	101,	1001,	1010,	11,	110,	101
2017-01-05 16:44:08 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1100,	1011
2017-01-05 16:44:08 AI_Player.update()		1101,	101,	1011,	1001,	1010,	1001,	1010
2017-01-05 16:44:08 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:08 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:08 AI_Player.update()	update
2017-01-05 16:44:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:08 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:08 AI_Player.update()	update
2017-01-05 16:44:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:09 AI_Player.update()	Search took751ms
2017-01-05 16:44:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()		110,	1001,	111,	1010,	111,	1011,	11
2017-01-05 16:44:09 AI_Player.update()		1100,	1001,	110,	1010,	1010,	1100,	1010
2017-01-05 16:44:09 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 16:44:09 AI_Player.update()		11,	1100,	1001,	1010,	11,	110,	101
2017-01-05 16:44:09 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-05 16:44:09 AI_Player.update()		1101,	1010,	1011,	1001,	1010,	1001,	1010
2017-01-05 16:44:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()	update
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()	update
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:09 AI_Player.update()	Search took46ms
2017-01-05 16:44:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()		110,	1001,	111,	1010,	111,	1011,	11
2017-01-05 16:44:09 AI_Player.update()		1100,	1001,	110,	111,	1010,	1100,	1010
2017-01-05 16:44:09 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 16:44:09 AI_Player.update()		11,	1100,	1001,	111,	11,	110,	101
2017-01-05 16:44:09 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:44:09 AI_Player.update()		1101,	1010,	1011,	101,	1010,	1001,	1010
2017-01-05 16:44:09 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 16:44:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()	update
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()	update
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:09 AI_Player.update()	Search took198ms
2017-01-05 16:44:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 16:44:09 AI_Player.update()		1100,	1001,	110,	111,	1010,	1100,	1010
2017-01-05 16:44:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 16:44:09 AI_Player.update()		11,	101,	1001,	111,	11,	110,	101
2017-01-05 16:44:09 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-05 16:44:09 AI_Player.update()		1101,	101,	1011,	101,	1010,	1001,	1010
2017-01-05 16:44:09 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-05 16:44:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()	update
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:09 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:44:09 AI_Player.update()	Player a has won!
2017-01-05 16:44:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:09 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:09 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()	update
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:09 AI_Player.update()	Search took343ms
2017-01-05 16:44:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 16:44:09 AI_Player.update()		1100,	1010,	1110,	1001,	11,	110,	1011
2017-01-05 16:44:09 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:09 AI_Player.update()		101,	101,	1010,	11,	1100,	101,	1001
2017-01-05 16:44:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:09 AI_Player.update()		11,	1001,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:09 AI_Player.update()		1100,	11,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()	update
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:09 AI_Player.update()	update
2017-01-05 16:44:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:10 AI_Player.update()	Search took319ms
2017-01-05 16:44:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:44:10 AI_Player.update()		1100,	1010,	1110,	1001,	11,	110,	1011
2017-01-05 16:44:10 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:10 AI_Player.update()		101,	1100,	1010,	11,	1100,	101,	1001
2017-01-05 16:44:10 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:10 AI_Player.update()		11,	11,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:10 AI_Player.update()		1100,	1101,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()	update
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()	update
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:10 AI_Player.update()	Search took199ms
2017-01-05 16:44:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:44:10 AI_Player.update()		1100,	101,	1110,	1001,	11,	110,	1011
2017-01-05 16:44:10 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:10 AI_Player.update()		101,	1001,	1010,	11,	1100,	101,	1001
2017-01-05 16:44:10 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:10 AI_Player.update()		11,	1101,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:10 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()	update
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()	update
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:10 AI_Player.update()	Search took269ms
2017-01-05 16:44:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:44:10 AI_Player.update()		1011,	1100,	101,	1110,	1001,	11,	110
2017-01-05 16:44:10 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:10 AI_Player.update()		101,	1001,	1010,	11,	1100,	101,	1001
2017-01-05 16:44:10 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:10 AI_Player.update()		11,	1101,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:10 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()	update
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()	update
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:10 AI_Player.update()	Search took304ms
2017-01-05 16:44:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:44:10 AI_Player.update()		1011,	1100,	101,	1110,	1001,	11,	110
2017-01-05 16:44:10 AI_Player.update()		1110,	1001,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:10 AI_Player.update()		101,	11,	1010,	11,	1100,	101,	1001
2017-01-05 16:44:10 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:10 AI_Player.update()		11,	1010,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:10 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()	update
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:10 AI_Player.update()	update
2017-01-05 16:44:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:11 AI_Player.update()	Search took40ms
2017-01-05 16:44:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:44:11 AI_Player.update()		1011,	1001,	101,	1110,	1001,	11,	110
2017-01-05 16:44:11 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:11 AI_Player.update()		101,	1101,	1010,	11,	1100,	101,	1001
2017-01-05 16:44:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:11 AI_Player.update()		11,	1010,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:11 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:11 AI_Player.update()	Search took339ms
2017-01-05 16:44:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 16:44:11 AI_Player.update()		1011,	11,	101,	1110,	1001,	11,	110
2017-01-05 16:44:11 AI_Player.update()		1110,	1101,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:11 AI_Player.update()		101,	1010,	1010,	11,	1100,	101,	1001
2017-01-05 16:44:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:11 AI_Player.update()		11,	1100,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:11 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:11 AI_Player.update()	Search took12ms
2017-01-05 16:44:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 16:44:11 AI_Player.update()		1011,	11,	101,	1110,	1001,	11,	110
2017-01-05 16:44:11 AI_Player.update()		1110,	1101,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:11 AI_Player.update()		1001,	101,	1010,	1010,	11,	1100,	101
2017-01-05 16:44:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:11 AI_Player.update()		11,	1100,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:11 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:11 AI_Player.update()	Search took52ms
2017-01-05 16:44:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 16:44:11 AI_Player.update()		1011,	1101,	101,	1110,	1001,	11,	110
2017-01-05 16:44:11 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:11 AI_Player.update()		1001,	1010,	1010,	1010,	11,	1100,	101
2017-01-05 16:44:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:11 AI_Player.update()		11,	1100,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:11 AI_Player.update()		1100,	1001,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:11 AI_Player.update()	Search took90ms
2017-01-05 16:44:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 16:44:11 AI_Player.update()		1011,	11,	101,	1110,	1001,	11,	110
2017-01-05 16:44:11 AI_Player.update()		1110,	1101,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:11 AI_Player.update()		1001,	101,	1010,	1010,	11,	1100,	101
2017-01-05 16:44:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:11 AI_Player.update()		11,	1100,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:11 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:11 AI_Player.update()	Search took104ms
2017-01-05 16:44:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 16:44:11 AI_Player.update()		1011,	11,	101,	1110,	1001,	101,	110
2017-01-05 16:44:11 AI_Player.update()		1110,	1101,	1110,	1110,	111,	11,	1011
2017-01-05 16:44:11 AI_Player.update()		1001,	101,	1010,	1010,	11,	101,	101
2017-01-05 16:44:11 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:11 AI_Player.update()		11,	1100,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:11 AI_Player.update()		1100,	1100,	1101,	111,	1101,	101,	1001
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:11 AI_Player.update()	Search took33ms
2017-01-05 16:44:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-05 16:44:11 AI_Player.update()		1011,	1001,	101,	1110,	1001,	101,	110
2017-01-05 16:44:11 AI_Player.update()		1110,	11,	1110,	1110,	111,	11,	1011
2017-01-05 16:44:11 AI_Player.update()		1001,	1101,	1010,	1010,	11,	101,	101
2017-01-05 16:44:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:11 AI_Player.update()		11,	1010,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:11 AI_Player.update()		1100,	1100,	1101,	111,	1101,	101,	1001
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:11 AI_Player.update()	Search took45ms
2017-01-05 16:44:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-05 16:44:11 AI_Player.update()		1011,	1001,	101,	1110,	1001,	101,	110
2017-01-05 16:44:11 AI_Player.update()		1110,	11,	1110,	1110,	111,	11,	1011
2017-01-05 16:44:11 AI_Player.update()		1101,	1010,	1010,	11,	101,	101,	1001
2017-01-05 16:44:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:11 AI_Player.update()		11,	1010,	1010,	1010,	1001,	101,	1100
2017-01-05 16:44:11 AI_Player.update()		1100,	1100,	1101,	111,	1101,	101,	1001
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:11 AI_Player.update()	Search took214ms
2017-01-05 16:44:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-05 16:44:11 AI_Player.update()		1011,	1001,	101,	1110,	1001,	101,	110
2017-01-05 16:44:11 AI_Player.update()		1110,	11,	1110,	1110,	111,	11,	1011
2017-01-05 16:44:11 AI_Player.update()		1101,	1010,	1010,	11,	101,	101,	1001
2017-01-05 16:44:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:11 AI_Player.update()		1100,	11,	1010,	1010,	1010,	1001,	101
2017-01-05 16:44:11 AI_Player.update()		1100,	1100,	1101,	111,	1101,	101,	1001
2017-01-05 16:44:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:44:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:11 AI_Player.update()	update
2017-01-05 16:44:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:12 AI_Player.update()	Search took49ms
2017-01-05 16:44:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:44:12 AI_Player.update()		1011,	1001,	101,	1110,	1001,	11,	110
2017-01-05 16:44:12 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:12 AI_Player.update()		1101,	1010,	1010,	11,	101,	1100,	1001
2017-01-05 16:44:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:44:12 AI_Player.update()		1100,	11,	1010,	1010,	1010,	101,	101
2017-01-05 16:44:12 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:44:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()	update
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()	update
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:12 AI_Player.update()	Search took459ms
2017-01-05 16:44:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:44:12 AI_Player.update()		1011,	1001,	101,	1110,	1001,	11,	110
2017-01-05 16:44:12 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:12 AI_Player.update()		1101,	1010,	1010,	11,	101,	1100,	1001
2017-01-05 16:44:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:44:12 AI_Player.update()		11,	1010,	1010,	1010,	101,	101,	1100
2017-01-05 16:44:12 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()	update
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()	update
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:12 AI_Player.update()	Search took264ms
2017-01-05 16:44:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:44:12 AI_Player.update()		1001,	101,	1110,	1001,	11,	110,	1011
2017-01-05 16:44:12 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:12 AI_Player.update()		1101,	1010,	1010,	11,	101,	1100,	1001
2017-01-05 16:44:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:44:12 AI_Player.update()		11,	1010,	1010,	1010,	101,	101,	1100
2017-01-05 16:44:12 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()	update
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()	update
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:12 AI_Player.update()	Search took171ms
2017-01-05 16:44:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:44:12 AI_Player.update()		1001,	101,	1110,	1001,	11,	110,	1011
2017-01-05 16:44:12 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:12 AI_Player.update()		1101,	1010,	1010,	11,	101,	1100,	1001
2017-01-05 16:44:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:44:12 AI_Player.update()		1100,	11,	1010,	1010,	1010,	101,	101
2017-01-05 16:44:12 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()	update
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:12 AI_Player.update()	update
2017-01-05 16:44:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:13 AI_Player.update()	Search took290ms
2017-01-05 16:44:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:44:13 AI_Player.update()		1001,	1100,	1110,	1001,	11,	110,	1011
2017-01-05 16:44:13 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:13 AI_Player.update()		1101,	11,	1010,	11,	101,	1100,	1001
2017-01-05 16:44:13 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 16:44:13 AI_Player.update()		1100,	101,	1010,	1010,	1010,	101,	101
2017-01-05 16:44:13 AI_Player.update()		1100,	11,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()	update
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()	update
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:13 AI_Player.update()	Search took100ms
2017-01-05 16:44:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:44:13 AI_Player.update()		1001,	101,	1110,	1001,	11,	110,	1011
2017-01-05 16:44:13 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:13 AI_Player.update()		1101,	1010,	1010,	11,	101,	1100,	1001
2017-01-05 16:44:13 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:44:13 AI_Player.update()		1100,	11,	1010,	1010,	1010,	101,	101
2017-01-05 16:44:13 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()	update
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()	update
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:13 AI_Player.update()	Search took297ms
2017-01-05 16:44:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-05 16:44:13 AI_Player.update()		1011,	1001,	101,	1110,	1001,	11,	110
2017-01-05 16:44:13 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 16:44:13 AI_Player.update()		1101,	1010,	1010,	11,	101,	1100,	1001
2017-01-05 16:44:13 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 16:44:13 AI_Player.update()		1100,	11,	1010,	1010,	1010,	101,	101
2017-01-05 16:44:13 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-05 16:44:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()	update
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:13 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:44:13 AI_Player.update()	Player a has won!
2017-01-05 16:44:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:13 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:13 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()	update
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:13 AI_Player.update()	Search took296ms
2017-01-05 16:44:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 16:44:13 AI_Player.update()		110,	1100,	1011,	101,	11,	11,	101
2017-01-05 16:44:13 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-05 16:44:13 AI_Player.update()		1010,	110,	101,	1010,	11,	11,	101
2017-01-05 16:44:13 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:44:13 AI_Player.update()		1010,	11,	101,	101,	11,	101,	101
2017-01-05 16:44:13 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 16:44:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()	update
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()	update
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:13 AI_Player.update()	Search took15ms
2017-01-05 16:44:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 16:44:13 AI_Player.update()		110,	1010,	1011,	101,	11,	11,	101
2017-01-05 16:44:13 AI_Player.update()		1110,	110,	1110,	1101,	111,	1110,	1011
2017-01-05 16:44:13 AI_Player.update()		1010,	101,	101,	1010,	11,	11,	101
2017-01-05 16:44:13 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:44:13 AI_Player.update()		1010,	1001,	101,	101,	11,	101,	101
2017-01-05 16:44:13 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:44:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()	update
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:13 AI_Player.update()	update
2017-01-05 16:44:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:14 AI_Player.update()	Search took163ms
2017-01-05 16:44:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 16:44:14 AI_Player.update()		110,	1100,	1011,	101,	11,	11,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1110,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	110,	101,	1010,	11,	11,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	11,	101,	101,	11,	101,	101
2017-01-05 16:44:14 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:14 AI_Player.update()	Search took15ms
2017-01-05 16:44:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 16:44:14 AI_Player.update()		110,	1100,	1011,	101,	11,	1110,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	110,	101,	1010,	11,	1010,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	101,	1101,	1101,	1011,	101,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	11,	101,	101,	11,	1010,	101
2017-01-05 16:44:14 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:14 AI_Player.update()	Search took390ms
2017-01-05 16:44:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-05 16:44:14 AI_Player.update()		110,	1010,	1011,	101,	11,	1110,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	101,	101,	1010,	11,	1010,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	11,	1101,	1101,	1011,	101,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	1001,	101,	101,	11,	1010,	101
2017-01-05 16:44:14 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:14 AI_Player.update()	Search took29ms
2017-01-05 16:44:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 16:44:14 AI_Player.update()		110,	1010,	1011,	101,	11,	11,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	110,	1110,	1101,	111,	1110,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	101,	101,	1010,	11,	11,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	1001,	101,	101,	11,	101,	101
2017-01-05 16:44:14 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:14 AI_Player.update()	Search took267ms
2017-01-05 16:44:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:44:14 AI_Player.update()		110,	110,	1011,	101,	11,	11,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	101,	1110,	1101,	111,	1110,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	11,	101,	1010,	11,	11,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	1010,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	101,	101,	101,	11,	101,	101
2017-01-05 16:44:14 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:14 AI_Player.update()	Search took34ms
2017-01-05 16:44:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-05 16:44:14 AI_Player.update()		110,	110,	1011,	101,	11,	110,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	11,	101,	1010,	11,	1110,	101
2017-01-05 16:44:14 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	11,	1011
2017-01-05 16:44:14 AI_Player.update()		1010,	101,	101,	101,	11,	1010,	101
2017-01-05 16:44:14 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:14 AI_Player.update()	update
2017-01-05 16:44:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:15 AI_Player.update()	Search took370ms
2017-01-05 16:44:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:15 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:15 AI_Player.update()		110,	110,	1011,	11,	11,	110,	101
2017-01-05 16:44:15 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:44:15 AI_Player.update()		1010,	11,	101,	1101,	11,	1110,	101
2017-01-05 16:44:15 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	11,	1011
2017-01-05 16:44:15 AI_Player.update()		1010,	101,	101,	1101,	11,	1010,	101
2017-01-05 16:44:15 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:15 AI_Player.update()	update
2017-01-05 16:44:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:15 AI_Player.update()	update
2017-01-05 16:44:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:15 AI_Player.update()	Search took373ms
2017-01-05 16:44:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:15 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 16:44:15 AI_Player.update()		110,	1010,	1011,	11,	11,	110,	101
2017-01-05 16:44:15 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:44:15 AI_Player.update()		1010,	101,	101,	1101,	11,	1110,	101
2017-01-05 16:44:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-05 16:44:15 AI_Player.update()		1010,	1001,	101,	1101,	11,	1010,	101
2017-01-05 16:44:15 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:15 AI_Player.update()	update
2017-01-05 16:44:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:15 AI_Player.update()	update
2017-01-05 16:44:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:15 AI_Player.update()	Search took304ms
2017-01-05 16:44:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:15 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 16:44:15 AI_Player.update()		110,	1010,	1011,	11,	11,	110,	101
2017-01-05 16:44:15 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 16:44:15 AI_Player.update()		101,	101,	1101,	11,	1110,	101,	1010
2017-01-05 16:44:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-05 16:44:15 AI_Player.update()		1010,	1001,	101,	1101,	11,	1010,	101
2017-01-05 16:44:15 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:15 AI_Player.update()	update
2017-01-05 16:44:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:15 AI_Player.update()	update
2017-01-05 16:44:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:16 AI_Player.update()	Search took70ms
2017-01-05 16:44:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:16 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:16 AI_Player.update()		110,	110,	1011,	11,	11,	110,	101
2017-01-05 16:44:16 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 16:44:16 AI_Player.update()		101,	11,	1101,	11,	1110,	101,	1010
2017-01-05 16:44:16 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	11,	1011
2017-01-05 16:44:16 AI_Player.update()		1010,	101,	101,	1101,	11,	1010,	101
2017-01-05 16:44:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:16 AI_Player.update()	update
2017-01-05 16:44:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:16 AI_Player.update()	update
2017-01-05 16:44:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:16 AI_Player.update()	Search took302ms
2017-01-05 16:44:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:16 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-05 16:44:16 AI_Player.update()		110,	101,	1011,	11,	11,	110,	101
2017-01-05 16:44:16 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-05 16:44:16 AI_Player.update()		101,	1001,	1101,	11,	1110,	101,	1010
2017-01-05 16:44:16 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 16:44:16 AI_Player.update()		1010,	1100,	101,	1101,	11,	1010,	101
2017-01-05 16:44:16 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:16 AI_Player.update()	update
2017-01-05 16:44:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:44:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:16 AI_Player.update()	update
2017-01-05 16:44:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:17 AI_Player.update()	Search took882ms
2017-01-05 16:44:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:17 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-05 16:44:17 AI_Player.update()		110,	101,	1011,	101,	11,	110,	101
2017-01-05 16:44:17 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-05 16:44:17 AI_Player.update()		101,	1001,	1101,	1010,	1110,	101,	1010
2017-01-05 16:44:17 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 16:44:17 AI_Player.update()		1010,	1100,	101,	101,	11,	1010,	101
2017-01-05 16:44:17 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:44:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:17 AI_Player.update()	update
2017-01-05 16:44:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:44:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:17 AI_Player.update()	update
2017-01-05 16:44:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:18 AI_Player.update()	Search took834ms
2017-01-05 16:44:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-05 16:44:18 AI_Player.update()		110,	11,	1011,	101,	11,	110,	101
2017-01-05 16:44:18 AI_Player.update()		1110,	1001,	1110,	11,	111,	11,	1011
2017-01-05 16:44:18 AI_Player.update()		101,	101,	1101,	1010,	1110,	101,	1010
2017-01-05 16:44:18 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-05 16:44:18 AI_Player.update()		1010,	1010,	101,	101,	11,	1010,	101
2017-01-05 16:44:18 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:44:18 AI_Player.update()	Player a has won!
2017-01-05 16:44:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:18 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:18 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:18 AI_Player.update()	Search took200ms
2017-01-05 16:44:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	1100,	101,	101,	110,	1010,	101
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1100,	1001,	1010,	101,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:18 AI_Player.update()		101,	1010,	1001,	1010,	101,	110,	1001
2017-01-05 16:44:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:18 AI_Player.update()	Search took21ms
2017-01-05 16:44:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-05 16:44:18 AI_Player.update()		1100,	101,	101,	110,	1010,	101,	1110
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1100,	1001,	1010,	101,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:18 AI_Player.update()		101,	1010,	1001,	1010,	101,	110,	1001
2017-01-05 16:44:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:18 AI_Player.update()	Search took84ms
2017-01-05 16:44:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	1100,	101,	101,	110,	1010,	101
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1100,	1001,	1010,	101,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:18 AI_Player.update()		101,	1010,	1001,	1010,	101,	110,	1001
2017-01-05 16:44:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:18 AI_Player.update()	Search took68ms
2017-01-05 16:44:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	1100,	101,	101,	110,	1010,	101
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1100,	1001,	1010,	1100,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:18 AI_Player.update()		101,	1010,	1001,	1010,	101,	1001,	1001
2017-01-05 16:44:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	110,	1001
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:44:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:18 AI_Player.update()	Search took166ms
2017-01-05 16:44:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	1100,	101,	101,	110,	1010,	101
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	1100,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:18 AI_Player.update()		101,	1010,	1001,	110,	101,	1001,	1001
2017-01-05 16:44:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:18 AI_Player.update()	Search took144ms
2017-01-05 16:44:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	1100,	101,	101,	110,	1010,	101
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	1100,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:18 AI_Player.update()		1001,	101,	1010,	1001,	110,	101,	1001
2017-01-05 16:44:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:44:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:18 AI_Player.update()	Search took202ms
2017-01-05 16:44:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	1100,	101,	101,	110,	1010,	101
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:18 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	1100,	11
2017-01-05 16:44:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:18 AI_Player.update()		101,	1010,	1001,	110,	101,	1001,	1001
2017-01-05 16:44:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:18 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:44:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:18 AI_Player.update()	update
2017-01-05 16:44:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:19 AI_Player.update()	Search took38ms
2017-01-05 16:44:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 16:44:19 AI_Player.update()		1110,	1100,	101,	101,	110,	1010,	101
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	1100,	11
2017-01-05 16:44:19 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:19 AI_Player.update()		1001,	101,	1010,	1001,	110,	101,	1001
2017-01-05 16:44:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:19 AI_Player.update()	Search took73ms
2017-01-05 16:44:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	101,	101,	110,	1010,	101
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:19 AI_Player.update()		1110,	11,	1100,	1010,	1010,	1100,	11
2017-01-05 16:44:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:19 AI_Player.update()		1001,	1010,	1010,	1001,	110,	101,	1001
2017-01-05 16:44:19 AI_Player.update()		1100,	1101,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:19 AI_Player.update()	Search took292ms
2017-01-05 16:44:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	101,	101,	110,	1010,	101
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:19 AI_Player.update()		11,	1110,	11,	1100,	1010,	1010,	1100
2017-01-05 16:44:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:19 AI_Player.update()		1001,	1010,	1010,	1001,	110,	101,	1001
2017-01-05 16:44:19 AI_Player.update()		1100,	1101,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:19 AI_Player.update()	Search took135ms
2017-01-05 16:44:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	101,	101,	110,	1010,	101
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:19 AI_Player.update()		11,	1110,	11,	1100,	1010,	1010,	1100
2017-01-05 16:44:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:19 AI_Player.update()		1010,	1010,	1001,	110,	101,	1001,	1001
2017-01-05 16:44:19 AI_Player.update()		1100,	1101,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:19 AI_Player.update()	Search took320ms
2017-01-05 16:44:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	101,	101,	110,	1010,	101
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:19 AI_Player.update()		1110,	11,	1100,	1010,	1010,	1100,	11
2017-01-05 16:44:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:19 AI_Player.update()		1010,	1010,	1001,	110,	101,	1001,	1001
2017-01-05 16:44:19 AI_Player.update()		1100,	1101,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:19 AI_Player.update()	Search took98ms
2017-01-05 16:44:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:44:19 AI_Player.update()		101,	1110,	1010,	101,	101,	110,	1010
2017-01-05 16:44:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:19 AI_Player.update()		1110,	11,	1100,	1010,	1010,	1100,	11
2017-01-05 16:44:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:19 AI_Player.update()		1010,	1010,	1001,	110,	101,	1001,	1001
2017-01-05 16:44:19 AI_Player.update()		1100,	1101,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:44:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:19 AI_Player.update()	update
2017-01-05 16:44:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:20 AI_Player.update()	Search took126ms
2017-01-05 16:44:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 16:44:20 AI_Player.update()		101,	1010,	1010,	101,	101,	110,	1010
2017-01-05 16:44:20 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:20 AI_Player.update()		1110,	101,	1100,	1010,	1010,	1100,	11
2017-01-05 16:44:20 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:20 AI_Player.update()		1010,	1101,	1001,	110,	101,	1001,	1001
2017-01-05 16:44:20 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:44:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()	update
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:44:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()	update
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:20 AI_Player.update()	Search took329ms
2017-01-05 16:44:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()		110,	1110,	111,	101,	111,	110,	11
2017-01-05 16:44:20 AI_Player.update()		101,	1010,	1010,	101,	101,	1010,	1010
2017-01-05 16:44:20 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 16:44:20 AI_Player.update()		1110,	101,	1100,	1010,	1010,	101,	11
2017-01-05 16:44:20 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:20 AI_Player.update()		1010,	1101,	1001,	110,	101,	110,	1001
2017-01-05 16:44:20 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-05 16:44:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:44:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()	update
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()	update
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:20 AI_Player.update()	Search took124ms
2017-01-05 16:44:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 16:44:20 AI_Player.update()		101,	11,	1010,	101,	101,	1010,	1010
2017-01-05 16:44:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:44:20 AI_Player.update()		1110,	1010,	1100,	1010,	1010,	101,	11
2017-01-05 16:44:20 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:20 AI_Player.update()		1010,	1100,	1001,	110,	101,	110,	1001
2017-01-05 16:44:20 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-05 16:44:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()	update
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()	update
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:20 AI_Player.update()	Search took166ms
2017-01-05 16:44:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 16:44:20 AI_Player.update()		101,	11,	1010,	101,	101,	1010,	1010
2017-01-05 16:44:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:44:20 AI_Player.update()		1010,	1100,	1010,	1010,	101,	11,	1110
2017-01-05 16:44:20 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:20 AI_Player.update()		1010,	1100,	1001,	110,	101,	110,	1001
2017-01-05 16:44:20 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-05 16:44:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()	update
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:20 AI_Player.update()	update
2017-01-05 16:44:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:21 AI_Player.update()	Search took352ms
2017-01-05 16:44:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 16:44:21 AI_Player.update()		1010,	101,	11,	1010,	101,	101,	1010
2017-01-05 16:44:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 16:44:21 AI_Player.update()		1010,	1100,	1010,	1010,	101,	11,	1110
2017-01-05 16:44:21 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:21 AI_Player.update()		1010,	1100,	1001,	110,	101,	110,	1001
2017-01-05 16:44:21 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:21 AI_Player.update()	Search took328ms
2017-01-05 16:44:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:44:21 AI_Player.update()		1010,	101,	11,	1001,	101,	101,	1010
2017-01-05 16:44:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 16:44:21 AI_Player.update()		1010,	1100,	1010,	1010,	101,	11,	1110
2017-01-05 16:44:21 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1001,	1011
2017-01-05 16:44:21 AI_Player.update()		1010,	1100,	1001,	11,	101,	110,	1001
2017-01-05 16:44:21 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:44:21 AI_Player.update()	Player a has won!
2017-01-05 16:44:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:21 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:21 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:21 AI_Player.update()	Search took182ms
2017-01-05 16:44:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-05 16:44:21 AI_Player.update()		1010,	1001,	1101,	1010,	110,	11,	101
2017-01-05 16:44:21 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 16:44:21 AI_Player.update()		1110,	110,	101,	1011,	110,	111,	1100
2017-01-05 16:44:21 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-05 16:44:21 AI_Player.update()		101,	1110,	1010,	1101,	1010,	1100,	110
2017-01-05 16:44:21 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:21 AI_Player.update()	Search took113ms
2017-01-05 16:44:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-05 16:44:21 AI_Player.update()		1010,	1010,	1101,	1010,	110,	11,	101
2017-01-05 16:44:21 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 16:44:21 AI_Player.update()		1110,	1001,	101,	1011,	110,	111,	1100
2017-01-05 16:44:21 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1100,	1011
2017-01-05 16:44:21 AI_Player.update()		101,	1110,	1010,	1101,	1010,	1100,	110
2017-01-05 16:44:21 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:21 AI_Player.update()	Search took183ms
2017-01-05 16:44:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 16:44:21 AI_Player.update()		1010,	1010,	1101,	110,	110,	11,	101
2017-01-05 16:44:21 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-05 16:44:21 AI_Player.update()		1110,	1001,	101,	11,	110,	111,	1100
2017-01-05 16:44:21 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:44:21 AI_Player.update()		101,	1110,	1010,	1100,	1010,	1100,	110
2017-01-05 16:44:21 AI_Player.update()		1100,	11,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:21 AI_Player.update()	Search took58ms
2017-01-05 16:44:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:44:21 AI_Player.update()		1010,	110,	1101,	110,	110,	11,	101
2017-01-05 16:44:21 AI_Player.update()		1110,	1001,	1110,	1011,	111,	110,	1011
2017-01-05 16:44:21 AI_Player.update()		1110,	1110,	101,	11,	110,	111,	1100
2017-01-05 16:44:21 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:44:21 AI_Player.update()		101,	11,	1010,	1100,	1010,	1100,	110
2017-01-05 16:44:21 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:21 AI_Player.update()	update
2017-01-05 16:44:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:22 AI_Player.update()	Search took493ms
2017-01-05 16:44:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:22 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-05 16:44:22 AI_Player.update()		1010,	110,	1101,	110,	110,	11,	101
2017-01-05 16:44:22 AI_Player.update()		1110,	1001,	1110,	1011,	111,	110,	1011
2017-01-05 16:44:22 AI_Player.update()		1110,	101,	11,	110,	111,	1100,	1110
2017-01-05 16:44:22 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:44:22 AI_Player.update()		101,	11,	1010,	1100,	1010,	1100,	110
2017-01-05 16:44:22 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:22 AI_Player.update()	update
2017-01-05 16:44:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:22 AI_Player.update()	update
2017-01-05 16:44:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:23 AI_Player.update()	Search took702ms
2017-01-05 16:44:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 16:44:23 AI_Player.update()		1010,	1010,	1101,	110,	110,	11,	101
2017-01-05 16:44:23 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-05 16:44:23 AI_Player.update()		1110,	1001,	11,	110,	111,	1100,	1110
2017-01-05 16:44:23 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 16:44:23 AI_Player.update()		101,	1110,	1010,	1100,	1010,	1100,	110
2017-01-05 16:44:23 AI_Player.update()		1100,	11,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()	update
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()	update
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:23 AI_Player.update()	Search took100ms
2017-01-05 16:44:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-05 16:44:23 AI_Player.update()		1010,	1010,	1101,	1011,	110,	11,	101
2017-01-05 16:44:23 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 16:44:23 AI_Player.update()		1110,	1001,	11,	1101,	111,	1100,	1110
2017-01-05 16:44:23 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:44:23 AI_Player.update()		101,	1110,	1010,	111,	1010,	1100,	110
2017-01-05 16:44:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-05 16:44:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()	update
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()	update
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:23 AI_Player.update()	Search took234ms
2017-01-05 16:44:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-05 16:44:23 AI_Player.update()		1010,	1010,	1101,	110,	110,	11,	101
2017-01-05 16:44:23 AI_Player.update()		1110,	110,	1110,	1101,	111,	110,	1011
2017-01-05 16:44:23 AI_Player.update()		1110,	1001,	11,	1100,	111,	1100,	1110
2017-01-05 16:44:23 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-05 16:44:23 AI_Player.update()		101,	1110,	1010,	1010,	1010,	1100,	110
2017-01-05 16:44:23 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 16:44:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()	update
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()	update
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:23 AI_Player.update()	Search took61ms
2017-01-05 16:44:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-05 16:44:23 AI_Player.update()		1010,	1101,	110,	110,	11,	101,	1010
2017-01-05 16:44:23 AI_Player.update()		1110,	110,	1110,	1101,	111,	110,	1011
2017-01-05 16:44:23 AI_Player.update()		1110,	1001,	11,	1100,	111,	1100,	1110
2017-01-05 16:44:23 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-05 16:44:23 AI_Player.update()		101,	1110,	1010,	1010,	1010,	1100,	110
2017-01-05 16:44:23 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 16:44:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()	update
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:44:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:23 AI_Player.update()	update
2017-01-05 16:44:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:24 AI_Player.update()	Search took604ms
2017-01-05 16:44:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:24 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-05 16:44:24 AI_Player.update()		1010,	1101,	110,	110,	11,	101,	1010
2017-01-05 16:44:24 AI_Player.update()		1110,	110,	1110,	1101,	111,	110,	1011
2017-01-05 16:44:24 AI_Player.update()		1110,	1001,	11,	1100,	111,	1100,	1110
2017-01-05 16:44:24 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-05 16:44:24 AI_Player.update()		1110,	1010,	1010,	1010,	1100,	110,	101
2017-01-05 16:44:24 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 16:44:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:44:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:24 AI_Player.update()	update
2017-01-05 16:44:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:44:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:24 AI_Player.update()	update
2017-01-05 16:44:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:24 AI_Player.update()	Search took497ms
2017-01-05 16:44:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:24 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-05 16:44:24 AI_Player.update()		1010,	1101,	110,	1101,	11,	101,	1010
2017-01-05 16:44:24 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-05 16:44:24 AI_Player.update()		1110,	1001,	11,	111,	111,	1100,	1110
2017-01-05 16:44:24 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:44:24 AI_Player.update()		1110,	1010,	1010,	110,	1100,	110,	101
2017-01-05 16:44:24 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1010,	1001
2017-01-05 16:44:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:44:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:24 AI_Player.update()	update
2017-01-05 16:44:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:24 AI_Player.update()	update
2017-01-05 16:44:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:25 AI_Player.update()	Search took576ms
2017-01-05 16:44:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:25 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:44:25 AI_Player.update()		1010,	1001,	110,	1101,	11,	101,	1010
2017-01-05 16:44:25 AI_Player.update()		1110,	1101,	1110,	1100,	111,	110,	1011
2017-01-05 16:44:25 AI_Player.update()		1110,	110,	11,	111,	111,	1100,	1110
2017-01-05 16:44:25 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:44:25 AI_Player.update()		1110,	101,	1010,	110,	1100,	110,	101
2017-01-05 16:44:25 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-05 16:44:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:25 AI_Player.update()	update
2017-01-05 16:44:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:25 AI_Player.update()	update
2017-01-05 16:44:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:25 AI_Player.update()	Search took623ms
2017-01-05 16:44:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:25 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-05 16:44:25 AI_Player.update()		1010,	1001,	110,	1100,	11,	101,	1010
2017-01-05 16:44:25 AI_Player.update()		1110,	1101,	1110,	111,	111,	110,	1011
2017-01-05 16:44:25 AI_Player.update()		1110,	110,	11,	1010,	111,	1100,	1110
2017-01-05 16:44:25 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-05 16:44:25 AI_Player.update()		1110,	101,	1010,	1011,	1100,	110,	101
2017-01-05 16:44:25 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 16:44:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:25 AI_Player.update()	update
2017-01-05 16:44:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:25 AI_Player.update()	update
2017-01-05 16:44:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:26 AI_Player.update()	Search took513ms
2017-01-05 16:44:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-05 16:44:26 AI_Player.update()		1001,	110,	1100,	11,	101,	1010,	1010
2017-01-05 16:44:26 AI_Player.update()		1110,	1101,	1110,	111,	111,	110,	1011
2017-01-05 16:44:26 AI_Player.update()		1110,	110,	11,	1010,	111,	1100,	1110
2017-01-05 16:44:26 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-05 16:44:26 AI_Player.update()		1110,	101,	1010,	1011,	1100,	110,	101
2017-01-05 16:44:26 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 16:44:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()	update
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()	update
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:26 AI_Player.update()	Search took73ms
2017-01-05 16:44:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-05 16:44:26 AI_Player.update()		110,	1100,	11,	101,	1010,	1010,	1001
2017-01-05 16:44:26 AI_Player.update()		1110,	1101,	1110,	111,	111,	110,	1011
2017-01-05 16:44:26 AI_Player.update()		1110,	110,	11,	1010,	111,	1100,	1110
2017-01-05 16:44:26 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-05 16:44:26 AI_Player.update()		1110,	101,	1010,	1011,	1100,	110,	101
2017-01-05 16:44:26 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 16:44:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()	update
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:26 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:44:26 AI_Player.update()	Player a has won!
2017-01-05 16:44:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:26 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:26 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()	update
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:26 AI_Player.update()	Search took92ms
2017-01-05 16:44:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-05 16:44:26 AI_Player.update()		11,	110,	1010,	110,	101,	11,	101
2017-01-05 16:44:26 AI_Player.update()		1110,	1011,	1110,	101,	111,	1101,	1011
2017-01-05 16:44:26 AI_Player.update()		1011,	1010,	1010,	1001,	101,	11,	110
2017-01-05 16:44:26 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-05 16:44:26 AI_Player.update()		101,	1001,	101,	1010,	11,	11,	11
2017-01-05 16:44:26 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-05 16:44:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()	update
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()	update
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:26 AI_Player.update()	Search took9ms
2017-01-05 16:44:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-05 16:44:26 AI_Player.update()		11,	110,	1010,	110,	101,	1101,	101
2017-01-05 16:44:26 AI_Player.update()		1110,	1011,	1110,	101,	111,	11,	1011
2017-01-05 16:44:26 AI_Player.update()		1011,	1010,	1010,	1001,	101,	1010,	110
2017-01-05 16:44:26 AI_Player.update()		1110,	101,	1101,	1100,	1011,	11,	1011
2017-01-05 16:44:26 AI_Player.update()		101,	1001,	101,	1010,	11,	1100,	11
2017-01-05 16:44:26 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:44:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()	update
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:26 AI_Player.update()	update
2017-01-05 16:44:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:27 AI_Player.update()	Search took534ms
2017-01-05 16:44:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:27 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-05 16:44:27 AI_Player.update()		110,	1010,	110,	101,	1101,	101,	11
2017-01-05 16:44:27 AI_Player.update()		1110,	1011,	1110,	101,	111,	11,	1011
2017-01-05 16:44:27 AI_Player.update()		1011,	1010,	1010,	1001,	101,	1010,	110
2017-01-05 16:44:27 AI_Player.update()		1110,	101,	1101,	1100,	1011,	11,	1011
2017-01-05 16:44:27 AI_Player.update()		101,	1001,	101,	1010,	11,	1100,	11
2017-01-05 16:44:27 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-05 16:44:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:27 AI_Player.update()	update
2017-01-05 16:44:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:27 AI_Player.update()	update
2017-01-05 16:44:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:27 AI_Player.update()	Search took166ms
2017-01-05 16:44:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:27 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 16:44:27 AI_Player.update()		110,	1010,	110,	101,	1101,	101,	11
2017-01-05 16:44:27 AI_Player.update()		1110,	1011,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:27 AI_Player.update()		1011,	1010,	1010,	1100,	101,	1010,	110
2017-01-05 16:44:27 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 16:44:27 AI_Player.update()		101,	1001,	101,	1011,	11,	1100,	11
2017-01-05 16:44:27 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-05 16:44:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:27 AI_Player.update()	update
2017-01-05 16:44:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:27 AI_Player.update()	update
2017-01-05 16:44:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:28 AI_Player.update()	Search took772ms
2017-01-05 16:44:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-05 16:44:28 AI_Player.update()		110,	1011,	110,	101,	1101,	101,	11
2017-01-05 16:44:28 AI_Player.update()		1110,	1010,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:28 AI_Player.update()		1011,	101,	1010,	1100,	101,	1010,	110
2017-01-05 16:44:28 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	11,	1011
2017-01-05 16:44:28 AI_Player.update()		101,	101,	101,	1011,	11,	1100,	11
2017-01-05 16:44:28 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-05 16:44:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()	update
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 16:44:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()	update
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:28 AI_Player.update()	Search took44ms
2017-01-05 16:44:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:44:28 AI_Player.update()		110,	1011,	110,	101,	1101,	11,	11
2017-01-05 16:44:28 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:28 AI_Player.update()		1011,	101,	1010,	1100,	101,	11,	110
2017-01-05 16:44:28 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:44:28 AI_Player.update()		101,	101,	101,	1011,	11,	1001,	11
2017-01-05 16:44:28 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-05 16:44:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 16:44:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()	update
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()	update
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:28 AI_Player.update()	Search took363ms
2017-01-05 16:44:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-05 16:44:28 AI_Player.update()		110,	1010,	110,	101,	1101,	11,	11
2017-01-05 16:44:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:28 AI_Player.update()		1011,	1001,	1010,	1100,	101,	11,	110
2017-01-05 16:44:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:44:28 AI_Player.update()		101,	101,	101,	1011,	11,	1001,	11
2017-01-05 16:44:28 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-05 16:44:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()	update
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()	update
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:28 AI_Player.update()	Search took459ms
2017-01-05 16:44:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:44:28 AI_Player.update()		110,	1010,	110,	101,	1101,	1010,	11
2017-01-05 16:44:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:28 AI_Player.update()		1011,	1001,	1010,	1100,	101,	1100,	110
2017-01-05 16:44:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:28 AI_Player.update()		101,	101,	101,	1011,	11,	11,	11
2017-01-05 16:44:28 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 16:44:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()	update
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:28 AI_Player.update()	update
2017-01-05 16:44:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:29 AI_Player.update()	Search took447ms
2017-01-05 16:44:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:29 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:44:29 AI_Player.update()		110,	1010,	110,	101,	1101,	1010,	11
2017-01-05 16:44:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:29 AI_Player.update()		1001,	1010,	1100,	101,	1100,	110,	1011
2017-01-05 16:44:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:29 AI_Player.update()		101,	101,	101,	1011,	11,	11,	11
2017-01-05 16:44:29 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 16:44:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:29 AI_Player.update()	update
2017-01-05 16:44:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:29 AI_Player.update()	update
2017-01-05 16:44:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:29 AI_Player.update()	Search took417ms
2017-01-05 16:44:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:29 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:44:29 AI_Player.update()		110,	1010,	110,	101,	1101,	1010,	11
2017-01-05 16:44:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:29 AI_Player.update()		1011,	1001,	1010,	1100,	101,	1100,	110
2017-01-05 16:44:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:29 AI_Player.update()		101,	101,	101,	1011,	11,	11,	11
2017-01-05 16:44:29 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 16:44:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:29 AI_Player.update()	update
2017-01-05 16:44:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:29 AI_Player.update()	update
2017-01-05 16:44:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:29 AI_Player.update()	Search took63ms
2017-01-05 16:44:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:29 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-05 16:44:29 AI_Player.update()		110,	1010,	110,	101,	1101,	11,	11
2017-01-05 16:44:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:29 AI_Player.update()		1011,	1001,	1010,	1100,	101,	11,	110
2017-01-05 16:44:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:44:29 AI_Player.update()		101,	101,	101,	1011,	11,	1001,	11
2017-01-05 16:44:29 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-05 16:44:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:29 AI_Player.update()	update
2017-01-05 16:44:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:29 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:29 AI_Player.update()	update
2017-01-05 16:44:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:30 AI_Player.update()	Search took923ms
2017-01-05 16:44:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:30 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:44:30 AI_Player.update()		110,	101,	110,	101,	1101,	11,	11
2017-01-05 16:44:30 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-05 16:44:30 AI_Player.update()		1011,	101,	1010,	1100,	101,	11,	110
2017-01-05 16:44:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:44:30 AI_Player.update()		101,	1010,	101,	1011,	11,	1001,	11
2017-01-05 16:44:30 AI_Player.update()		1100,	1011,	1101,	110,	1101,	11,	1001
2017-01-05 16:44:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:30 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:30 AI_Player.update()	update
2017-01-05 16:44:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:30 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:30 AI_Player.update()	update
2017-01-05 16:44:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:31 AI_Player.update()	Search took139ms
2017-01-05 16:44:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-05 16:44:31 AI_Player.update()		110,	101,	110,	1001,	1101,	11,	11
2017-01-05 16:44:31 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:31 AI_Player.update()		1011,	101,	1010,	1010,	101,	11,	110
2017-01-05 16:44:31 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-05 16:44:31 AI_Player.update()		101,	1010,	101,	110,	11,	1001,	11
2017-01-05 16:44:31 AI_Player.update()		1100,	1011,	1101,	101,	1101,	11,	1001
2017-01-05 16:44:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()	update
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:44:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()	update
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:31 AI_Player.update()	Search took191ms
2017-01-05 16:44:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:44:31 AI_Player.update()		110,	1001,	110,	1001,	1101,	11,	11
2017-01-05 16:44:31 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:31 AI_Player.update()		1011,	101,	1010,	1010,	101,	11,	110
2017-01-05 16:44:31 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1100,	1011
2017-01-05 16:44:31 AI_Player.update()		101,	1011,	101,	110,	11,	1001,	11
2017-01-05 16:44:31 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-05 16:44:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:44:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()	update
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()	update
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:31 AI_Player.update()	Search took56ms
2017-01-05 16:44:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 16:44:31 AI_Player.update()		11,	110,	1001,	110,	1001,	1101,	11
2017-01-05 16:44:31 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:31 AI_Player.update()		1011,	101,	1010,	1010,	101,	11,	110
2017-01-05 16:44:31 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1100,	1011
2017-01-05 16:44:31 AI_Player.update()		101,	1011,	101,	110,	11,	1001,	11
2017-01-05 16:44:31 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-05 16:44:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()	update
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:31 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:44:31 AI_Player.update()	Player a has won!
2017-01-05 16:44:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:31 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:31 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()	update
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:31 AI_Player.update()	Search took180ms
2017-01-05 16:44:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 16:44:31 AI_Player.update()		1101,	110,	1101,	101,	101,	111,	1100
2017-01-05 16:44:31 AI_Player.update()		1110,	1011,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:31 AI_Player.update()		1011,	101,	1100,	1001,	11,	11,	1010
2017-01-05 16:44:31 AI_Player.update()		1110,	11,	1101,	1110,	1011,	101,	1011
2017-01-05 16:44:31 AI_Player.update()		1011,	1101,	101,	1010,	1011,	1010,	101
2017-01-05 16:44:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 16:44:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()	update
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()	update
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:31 AI_Player.update()	Search took42ms
2017-01-05 16:44:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 16:44:31 AI_Player.update()		1101,	110,	1101,	1001,	101,	111,	1100
2017-01-05 16:44:31 AI_Player.update()		1110,	1011,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:31 AI_Player.update()		1011,	101,	1100,	1110,	11,	11,	1010
2017-01-05 16:44:31 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:31 AI_Player.update()		1011,	1101,	101,	101,	1011,	1010,	101
2017-01-05 16:44:31 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()	update
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:31 AI_Player.update()	update
2017-01-05 16:44:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:32 AI_Player.update()	Search took961ms
2017-01-05 16:44:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:32 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 16:44:32 AI_Player.update()		1101,	110,	1101,	1001,	101,	111,	1100
2017-01-05 16:44:32 AI_Player.update()		1110,	1011,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:32 AI_Player.update()		1010,	1011,	101,	1100,	1110,	11,	11
2017-01-05 16:44:32 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:32 AI_Player.update()		1011,	1101,	101,	101,	1011,	1010,	101
2017-01-05 16:44:32 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:32 AI_Player.update()	update
2017-01-05 16:44:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:32 AI_Player.update()	update
2017-01-05 16:44:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:32 AI_Player.update()	Search took211ms
2017-01-05 16:44:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:32 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 16:44:32 AI_Player.update()		1101,	110,	1101,	1001,	101,	11,	1100
2017-01-05 16:44:32 AI_Player.update()		1110,	1011,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:32 AI_Player.update()		1010,	1011,	101,	1100,	1110,	101,	11
2017-01-05 16:44:32 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:44:32 AI_Player.update()		1011,	1101,	101,	101,	1011,	1010,	101
2017-01-05 16:44:32 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:32 AI_Player.update()	update
2017-01-05 16:44:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:32 AI_Player.update()	update
2017-01-05 16:44:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:33 AI_Player.update()	Search took1039ms
2017-01-05 16:44:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:33 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 16:44:33 AI_Player.update()		1101,	110,	1101,	1001,	101,	11,	1100
2017-01-05 16:44:33 AI_Player.update()		1110,	1011,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:33 AI_Player.update()		1010,	1011,	101,	1100,	1110,	101,	11
2017-01-05 16:44:33 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:44:33 AI_Player.update()		1101,	101,	101,	1011,	1010,	101,	1011
2017-01-05 16:44:33 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:33 AI_Player.update()	update
2017-01-05 16:44:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:33 AI_Player.update()	update
2017-01-05 16:44:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:34 AI_Player.update()	Search took722ms
2017-01-05 16:44:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:34 AI_Player.update()		110,	110,	111,	101,	111,	111,	11
2017-01-05 16:44:34 AI_Player.update()		1101,	1011,	1101,	1001,	101,	11,	1100
2017-01-05 16:44:34 AI_Player.update()		1110,	1011,	1110,	1001,	111,	11,	1011
2017-01-05 16:44:34 AI_Player.update()		1010,	11,	101,	1100,	1110,	101,	11
2017-01-05 16:44:34 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 16:44:34 AI_Player.update()		1101,	101,	101,	1011,	1010,	101,	1011
2017-01-05 16:44:34 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-05 16:44:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:34 AI_Player.update()	update
2017-01-05 16:44:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:34 AI_Player.update()	update
2017-01-05 16:44:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:34 AI_Player.update()	Search took406ms
2017-01-05 16:44:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:34 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-05 16:44:34 AI_Player.update()		1101,	1011,	1101,	1001,	101,	11,	1100
2017-01-05 16:44:34 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-05 16:44:34 AI_Player.update()		1010,	11,	101,	1100,	1110,	1010,	11
2017-01-05 16:44:34 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:34 AI_Player.update()		1101,	101,	101,	1011,	1010,	110,	1011
2017-01-05 16:44:34 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-05 16:44:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:34 AI_Player.update()	update
2017-01-05 16:44:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:34 AI_Player.update()	update
2017-01-05 16:44:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:35 AI_Player.update()	Search took505ms
2017-01-05 16:44:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:35 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-05 16:44:35 AI_Player.update()		1101,	1011,	1101,	1001,	101,	11,	1100
2017-01-05 16:44:35 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-05 16:44:35 AI_Player.update()		1010,	11,	101,	1100,	1110,	1010,	11
2017-01-05 16:44:35 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:35 AI_Player.update()		1011,	1101,	101,	101,	1011,	1010,	110
2017-01-05 16:44:35 AI_Player.update()		1100,	101,	1101,	11,	1101,	111,	1001
2017-01-05 16:44:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:35 AI_Player.update()	update
2017-01-05 16:44:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:35 AI_Player.update()	update
2017-01-05 16:44:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:35 AI_Player.update()	Search took523ms
2017-01-05 16:44:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:35 AI_Player.update()		110,	110,	111,	1001,	111,	11,	11
2017-01-05 16:44:35 AI_Player.update()		1101,	1011,	1101,	1001,	101,	11,	1100
2017-01-05 16:44:35 AI_Player.update()		1110,	1011,	1110,	1100,	111,	101,	1011
2017-01-05 16:44:35 AI_Player.update()		1010,	11,	101,	1010,	1110,	1010,	11
2017-01-05 16:44:35 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:35 AI_Player.update()		1011,	1101,	101,	11,	1011,	1010,	110
2017-01-05 16:44:35 AI_Player.update()		1100,	101,	1101,	101,	1101,	111,	1001
2017-01-05 16:44:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:35 AI_Player.update()	update
2017-01-05 16:44:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:35 AI_Player.update()	update
2017-01-05 16:44:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:37 AI_Player.update()	Search took1380ms
2017-01-05 16:44:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:37 AI_Player.update()		110,	1011,	111,	1001,	111,	11,	11
2017-01-05 16:44:37 AI_Player.update()		1101,	1011,	1101,	1001,	101,	11,	1100
2017-01-05 16:44:37 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 16:44:37 AI_Player.update()		1010,	101,	101,	1010,	1110,	1010,	11
2017-01-05 16:44:37 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 16:44:37 AI_Player.update()		1011,	101,	101,	11,	1011,	1010,	110
2017-01-05 16:44:37 AI_Player.update()		1100,	110,	1101,	101,	1101,	111,	1001
2017-01-05 16:44:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:37 AI_Player.update()	update
2017-01-05 16:44:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:37 AI_Player.update()	update
2017-01-05 16:44:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:37 AI_Player.update()	Search took350ms
2017-01-05 16:44:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:37 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:44:37 AI_Player.update()		1101,	1011,	1101,	1001,	101,	11,	1100
2017-01-05 16:44:37 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 16:44:37 AI_Player.update()		1010,	101,	101,	1100,	1110,	1010,	11
2017-01-05 16:44:37 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:37 AI_Player.update()		1011,	101,	101,	101,	1011,	1010,	110
2017-01-05 16:44:37 AI_Player.update()		1100,	110,	1101,	11,	1101,	111,	1001
2017-01-05 16:44:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:37 AI_Player.update()	update
2017-01-05 16:44:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:37 AI_Player.update()	update
2017-01-05 16:44:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:38 AI_Player.update()	Search took542ms
2017-01-05 16:44:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 16:44:38 AI_Player.update()		1101,	11,	1101,	1001,	101,	11,	1100
2017-01-05 16:44:38 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 16:44:38 AI_Player.update()		1010,	1101,	101,	1100,	1110,	1010,	11
2017-01-05 16:44:38 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:38 AI_Player.update()		1011,	110,	101,	101,	1011,	1010,	110
2017-01-05 16:44:38 AI_Player.update()		1100,	1011,	1101,	11,	1101,	111,	1001
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:38 AI_Player.update()	Search took115ms
2017-01-05 16:44:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-05 16:44:38 AI_Player.update()		1101,	101,	1101,	1001,	101,	11,	1100
2017-01-05 16:44:38 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-05 16:44:38 AI_Player.update()		1010,	101,	101,	1100,	1110,	1010,	11
2017-01-05 16:44:38 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 16:44:38 AI_Player.update()		1011,	1011,	101,	101,	1011,	1010,	110
2017-01-05 16:44:38 AI_Player.update()		1100,	1011,	1101,	11,	1101,	111,	1001
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:44:38 AI_Player.update()	Player a has won!
2017-01-05 16:44:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:38 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:38 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:38 AI_Player.update()	Search took8ms
2017-01-05 16:44:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:44:38 AI_Player.update()		11,	1100,	101,	101,	101,	1010,	101
2017-01-05 16:44:38 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-05 16:44:38 AI_Player.update()		110,	110,	101,	1001,	11,	1110,	1010
2017-01-05 16:44:38 AI_Player.update()		1110,	111,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:38 AI_Player.update()		1010,	1001,	101,	1100,	1011,	111,	111
2017-01-05 16:44:38 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:38 AI_Player.update()	Search took58ms
2017-01-05 16:44:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:44:38 AI_Player.update()		101,	11,	1100,	101,	101,	101,	1010
2017-01-05 16:44:38 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-05 16:44:38 AI_Player.update()		110,	110,	101,	1001,	11,	1110,	1010
2017-01-05 16:44:38 AI_Player.update()		1110,	111,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:38 AI_Player.update()		1010,	1001,	101,	1100,	1011,	111,	111
2017-01-05 16:44:38 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:38 AI_Player.update()	Search took23ms
2017-01-05 16:44:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 16:44:38 AI_Player.update()		101,	1010,	1100,	101,	101,	101,	1010
2017-01-05 16:44:38 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 16:44:38 AI_Player.update()		110,	1010,	101,	1001,	11,	1110,	1010
2017-01-05 16:44:38 AI_Player.update()		1110,	110,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:38 AI_Player.update()		1010,	111,	101,	1100,	1011,	111,	111
2017-01-05 16:44:38 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:38 AI_Player.update()	Search took521ms
2017-01-05 16:44:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 16:44:38 AI_Player.update()		101,	1010,	1100,	1010,	101,	101,	1010
2017-01-05 16:44:38 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 16:44:38 AI_Player.update()		110,	1010,	101,	111,	11,	1110,	1010
2017-01-05 16:44:38 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:44:38 AI_Player.update()		1010,	111,	101,	111,	1011,	111,	111
2017-01-05 16:44:38 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:44:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:44:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:38 AI_Player.update()	update
2017-01-05 16:44:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:39 AI_Player.update()	Search took223ms
2017-01-05 16:44:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:39 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:44:39 AI_Player.update()		101,	11,	1100,	1010,	101,	101,	1010
2017-01-05 16:44:39 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:44:39 AI_Player.update()		110,	110,	101,	111,	11,	1110,	1010
2017-01-05 16:44:39 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:44:39 AI_Player.update()		1010,	1001,	101,	111,	1011,	111,	111
2017-01-05 16:44:39 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:44:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	1 2
2017-01-05 16:44:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:39 AI_Player.update()	update
2017-01-05 16:44:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:39 AI_Player.update()	update
2017-01-05 16:44:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:39 AI_Player.update()	Search took723ms
2017-01-05 16:44:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:39 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 16:44:39 AI_Player.update()		101,	11,	1100,	1010,	101,	101,	1010
2017-01-05 16:44:39 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 16:44:39 AI_Player.update()		110,	101,	111,	11,	1110,	1010,	110
2017-01-05 16:44:39 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:44:39 AI_Player.update()		1010,	1001,	101,	111,	1011,	111,	111
2017-01-05 16:44:39 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:44:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:39 AI_Player.update()	update
2017-01-05 16:44:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:39 AI_Player.update()	update
2017-01-05 16:44:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:40 AI_Player.update()	Search took548ms
2017-01-05 16:44:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:40 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:44:40 AI_Player.update()		101,	11,	1100,	101,	101,	101,	1010
2017-01-05 16:44:40 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:44:40 AI_Player.update()		110,	101,	111,	1001,	1110,	1010,	110
2017-01-05 16:44:40 AI_Player.update()		1110,	111,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:40 AI_Player.update()		1010,	1001,	101,	1100,	1011,	111,	111
2017-01-05 16:44:40 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:40 AI_Player.update()	update
2017-01-05 16:44:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:40 AI_Player.update()	update
2017-01-05 16:44:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:41 AI_Player.update()	Search took892ms
2017-01-05 16:44:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:41 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:44:41 AI_Player.update()		101,	11,	1100,	101,	101,	101,	1010
2017-01-05 16:44:41 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 16:44:41 AI_Player.update()		101,	111,	1001,	1110,	1010,	110,	110
2017-01-05 16:44:41 AI_Player.update()		1110,	111,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:41 AI_Player.update()		1010,	1001,	101,	1100,	1011,	111,	111
2017-01-05 16:44:41 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:41 AI_Player.update()	update
2017-01-05 16:44:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:41 AI_Player.update()	update
2017-01-05 16:44:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:41 AI_Player.update()	Search took619ms
2017-01-05 16:44:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:41 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 16:44:41 AI_Player.update()		101,	1010,	1100,	101,	101,	101,	1010
2017-01-05 16:44:41 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-05 16:44:41 AI_Player.update()		101,	111,	1001,	1110,	1010,	110,	110
2017-01-05 16:44:41 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:41 AI_Player.update()		1010,	101,	101,	1100,	1011,	111,	111
2017-01-05 16:44:41 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:41 AI_Player.update()	update
2017-01-05 16:44:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:41 AI_Player.update()	update
2017-01-05 16:44:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:42 AI_Player.update()	Search took34ms
2017-01-05 16:44:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:42 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:44:42 AI_Player.update()		101,	111,	1100,	101,	101,	101,	1010
2017-01-05 16:44:42 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-05 16:44:42 AI_Player.update()		101,	1001,	1001,	1110,	1010,	110,	110
2017-01-05 16:44:42 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:42 AI_Player.update()		1010,	1010,	101,	1100,	1011,	111,	111
2017-01-05 16:44:42 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:42 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:42 AI_Player.update()	update
2017-01-05 16:44:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:42 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:42 AI_Player.update()	update
2017-01-05 16:44:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:42 AI_Player.update()	Search took490ms
2017-01-05 16:44:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:42 AI_Player.update()		110,	111,	111,	1010,	111,	110,	11
2017-01-05 16:44:42 AI_Player.update()		101,	111,	1100,	101,	101,	101,	1010
2017-01-05 16:44:42 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:44:42 AI_Player.update()		101,	101,	1001,	1110,	1010,	110,	110
2017-01-05 16:44:42 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:42 AI_Player.update()		1010,	11,	101,	1100,	1011,	111,	111
2017-01-05 16:44:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:42 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:42 AI_Player.update()	update
2017-01-05 16:44:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:42 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:42 AI_Player.update()	update
2017-01-05 16:44:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:42 AI_Player.update()	Search took52ms
2017-01-05 16:44:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:42 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:44:42 AI_Player.update()		101,	111,	1100,	101,	101,	101,	1010
2017-01-05 16:44:42 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-05 16:44:42 AI_Player.update()		101,	1001,	1001,	1110,	1010,	110,	110
2017-01-05 16:44:42 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:42 AI_Player.update()		1010,	1010,	101,	1100,	1011,	111,	111
2017-01-05 16:44:42 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:42 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:42 AI_Player.update()	update
2017-01-05 16:44:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:42 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:42 AI_Player.update()	update
2017-01-05 16:44:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:43 AI_Player.update()	Search took456ms
2017-01-05 16:44:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:44:43 AI_Player.update()		1010,	101,	111,	1100,	101,	101,	101
2017-01-05 16:44:43 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-05 16:44:43 AI_Player.update()		101,	1001,	1001,	1110,	1010,	110,	110
2017-01-05 16:44:43 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:43 AI_Player.update()		1010,	1010,	101,	1100,	1011,	111,	111
2017-01-05 16:44:43 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()	update
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()	update
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:43 AI_Player.update()	Search took110ms
2017-01-05 16:44:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 16:44:43 AI_Player.update()		1010,	101,	111,	1100,	101,	101,	101
2017-01-05 16:44:43 AI_Player.update()		1110,	111,	1110,	11,	111,	101,	1011
2017-01-05 16:44:43 AI_Player.update()		110,	101,	1001,	1001,	1110,	1010,	110
2017-01-05 16:44:43 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:43 AI_Player.update()		1010,	1010,	101,	1100,	1011,	111,	111
2017-01-05 16:44:43 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()	update
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()	update
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:43 AI_Player.update()	Search took49ms
2017-01-05 16:44:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 16:44:43 AI_Player.update()		1010,	111,	111,	1100,	101,	101,	101
2017-01-05 16:44:43 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-05 16:44:43 AI_Player.update()		110,	101,	1001,	1001,	1110,	1010,	110
2017-01-05 16:44:43 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1010,	1011
2017-01-05 16:44:43 AI_Player.update()		1010,	11,	101,	1100,	1011,	111,	111
2017-01-05 16:44:43 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 16:44:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()	update
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()	update
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:43 AI_Player.update()	Search took354ms
2017-01-05 16:44:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 16:44:43 AI_Player.update()		1010,	111,	111,	1010,	101,	101,	101
2017-01-05 16:44:43 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 16:44:43 AI_Player.update()		110,	101,	1001,	11,	1110,	1010,	110
2017-01-05 16:44:43 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:44:43 AI_Player.update()		1010,	11,	101,	111,	1011,	111,	111
2017-01-05 16:44:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:44:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()	update
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()	update
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:43 AI_Player.update()	Search took316ms
2017-01-05 16:44:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:44:43 AI_Player.update()		1010,	111,	111,	1010,	101,	101,	101
2017-01-05 16:44:43 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:43 AI_Player.update()		110,	101,	1001,	11,	1110,	1010,	110
2017-01-05 16:44:43 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	111,	1011
2017-01-05 16:44:43 AI_Player.update()		1010,	11,	101,	111,	1011,	1010,	111
2017-01-05 16:44:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-05 16:44:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()	update
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:43 AI_Player.update()	update
2017-01-05 16:44:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:44 AI_Player.update()	Search took376ms
2017-01-05 16:44:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:44:44 AI_Player.update()		1010,	111,	111,	1010,	101,	101,	101
2017-01-05 16:44:44 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:44 AI_Player.update()		110,	101,	1001,	11,	1110,	1010,	110
2017-01-05 16:44:44 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	111,	1011
2017-01-05 16:44:44 AI_Player.update()		111,	1010,	11,	101,	111,	1011,	1010
2017-01-05 16:44:44 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-05 16:44:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()	update
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()	update
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:44 AI_Player.update()	Search took292ms
2017-01-05 16:44:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 16:44:44 AI_Player.update()		1010,	111,	111,	1010,	101,	101,	101
2017-01-05 16:44:44 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:44 AI_Player.update()		110,	101,	1001,	11,	1110,	1010,	110
2017-01-05 16:44:44 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	111,	1011
2017-01-05 16:44:44 AI_Player.update()		1010,	11,	101,	111,	1011,	1010,	111
2017-01-05 16:44:44 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-05 16:44:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()	update
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:44 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:44:44 AI_Player.update()	Player a has won!
2017-01-05 16:44:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:44 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:44 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()	update
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:44 AI_Player.update()	Search took42ms
2017-01-05 16:44:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:44:44 AI_Player.update()		101,	1100,	111,	1110,	110,	101,	110
2017-01-05 16:44:44 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 16:44:44 AI_Player.update()		11,	11,	1011,	11,	1010,	110,	1001
2017-01-05 16:44:44 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:44:44 AI_Player.update()		101,	1110,	1010,	1001,	11,	1010,	11
2017-01-05 16:44:44 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	11,	1001
2017-01-05 16:44:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()	update
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()	update
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:44 AI_Player.update()	Search took113ms
2017-01-05 16:44:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:44:44 AI_Player.update()		1100,	111,	1110,	110,	101,	110,	101
2017-01-05 16:44:44 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 16:44:44 AI_Player.update()		11,	11,	1011,	11,	1010,	110,	1001
2017-01-05 16:44:44 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:44:44 AI_Player.update()		101,	1110,	1010,	1001,	11,	1010,	11
2017-01-05 16:44:44 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	11,	1001
2017-01-05 16:44:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()	update
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:44 AI_Player.update()	update
2017-01-05 16:44:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:45 AI_Player.update()	Search took490ms
2017-01-05 16:44:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:45 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:44:45 AI_Player.update()		1100,	111,	1110,	110,	101,	110,	101
2017-01-05 16:44:45 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 16:44:45 AI_Player.update()		11,	1011,	11,	1010,	110,	1001,	11
2017-01-05 16:44:45 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1011,	1011
2017-01-05 16:44:45 AI_Player.update()		101,	1110,	1010,	1001,	11,	1010,	11
2017-01-05 16:44:45 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	11,	1001
2017-01-05 16:44:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:45 AI_Player.update()	update
2017-01-05 16:44:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:45 AI_Player.update()	update
2017-01-05 16:44:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:45 AI_Player.update()	Search took321ms
2017-01-05 16:44:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:45 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:44:45 AI_Player.update()		1100,	111,	1110,	11,	101,	110,	101
2017-01-05 16:44:45 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 16:44:45 AI_Player.update()		11,	1011,	11,	1100,	110,	1001,	11
2017-01-05 16:44:45 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1011,	1011
2017-01-05 16:44:45 AI_Player.update()		101,	1110,	1010,	1100,	11,	1010,	11
2017-01-05 16:44:45 AI_Player.update()		1100,	1110,	1101,	101,	1101,	11,	1001
2017-01-05 16:44:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:45 AI_Player.update()	update
2017-01-05 16:44:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:44:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:45 AI_Player.update()	update
2017-01-05 16:44:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:45 AI_Player.update()	Search took333ms
2017-01-05 16:44:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:45 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-05 16:44:45 AI_Player.update()		1100,	111,	1110,	11,	101,	110,	101
2017-01-05 16:44:45 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 16:44:45 AI_Player.update()		11,	11,	1011,	11,	1100,	110,	1001
2017-01-05 16:44:45 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1011,	1011
2017-01-05 16:44:45 AI_Player.update()		101,	1110,	1010,	1100,	11,	1010,	11
2017-01-05 16:44:45 AI_Player.update()		1100,	1110,	1101,	101,	1101,	11,	1001
2017-01-05 16:44:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	2 3
2017-01-05 16:44:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:45 AI_Player.update()	update
2017-01-05 16:44:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:45 AI_Player.update()	update
2017-01-05 16:44:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:46 AI_Player.update()	Search took694ms
2017-01-05 16:44:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:46 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:44:46 AI_Player.update()		1100,	111,	1110,	110,	101,	110,	101
2017-01-05 16:44:46 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 16:44:46 AI_Player.update()		11,	11,	1011,	1010,	1100,	110,	1001
2017-01-05 16:44:46 AI_Player.update()		1110,	111,	1101,	11,	1011,	1011,	1011
2017-01-05 16:44:46 AI_Player.update()		101,	1110,	1010,	1001,	11,	1010,	11
2017-01-05 16:44:46 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	11,	1001
2017-01-05 16:44:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:44:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:46 AI_Player.update()	update
2017-01-05 16:44:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:46 AI_Player.update()	update
2017-01-05 16:44:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:46 AI_Player.update()	Search took62ms
2017-01-05 16:44:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:46 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 16:44:46 AI_Player.update()		1100,	1100,	1110,	110,	101,	110,	101
2017-01-05 16:44:46 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-05 16:44:46 AI_Player.update()		11,	111,	1011,	1010,	1100,	110,	1001
2017-01-05 16:44:46 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1011,	1011
2017-01-05 16:44:46 AI_Player.update()		101,	1110,	1010,	1001,	11,	1010,	11
2017-01-05 16:44:46 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-05 16:44:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:46 AI_Player.update()	update
2017-01-05 16:44:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:46 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:46 AI_Player.update()	update
2017-01-05 16:44:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:47 AI_Player.update()	Search took563ms
2017-01-05 16:44:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:47 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:44:47 AI_Player.update()		1100,	11,	1110,	110,	101,	110,	101
2017-01-05 16:44:47 AI_Player.update()		1110,	111,	1110,	11,	111,	11,	1011
2017-01-05 16:44:47 AI_Player.update()		11,	1110,	1011,	1010,	1100,	110,	1001
2017-01-05 16:44:47 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1011,	1011
2017-01-05 16:44:47 AI_Player.update()		101,	11,	1010,	1001,	11,	1010,	11
2017-01-05 16:44:47 AI_Player.update()		1100,	111,	1101,	1100,	1101,	11,	1001
2017-01-05 16:44:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:47 AI_Player.update()	update
2017-01-05 16:44:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:47 AI_Player.update()	update
2017-01-05 16:44:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:47 AI_Player.update()	Search took73ms
2017-01-05 16:44:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:47 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:44:47 AI_Player.update()		1100,	11,	1110,	110,	101,	110,	101
2017-01-05 16:44:47 AI_Player.update()		1110,	111,	1110,	11,	111,	11,	1011
2017-01-05 16:44:47 AI_Player.update()		11,	1110,	1011,	1010,	1100,	110,	1001
2017-01-05 16:44:47 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1011,	1011
2017-01-05 16:44:47 AI_Player.update()		11,	1010,	1001,	11,	1010,	11,	101
2017-01-05 16:44:47 AI_Player.update()		1100,	111,	1101,	1100,	1101,	11,	1001
2017-01-05 16:44:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	3 4
2017-01-05 16:44:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:47 AI_Player.update()	update
2017-01-05 16:44:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:44:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:47 AI_Player.update()	update
2017-01-05 16:44:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:47 AI_Player.update()	Search took576ms
2017-01-05 16:44:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:47 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 16:44:47 AI_Player.update()		1100,	11,	1110,	110,	101,	110,	101
2017-01-05 16:44:47 AI_Player.update()		1110,	111,	1110,	11,	111,	11,	1011
2017-01-05 16:44:47 AI_Player.update()		1001,	11,	1110,	1011,	1010,	1100,	110
2017-01-05 16:44:47 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1011,	1011
2017-01-05 16:44:47 AI_Player.update()		11,	1010,	1001,	11,	1010,	11,	101
2017-01-05 16:44:47 AI_Player.update()		1100,	111,	1101,	1100,	1101,	11,	1001
2017-01-05 16:44:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:44:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:47 AI_Player.update()	update
2017-01-05 16:44:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:44:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:47 AI_Player.update()	update
2017-01-05 16:44:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:48 AI_Player.update()	Search took302ms
2017-01-05 16:44:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:48 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 16:44:48 AI_Player.update()		1100,	111,	1110,	110,	101,	110,	101
2017-01-05 16:44:48 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-05 16:44:48 AI_Player.update()		1001,	1110,	1110,	1011,	1010,	1100,	110
2017-01-05 16:44:48 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1011,	1011
2017-01-05 16:44:48 AI_Player.update()		11,	111,	1001,	11,	1010,	11,	101
2017-01-05 16:44:48 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-05 16:44:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	4 5
2017-01-05 16:44:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:48 AI_Player.update()	update
2017-01-05 16:44:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:48 AI_Player.update()	update
2017-01-05 16:44:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:48 AI_Player.update()	Search took269ms
2017-01-05 16:44:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:48 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 16:44:48 AI_Player.update()		1100,	111,	1110,	101,	101,	110,	101
2017-01-05 16:44:48 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-05 16:44:48 AI_Player.update()		1001,	1110,	1110,	11,	1010,	1100,	110
2017-01-05 16:44:48 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:44:48 AI_Player.update()		11,	111,	1001,	11,	1010,	11,	101
2017-01-05 16:44:48 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-05 16:44:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:48 AI_Player.update()	update
2017-01-05 16:44:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:48 AI_Player.update()	update
2017-01-05 16:44:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:48 AI_Player.update()	Search took266ms
2017-01-05 16:44:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:48 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 16:44:48 AI_Player.update()		1100,	11,	1110,	101,	101,	110,	101
2017-01-05 16:44:48 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-05 16:44:48 AI_Player.update()		1001,	1010,	1110,	11,	1010,	1100,	110
2017-01-05 16:44:48 AI_Player.update()		1110,	111,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:44:48 AI_Player.update()		11,	1100,	1001,	11,	1010,	11,	101
2017-01-05 16:44:48 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 16:44:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:48 AI_Player.update()	update
2017-01-05 16:44:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:48 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:48 AI_Player.update()	update
2017-01-05 16:44:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:49 AI_Player.update()	Search took388ms
2017-01-05 16:44:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:49 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 16:44:49 AI_Player.update()		1100,	11,	1110,	101,	101,	110,	101
2017-01-05 16:44:49 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-05 16:44:49 AI_Player.update()		1010,	1110,	11,	1010,	1100,	110,	1001
2017-01-05 16:44:49 AI_Player.update()		1110,	111,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:44:49 AI_Player.update()		11,	1100,	1001,	11,	1010,	11,	101
2017-01-05 16:44:49 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 16:44:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:49 AI_Player.update()	update
2017-01-05 16:44:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:44:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:49 AI_Player.update()	update
2017-01-05 16:44:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:49 AI_Player.update()	Search took636ms
2017-01-05 16:44:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:49 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 16:44:49 AI_Player.update()		1100,	111,	1110,	101,	101,	110,	101
2017-01-05 16:44:49 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-05 16:44:49 AI_Player.update()		1010,	1110,	11,	1010,	1100,	110,	1001
2017-01-05 16:44:49 AI_Player.update()		1110,	1110,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:44:49 AI_Player.update()		11,	111,	1001,	11,	1010,	11,	101
2017-01-05 16:44:49 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-05 16:44:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:44:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:49 AI_Player.update()	update
2017-01-05 16:44:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:49 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:44:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:49 AI_Player.update()	update
2017-01-05 16:44:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:50 AI_Player.update()	Search took459ms
2017-01-05 16:44:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:50 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 16:44:50 AI_Player.update()		1100,	11,	1110,	101,	101,	110,	101
2017-01-05 16:44:50 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-05 16:44:50 AI_Player.update()		1010,	1110,	11,	1010,	1100,	110,	1001
2017-01-05 16:44:50 AI_Player.update()		1110,	111,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:44:50 AI_Player.update()		11,	1100,	1001,	11,	1010,	11,	101
2017-01-05 16:44:50 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 16:44:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:44:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:50 AI_Player.update()	update
2017-01-05 16:44:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:44:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:50 AI_Player.update()	update
2017-01-05 16:44:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:50 AI_Player.update()	Search took691ms
2017-01-05 16:44:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:50 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-05 16:44:50 AI_Player.update()		1100,	11,	1110,	101,	101,	110,	101
2017-01-05 16:44:50 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-05 16:44:50 AI_Player.update()		1110,	11,	1010,	1100,	110,	1001,	1010
2017-01-05 16:44:50 AI_Player.update()		1110,	111,	1101,	1011,	1011,	1011,	1011
2017-01-05 16:44:50 AI_Player.update()		11,	1100,	1001,	11,	1010,	11,	101
2017-01-05 16:44:50 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-05 16:44:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	5 6
2017-01-05 16:44:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:50 AI_Player.update()	update
2017-01-05 16:44:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:50 AI_Player.update()	update
2017-01-05 16:44:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:51 AI_Player.update()	Search took592ms
2017-01-05 16:44:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 16:44:51 AI_Player.update()		1100,	11,	1110,	110,	101,	110,	101
2017-01-05 16:44:51 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-05 16:44:51 AI_Player.update()		1110,	11,	1010,	1011,	110,	1001,	1010
2017-01-05 16:44:51 AI_Player.update()		1110,	111,	1101,	11,	1011,	1011,	1011
2017-01-05 16:44:51 AI_Player.update()		11,	1100,	1001,	11,	1010,	11,	101
2017-01-05 16:44:51 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-05 16:44:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:44:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()	update
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:44:51 AI_Player.update()	Player b has won!
2017-01-05 16:44:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:51 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:51 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()	update
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:51 AI_Player.update()	Search took24ms
2017-01-05 16:44:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 16:44:51 AI_Player.update()		1001,	11,	1001,	1010,	101,	110,	11
2017-01-05 16:44:51 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-05 16:44:51 AI_Player.update()		101,	1100,	1010,	1100,	1001,	1010,	1010
2017-01-05 16:44:51 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:51 AI_Player.update()		11,	1010,	1010,	11,	101,	1001,	110
2017-01-05 16:44:51 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1100,	1001
2017-01-05 16:44:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()	update
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()	update
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:51 AI_Player.update()	Search took9ms
2017-01-05 16:44:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 16:44:51 AI_Player.update()		11,	1001,	1010,	101,	110,	11,	1001
2017-01-05 16:44:51 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-05 16:44:51 AI_Player.update()		101,	1100,	1010,	1100,	1001,	1010,	1010
2017-01-05 16:44:51 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:51 AI_Player.update()		11,	1010,	1010,	11,	101,	1001,	110
2017-01-05 16:44:51 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1100,	1001
2017-01-05 16:44:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()	update
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()	update
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:51 AI_Player.update()	Search took284ms
2017-01-05 16:44:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 16:44:51 AI_Player.update()		11,	11,	1010,	101,	110,	11,	1001
2017-01-05 16:44:51 AI_Player.update()		1110,	1100,	1110,	1001,	111,	111,	1011
2017-01-05 16:44:51 AI_Player.update()		101,	1110,	1010,	1100,	1001,	1010,	1010
2017-01-05 16:44:51 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:51 AI_Player.update()		11,	1011,	1010,	11,	101,	1001,	110
2017-01-05 16:44:51 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 16:44:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()	update
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()	update
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:51 AI_Player.update()	Search took26ms
2017-01-05 16:44:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 16:44:51 AI_Player.update()		1001,	11,	11,	1010,	101,	110,	11
2017-01-05 16:44:51 AI_Player.update()		1110,	1100,	1110,	1001,	111,	111,	1011
2017-01-05 16:44:51 AI_Player.update()		101,	1110,	1010,	1100,	1001,	1010,	1010
2017-01-05 16:44:51 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:51 AI_Player.update()		11,	1011,	1010,	11,	101,	1001,	110
2017-01-05 16:44:51 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 16:44:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()	update
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:51 AI_Player.update()	update
2017-01-05 16:44:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:52 AI_Player.update()	Search took185ms
2017-01-05 16:44:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:52 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 16:44:52 AI_Player.update()		11,	11,	1010,	101,	110,	11,	1001
2017-01-05 16:44:52 AI_Player.update()		1110,	1100,	1110,	1001,	111,	111,	1011
2017-01-05 16:44:52 AI_Player.update()		101,	1110,	1010,	1100,	1001,	1010,	1010
2017-01-05 16:44:52 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:52 AI_Player.update()		11,	1011,	1010,	11,	101,	1001,	110
2017-01-05 16:44:52 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 16:44:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:52 AI_Player.update()	update
2017-01-05 16:44:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:52 AI_Player.update()	update
2017-01-05 16:44:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:52 AI_Player.update()	Search took46ms
2017-01-05 16:44:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:52 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 16:44:52 AI_Player.update()		11,	1001,	1010,	101,	110,	11,	1001
2017-01-05 16:44:52 AI_Player.update()		1110,	11,	1110,	1001,	111,	111,	1011
2017-01-05 16:44:52 AI_Player.update()		101,	1100,	1010,	1100,	1001,	1010,	1010
2017-01-05 16:44:52 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:52 AI_Player.update()		11,	1010,	1010,	11,	101,	1001,	110
2017-01-05 16:44:52 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1100,	1001
2017-01-05 16:44:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	3 1
2017-01-05 16:44:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:52 AI_Player.update()	update
2017-01-05 16:44:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:52 AI_Player.update()	update
2017-01-05 16:44:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:52 AI_Player.update()	Search took326ms
2017-01-05 16:44:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:52 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 16:44:52 AI_Player.update()		11,	1001,	1010,	1010,	110,	11,	1001
2017-01-05 16:44:52 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-05 16:44:52 AI_Player.update()		101,	1100,	1010,	1001,	1001,	1010,	1010
2017-01-05 16:44:52 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:44:52 AI_Player.update()		11,	1010,	1010,	101,	101,	1001,	110
2017-01-05 16:44:52 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1100,	1001
2017-01-05 16:44:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:52 AI_Player.update()	update
2017-01-05 16:44:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:52 AI_Player.update()	update
2017-01-05 16:44:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:52 AI_Player.update()	Search took527ms
2017-01-05 16:44:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-05 16:44:53 AI_Player.update()		11,	11,	1010,	1010,	110,	11,	1001
2017-01-05 16:44:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-05 16:44:53 AI_Player.update()		101,	1110,	1010,	1001,	1001,	1010,	1010
2017-01-05 16:44:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-05 16:44:53 AI_Player.update()		11,	1011,	1010,	101,	101,	1001,	110
2017-01-05 16:44:53 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 16:44:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()	update
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()	update
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:53 AI_Player.update()	Search took435ms
2017-01-05 16:44:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-05 16:44:53 AI_Player.update()		11,	11,	1010,	101,	110,	11,	1001
2017-01-05 16:44:53 AI_Player.update()		1110,	1100,	1110,	1001,	111,	111,	1011
2017-01-05 16:44:53 AI_Player.update()		101,	1110,	1010,	1100,	1001,	1010,	1010
2017-01-05 16:44:53 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 16:44:53 AI_Player.update()		11,	1011,	1010,	11,	101,	1001,	110
2017-01-05 16:44:53 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 16:44:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()	update
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:44:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()	update
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:53 AI_Player.update()	Search took65ms
2017-01-05 16:44:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-05 16:44:53 AI_Player.update()		11,	11,	1010,	1001,	110,	11,	1001
2017-01-05 16:44:53 AI_Player.update()		1110,	1100,	1110,	1100,	111,	111,	1011
2017-01-05 16:44:53 AI_Player.update()		101,	1110,	1010,	101,	1001,	1010,	1010
2017-01-05 16:44:53 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 16:44:53 AI_Player.update()		11,	1011,	1010,	11,	101,	1001,	110
2017-01-05 16:44:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 16:44:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:44:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()	update
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:44:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()	update
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:53 AI_Player.update()	Search took280ms
2017-01-05 16:44:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-05 16:44:53 AI_Player.update()		11,	11,	1010,	1001,	110,	111,	1001
2017-01-05 16:44:53 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:53 AI_Player.update()		101,	1110,	1010,	101,	1001,	1100,	1010
2017-01-05 16:44:53 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:44:53 AI_Player.update()		11,	1011,	1010,	11,	101,	1100,	110
2017-01-05 16:44:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 16:44:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	5 2
2017-01-05 16:44:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()	update
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 16:44:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()	update
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:53 AI_Player.update()	Search took66ms
2017-01-05 16:44:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-05 16:44:53 AI_Player.update()		11,	11,	1010,	1001,	110,	111,	1001
2017-01-05 16:44:53 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:53 AI_Player.update()		101,	1110,	1010,	101,	1001,	1100,	1010
2017-01-05 16:44:53 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:44:53 AI_Player.update()		110,	11,	1011,	1010,	11,	101,	1100
2017-01-05 16:44:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 16:44:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 16:44:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()	update
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:44:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:53 AI_Player.update()	update
2017-01-05 16:44:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:54 AI_Player.update()	Search took143ms
2017-01-05 16:44:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 16:44:54 AI_Player.update()		11,	1001,	1010,	1001,	110,	111,	1001
2017-01-05 16:44:54 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:54 AI_Player.update()		101,	1100,	1010,	101,	1001,	1100,	1010
2017-01-05 16:44:54 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-05 16:44:54 AI_Player.update()		110,	1010,	1011,	1010,	11,	101,	1100
2017-01-05 16:44:54 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 16:44:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:44:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()	update
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:44:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()	update
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:54 AI_Player.update()	Search took268ms
2017-01-05 16:44:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-05 16:44:54 AI_Player.update()		11,	11,	1010,	1001,	110,	111,	1001
2017-01-05 16:44:54 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:54 AI_Player.update()		101,	1110,	1010,	101,	1001,	1100,	1010
2017-01-05 16:44:54 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-05 16:44:54 AI_Player.update()		110,	11,	1011,	1010,	11,	101,	1100
2017-01-05 16:44:54 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 16:44:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:44:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()	update
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:44:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()	update
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:54 AI_Player.update()	Search took132ms
2017-01-05 16:44:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 16:44:54 AI_Player.update()		11,	1001,	1010,	1001,	110,	111,	1001
2017-01-05 16:44:54 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 16:44:54 AI_Player.update()		101,	1100,	1010,	101,	1001,	1100,	1010
2017-01-05 16:44:54 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-05 16:44:54 AI_Player.update()		110,	1010,	1011,	1010,	11,	101,	1100
2017-01-05 16:44:54 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 16:44:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:44:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()	update
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:44:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()	update
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:54 AI_Player.update()	Search took264ms
2017-01-05 16:44:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 16:44:54 AI_Player.update()		11,	1001,	1010,	1100,	110,	111,	1001
2017-01-05 16:44:54 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-05 16:44:54 AI_Player.update()		101,	1100,	1010,	11,	1001,	1100,	1010
2017-01-05 16:44:54 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1001,	1011
2017-01-05 16:44:54 AI_Player.update()		110,	1010,	1011,	1010,	11,	101,	1100
2017-01-05 16:44:54 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-05 16:44:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	6 3
2017-01-05 16:44:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()	update
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:44:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:44:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()	update
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:54 AI_Player.update()	Search took157ms
2017-01-05 16:44:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 16:44:54 AI_Player.update()		11,	1001,	1010,	1100,	110,	11,	1001
2017-01-05 16:44:54 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-05 16:44:54 AI_Player.update()		101,	1100,	1010,	11,	1001,	1010,	1010
2017-01-05 16:44:54 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:44:54 AI_Player.update()		110,	1010,	1011,	1010,	11,	1001,	1100
2017-01-05 16:44:54 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 16:44:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	6 4
2017-01-05 16:44:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()	update
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:54 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:44:54 AI_Player.update()	Player a has won!
2017-01-05 16:44:54 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:54 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:44:54 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:44:54 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:44:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:54 AI_Player.update()	update
2017-01-05 16:44:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:55 AI_Player.update()	Search took243ms
2017-01-05 16:44:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-05 16:44:55 AI_Player.update()		1010,	110,	1010,	11,	1010,	1010,	1110
2017-01-05 16:44:55 AI_Player.update()		1110,	1001,	1110,	110,	111,	1010,	1011
2017-01-05 16:44:55 AI_Player.update()		1110,	110,	101,	1001,	1001,	1001,	101
2017-01-05 16:44:55 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-05 16:44:55 AI_Player.update()		1100,	1001,	1100,	111,	1100,	1011,	1010
2017-01-05 16:44:55 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:44:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:44:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()	update
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()	update
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:55 AI_Player.update()	Search took48ms
2017-01-05 16:44:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-05 16:44:55 AI_Player.update()		1010,	110,	1010,	11,	1010,	1010,	1110
2017-01-05 16:44:55 AI_Player.update()		1110,	1001,	1110,	110,	111,	1010,	1011
2017-01-05 16:44:55 AI_Player.update()		110,	101,	1001,	1001,	1001,	101,	1110
2017-01-05 16:44:55 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-05 16:44:55 AI_Player.update()		1100,	1001,	1100,	111,	1100,	1011,	1010
2017-01-05 16:44:55 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 16:44:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()	update
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()	update
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:55 AI_Player.update()	Search took175ms
2017-01-05 16:44:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:55 AI_Player.update()		1010,	110,	1010,	1001,	1010,	1010,	1110
2017-01-05 16:44:55 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 16:44:55 AI_Player.update()		110,	101,	1001,	110,	1001,	101,	1110
2017-01-05 16:44:55 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:44:55 AI_Player.update()		1100,	1001,	1100,	11,	1100,	1011,	1010
2017-01-05 16:44:55 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-05 16:44:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()	update
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()	update
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:55 AI_Player.update()	Search took265ms
2017-01-05 16:44:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:55 AI_Player.update()		1010,	110,	1010,	1001,	1010,	1010,	1110
2017-01-05 16:44:55 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 16:44:55 AI_Player.update()		110,	101,	1001,	110,	1001,	101,	1110
2017-01-05 16:44:55 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:44:55 AI_Player.update()		1001,	1100,	11,	1100,	1011,	1010,	1100
2017-01-05 16:44:55 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-05 16:44:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:44:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()	update
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:55 AI_Player.update()	update
2017-01-05 16:44:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:56 AI_Player.update()	Search took444ms
2017-01-05 16:44:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:56 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:56 AI_Player.update()		1010,	110,	1010,	1001,	1010,	1010,	1110
2017-01-05 16:44:56 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 16:44:56 AI_Player.update()		101,	1001,	110,	1001,	101,	1110,	110
2017-01-05 16:44:56 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	101,	1011
2017-01-05 16:44:56 AI_Player.update()		1001,	1100,	11,	1100,	1011,	1010,	1100
2017-01-05 16:44:56 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-05 16:44:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:44:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:56 AI_Player.update()	update
2017-01-05 16:44:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:56 AI_Player.update()	update
2017-01-05 16:44:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:56 AI_Player.update()	Search took515ms
2017-01-05 16:44:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:56 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:56 AI_Player.update()		1010,	110,	1010,	1001,	1010,	1010,	1110
2017-01-05 16:44:56 AI_Player.update()		1110,	1001,	1110,	11,	111,	1110,	1011
2017-01-05 16:44:56 AI_Player.update()		101,	1001,	110,	1001,	101,	101,	110
2017-01-05 16:44:56 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1010,	1011
2017-01-05 16:44:56 AI_Player.update()		1001,	1100,	11,	1100,	1011,	1001,	1100
2017-01-05 16:44:56 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:56 AI_Player.update()	update
2017-01-05 16:44:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:56 AI_Player.update()	update
2017-01-05 16:44:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:56 AI_Player.update()	Search took401ms
2017-01-05 16:44:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:56 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:56 AI_Player.update()		1010,	110,	1010,	1001,	1010,	1110,	1110
2017-01-05 16:44:56 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:44:56 AI_Player.update()		101,	1001,	110,	1001,	101,	1010,	110
2017-01-05 16:44:56 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:44:56 AI_Player.update()		1001,	1100,	11,	1100,	1011,	1010,	1100
2017-01-05 16:44:56 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:44:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:56 AI_Player.update()	update
2017-01-05 16:44:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:56 AI_Player.update()	update
2017-01-05 16:44:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:57 AI_Player.update()	Search took376ms
2017-01-05 16:44:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:57 AI_Player.update()		110,	1010,	1001,	1010,	1110,	1110,	1010
2017-01-05 16:44:57 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:44:57 AI_Player.update()		101,	1001,	110,	1001,	101,	1010,	110
2017-01-05 16:44:57 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:44:57 AI_Player.update()		1001,	1100,	11,	1100,	1011,	1010,	1100
2017-01-05 16:44:57 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	4 2
2017-01-05 16:44:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()	update
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()	update
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:57 AI_Player.update()	Search took197ms
2017-01-05 16:44:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 16:44:57 AI_Player.update()		1010,	1001,	1010,	1110,	1110,	1010,	110
2017-01-05 16:44:57 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:44:57 AI_Player.update()		101,	1001,	110,	1001,	101,	1010,	110
2017-01-05 16:44:57 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:44:57 AI_Player.update()		1001,	1100,	11,	1100,	1011,	1010,	1100
2017-01-05 16:44:57 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()	update
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()	update
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:57 AI_Player.update()	Search took42ms
2017-01-05 16:44:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 16:44:57 AI_Player.update()		1010,	1010,	1010,	1110,	1110,	1010,	110
2017-01-05 16:44:57 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:44:57 AI_Player.update()		101,	1001,	110,	1001,	101,	1010,	110
2017-01-05 16:44:57 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:44:57 AI_Player.update()		1001,	1110,	11,	1100,	1011,	1010,	1100
2017-01-05 16:44:57 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()	update
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()	update
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:57 AI_Player.update()	Search took296ms
2017-01-05 16:44:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 16:44:57 AI_Player.update()		1010,	1010,	1010,	1110,	1110,	1010,	110
2017-01-05 16:44:57 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:44:57 AI_Player.update()		1001,	110,	1001,	101,	1010,	110,	101
2017-01-05 16:44:57 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:44:57 AI_Player.update()		1001,	1110,	11,	1100,	1011,	1010,	1100
2017-01-05 16:44:57 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:44:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()	update
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:57 AI_Player.update()	update
2017-01-05 16:44:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:58 AI_Player.update()	Search took79ms
2017-01-05 16:44:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:58 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 16:44:58 AI_Player.update()		110,	1010,	1010,	1010,	1110,	1110,	1010
2017-01-05 16:44:58 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:44:58 AI_Player.update()		1001,	110,	1001,	101,	1010,	110,	101
2017-01-05 16:44:58 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:44:58 AI_Player.update()		1001,	1110,	11,	1100,	1011,	1010,	1100
2017-01-05 16:44:58 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-05 16:44:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	5 3
2017-01-05 16:44:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:58 AI_Player.update()	update
2017-01-05 16:44:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:58 AI_Player.update()	update
2017-01-05 16:44:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:58 AI_Player.update()	Search took342ms
2017-01-05 16:44:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:58 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 16:44:58 AI_Player.update()		110,	1010,	1010,	11,	1110,	1110,	1010
2017-01-05 16:44:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 16:44:58 AI_Player.update()		1001,	110,	1001,	1001,	1010,	110,	101
2017-01-05 16:44:58 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:44:58 AI_Player.update()		1001,	1110,	11,	111,	1011,	1010,	1100
2017-01-05 16:44:58 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 16:44:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:58 AI_Player.update()	update
2017-01-05 16:44:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:58 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:58 AI_Player.update()	update
2017-01-05 16:44:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:44:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:44:59 AI_Player.update()	Search took773ms
2017-01-05 16:44:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:59 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-05 16:44:59 AI_Player.update()		110,	1010,	1010,	11,	1110,	1110,	1010
2017-01-05 16:44:59 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 16:44:59 AI_Player.update()		101,	1001,	110,	1001,	1001,	1010,	110
2017-01-05 16:44:59 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:44:59 AI_Player.update()		1001,	1110,	11,	111,	1011,	1010,	1100
2017-01-05 16:44:59 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 16:44:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:44:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:59 AI_Player.update()	update
2017-01-05 16:44:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:44:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:44:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:44:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:44:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:59 AI_Player.update()	update
2017-01-05 16:44:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:44:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:44:59 AI_Player.update()	Search took475ms
2017-01-05 16:44:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:44:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:59 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 16:44:59 AI_Player.update()		110,	1001,	1010,	11,	1110,	1110,	1010
2017-01-05 16:44:59 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 16:44:59 AI_Player.update()		101,	1001,	110,	1001,	1001,	1010,	110
2017-01-05 16:44:59 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:44:59 AI_Player.update()		1001,	1100,	11,	111,	1011,	1010,	1100
2017-01-05 16:44:59 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 16:44:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:44:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:44:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:44:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:59 AI_Player.update()	update
2017-01-05 16:44:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:44:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:44:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:44:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:44:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:44:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:44:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:44:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:44:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:44:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:44:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:44:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:44:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:44:59 AI_Player.update()	update
2017-01-05 16:44:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:45:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:45:00 AI_Player.update()	Search took429ms
2017-01-05 16:45:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-05 16:45:00 AI_Player.update()		110,	1001,	1010,	11,	1110,	1110,	1010
2017-01-05 16:45:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 16:45:00 AI_Player.update()		101,	1110,	110,	1001,	1001,	1010,	110
2017-01-05 16:45:00 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:45:00 AI_Player.update()		1001,	1100,	11,	111,	1011,	1010,	1100
2017-01-05 16:45:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:45:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:45:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:45:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:45:00 AI_Player.update()	Search took406ms
2017-01-05 16:45:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-05 16:45:00 AI_Player.update()		110,	1001,	1010,	1010,	1110,	1110,	1010
2017-01-05 16:45:00 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 16:45:00 AI_Player.update()		101,	1110,	110,	101,	1001,	1010,	110
2017-01-05 16:45:00 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-05 16:45:00 AI_Player.update()		1001,	1100,	11,	1100,	1011,	1010,	1100
2017-01-05 16:45:00 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1010,	1001
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:45:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:45:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:45:00 AI_Player.update()	Search took221ms
2017-01-05 16:45:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-05 16:45:00 AI_Player.update()		110,	1001,	1010,	11,	1110,	1110,	1010
2017-01-05 16:45:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 16:45:00 AI_Player.update()		101,	1110,	110,	1001,	1001,	1010,	110
2017-01-05 16:45:00 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-05 16:45:00 AI_Player.update()		1001,	1100,	11,	111,	1011,	1010,	1100
2017-01-05 16:45:00 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:45:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 16:45:00 AI_Player.update()	Player b has won!
2017-01-05 16:45:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:45:00 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:45:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:45:00 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:45:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:45:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:45:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:45:00 AI_Player.update()	Search took63ms
2017-01-05 16:45:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()		110,	11,	111,	1101,	111,	11,	11
2017-01-05 16:45:00 AI_Player.update()		1001,	1010,	1010,	1011,	110,	1001,	1010
2017-01-05 16:45:00 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1011,	1011
2017-01-05 16:45:00 AI_Player.update()		110,	1010,	1010,	1001,	101,	11,	101
2017-01-05 16:45:00 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	110,	1011
2017-01-05 16:45:00 AI_Player.update()		101,	101,	1001,	1010,	1001,	110,	101
2017-01-05 16:45:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:45:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:45:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:45:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:45:00 AI_Player.update()	Search took37ms
2017-01-05 16:45:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()		110,	11,	111,	1101,	111,	11,	11
2017-01-05 16:45:00 AI_Player.update()		1010,	1001,	1010,	1010,	1011,	110,	1001
2017-01-05 16:45:00 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1011,	1011
2017-01-05 16:45:00 AI_Player.update()		110,	1010,	1010,	1001,	101,	11,	101
2017-01-05 16:45:00 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	110,	1011
2017-01-05 16:45:00 AI_Player.update()		101,	101,	1001,	1010,	1001,	110,	101
2017-01-05 16:45:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:45:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:45:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:45:00 AI_Player.update()	Search took82ms
2017-01-05 16:45:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()		110,	1001,	111,	1101,	111,	11,	11
2017-01-05 16:45:00 AI_Player.update()		1010,	1001,	1010,	1010,	1011,	110,	1001
2017-01-05 16:45:00 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1011,	1011
2017-01-05 16:45:00 AI_Player.update()		110,	1001,	1010,	1001,	101,	11,	101
2017-01-05 16:45:00 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-05 16:45:00 AI_Player.update()		101,	1010,	1001,	1010,	1001,	110,	101
2017-01-05 16:45:00 AI_Player.update()		1100,	11,	1101,	1100,	1101,	110,	1001
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:45:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:45:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:45:00 AI_Player.update()	Search took75ms
2017-01-05 16:45:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-05 16:45:00 AI_Player.update()		1010,	1001,	1010,	1010,	1011,	11,	1001
2017-01-05 16:45:00 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-05 16:45:00 AI_Player.update()		110,	1001,	1010,	1001,	101,	1011,	101
2017-01-05 16:45:00 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-05 16:45:00 AI_Player.update()		101,	1010,	1001,	1010,	1001,	110,	101
2017-01-05 16:45:00 AI_Player.update()		1100,	11,	1101,	1100,	1101,	110,	1001
2017-01-05 16:45:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:45:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:00 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:45:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:00 AI_Player.update()	update
2017-01-05 16:45:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:45:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:45:01 AI_Player.update()	Search took50ms
2017-01-05 16:45:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-05 16:45:01 AI_Player.update()		1010,	1010,	1010,	1010,	1011,	11,	1001
2017-01-05 16:45:01 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:45:01 AI_Player.update()		110,	101,	1010,	1001,	101,	1011,	101
2017-01-05 16:45:01 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	11,	1001,	1010,	1001,	110,	101
2017-01-05 16:45:01 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:45:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:45:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:45:01 AI_Player.update()	Search took85ms
2017-01-05 16:45:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-05 16:45:01 AI_Player.update()		1010,	1010,	1010,	1010,	1011,	11,	1001
2017-01-05 16:45:01 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	1010,	1001,	101,	1011,	101,	110
2017-01-05 16:45:01 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	11,	1001,	1010,	1001,	110,	101
2017-01-05 16:45:01 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:45:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:45:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:45:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:45:01 AI_Player.update()	Search took58ms
2017-01-05 16:45:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()		110,	1001,	111,	1101,	111,	110,	11
2017-01-05 16:45:01 AI_Player.update()		1010,	1010,	1010,	1010,	1011,	11,	1001
2017-01-05 16:45:01 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	1010,	1001,	101,	1011,	101,	110
2017-01-05 16:45:01 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	101,	11,	1001,	1010,	1001,	110
2017-01-05 16:45:01 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:45:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:45:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:45:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:45:01 AI_Player.update()	Search took186ms
2017-01-05 16:45:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()		110,	1001,	111,	1010,	111,	110,	11
2017-01-05 16:45:01 AI_Player.update()		1010,	1010,	1010,	1001,	1011,	11,	1001
2017-01-05 16:45:01 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	1010,	1001,	1001,	1011,	101,	110
2017-01-05 16:45:01 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	101,	11,	1100,	1010,	1001,	110
2017-01-05 16:45:01 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	110,	1001
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:45:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:45:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:45:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:45:01 AI_Player.update()	Search took271ms
2017-01-05 16:45:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()		110,	1001,	111,	1010,	111,	110,	11
2017-01-05 16:45:01 AI_Player.update()		1010,	1010,	1010,	1001,	1011,	11,	1001
2017-01-05 16:45:01 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	1010,	1001,	1001,	1011,	101,	110
2017-01-05 16:45:01 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	11,	1100,	1010,	1001,	110,	101
2017-01-05 16:45:01 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	110,	1001
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:45:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:45:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:45:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:45:01 AI_Player.update()	Search took182ms
2017-01-05 16:45:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 16:45:01 AI_Player.update()		1010,	1010,	1010,	101,	1011,	11,	1001
2017-01-05 16:45:01 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	1010,	1001,	1001,	1011,	101,	110
2017-01-05 16:45:01 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	11,	1100,	1101,	1001,	110,	101
2017-01-05 16:45:01 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:45:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:45:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:45:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:45:01 AI_Player.update()	Search took17ms
2017-01-05 16:45:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:45:01 AI_Player.update()		1010,	1010,	1010,	1001,	1011,	11,	1001
2017-01-05 16:45:01 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	1010,	1001,	1010,	1011,	101,	110
2017-01-05 16:45:01 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 16:45:01 AI_Player.update()		101,	11,	1100,	1010,	1001,	110,	101
2017-01-05 16:45:01 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:45:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:45:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:45:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:01 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:45:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:01 AI_Player.update()	update
2017-01-05 16:45:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:45:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:45:02 AI_Player.update()	Search took157ms
2017-01-05 16:45:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:45:02 AI_Player.update()		1010,	1010,	1010,	1001,	1011,	11,	1001
2017-01-05 16:45:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:45:02 AI_Player.update()		110,	101,	1010,	1001,	1010,	1011,	101
2017-01-05 16:45:02 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 16:45:02 AI_Player.update()		101,	11,	1100,	1010,	1001,	110,	101
2017-01-05 16:45:02 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:45:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:45:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()	update
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:45:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:45:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()	update
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:45:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:45:02 AI_Player.update()	Search took63ms
2017-01-05 16:45:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:45:02 AI_Player.update()		1010,	1010,	1010,	1001,	1011,	11,	1001
2017-01-05 16:45:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:45:02 AI_Player.update()		110,	101,	1010,	1001,	1010,	1011,	101
2017-01-05 16:45:02 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 16:45:02 AI_Player.update()		101,	101,	11,	1100,	1010,	1001,	110
2017-01-05 16:45:02 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:45:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:45:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()	update
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:45:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:45:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:45:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()	update
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:45:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:45:02 AI_Player.update()	Search took390ms
2017-01-05 16:45:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:45:02 AI_Player.update()		1010,	1010,	1010,	1001,	1011,	11,	1001
2017-01-05 16:45:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:45:02 AI_Player.update()		101,	110,	101,	1010,	1001,	1010,	1011
2017-01-05 16:45:02 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 16:45:02 AI_Player.update()		101,	101,	11,	1100,	1010,	1001,	110
2017-01-05 16:45:02 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:45:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:45:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()	update
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:45:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:45:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()	update
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:45:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:45:02 AI_Player.update()	Search took109ms
2017-01-05 16:45:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 16:45:02 AI_Player.update()		1010,	1010,	1010,	1001,	1011,	11,	1001
2017-01-05 16:45:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 16:45:02 AI_Player.update()		1011,	101,	110,	101,	1010,	1001,	1010
2017-01-05 16:45:02 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 16:45:02 AI_Player.update()		101,	101,	11,	1100,	1010,	1001,	110
2017-01-05 16:45:02 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:45:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:45:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()	update
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:45:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:45:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:45:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()	update
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:45:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:45:02 AI_Player.update()	Search took88ms
2017-01-05 16:45:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()		110,	1001,	111,	101,	111,	11,	11
2017-01-05 16:45:02 AI_Player.update()		1010,	1010,	1010,	1001,	1011,	110,	1001
2017-01-05 16:45:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-05 16:45:02 AI_Player.update()		1011,	101,	110,	101,	1010,	11,	1010
2017-01-05 16:45:02 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1001,	1011
2017-01-05 16:45:02 AI_Player.update()		101,	101,	11,	1100,	1010,	110,	110
2017-01-05 16:45:02 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:45:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:45:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()	update
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:45:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:45:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:45:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:45:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:45:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:02 AI_Player.update()	update
2017-01-05 16:45:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:45:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:45:03 AI_Player.update()	Search took343ms
2017-01-05 16:45:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:45:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:03 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-05 16:45:03 AI_Player.update()		1010,	1001,	1010,	1001,	1011,	110,	1001
2017-01-05 16:45:03 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-05 16:45:03 AI_Player.update()		1011,	1010,	110,	101,	1010,	11,	1010
2017-01-05 16:45:03 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-05 16:45:03 AI_Player.update()		101,	1001,	11,	1100,	1010,	110,	110
2017-01-05 16:45:03 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-05 16:45:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:45:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:45:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:45:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:45:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:45:03 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:45:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:45:03 AI_Player.update()	update
2017-01-05 16:45:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:45:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:45:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:45:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:45:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:45:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:45:03 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:45:03 AI_Player.update()	Player a has won!
2017-01-05 16:46:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:46:29 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:46:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:46:29 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:46:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:46:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:29 AI_Player.update()	update
2017-01-05 16:46:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:29 AI_Player.update()	Search took55ms
2017-01-05 16:46:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:29 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-05 16:46:29 AI_Player.update()		110,	1010,	1110,	1110,	1001,	1010,	11
2017-01-05 16:46:29 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 16:46:29 AI_Player.update()		101,	11,	101,	101,	110,	110,	110
2017-01-05 16:46:29 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-05 16:46:29 AI_Player.update()		101,	11,	1001,	1010,	1001,	1100,	11
2017-01-05 16:46:29 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:46:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:46:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:29 AI_Player.update()	update
2017-01-05 16:46:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:46:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:29 AI_Player.update()	update
2017-01-05 16:46:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:46:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:46:29 AI_Player.update()	Search took30ms
2017-01-05 16:46:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:29 AI_Player.update()		110,	1101,	111,	101,	111,	1100,	11
2017-01-05 16:46:29 AI_Player.update()		11,	110,	1010,	1110,	1110,	1001,	1010
2017-01-05 16:46:29 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 16:46:29 AI_Player.update()		101,	11,	101,	101,	110,	110,	110
2017-01-05 16:46:29 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-05 16:46:29 AI_Player.update()		101,	11,	1001,	1010,	1001,	1100,	11
2017-01-05 16:46:29 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:46:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:46:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:29 AI_Player.update()	update
2017-01-05 16:46:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:46:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:46:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:46:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:46:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:29 AI_Player.update()	update
2017-01-05 16:46:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:30 AI_Player.update()	Search took223ms
2017-01-05 16:46:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-05 16:46:30 AI_Player.update()		11,	1010,	1010,	1110,	1110,	1001,	1010
2017-01-05 16:46:30 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	101,	101,	101,	110,	110,	110
2017-01-05 16:46:30 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	1001,	1001,	1010,	1001,	1100,	11
2017-01-05 16:46:30 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:46:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:46:30 AI_Player.update()	Search took71ms
2017-01-05 16:46:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:46:30 AI_Player.update()		11,	1010,	1010,	1110,	1110,	1001,	1010
2017-01-05 16:46:30 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	101,	101,	101,	110,	1011,	110
2017-01-05 16:46:30 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	1001,	1001,	1010,	1001,	1010,	11
2017-01-05 16:46:30 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1100,	1001
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:46:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:30 AI_Player.update()	Search took199ms
2017-01-05 16:46:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()		110,	110,	111,	1110,	111,	1001,	11
2017-01-05 16:46:30 AI_Player.update()		11,	1010,	1010,	1001,	1110,	1001,	1010
2017-01-05 16:46:30 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	101,	101,	101,	110,	1011,	110
2017-01-05 16:46:30 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	1001,	1001,	1100,	1001,	1010,	11
2017-01-05 16:46:30 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:46:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:46:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:46:30 AI_Player.update()	Search took58ms
2017-01-05 16:46:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()		110,	1101,	111,	1110,	111,	1001,	11
2017-01-05 16:46:30 AI_Player.update()		11,	110,	1010,	1001,	1110,	1001,	1010
2017-01-05 16:46:30 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	11,	101,	101,	110,	1011,	110
2017-01-05 16:46:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	11,	1001,	1100,	1001,	1010,	11
2017-01-05 16:46:30 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	3 2
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:46:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:46:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:30 AI_Player.update()	Search took86ms
2017-01-05 16:46:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()		110,	1101,	111,	1110,	111,	1001,	11
2017-01-05 16:46:30 AI_Player.update()		11,	110,	1010,	1001,	1110,	1001,	1010
2017-01-05 16:46:30 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	11,	101,	101,	110,	1011,	110
2017-01-05 16:46:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:46:30 AI_Player.update()		11,	1001,	1100,	1001,	1010,	11,	101
2017-01-05 16:46:30 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:46:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:46:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:46:30 AI_Player.update()	Search took78ms
2017-01-05 16:46:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-05 16:46:30 AI_Player.update()		11,	110,	1010,	1110,	1110,	1001,	1010
2017-01-05 16:46:30 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	11,	101,	101,	110,	1011,	110
2017-01-05 16:46:30 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 16:46:30 AI_Player.update()		11,	1001,	1100,	1010,	1010,	11,	101
2017-01-05 16:46:30 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:46:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:30 AI_Player.update()	Search took307ms
2017-01-05 16:46:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()		110,	1101,	111,	1110,	111,	1001,	11
2017-01-05 16:46:30 AI_Player.update()		11,	110,	1010,	1001,	1110,	1001,	1010
2017-01-05 16:46:30 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 16:46:30 AI_Player.update()		101,	11,	101,	101,	110,	1011,	110
2017-01-05 16:46:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:46:30 AI_Player.update()		11,	1001,	1100,	1001,	1010,	11,	101
2017-01-05 16:46:30 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-05 16:46:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:30 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:46:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:30 AI_Player.update()	update
2017-01-05 16:46:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:46:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:46:31 AI_Player.update()	Search took305ms
2017-01-05 16:46:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()		110,	110,	111,	1110,	111,	1001,	11
2017-01-05 16:46:31 AI_Player.update()		11,	1010,	1010,	1001,	1110,	1001,	1010
2017-01-05 16:46:31 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-05 16:46:31 AI_Player.update()		101,	101,	101,	101,	110,	1011,	110
2017-01-05 16:46:31 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 16:46:31 AI_Player.update()		11,	1001,	1100,	1001,	1010,	11,	101
2017-01-05 16:46:31 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 16:46:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	4 3
2017-01-05 16:46:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()	update
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:46:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:46:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()	update
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:31 AI_Player.update()	Search took301ms
2017-01-05 16:46:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:46:31 AI_Player.update()		11,	1010,	1010,	1110,	1110,	1001,	1010
2017-01-05 16:46:31 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:46:31 AI_Player.update()		101,	101,	101,	101,	110,	1011,	110
2017-01-05 16:46:31 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:46:31 AI_Player.update()		11,	1001,	1100,	1010,	1010,	11,	101
2017-01-05 16:46:31 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:46:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	4 4
2017-01-05 16:46:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()	update
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:46:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()	update
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:46:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:46:31 AI_Player.update()	Search took118ms
2017-01-05 16:46:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-05 16:46:31 AI_Player.update()		11,	11,	1010,	1110,	1110,	1001,	1010
2017-01-05 16:46:31 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 16:46:31 AI_Player.update()		101,	1001,	101,	101,	110,	1011,	110
2017-01-05 16:46:31 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:46:31 AI_Player.update()		11,	1101,	1100,	1010,	1010,	11,	101
2017-01-05 16:46:31 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:46:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:46:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()	update
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:46:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:46:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()	update
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:31 AI_Player.update()	Search took209ms
2017-01-05 16:46:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:46:31 AI_Player.update()		11,	1010,	1010,	1110,	1110,	1001,	1010
2017-01-05 16:46:31 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:46:31 AI_Player.update()		101,	101,	101,	101,	110,	1011,	110
2017-01-05 16:46:31 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:46:31 AI_Player.update()		11,	1001,	1100,	1010,	1010,	11,	101
2017-01-05 16:46:31 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:46:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:46:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()	update
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:31 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:46:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:31 AI_Player.update()	update
2017-01-05 16:46:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:46:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:46:32 AI_Player.update()	Search took114ms
2017-01-05 16:46:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:46:32 AI_Player.update()		11,	1010,	1010,	1110,	1110,	1001,	1010
2017-01-05 16:46:32 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:46:32 AI_Player.update()		101,	101,	101,	101,	110,	1011,	110
2017-01-05 16:46:32 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:46:32 AI_Player.update()		101,	11,	1001,	1100,	1010,	1010,	11
2017-01-05 16:46:32 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	5 4
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:46:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:46:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:32 AI_Player.update()	Search took152ms
2017-01-05 16:46:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:46:32 AI_Player.update()		1010,	1010,	1110,	1110,	1001,	1010,	11
2017-01-05 16:46:32 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:46:32 AI_Player.update()		101,	101,	101,	101,	110,	1011,	110
2017-01-05 16:46:32 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:46:32 AI_Player.update()		101,	11,	1001,	1100,	1010,	1010,	11
2017-01-05 16:46:32 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	5 5
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:46:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:46:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:46:32 AI_Player.update()	Search took322ms
2017-01-05 16:46:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 16:46:32 AI_Player.update()		1010,	1010,	1110,	1110,	1001,	1010,	11
2017-01-05 16:46:32 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 16:46:32 AI_Player.update()		101,	101,	101,	110,	1011,	110,	101
2017-01-05 16:46:32 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 16:46:32 AI_Player.update()		101,	11,	1001,	1100,	1010,	1010,	11
2017-01-05 16:46:32 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	6 5
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:46:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:46:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:32 AI_Player.update()	Search took79ms
2017-01-05 16:46:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-05 16:46:32 AI_Player.update()		1010,	11,	1110,	1110,	1001,	1010,	11
2017-01-05 16:46:32 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-05 16:46:32 AI_Player.update()		101,	1001,	101,	110,	1011,	110,	101
2017-01-05 16:46:32 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 16:46:32 AI_Player.update()		101,	1101,	1001,	1100,	1010,	1010,	11
2017-01-05 16:46:32 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1100,	1001
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 16:46:32 AI_Player.update()	Player a has won!
2017-01-05 16:46:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:46:32 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 16:46:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 16:46:32 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 16:46:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:46:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:32 AI_Player.update()	Search took144ms
2017-01-05 16:46:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-05 16:46:32 AI_Player.update()		101,	1010,	101,	1001,	1010,	110,	101
2017-01-05 16:46:32 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-05 16:46:32 AI_Player.update()		1010,	1010,	1110,	11,	1010,	111,	110
2017-01-05 16:46:32 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-05 16:46:32 AI_Player.update()		1011,	1001,	1100,	101,	110,	1011,	110
2017-01-05 16:46:32 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 16:46:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 16:46:32 AI_Player.update()	Search took21ms
2017-01-05 16:46:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-05 16:46:32 AI_Player.update()		101,	1010,	101,	1001,	1010,	110,	101
2017-01-05 16:46:32 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-05 16:46:32 AI_Player.update()		1010,	1010,	1110,	11,	1010,	111,	110
2017-01-05 16:46:32 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-05 16:46:32 AI_Player.update()		1001,	1100,	101,	110,	1011,	110,	1011
2017-01-05 16:46:32 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:46:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 16:46:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:46:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:32 AI_Player.update()	update
2017-01-05 16:46:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 16:46:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 16:46:33 AI_Player.update()	Search took220ms
2017-01-05 16:46:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 16:46:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:33 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-05 16:46:33 AI_Player.update()		101,	101,	1010,	101,	1001,	1010,	110
2017-01-05 16:46:33 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-05 16:46:33 AI_Player.update()		1010,	1010,	1110,	11,	1010,	111,	110
2017-01-05 16:46:33 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-05 16:46:33 AI_Player.update()		1001,	1100,	101,	110,	1011,	110,	1011
2017-01-05 16:46:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 16:46:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 16:46:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 16:46:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 16:46:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:33 AI_Player.update()	update
2017-01-05 16:46:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 16:46:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 16:46:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 16:46:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 16:46:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 16:46:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 16:46:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 16:46:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 16:46:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 16:46:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 16:46:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 16:46:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 16:46:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 16:46:33 AI_Player.update()	update
2017-01-05 16:46:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
