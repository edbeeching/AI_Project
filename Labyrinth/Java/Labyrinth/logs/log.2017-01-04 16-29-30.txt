2017-01-04 16:29:30 GameBoard.<init>()	Hello World!
2017-01-04 16:29:30 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-04 16:29:30 QueryProlog.initialise()	setup(h2/h3). suceeded
2017-01-04 16:29:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:30 GameBoard.setupBoardFromString()	Board created
2017-01-04 16:29:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:29:30 GameBoard.initialise()	[sword, map, crown, ring, keys]
2017-01-04 16:29:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:29:30 GameBoard.initialise()	[fairy, gold, chest, gem, candle]
2017-01-04 16:29:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:30 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-04 16:29:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	null
2017-01-04 16:29:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:29:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:29:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:29:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:30 AI_Player.update()	update
2017-01-04 16:29:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:31 AI_Player.update()	Search took308ms
2017-01-04 16:29:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:31 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 16:29:31 AI_Player.update()		1010,	111,	1110,	1001,	1100,	11,	111
2017-01-04 16:29:31 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 16:29:31 AI_Player.update()		101,	1001,	1100,	101,	1001,	101,	110
2017-01-04 16:29:31 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 16:29:31 AI_Player.update()		1010,	1001,	1010,	101,	110,	1101,	1001
2017-01-04 16:29:31 AI_Player.update()		1100,	1101,	1101,	110,	1101,	111,	1001
2017-01-04 16:29:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:29:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:29:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:29:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:31 AI_Player.update()	update
2017-01-04 16:29:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:29:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:32 AI_Player.update()	update
2017-01-04 16:29:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:32 AI_Player.update()	Search took41ms
2017-01-04 16:29:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:32 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 16:29:32 AI_Player.update()		111,	1110,	1001,	1100,	11,	111,	1010
2017-01-04 16:29:32 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 16:29:32 AI_Player.update()		101,	1001,	1100,	101,	1001,	101,	110
2017-01-04 16:29:32 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 16:29:32 AI_Player.update()		1010,	1001,	1010,	101,	110,	1101,	1001
2017-01-04 16:29:32 AI_Player.update()		1100,	1101,	1101,	110,	1101,	111,	1001
2017-01-04 16:29:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:29:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:32 AI_Player.update()	update
2017-01-04 16:29:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:29:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:33 AI_Player.update()	update
2017-01-04 16:29:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:33 AI_Player.update()	Search took156ms
2017-01-04 16:29:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:33 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 16:29:33 AI_Player.update()		111,	1110,	1001,	11,	11,	111,	1010
2017-01-04 16:29:33 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-04 16:29:33 AI_Player.update()		101,	1001,	1100,	110,	1001,	101,	110
2017-01-04 16:29:33 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:33 AI_Player.update()		1010,	1001,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:33 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	111,	1001
2017-01-04 16:29:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:29:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:33 AI_Player.update()	update
2017-01-04 16:29:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:29:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:29:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:29:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:29:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:34 AI_Player.update()	update
2017-01-04 16:29:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:34 AI_Player.update()	Search took83ms
2017-01-04 16:29:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:34 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 16:29:34 AI_Player.update()		111,	1110,	1001,	1100,	11,	111,	1010
2017-01-04 16:29:34 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 16:29:34 AI_Player.update()		101,	1001,	1100,	101,	1001,	101,	110
2017-01-04 16:29:34 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 16:29:34 AI_Player.update()		1010,	1001,	1010,	101,	110,	1101,	1001
2017-01-04 16:29:34 AI_Player.update()		1100,	1101,	1101,	110,	1101,	111,	1001
2017-01-04 16:29:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:29:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:34 AI_Player.update()	update
2017-01-04 16:29:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:29:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:35 AI_Player.update()	update
2017-01-04 16:29:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:35 AI_Player.update()	Search took197ms
2017-01-04 16:29:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:35 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 16:29:35 AI_Player.update()		111,	1110,	1001,	1001,	11,	111,	1010
2017-01-04 16:29:35 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 16:29:35 AI_Player.update()		101,	1001,	1100,	11,	1001,	101,	110
2017-01-04 16:29:35 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:35 AI_Player.update()		1010,	1001,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:35 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 16:29:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:29:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:36 AI_Player.update()	update
2017-01-04 16:29:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:29:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:29:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:29:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:36 AI_Player.update()	update
2017-01-04 16:29:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:36 AI_Player.update()	Search took195ms
2017-01-04 16:29:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:36 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 16:29:36 AI_Player.update()		111,	1110,	1001,	1001,	11,	111,	1010
2017-01-04 16:29:36 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 16:29:36 AI_Player.update()		110,	101,	1001,	1100,	11,	1001,	101
2017-01-04 16:29:36 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:36 AI_Player.update()		1010,	1001,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:36 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 16:29:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:36 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:37 AI_Player.update()	update
2017-01-04 16:29:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:37 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:29:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:37 AI_Player.update()	update
2017-01-04 16:29:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:38 AI_Player.update()	Search took135ms
2017-01-04 16:29:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:38 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 16:29:38 AI_Player.update()		111,	1110,	1001,	1001,	11,	111,	1010
2017-01-04 16:29:38 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 16:29:38 AI_Player.update()		101,	1001,	1100,	11,	1001,	101,	110
2017-01-04 16:29:38 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:38 AI_Player.update()		1010,	1001,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:38 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 16:29:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:38 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:29:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:38 AI_Player.update()	update
2017-01-04 16:29:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:38 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:29:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:39 AI_Player.update()	update
2017-01-04 16:29:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:39 AI_Player.update()	Search took188ms
2017-01-04 16:29:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:39 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 16:29:39 AI_Player.update()		111,	1110,	1001,	1001,	11,	111,	1010
2017-01-04 16:29:39 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 16:29:39 AI_Player.update()		110,	101,	1001,	1100,	11,	1001,	101
2017-01-04 16:29:39 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:39 AI_Player.update()		1010,	1001,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:39 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 16:29:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:39 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:29:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:39 AI_Player.update()	update
2017-01-04 16:29:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:39 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:29:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:40 AI_Player.update()	update
2017-01-04 16:29:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:40 AI_Player.update()	Search took281ms
2017-01-04 16:29:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:40 AI_Player.update()		110,	1110,	111,	110,	111,	1010,	11
2017-01-04 16:29:40 AI_Player.update()		111,	1001,	1001,	1001,	11,	111,	1010
2017-01-04 16:29:40 AI_Player.update()		1110,	101,	1110,	1100,	111,	1101,	1011
2017-01-04 16:29:40 AI_Player.update()		110,	110,	1001,	1100,	11,	1001,	101
2017-01-04 16:29:40 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:40 AI_Player.update()		1010,	1101,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:40 AI_Player.update()		1100,	110,	1101,	101,	1101,	111,	1001
2017-01-04 16:29:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:29:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:41 AI_Player.update()	update
2017-01-04 16:29:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:29:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:29:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:41 AI_Player.update()	update
2017-01-04 16:29:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:41 AI_Player.update()	Search took115ms
2017-01-04 16:29:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:41 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 16:29:41 AI_Player.update()		111,	1110,	1001,	1001,	11,	111,	1010
2017-01-04 16:29:41 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 16:29:41 AI_Player.update()		110,	101,	1001,	1100,	11,	1001,	101
2017-01-04 16:29:41 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:41 AI_Player.update()		1010,	1001,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:41 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 16:29:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:42 AI_Player.update()	update
2017-01-04 16:29:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:42 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:42 AI_Player.update()	update
2017-01-04 16:29:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:43 AI_Player.update()	Search took610ms
2017-01-04 16:29:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:43 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 16:29:43 AI_Player.update()		111,	1110,	1001,	1001,	11,	111,	1010
2017-01-04 16:29:43 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 16:29:43 AI_Player.update()		101,	1001,	1100,	11,	1001,	101,	110
2017-01-04 16:29:43 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:43 AI_Player.update()		1010,	1001,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:43 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 16:29:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:43 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:43 AI_Player.update()	update
2017-01-04 16:29:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:43 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:44 AI_Player.update()	update
2017-01-04 16:29:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:44 AI_Player.update()	Search took192ms
2017-01-04 16:29:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:44 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 16:29:44 AI_Player.update()		111,	1110,	1001,	1001,	11,	111,	1010
2017-01-04 16:29:44 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 16:29:44 AI_Player.update()		110,	101,	1001,	1100,	11,	1001,	101
2017-01-04 16:29:44 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:44 AI_Player.update()		1010,	1001,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:44 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 16:29:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:44 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:45 AI_Player.update()	update
2017-01-04 16:29:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:45 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:45 AI_Player.update()	update
2017-01-04 16:29:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:46 AI_Player.update()	Search took623ms
2017-01-04 16:29:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:46 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 16:29:46 AI_Player.update()		111,	1110,	1001,	1001,	11,	111,	1010
2017-01-04 16:29:46 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 16:29:46 AI_Player.update()		101,	1001,	1100,	11,	1001,	101,	110
2017-01-04 16:29:46 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:46 AI_Player.update()		1010,	1001,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:46 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 16:29:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:46 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:46 AI_Player.update()	update
2017-01-04 16:29:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:46 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:47 AI_Player.update()	update
2017-01-04 16:29:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:47 AI_Player.update()	Search took180ms
2017-01-04 16:29:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:47 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-04 16:29:47 AI_Player.update()		111,	1110,	1001,	1100,	11,	111,	1010
2017-01-04 16:29:47 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 16:29:47 AI_Player.update()		101,	1001,	1100,	101,	1001,	101,	110
2017-01-04 16:29:47 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 16:29:47 AI_Player.update()		1010,	1001,	1010,	101,	110,	1101,	1001
2017-01-04 16:29:47 AI_Player.update()		1100,	1101,	1101,	110,	1101,	111,	1001
2017-01-04 16:29:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:47 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:47 AI_Player.update()	update
2017-01-04 16:29:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:47 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:48 AI_Player.update()	update
2017-01-04 16:29:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:48 AI_Player.update()	Search took98ms
2017-01-04 16:29:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:48 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-04 16:29:48 AI_Player.update()		111,	1110,	1001,	1001,	11,	111,	1010
2017-01-04 16:29:48 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 16:29:48 AI_Player.update()		101,	1001,	1100,	11,	1001,	101,	110
2017-01-04 16:29:48 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 16:29:48 AI_Player.update()		1010,	1001,	1010,	110,	110,	1101,	1001
2017-01-04 16:29:48 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-04 16:29:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:48 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:48 AI_Player.update()	update
2017-01-04 16:29:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:48 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:49 AI_Player.update()	update
2017-01-04 16:29:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:49 AI_Player.update()	Search took114ms
2017-01-04 16:29:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:49 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 16:29:49 AI_Player.update()		111,	1110,	1001,	110,	11,	111,	1010
2017-01-04 16:29:49 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 16:29:49 AI_Player.update()		101,	1001,	1100,	1100,	1001,	101,	110
2017-01-04 16:29:49 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 16:29:49 AI_Player.update()		1010,	1001,	1010,	101,	110,	1101,	1001
2017-01-04 16:29:49 AI_Player.update()		1100,	1101,	1101,	110,	1101,	111,	1001
2017-01-04 16:29:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:49 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:50 AI_Player.update()	update
2017-01-04 16:29:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:50 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:50 AI_Player.update()	update
2017-01-04 16:29:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:50 AI_Player.update()	Search took313ms
2017-01-04 16:29:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:50 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 16:29:50 AI_Player.update()		1110,	1001,	110,	11,	111,	1010,	111
2017-01-04 16:29:50 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 16:29:50 AI_Player.update()		101,	1001,	1100,	1100,	1001,	101,	110
2017-01-04 16:29:50 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 16:29:50 AI_Player.update()		1010,	1001,	1010,	101,	110,	1101,	1001
2017-01-04 16:29:50 AI_Player.update()		1100,	1101,	1101,	110,	1101,	111,	1001
2017-01-04 16:29:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:50 GameBoard.setupTreasurePanel()	4 1
2017-01-04 16:29:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:51 AI_Player.update()	update
2017-01-04 16:29:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	5 1
2017-01-04 16:29:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:29:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:29:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:51 AI_Player.update()	update
2017-01-04 16:29:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:51 AI_Player.update()	Search took73ms
2017-01-04 16:29:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:51 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 16:29:51 AI_Player.update()		1110,	110,	110,	11,	111,	1010,	111
2017-01-04 16:29:51 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 16:29:51 AI_Player.update()		101,	1001,	1100,	1100,	1001,	101,	110
2017-01-04 16:29:51 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 16:29:51 AI_Player.update()		1010,	110,	1010,	101,	110,	1101,	1001
2017-01-04 16:29:51 AI_Player.update()		1100,	1001,	1101,	110,	1101,	111,	1001
2017-01-04 16:29:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:51 GameBoard.setupTreasurePanel()	5 1
2017-01-04 16:29:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:52 AI_Player.update()	update
2017-01-04 16:29:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:29:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:29:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:29:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:52 AI_Player.update()	update
2017-01-04 16:29:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:53 AI_Player.update()	Search took153ms
2017-01-04 16:29:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:53 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 16:29:53 AI_Player.update()		1110,	110,	110,	11,	111,	1010,	111
2017-01-04 16:29:53 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 16:29:53 AI_Player.update()		1001,	1100,	1100,	1001,	101,	110,	101
2017-01-04 16:29:53 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 16:29:53 AI_Player.update()		1010,	110,	1010,	101,	110,	1101,	1001
2017-01-04 16:29:53 AI_Player.update()		1100,	1001,	1101,	110,	1101,	111,	1001
2017-01-04 16:29:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:53 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:53 AI_Player.update()	update
2017-01-04 16:29:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:53 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:54 AI_Player.update()	update
2017-01-04 16:29:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:54 AI_Player.update()	Search took71ms
2017-01-04 16:29:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:54 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 16:29:54 AI_Player.update()		1110,	110,	110,	11,	111,	1101,	111
2017-01-04 16:29:54 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-04 16:29:54 AI_Player.update()		1001,	1100,	1100,	1001,	101,	1010,	101
2017-01-04 16:29:54 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1101,	1011
2017-01-04 16:29:54 AI_Player.update()		1010,	110,	1010,	101,	110,	111,	1001
2017-01-04 16:29:54 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-04 16:29:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:54 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:54 AI_Player.update()	update
2017-01-04 16:29:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:54 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:55 AI_Player.update()	update
2017-01-04 16:29:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:55 AI_Player.update()	Search took213ms
2017-01-04 16:29:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:55 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 16:29:55 AI_Player.update()		1110,	110,	110,	11,	111,	1101,	111
2017-01-04 16:29:55 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-04 16:29:55 AI_Player.update()		1001,	1100,	1100,	1001,	101,	1010,	101
2017-01-04 16:29:55 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1101,	1011
2017-01-04 16:29:55 AI_Player.update()		1001,	1010,	110,	1010,	101,	110,	111
2017-01-04 16:29:55 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-04 16:29:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:55 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:55 AI_Player.update()	update
2017-01-04 16:29:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:55 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:56 AI_Player.update()	update
2017-01-04 16:29:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:56 AI_Player.update()	Search took35ms
2017-01-04 16:29:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:56 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 16:29:56 AI_Player.update()		1110,	110,	110,	11,	111,	1101,	111
2017-01-04 16:29:56 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-04 16:29:56 AI_Player.update()		1001,	1100,	1100,	1001,	101,	1010,	101
2017-01-04 16:29:56 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1101,	1011
2017-01-04 16:29:56 AI_Player.update()		1010,	110,	1010,	101,	110,	111,	1001
2017-01-04 16:29:56 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-04 16:29:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:56 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:56 AI_Player.update()	update
2017-01-04 16:29:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:56 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:57 AI_Player.update()	update
2017-01-04 16:29:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:57 AI_Player.update()	Search took218ms
2017-01-04 16:29:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:57 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 16:29:57 AI_Player.update()		1110,	110,	110,	11,	111,	1101,	111
2017-01-04 16:29:57 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-04 16:29:57 AI_Player.update()		1001,	1100,	1100,	1001,	101,	1010,	101
2017-01-04 16:29:57 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1101,	1011
2017-01-04 16:29:57 AI_Player.update()		1001,	1010,	110,	1010,	101,	110,	111
2017-01-04 16:29:57 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-04 16:29:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:57 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:58 AI_Player.update()	update
2017-01-04 16:29:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:29:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:29:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:29:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:29:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:58 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:58 AI_Player.update()	update
2017-01-04 16:29:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:29:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:29:58 AI_Player.update()	Search took43ms
2017-01-04 16:29:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:58 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 16:29:58 AI_Player.update()		1110,	110,	110,	11,	111,	1101,	111
2017-01-04 16:29:58 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-04 16:29:58 AI_Player.update()		1001,	1100,	1100,	1001,	101,	1010,	101
2017-01-04 16:29:58 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1101,	1011
2017-01-04 16:29:58 AI_Player.update()		1010,	110,	1010,	101,	110,	111,	1001
2017-01-04 16:29:58 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-04 16:29:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:58 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:59 AI_Player.update()	update
2017-01-04 16:29:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:29:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:29:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:29:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:29:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:59 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:29:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:29:59 AI_Player.update()	update
2017-01-04 16:29:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:29:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:29:59 AI_Player.update()	Search took206ms
2017-01-04 16:29:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:29:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:59 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 16:29:59 AI_Player.update()		1110,	110,	110,	1001,	111,	1101,	111
2017-01-04 16:29:59 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-04 16:29:59 AI_Player.update()		1001,	1100,	1100,	11,	101,	1010,	101
2017-01-04 16:29:59 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1101,	1011
2017-01-04 16:29:59 AI_Player.update()		1010,	110,	1010,	110,	110,	111,	1001
2017-01-04 16:29:59 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 16:29:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:29:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:29:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:29:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:29:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:29:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:29:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:29:59 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:30:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:00 AI_Player.update()	update
2017-01-04 16:30:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	6 2
2017-01-04 16:30:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:00 AI_Player.update()	update
2017-01-04 16:30:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:01 AI_Player.update()	Search took159ms
2017-01-04 16:30:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:01 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-04 16:30:01 AI_Player.update()		1110,	1001,	110,	1001,	111,	1101,	111
2017-01-04 16:30:01 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-04 16:30:01 AI_Player.update()		1001,	1001,	1100,	11,	101,	1010,	101
2017-01-04 16:30:01 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-04 16:30:01 AI_Player.update()		1010,	1001,	1010,	110,	110,	111,	1001
2017-01-04 16:30:01 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-04 16:30:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	6 2
2017-01-04 16:30:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:01 AI_Player.update()	update
2017-01-04 16:30:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	6 3
2017-01-04 16:30:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:02 AI_Player.update()	update
2017-01-04 16:30:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:02 AI_Player.update()	Search took248ms
2017-01-04 16:30:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:02 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 16:30:02 AI_Player.update()		1110,	110,	110,	1001,	111,	1101,	111
2017-01-04 16:30:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-04 16:30:02 AI_Player.update()		1001,	1100,	1100,	11,	101,	1010,	101
2017-01-04 16:30:02 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1101,	1011
2017-01-04 16:30:02 AI_Player.update()		1010,	110,	1010,	110,	110,	111,	1001
2017-01-04 16:30:02 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 16:30:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	6 3
2017-01-04 16:30:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:02 AI_Player.update()	update
2017-01-04 16:30:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:02 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 16:30:02 AI_Player.update()	Player a has won!
2017-01-04 16:30:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:30:02 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 16:30:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:30:02 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 16:30:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:30:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:03 AI_Player.update()	update
2017-01-04 16:30:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:03 AI_Player.update()	Search took82ms
2017-01-04 16:30:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:03 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-04 16:30:03 AI_Player.update()		1110,	101,	101,	1110,	11,	111,	1101
2017-01-04 16:30:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 16:30:03 AI_Player.update()		101,	1010,	101,	101,	1010,	1010,	1010
2017-01-04 16:30:03 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:30:03 AI_Player.update()		1001,	1001,	1010,	1101,	101,	101,	11
2017-01-04 16:30:03 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 16:30:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:30:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:04 AI_Player.update()	update
2017-01-04 16:30:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:04 AI_Player.update()	update
2017-01-04 16:30:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:04 AI_Player.update()	Search took70ms
2017-01-04 16:30:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:04 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 16:30:04 AI_Player.update()		1110,	101,	101,	1110,	11,	110,	1101
2017-01-04 16:30:04 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-04 16:30:04 AI_Player.update()		101,	1010,	101,	101,	1010,	1010,	1010
2017-01-04 16:30:04 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 16:30:04 AI_Player.update()		1001,	1001,	1010,	1101,	101,	1001,	11
2017-01-04 16:30:04 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 16:30:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:05 AI_Player.update()	update
2017-01-04 16:30:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:05 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:05 AI_Player.update()	update
2017-01-04 16:30:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:05 AI_Player.update()	Search took170ms
2017-01-04 16:30:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:05 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 16:30:05 AI_Player.update()		1110,	1001,	101,	1110,	11,	110,	1101
2017-01-04 16:30:05 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 16:30:05 AI_Player.update()		101,	1001,	101,	101,	1010,	1010,	1010
2017-01-04 16:30:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 16:30:05 AI_Player.update()		1001,	1010,	1010,	1101,	101,	1001,	11
2017-01-04 16:30:05 AI_Player.update()		1100,	11,	1101,	111,	1101,	1001,	1001
2017-01-04 16:30:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:05 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:06 AI_Player.update()	update
2017-01-04 16:30:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:06 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:06 AI_Player.update()	update
2017-01-04 16:30:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:06 AI_Player.update()	Search took208ms
2017-01-04 16:30:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:06 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 16:30:06 AI_Player.update()		1110,	1001,	101,	1110,	11,	110,	1101
2017-01-04 16:30:06 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 16:30:06 AI_Player.update()		1001,	101,	101,	1010,	1010,	1010,	101
2017-01-04 16:30:06 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-04 16:30:06 AI_Player.update()		1001,	1010,	1010,	1101,	101,	1001,	11
2017-01-04 16:30:06 AI_Player.update()		1100,	11,	1101,	111,	1101,	1001,	1001
2017-01-04 16:30:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:06 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:07 AI_Player.update()	update
2017-01-04 16:30:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:07 AI_Player.update()	update
2017-01-04 16:30:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:08 AI_Player.update()	Search took302ms
2017-01-04 16:30:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:08 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-04 16:30:08 AI_Player.update()		1110,	1010,	101,	1110,	11,	110,	1101
2017-01-04 16:30:08 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 16:30:08 AI_Player.update()		1001,	1001,	101,	1010,	1010,	1010,	101
2017-01-04 16:30:08 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-04 16:30:08 AI_Player.update()		1001,	11,	1010,	1101,	101,	1001,	11
2017-01-04 16:30:08 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-04 16:30:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:08 AI_Player.update()	update
2017-01-04 16:30:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:09 AI_Player.update()	update
2017-01-04 16:30:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:09 AI_Player.update()	Search took142ms
2017-01-04 16:30:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:09 AI_Player.update()		110,	1001,	111,	1110,	111,	111,	11
2017-01-04 16:30:09 AI_Player.update()		1110,	1010,	101,	1010,	11,	110,	1101
2017-01-04 16:30:09 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 16:30:09 AI_Player.update()		1001,	1001,	101,	1010,	1010,	1010,	101
2017-01-04 16:30:09 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-04 16:30:09 AI_Player.update()		1001,	11,	1010,	111,	101,	1001,	11
2017-01-04 16:30:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 16:30:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:09 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:09 AI_Player.update()	update
2017-01-04 16:30:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:09 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:10 AI_Player.update()	update
2017-01-04 16:30:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:10 AI_Player.update()	Search took272ms
2017-01-04 16:30:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:10 AI_Player.update()		110,	1010,	111,	1110,	111,	111,	11
2017-01-04 16:30:10 AI_Player.update()		1110,	101,	101,	1010,	11,	110,	1101
2017-01-04 16:30:10 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-04 16:30:10 AI_Player.update()		1001,	1010,	101,	1010,	1010,	1010,	101
2017-01-04 16:30:10 AI_Player.update()		1110,	11,	1101,	1101,	1011,	101,	1011
2017-01-04 16:30:10 AI_Player.update()		1001,	101,	1010,	111,	101,	1001,	11
2017-01-04 16:30:10 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 16:30:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:10 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:11 AI_Player.update()	update
2017-01-04 16:30:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:30:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:11 AI_Player.update()	update
2017-01-04 16:30:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:12 AI_Player.update()	Search took339ms
2017-01-04 16:30:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:12 AI_Player.update()		110,	1010,	111,	1110,	111,	111,	11
2017-01-04 16:30:12 AI_Player.update()		101,	101,	1010,	11,	110,	1101,	1110
2017-01-04 16:30:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-04 16:30:12 AI_Player.update()		1001,	1010,	101,	1010,	1010,	1010,	101
2017-01-04 16:30:12 AI_Player.update()		1110,	11,	1101,	1101,	1011,	101,	1011
2017-01-04 16:30:12 AI_Player.update()		1001,	101,	1010,	111,	101,	1001,	11
2017-01-04 16:30:12 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 16:30:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:30:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:12 AI_Player.update()	update
2017-01-04 16:30:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	4 3
2017-01-04 16:30:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:13 AI_Player.update()	update
2017-01-04 16:30:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:13 AI_Player.update()	Search took182ms
2017-01-04 16:30:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:13 AI_Player.update()		110,	1010,	111,	1110,	111,	111,	11
2017-01-04 16:30:13 AI_Player.update()		101,	101,	1010,	11,	110,	1101,	1110
2017-01-04 16:30:13 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-04 16:30:13 AI_Player.update()		1001,	1010,	101,	1010,	1010,	1010,	101
2017-01-04 16:30:13 AI_Player.update()		1110,	11,	1101,	1101,	1011,	101,	1011
2017-01-04 16:30:13 AI_Player.update()		101,	1010,	111,	101,	1001,	11,	1001
2017-01-04 16:30:13 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 16:30:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	4 3
2017-01-04 16:30:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:13 AI_Player.update()	update
2017-01-04 16:30:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:30:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:14 AI_Player.update()	update
2017-01-04 16:30:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:14 AI_Player.update()	Search took280ms
2017-01-04 16:30:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:14 AI_Player.update()		110,	101,	111,	1110,	111,	111,	11
2017-01-04 16:30:14 AI_Player.update()		101,	1001,	1010,	11,	110,	1101,	1110
2017-01-04 16:30:14 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 16:30:14 AI_Player.update()		1001,	11,	101,	1010,	1010,	1010,	101
2017-01-04 16:30:14 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-04 16:30:14 AI_Player.update()		101,	1001,	111,	101,	1001,	11,	1001
2017-01-04 16:30:14 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-04 16:30:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:14 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:30:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:15 AI_Player.update()	update
2017-01-04 16:30:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:15 AI_Player.update()	update
2017-01-04 16:30:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:16 AI_Player.update()	Search took759ms
2017-01-04 16:30:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:16 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-04 16:30:16 AI_Player.update()		101,	1001,	1010,	1010,	110,	1101,	1110
2017-01-04 16:30:16 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 16:30:16 AI_Player.update()		1001,	11,	101,	1101,	1010,	1010,	101
2017-01-04 16:30:16 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 16:30:16 AI_Player.update()		101,	1001,	111,	101,	1001,	11,	1001
2017-01-04 16:30:16 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-04 16:30:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:16 AI_Player.update()	update
2017-01-04 16:30:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:30:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:17 AI_Player.update()	update
2017-01-04 16:30:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:17 AI_Player.update()	Search took205ms
2017-01-04 16:30:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:17 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-04 16:30:17 AI_Player.update()		101,	1001,	1010,	1010,	110,	111,	1110
2017-01-04 16:30:17 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-04 16:30:17 AI_Player.update()		1001,	11,	101,	1101,	1010,	1010,	101
2017-01-04 16:30:17 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 16:30:17 AI_Player.update()		101,	1001,	111,	101,	1001,	101,	1001
2017-01-04 16:30:17 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-04 16:30:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:17 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:30:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:18 AI_Player.update()	update
2017-01-04 16:30:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:18 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:30:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:18 AI_Player.update()	update
2017-01-04 16:30:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:19 AI_Player.update()	Search took520ms
2017-01-04 16:30:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:19 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 16:30:19 AI_Player.update()		101,	1001,	1010,	1010,	110,	111,	1110
2017-01-04 16:30:19 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1101,	1011
2017-01-04 16:30:19 AI_Player.update()		1001,	11,	101,	101,	1010,	1010,	101
2017-01-04 16:30:19 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 16:30:19 AI_Player.update()		101,	1001,	111,	1110,	1001,	101,	1001
2017-01-04 16:30:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-04 16:30:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:30:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:19 AI_Player.update()	update
2017-01-04 16:30:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:19 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 16:30:19 AI_Player.update()	Player a has won!
2017-01-04 16:30:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:30:19 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 16:30:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:30:19 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 16:30:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:30:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:20 AI_Player.update()	update
2017-01-04 16:30:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:20 AI_Player.update()	Search took210ms
2017-01-04 16:30:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:20 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 16:30:20 AI_Player.update()		11,	11,	101,	1010,	1011,	1100,	11
2017-01-04 16:30:20 AI_Player.update()		1110,	1100,	1110,	1010,	111,	111,	1011
2017-01-04 16:30:20 AI_Player.update()		101,	110,	1010,	11,	110,	101,	101
2017-01-04 16:30:20 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 16:30:20 AI_Player.update()		11,	110,	1010,	1010,	110,	110,	1010
2017-01-04 16:30:20 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1010,	1001
2017-01-04 16:30:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:30:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:20 AI_Player.update()	update
2017-01-04 16:30:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:21 AI_Player.update()	update
2017-01-04 16:30:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:21 AI_Player.update()	Search took98ms
2017-01-04 16:30:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:21 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 16:30:21 AI_Player.update()		11,	11,	11,	101,	1010,	1011,	1100
2017-01-04 16:30:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	111,	1011
2017-01-04 16:30:21 AI_Player.update()		101,	110,	1010,	11,	110,	101,	101
2017-01-04 16:30:21 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 16:30:21 AI_Player.update()		11,	110,	1010,	1010,	110,	110,	1010
2017-01-04 16:30:21 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1010,	1001
2017-01-04 16:30:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:21 AI_Player.update()	update
2017-01-04 16:30:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:22 AI_Player.update()	update
2017-01-04 16:30:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:22 AI_Player.update()	Search took78ms
2017-01-04 16:30:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:22 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:30:22 AI_Player.update()		11,	11,	11,	1010,	1010,	1011,	1100
2017-01-04 16:30:22 AI_Player.update()		1110,	1100,	1110,	11,	111,	111,	1011
2017-01-04 16:30:22 AI_Player.update()		101,	110,	1010,	11,	110,	101,	101
2017-01-04 16:30:22 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 16:30:22 AI_Player.update()		11,	110,	1010,	111,	110,	110,	1010
2017-01-04 16:30:22 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 16:30:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:23 AI_Player.update()	update
2017-01-04 16:30:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:23 AI_Player.update()	update
2017-01-04 16:30:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:23 AI_Player.update()	Search took128ms
2017-01-04 16:30:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:23 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:30:23 AI_Player.update()		11,	11,	1010,	1010,	1011,	1100,	11
2017-01-04 16:30:23 AI_Player.update()		1110,	1100,	1110,	11,	111,	111,	1011
2017-01-04 16:30:23 AI_Player.update()		101,	110,	1010,	11,	110,	101,	101
2017-01-04 16:30:23 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 16:30:23 AI_Player.update()		11,	110,	1010,	111,	110,	110,	1010
2017-01-04 16:30:23 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 16:30:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:30:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:24 AI_Player.update()	update
2017-01-04 16:30:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:24 AI_Player.update()	update
2017-01-04 16:30:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:24 AI_Player.update()	Search took278ms
2017-01-04 16:30:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:24 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 16:30:24 AI_Player.update()		11,	1100,	1010,	1010,	1011,	1100,	11
2017-01-04 16:30:24 AI_Player.update()		1110,	110,	1110,	11,	111,	111,	1011
2017-01-04 16:30:24 AI_Player.update()		101,	101,	1010,	11,	110,	101,	101
2017-01-04 16:30:24 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 16:30:24 AI_Player.update()		11,	1010,	1010,	111,	110,	110,	1010
2017-01-04 16:30:24 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 16:30:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:25 AI_Player.update()	update
2017-01-04 16:30:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:25 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:25 AI_Player.update()	update
2017-01-04 16:30:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:26 AI_Player.update()	Search took82ms
2017-01-04 16:30:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:26 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:30:26 AI_Player.update()		11,	11,	1010,	1010,	1011,	1100,	11
2017-01-04 16:30:26 AI_Player.update()		1110,	1100,	1110,	11,	111,	111,	1011
2017-01-04 16:30:26 AI_Player.update()		101,	110,	1010,	11,	110,	101,	101
2017-01-04 16:30:26 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 16:30:26 AI_Player.update()		11,	110,	1010,	111,	110,	110,	1010
2017-01-04 16:30:26 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 16:30:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:26 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:26 AI_Player.update()	update
2017-01-04 16:30:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:26 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:27 AI_Player.update()	update
2017-01-04 16:30:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:27 AI_Player.update()	Search took281ms
2017-01-04 16:30:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:27 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:30:27 AI_Player.update()		11,	11,	11,	1010,	1010,	1011,	1100
2017-01-04 16:30:27 AI_Player.update()		1110,	1100,	1110,	11,	111,	111,	1011
2017-01-04 16:30:27 AI_Player.update()		101,	110,	1010,	11,	110,	101,	101
2017-01-04 16:30:27 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 16:30:27 AI_Player.update()		11,	110,	1010,	111,	110,	110,	1010
2017-01-04 16:30:27 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 16:30:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:27 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:27 AI_Player.update()	update
2017-01-04 16:30:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:27 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:28 AI_Player.update()	update
2017-01-04 16:30:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:28 AI_Player.update()	Search took128ms
2017-01-04 16:30:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:28 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:30:28 AI_Player.update()		11,	11,	11,	1010,	1010,	1011,	1100
2017-01-04 16:30:28 AI_Player.update()		1110,	1100,	1110,	11,	111,	111,	1011
2017-01-04 16:30:28 AI_Player.update()		101,	110,	1010,	11,	110,	101,	101
2017-01-04 16:30:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 16:30:28 AI_Player.update()		110,	1010,	111,	110,	110,	1010,	11
2017-01-04 16:30:28 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 16:30:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:28 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:28 AI_Player.update()	update
2017-01-04 16:30:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:29 AI_Player.update()	update
2017-01-04 16:30:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:29 AI_Player.update()	Search took173ms
2017-01-04 16:30:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:29 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:30:29 AI_Player.update()		11,	11,	11,	11,	1010,	1011,	1100
2017-01-04 16:30:29 AI_Player.update()		1110,	1100,	1110,	11,	111,	111,	1011
2017-01-04 16:30:29 AI_Player.update()		101,	110,	1010,	1010,	110,	101,	101
2017-01-04 16:30:29 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 16:30:29 AI_Player.update()		110,	1010,	111,	110,	110,	1010,	11
2017-01-04 16:30:29 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 16:30:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:30 AI_Player.update()	update
2017-01-04 16:30:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:30 AI_Player.update()	update
2017-01-04 16:30:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:30 AI_Player.update()	Search took56ms
2017-01-04 16:30:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:30 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 16:30:30 AI_Player.update()		11,	1100,	11,	11,	1010,	1011,	1100
2017-01-04 16:30:30 AI_Player.update()		1110,	110,	1110,	11,	111,	111,	1011
2017-01-04 16:30:30 AI_Player.update()		101,	101,	1010,	1010,	110,	101,	101
2017-01-04 16:30:30 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-04 16:30:30 AI_Player.update()		110,	1010,	111,	110,	110,	1010,	11
2017-01-04 16:30:30 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 16:30:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:31 AI_Player.update()	update
2017-01-04 16:30:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:31 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:31 AI_Player.update()	update
2017-01-04 16:30:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:31 AI_Player.update()	Search took204ms
2017-01-04 16:30:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:31 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 16:30:31 AI_Player.update()		11,	1100,	11,	11,	1010,	1011,	1100
2017-01-04 16:30:31 AI_Player.update()		1110,	110,	1110,	11,	111,	111,	1011
2017-01-04 16:30:31 AI_Player.update()		101,	1010,	1010,	110,	101,	101,	101
2017-01-04 16:30:31 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-04 16:30:31 AI_Player.update()		110,	1010,	111,	110,	110,	1010,	11
2017-01-04 16:30:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 16:30:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:31 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:32 AI_Player.update()	update
2017-01-04 16:30:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:32 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:32 AI_Player.update()	update
2017-01-04 16:30:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:33 AI_Player.update()	Search took122ms
2017-01-04 16:30:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:33 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 16:30:33 AI_Player.update()		11,	1100,	11,	11,	1010,	1011,	1100
2017-01-04 16:30:33 AI_Player.update()		1110,	110,	1110,	11,	111,	111,	1011
2017-01-04 16:30:33 AI_Player.update()		1010,	1010,	110,	101,	101,	101,	101
2017-01-04 16:30:33 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-04 16:30:33 AI_Player.update()		110,	1010,	111,	110,	110,	1010,	11
2017-01-04 16:30:33 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 16:30:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:33 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:33 AI_Player.update()	update
2017-01-04 16:30:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:33 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:34 AI_Player.update()	update
2017-01-04 16:30:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:34 AI_Player.update()	Search took158ms
2017-01-04 16:30:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:34 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:34 AI_Player.update()		11,	1100,	11,	11,	1010,	111,	1100
2017-01-04 16:30:34 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-04 16:30:34 AI_Player.update()		1010,	1010,	110,	101,	101,	11,	101
2017-01-04 16:30:34 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 16:30:34 AI_Player.update()		110,	1010,	111,	110,	110,	1010,	11
2017-01-04 16:30:34 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 16:30:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:34 AI_Player.update()	update
2017-01-04 16:30:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:35 AI_Player.update()	update
2017-01-04 16:30:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:35 AI_Player.update()	Search took72ms
2017-01-04 16:30:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:35 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:35 AI_Player.update()		11,	1100,	11,	11,	1010,	111,	1100
2017-01-04 16:30:35 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-04 16:30:35 AI_Player.update()		1010,	110,	101,	101,	11,	101,	1010
2017-01-04 16:30:35 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 16:30:35 AI_Player.update()		110,	1010,	111,	110,	110,	1010,	11
2017-01-04 16:30:35 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 16:30:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:30:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:35 AI_Player.update()	update
2017-01-04 16:30:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:30:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:36 AI_Player.update()	update
2017-01-04 16:30:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:36 AI_Player.update()	Search took257ms
2017-01-04 16:30:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:36 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:36 AI_Player.update()		11,	1100,	11,	11,	1010,	111,	1100
2017-01-04 16:30:36 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-04 16:30:36 AI_Player.update()		1010,	110,	101,	101,	11,	101,	1010
2017-01-04 16:30:36 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 16:30:36 AI_Player.update()		11,	110,	1010,	111,	110,	110,	1010
2017-01-04 16:30:36 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 16:30:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:36 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:30:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:37 AI_Player.update()	update
2017-01-04 16:30:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 16:30:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:37 AI_Player.update()	update
2017-01-04 16:30:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:37 AI_Player.update()	Search took81ms
2017-01-04 16:30:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:37 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:37 AI_Player.update()		11,	1100,	11,	11,	1010,	111,	1100
2017-01-04 16:30:37 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-04 16:30:37 AI_Player.update()		1010,	110,	101,	101,	11,	101,	1010
2017-01-04 16:30:37 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 16:30:37 AI_Player.update()		1010,	11,	110,	1010,	111,	110,	110
2017-01-04 16:30:37 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 16:30:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 16:30:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:38 AI_Player.update()	update
2017-01-04 16:30:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	4 4
2017-01-04 16:30:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:38 AI_Player.update()	update
2017-01-04 16:30:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:38 AI_Player.update()	Search took177ms
2017-01-04 16:30:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:38 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:38 AI_Player.update()		1100,	11,	11,	1010,	111,	1100,	11
2017-01-04 16:30:38 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-04 16:30:38 AI_Player.update()		1010,	110,	101,	101,	11,	101,	1010
2017-01-04 16:30:38 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 16:30:38 AI_Player.update()		1010,	11,	110,	1010,	111,	110,	110
2017-01-04 16:30:38 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 16:30:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:38 GameBoard.setupTreasurePanel()	4 4
2017-01-04 16:30:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:39 AI_Player.update()	update
2017-01-04 16:30:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:39 AI_Player.update()	update
2017-01-04 16:30:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:40 AI_Player.update()	Search took390ms
2017-01-04 16:30:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:40 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:40 AI_Player.update()		1100,	11,	11,	11,	111,	1100,	11
2017-01-04 16:30:40 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 16:30:40 AI_Player.update()		1010,	110,	101,	110,	11,	101,	1010
2017-01-04 16:30:40 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:30:40 AI_Player.update()		1010,	11,	110,	101,	111,	110,	110
2017-01-04 16:30:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:30:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:40 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:40 AI_Player.update()	update
2017-01-04 16:30:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:40 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:41 AI_Player.update()	update
2017-01-04 16:30:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:41 AI_Player.update()	Search took238ms
2017-01-04 16:30:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:41 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:41 AI_Player.update()		1100,	11,	11,	11,	111,	1100,	11
2017-01-04 16:30:41 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 16:30:41 AI_Player.update()		1010,	110,	101,	110,	11,	101,	1010
2017-01-04 16:30:41 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:30:41 AI_Player.update()		11,	110,	101,	111,	110,	110,	1010
2017-01-04 16:30:41 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:30:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:41 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:42 AI_Player.update()	update
2017-01-04 16:30:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:42 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:42 AI_Player.update()	update
2017-01-04 16:30:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:42 AI_Player.update()	Search took94ms
2017-01-04 16:30:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:42 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:42 AI_Player.update()		1100,	110,	11,	11,	111,	1100,	11
2017-01-04 16:30:42 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 16:30:42 AI_Player.update()		1010,	1010,	101,	110,	11,	101,	1010
2017-01-04 16:30:42 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:30:42 AI_Player.update()		11,	101,	101,	111,	110,	110,	1010
2017-01-04 16:30:42 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 16:30:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:42 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:43 AI_Player.update()	update
2017-01-04 16:30:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:43 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:43 AI_Player.update()	update
2017-01-04 16:30:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:44 AI_Player.update()	Search took388ms
2017-01-04 16:30:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:44 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:44 AI_Player.update()		1100,	11,	11,	11,	111,	1100,	11
2017-01-04 16:30:44 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 16:30:44 AI_Player.update()		1010,	110,	101,	110,	11,	101,	1010
2017-01-04 16:30:44 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:30:44 AI_Player.update()		11,	110,	101,	111,	110,	110,	1010
2017-01-04 16:30:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:30:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:44 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:44 AI_Player.update()	update
2017-01-04 16:30:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:44 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:45 AI_Player.update()	update
2017-01-04 16:30:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:45 AI_Player.update()	Search took150ms
2017-01-04 16:30:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:45 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:45 AI_Player.update()		1100,	110,	11,	11,	111,	1100,	11
2017-01-04 16:30:45 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 16:30:45 AI_Player.update()		1010,	1010,	101,	110,	11,	101,	1010
2017-01-04 16:30:45 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:30:45 AI_Player.update()		11,	101,	101,	111,	110,	110,	1010
2017-01-04 16:30:45 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 16:30:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:45 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:45 AI_Player.update()	update
2017-01-04 16:30:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:45 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:46 AI_Player.update()	update
2017-01-04 16:30:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:46 AI_Player.update()	Search took360ms
2017-01-04 16:30:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:46 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-04 16:30:46 AI_Player.update()		11,	1100,	110,	11,	11,	111,	1100
2017-01-04 16:30:46 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 16:30:46 AI_Player.update()		1010,	1010,	101,	110,	11,	101,	1010
2017-01-04 16:30:46 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:30:46 AI_Player.update()		11,	101,	101,	111,	110,	110,	1010
2017-01-04 16:30:46 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 16:30:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:46 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:30:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:47 AI_Player.update()	update
2017-01-04 16:30:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:30:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:47 AI_Player.update()	update
2017-01-04 16:30:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:47 AI_Player.update()	Search took72ms
2017-01-04 16:30:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:47 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-04 16:30:47 AI_Player.update()		11,	110,	110,	11,	11,	111,	1100
2017-01-04 16:30:47 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 16:30:47 AI_Player.update()		1010,	110,	101,	110,	11,	101,	1010
2017-01-04 16:30:47 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:30:47 AI_Player.update()		11,	11,	101,	111,	110,	110,	1010
2017-01-04 16:30:47 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 16:30:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:47 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:30:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:48 AI_Player.update()	update
2017-01-04 16:30:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:30:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:48 AI_Player.update()	update
2017-01-04 16:30:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:48 AI_Player.update()	Search took124ms
2017-01-04 16:30:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:48 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-04 16:30:48 AI_Player.update()		11,	110,	110,	1010,	11,	111,	1100
2017-01-04 16:30:48 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 16:30:48 AI_Player.update()		1010,	110,	101,	101,	11,	101,	1010
2017-01-04 16:30:48 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 16:30:48 AI_Player.update()		11,	11,	101,	1010,	110,	110,	1010
2017-01-04 16:30:48 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-04 16:30:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:48 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:30:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:49 AI_Player.update()	update
2017-01-04 16:30:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:49 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:30:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:49 AI_Player.update()	update
2017-01-04 16:30:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:49 AI_Player.update()	Search took122ms
2017-01-04 16:30:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:49 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-04 16:30:49 AI_Player.update()		11,	110,	110,	1010,	11,	111,	1100
2017-01-04 16:30:49 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 16:30:49 AI_Player.update()		1010,	1010,	110,	101,	101,	11,	101
2017-01-04 16:30:49 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 16:30:49 AI_Player.update()		11,	11,	101,	1010,	110,	110,	1010
2017-01-04 16:30:49 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-04 16:30:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:49 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:30:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:50 AI_Player.update()	update
2017-01-04 16:30:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:50 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:30:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:50 AI_Player.update()	update
2017-01-04 16:30:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:51 AI_Player.update()	Search took174ms
2017-01-04 16:30:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:51 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-04 16:30:51 AI_Player.update()		1100,	11,	110,	110,	1010,	11,	111
2017-01-04 16:30:51 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 16:30:51 AI_Player.update()		1010,	1010,	110,	101,	101,	11,	101
2017-01-04 16:30:51 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 16:30:51 AI_Player.update()		11,	11,	101,	1010,	110,	110,	1010
2017-01-04 16:30:51 AI_Player.update()		1100,	11,	1101,	111,	1101,	101,	1001
2017-01-04 16:30:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:30:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:51 AI_Player.update()	update
2017-01-04 16:30:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:51 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 16:30:51 AI_Player.update()	Player a has won!
2017-01-04 16:30:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:30:51 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 16:30:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:30:51 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 16:30:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:30:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:52 AI_Player.update()	update
2017-01-04 16:30:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:52 AI_Player.update()	Search took75ms
2017-01-04 16:30:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:52 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 16:30:52 AI_Player.update()		11,	11,	1011,	110,	1010,	110,	1110
2017-01-04 16:30:52 AI_Player.update()		1110,	110,	1110,	11,	111,	111,	1011
2017-01-04 16:30:52 AI_Player.update()		101,	1001,	11,	1010,	110,	1001,	1011
2017-01-04 16:30:52 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:30:52 AI_Player.update()		101,	1010,	111,	1110,	1001,	1010,	1110
2017-01-04 16:30:52 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-04 16:30:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:30:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:52 AI_Player.update()	update
2017-01-04 16:30:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:30:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:53 AI_Player.update()	update
2017-01-04 16:30:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:53 AI_Player.update()	Search took500ms
2017-01-04 16:30:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:53 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-04 16:30:53 AI_Player.update()		11,	11,	1011,	110,	1010,	111,	1110
2017-01-04 16:30:53 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-04 16:30:53 AI_Player.update()		101,	1001,	11,	1010,	110,	1100,	1011
2017-01-04 16:30:53 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1010,	1011
2017-01-04 16:30:53 AI_Player.update()		101,	1010,	111,	1110,	1001,	1001,	1110
2017-01-04 16:30:53 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 16:30:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:30:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:54 AI_Player.update()	update
2017-01-04 16:30:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	1 2
2017-01-04 16:30:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:54 AI_Player.update()	update
2017-01-04 16:30:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:54 AI_Player.update()	Search took211ms
2017-01-04 16:30:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:54 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-04 16:30:54 AI_Player.update()		11,	110,	1011,	110,	1010,	111,	1110
2017-01-04 16:30:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 16:30:54 AI_Player.update()		101,	1100,	11,	1010,	110,	1100,	1011
2017-01-04 16:30:54 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-04 16:30:54 AI_Player.update()		101,	110,	111,	1110,	1001,	1001,	1110
2017-01-04 16:30:54 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 16:30:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:54 GameBoard.setupTreasurePanel()	1 2
2017-01-04 16:30:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:55 AI_Player.update()	update
2017-01-04 16:30:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:55 AI_Player.update()	update
2017-01-04 16:30:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:56 AI_Player.update()	Search took241ms
2017-01-04 16:30:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:56 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-04 16:30:56 AI_Player.update()		11,	110,	1011,	110,	1010,	111,	1110
2017-01-04 16:30:56 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 16:30:56 AI_Player.update()		101,	1100,	11,	1010,	110,	1100,	1011
2017-01-04 16:30:56 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-04 16:30:56 AI_Player.update()		1110,	101,	110,	111,	1110,	1001,	1001
2017-01-04 16:30:56 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 16:30:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:30:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:56 AI_Player.update()	update
2017-01-04 16:30:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	2 3
2017-01-04 16:30:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:57 AI_Player.update()	update
2017-01-04 16:30:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:30:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:30:57 AI_Player.update()	Search took301ms
2017-01-04 16:30:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:57 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-04 16:30:57 AI_Player.update()		11,	110,	1011,	11,	1010,	111,	1110
2017-01-04 16:30:57 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-04 16:30:57 AI_Player.update()		101,	1100,	11,	11,	110,	1100,	1011
2017-01-04 16:30:57 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:30:57 AI_Player.update()		1110,	101,	110,	1001,	1110,	1001,	1001
2017-01-04 16:30:57 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-04 16:30:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	2 3
2017-01-04 16:30:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:57 AI_Player.update()	update
2017-01-04 16:30:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:30:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:30:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:30:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:30:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:30:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:30:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:58 AI_Player.update()	update
2017-01-04 16:30:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:30:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:30:58 AI_Player.update()	Search took306ms
2017-01-04 16:30:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:30:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:58 AI_Player.update()		110,	11,	111,	1010,	111,	1010,	11
2017-01-04 16:30:58 AI_Player.update()		11,	110,	1011,	11,	1010,	110,	1110
2017-01-04 16:30:58 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 16:30:58 AI_Player.update()		101,	1100,	11,	11,	110,	1001,	1011
2017-01-04 16:30:58 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:30:58 AI_Player.update()		1110,	101,	110,	1001,	1110,	1010,	1001
2017-01-04 16:30:58 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-04 16:30:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:30:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:30:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:58 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:30:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:59 AI_Player.update()	update
2017-01-04 16:30:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:30:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:30:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:30:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:30:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:30:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:30:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:30:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	3 4
2017-01-04 16:30:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:30:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:30:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:30:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:30:59 AI_Player.update()	update
2017-01-04 16:30:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:00 AI_Player.update()	Search took1061ms
2017-01-04 16:31:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 16:31:00 AI_Player.update()		11,	11,	1011,	11,	1010,	110,	1110
2017-01-04 16:31:00 AI_Player.update()		1110,	110,	1110,	110,	111,	111,	1011
2017-01-04 16:31:00 AI_Player.update()		101,	1001,	11,	11,	110,	1001,	1011
2017-01-04 16:31:00 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:31:00 AI_Player.update()		1110,	1010,	110,	1001,	1110,	1010,	1001
2017-01-04 16:31:00 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-04 16:31:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:00 GameBoard.setupTreasurePanel()	3 4
2017-01-04 16:31:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:01 AI_Player.update()	update
2017-01-04 16:31:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:01 GameBoard.setupTreasurePanel()	3 4
2017-01-04 16:31:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:01 AI_Player.update()	update
2017-01-04 16:31:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:02 AI_Player.update()	Search took783ms
2017-01-04 16:31:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:02 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 16:31:02 AI_Player.update()		11,	101,	1011,	11,	1010,	110,	1110
2017-01-04 16:31:02 AI_Player.update()		1110,	11,	1110,	110,	111,	111,	1011
2017-01-04 16:31:02 AI_Player.update()		101,	110,	11,	11,	110,	1001,	1011
2017-01-04 16:31:02 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:31:02 AI_Player.update()		1110,	1100,	110,	1001,	1110,	1010,	1001
2017-01-04 16:31:02 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 16:31:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:02 GameBoard.setupTreasurePanel()	3 4
2017-01-04 16:31:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:03 AI_Player.update()	update
2017-01-04 16:31:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:03 GameBoard.setupTreasurePanel()	3 4
2017-01-04 16:31:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:03 AI_Player.update()	update
2017-01-04 16:31:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:03 AI_Player.update()	Search took259ms
2017-01-04 16:31:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 16:31:03 AI_Player.update()		11,	101,	1011,	11,	1010,	110,	1110
2017-01-04 16:31:03 AI_Player.update()		1110,	11,	1110,	110,	111,	111,	1011
2017-01-04 16:31:03 AI_Player.update()		110,	11,	11,	110,	1001,	1011,	101
2017-01-04 16:31:03 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:31:03 AI_Player.update()		1110,	1100,	110,	1001,	1110,	1010,	1001
2017-01-04 16:31:03 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 16:31:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:03 GameBoard.setupTreasurePanel()	3 4
2017-01-04 16:31:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:04 AI_Player.update()	update
2017-01-04 16:31:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	4 4
2017-01-04 16:31:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:04 AI_Player.update()	update
2017-01-04 16:31:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:05 AI_Player.update()	Search took158ms
2017-01-04 16:31:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 16:31:05 AI_Player.update()		11,	101,	1011,	11,	1010,	110,	1110
2017-01-04 16:31:05 AI_Player.update()		1110,	11,	1110,	110,	111,	111,	1011
2017-01-04 16:31:05 AI_Player.update()		11,	11,	110,	1001,	1011,	101,	110
2017-01-04 16:31:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:31:05 AI_Player.update()		1110,	1100,	110,	1001,	1110,	1010,	1001
2017-01-04 16:31:05 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 16:31:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:05 GameBoard.setupTreasurePanel()	4 4
2017-01-04 16:31:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:05 AI_Player.update()	update
2017-01-04 16:31:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:05 GameBoard.setupTreasurePanel()	4 4
2017-01-04 16:31:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:06 AI_Player.update()	update
2017-01-04 16:31:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:06 AI_Player.update()	Search took153ms
2017-01-04 16:31:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:06 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 16:31:06 AI_Player.update()		11,	101,	1011,	1010,	1010,	110,	1110
2017-01-04 16:31:06 AI_Player.update()		1110,	11,	1110,	11,	111,	111,	1011
2017-01-04 16:31:06 AI_Player.update()		11,	11,	110,	110,	1011,	101,	110
2017-01-04 16:31:06 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:31:06 AI_Player.update()		1110,	1100,	110,	1010,	1110,	1010,	1001
2017-01-04 16:31:06 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-04 16:31:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	4 4
2017-01-04 16:31:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:06 AI_Player.update()	update
2017-01-04 16:31:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:31:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:07 AI_Player.update()	update
2017-01-04 16:31:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:07 AI_Player.update()	Search took507ms
2017-01-04 16:31:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:07 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 16:31:07 AI_Player.update()		11,	101,	1011,	1010,	1010,	110,	1110
2017-01-04 16:31:07 AI_Player.update()		1110,	11,	1110,	11,	111,	111,	1011
2017-01-04 16:31:07 AI_Player.update()		11,	110,	110,	1011,	101,	110,	11
2017-01-04 16:31:07 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:31:07 AI_Player.update()		1110,	1100,	110,	1010,	1110,	1010,	1001
2017-01-04 16:31:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-04 16:31:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:07 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:31:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:08 AI_Player.update()	update
2017-01-04 16:31:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:08 AI_Player.update()	update
2017-01-04 16:31:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:09 AI_Player.update()	Search took359ms
2017-01-04 16:31:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:09 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 16:31:09 AI_Player.update()		11,	101,	1011,	1010,	1010,	110,	1110
2017-01-04 16:31:09 AI_Player.update()		1110,	11,	1110,	11,	111,	111,	1011
2017-01-04 16:31:09 AI_Player.update()		11,	11,	110,	110,	1011,	101,	110
2017-01-04 16:31:09 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:31:09 AI_Player.update()		1110,	1100,	110,	1010,	1110,	1010,	1001
2017-01-04 16:31:09 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-04 16:31:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:09 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:09 AI_Player.update()	update
2017-01-04 16:31:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:09 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:10 AI_Player.update()	update
2017-01-04 16:31:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:10 AI_Player.update()	Search took196ms
2017-01-04 16:31:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:10 AI_Player.update()		110,	1010,	111,	111,	111,	1010,	11
2017-01-04 16:31:10 AI_Player.update()		11,	101,	1011,	1010,	1010,	110,	1110
2017-01-04 16:31:10 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-04 16:31:10 AI_Player.update()		11,	11,	110,	110,	1011,	101,	110
2017-01-04 16:31:10 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:31:10 AI_Player.update()		1110,	1001,	110,	1010,	1110,	1010,	1001
2017-01-04 16:31:10 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-04 16:31:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:10 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:10 AI_Player.update()	update
2017-01-04 16:31:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:10 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:11 AI_Player.update()	update
2017-01-04 16:31:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:11 AI_Player.update()	Search took226ms
2017-01-04 16:31:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:11 AI_Player.update()		110,	1010,	111,	111,	111,	1010,	11
2017-01-04 16:31:11 AI_Player.update()		101,	1011,	1010,	1010,	110,	1110,	11
2017-01-04 16:31:11 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-04 16:31:11 AI_Player.update()		11,	11,	110,	110,	1011,	101,	110
2017-01-04 16:31:11 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:31:11 AI_Player.update()		1110,	1001,	110,	1010,	1110,	1010,	1001
2017-01-04 16:31:11 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-04 16:31:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:11 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:12 AI_Player.update()	update
2017-01-04 16:31:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:12 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:12 AI_Player.update()	update
2017-01-04 16:31:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:12 AI_Player.update()	Search took45ms
2017-01-04 16:31:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:12 AI_Player.update()		110,	1011,	111,	111,	111,	1010,	11
2017-01-04 16:31:12 AI_Player.update()		101,	101,	1010,	1010,	110,	1110,	11
2017-01-04 16:31:12 AI_Player.update()		1110,	11,	1110,	11,	111,	111,	1011
2017-01-04 16:31:12 AI_Player.update()		11,	11,	110,	110,	1011,	101,	110
2017-01-04 16:31:12 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:31:12 AI_Player.update()		1110,	1100,	110,	1010,	1110,	1010,	1001
2017-01-04 16:31:12 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-04 16:31:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:12 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:13 AI_Player.update()	update
2017-01-04 16:31:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:13 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:13 AI_Player.update()	update
2017-01-04 16:31:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:13 AI_Player.update()	Search took201ms
2017-01-04 16:31:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:13 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-04 16:31:13 AI_Player.update()		101,	11,	1010,	1010,	110,	1110,	11
2017-01-04 16:31:13 AI_Player.update()		1110,	11,	1110,	11,	111,	111,	1011
2017-01-04 16:31:13 AI_Player.update()		11,	1001,	110,	110,	1011,	101,	110
2017-01-04 16:31:13 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:31:13 AI_Player.update()		1110,	1010,	110,	1010,	1110,	1010,	1001
2017-01-04 16:31:13 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1001,	1001
2017-01-04 16:31:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:13 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:14 AI_Player.update()	update
2017-01-04 16:31:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:14 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:14 AI_Player.update()	update
2017-01-04 16:31:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:15 AI_Player.update()	Search took185ms
2017-01-04 16:31:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:15 AI_Player.update()		110,	1011,	111,	111,	111,	1010,	11
2017-01-04 16:31:15 AI_Player.update()		101,	101,	1010,	1010,	110,	1110,	11
2017-01-04 16:31:15 AI_Player.update()		1110,	11,	1110,	11,	111,	111,	1011
2017-01-04 16:31:15 AI_Player.update()		11,	11,	110,	110,	1011,	101,	110
2017-01-04 16:31:15 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:31:15 AI_Player.update()		1110,	1100,	110,	1010,	1110,	1010,	1001
2017-01-04 16:31:15 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-04 16:31:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:15 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:15 AI_Player.update()	update
2017-01-04 16:31:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:15 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:16 AI_Player.update()	update
2017-01-04 16:31:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:16 AI_Player.update()	Search took187ms
2017-01-04 16:31:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:16 AI_Player.update()		110,	1011,	111,	1010,	111,	1010,	11
2017-01-04 16:31:16 AI_Player.update()		101,	101,	1010,	11,	110,	1110,	11
2017-01-04 16:31:16 AI_Player.update()		1110,	11,	1110,	110,	111,	111,	1011
2017-01-04 16:31:16 AI_Player.update()		11,	11,	110,	1001,	1011,	101,	110
2017-01-04 16:31:16 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:31:16 AI_Player.update()		1110,	1100,	110,	1001,	1110,	1010,	1001
2017-01-04 16:31:16 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 16:31:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:16 AI_Player.update()	update
2017-01-04 16:31:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:31:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:17 AI_Player.update()	update
2017-01-04 16:31:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:17 AI_Player.update()	Search took37ms
2017-01-04 16:31:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:17 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 16:31:17 AI_Player.update()		101,	1011,	1010,	11,	110,	1110,	11
2017-01-04 16:31:17 AI_Player.update()		1110,	101,	1110,	110,	111,	111,	1011
2017-01-04 16:31:17 AI_Player.update()		11,	11,	110,	1001,	1011,	101,	110
2017-01-04 16:31:17 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:31:17 AI_Player.update()		1110,	1001,	110,	1001,	1110,	1010,	1001
2017-01-04 16:31:17 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-04 16:31:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:31:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:17 AI_Player.update()	update
2017-01-04 16:31:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:31:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:18 AI_Player.update()	update
2017-01-04 16:31:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:19 AI_Player.update()	Search took732ms
2017-01-04 16:31:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:19 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 16:31:19 AI_Player.update()		11,	101,	1011,	1010,	11,	110,	1110
2017-01-04 16:31:19 AI_Player.update()		1110,	101,	1110,	110,	111,	111,	1011
2017-01-04 16:31:19 AI_Player.update()		11,	11,	110,	1001,	1011,	101,	110
2017-01-04 16:31:19 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:31:19 AI_Player.update()		1110,	1001,	110,	1001,	1110,	1010,	1001
2017-01-04 16:31:19 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-04 16:31:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:31:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:19 AI_Player.update()	update
2017-01-04 16:31:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:31:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:20 AI_Player.update()	update
2017-01-04 16:31:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:20 AI_Player.update()	Search took46ms
2017-01-04 16:31:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:20 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-04 16:31:20 AI_Player.update()		11,	101,	1011,	1010,	11,	111,	1110
2017-01-04 16:31:20 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 16:31:20 AI_Player.update()		11,	11,	110,	1001,	1011,	1100,	110
2017-01-04 16:31:20 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:31:20 AI_Player.update()		1110,	1001,	110,	1001,	1110,	1001,	1001
2017-01-04 16:31:20 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-04 16:31:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:31:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:20 AI_Player.update()	update
2017-01-04 16:31:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:31:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:21 AI_Player.update()	update
2017-01-04 16:31:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:21 AI_Player.update()	Search took647ms
2017-01-04 16:31:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:21 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-04 16:31:21 AI_Player.update()		1110,	11,	101,	1011,	1010,	11,	111
2017-01-04 16:31:21 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 16:31:21 AI_Player.update()		11,	11,	110,	1001,	1011,	1100,	110
2017-01-04 16:31:21 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 16:31:21 AI_Player.update()		1110,	1001,	110,	1001,	1110,	1001,	1001
2017-01-04 16:31:21 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-04 16:31:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:21 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:31:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:22 AI_Player.update()	update
2017-01-04 16:31:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:22 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 16:31:22 AI_Player.update()	Player a has won!
2017-01-04 16:31:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:31:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 16:31:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:31:22 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 16:31:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:31:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:22 AI_Player.update()	update
2017-01-04 16:31:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:23 AI_Player.update()	Search took271ms
2017-01-04 16:31:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:23 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 16:31:23 AI_Player.update()		1010,	1011,	1100,	1101,	1010,	1010,	1011
2017-01-04 16:31:23 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1110,	1011
2017-01-04 16:31:23 AI_Player.update()		11,	1010,	11,	1110,	1100,	1110,	101
2017-01-04 16:31:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-04 16:31:23 AI_Player.update()		1001,	110,	111,	1110,	101,	1100,	101
2017-01-04 16:31:23 AI_Player.update()		1100,	110,	1101,	1001,	1101,	110,	1001
2017-01-04 16:31:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:31:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:23 AI_Player.update()	update
2017-01-04 16:31:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:24 AI_Player.update()	update
2017-01-04 16:31:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:24 AI_Player.update()	Search took284ms
2017-01-04 16:31:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:24 AI_Player.update()		110,	1011,	111,	101,	111,	1010,	11
2017-01-04 16:31:24 AI_Player.update()		1010,	1100,	1100,	1101,	1010,	1010,	1011
2017-01-04 16:31:24 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1110,	1011
2017-01-04 16:31:24 AI_Player.update()		11,	1100,	11,	1110,	1100,	1110,	101
2017-01-04 16:31:24 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-04 16:31:24 AI_Player.update()		1001,	110,	111,	1110,	101,	1100,	101
2017-01-04 16:31:24 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 16:31:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:24 AI_Player.update()	update
2017-01-04 16:31:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:25 AI_Player.update()	update
2017-01-04 16:31:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:25 AI_Player.update()	Search took129ms
2017-01-04 16:31:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:25 AI_Player.update()		110,	1011,	111,	101,	111,	1010,	11
2017-01-04 16:31:25 AI_Player.update()		1100,	1100,	1101,	1010,	1010,	1011,	1010
2017-01-04 16:31:25 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1110,	1011
2017-01-04 16:31:25 AI_Player.update()		11,	1100,	11,	1110,	1100,	1110,	101
2017-01-04 16:31:25 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-04 16:31:25 AI_Player.update()		1001,	110,	111,	1110,	101,	1100,	101
2017-01-04 16:31:25 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 16:31:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:25 AI_Player.update()	update
2017-01-04 16:31:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:26 AI_Player.update()	update
2017-01-04 16:31:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:26 AI_Player.update()	Search took297ms
2017-01-04 16:31:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:26 AI_Player.update()		110,	1011,	111,	101,	111,	1011,	11
2017-01-04 16:31:26 AI_Player.update()		1100,	1100,	1101,	1010,	1010,	1110,	1010
2017-01-04 16:31:26 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1110,	1011
2017-01-04 16:31:26 AI_Player.update()		11,	1100,	11,	1110,	1100,	1001,	101
2017-01-04 16:31:26 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-04 16:31:26 AI_Player.update()		1001,	110,	111,	1110,	101,	110,	101
2017-01-04 16:31:26 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 16:31:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:26 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:27 AI_Player.update()	update
2017-01-04 16:31:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:27 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:27 AI_Player.update()	update
2017-01-04 16:31:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:28 AI_Player.update()	Search took416ms
2017-01-04 16:31:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:28 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-04 16:31:28 AI_Player.update()		1100,	1010,	1101,	1010,	1010,	1110,	1010
2017-01-04 16:31:28 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1110,	1011
2017-01-04 16:31:28 AI_Player.update()		11,	110,	11,	1110,	1100,	1001,	101
2017-01-04 16:31:28 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-04 16:31:28 AI_Player.update()		1001,	101,	111,	1110,	101,	110,	101
2017-01-04 16:31:28 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1010,	1001
2017-01-04 16:31:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:28 AI_Player.update()	update
2017-01-04 16:31:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:29 AI_Player.update()	update
2017-01-04 16:31:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:29 AI_Player.update()	Search took77ms
2017-01-04 16:31:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:29 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-04 16:31:29 AI_Player.update()		1100,	1100,	1101,	1010,	1010,	1110,	1010
2017-01-04 16:31:29 AI_Player.update()		1110,	110,	1110,	1011,	111,	1110,	1011
2017-01-04 16:31:29 AI_Player.update()		11,	110,	11,	1110,	1100,	1001,	101
2017-01-04 16:31:29 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 16:31:29 AI_Player.update()		1001,	1011,	111,	1110,	101,	110,	101
2017-01-04 16:31:29 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-04 16:31:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:29 AI_Player.update()	update
2017-01-04 16:31:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:30 AI_Player.update()	update
2017-01-04 16:31:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:30 AI_Player.update()	Search took356ms
2017-01-04 16:31:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:30 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 16:31:30 AI_Player.update()		1100,	1100,	1101,	1011,	1010,	1110,	1010
2017-01-04 16:31:30 AI_Player.update()		1110,	110,	1110,	1110,	111,	1110,	1011
2017-01-04 16:31:30 AI_Player.update()		11,	110,	11,	101,	1100,	1001,	101
2017-01-04 16:31:30 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 16:31:30 AI_Player.update()		1001,	1011,	111,	1001,	101,	110,	101
2017-01-04 16:31:30 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 16:31:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:31:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:31 AI_Player.update()	update
2017-01-04 16:31:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:31:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:31 AI_Player.update()	update
2017-01-04 16:31:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:31 AI_Player.update()	Search took38ms
2017-01-04 16:31:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:31 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 16:31:31 AI_Player.update()		1010,	1100,	1100,	1101,	1011,	1010,	1110
2017-01-04 16:31:31 AI_Player.update()		1110,	110,	1110,	1110,	111,	1110,	1011
2017-01-04 16:31:31 AI_Player.update()		11,	110,	11,	101,	1100,	1001,	101
2017-01-04 16:31:31 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 16:31:31 AI_Player.update()		1001,	1011,	111,	1001,	101,	110,	101
2017-01-04 16:31:31 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 16:31:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:31 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:31:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:32 AI_Player.update()	update
2017-01-04 16:31:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:32 AI_Player.update()	update
2017-01-04 16:31:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:32 AI_Player.update()	Search took235ms
2017-01-04 16:31:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:32 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 16:31:32 AI_Player.update()		1010,	1100,	1100,	1101,	1011,	1011,	1110
2017-01-04 16:31:32 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-04 16:31:32 AI_Player.update()		11,	110,	11,	101,	1100,	1110,	101
2017-01-04 16:31:32 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1001,	1011
2017-01-04 16:31:32 AI_Player.update()		1001,	1011,	111,	1001,	101,	1100,	101
2017-01-04 16:31:32 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 16:31:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:32 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:33 AI_Player.update()	update
2017-01-04 16:31:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:33 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:33 AI_Player.update()	update
2017-01-04 16:31:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:33 AI_Player.update()	Search took31ms
2017-01-04 16:31:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:33 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 16:31:33 AI_Player.update()		1010,	1100,	1100,	1101,	1011,	1010,	1110
2017-01-04 16:31:33 AI_Player.update()		1110,	110,	1110,	1110,	111,	1110,	1011
2017-01-04 16:31:33 AI_Player.update()		11,	110,	11,	101,	1100,	1001,	101
2017-01-04 16:31:33 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 16:31:33 AI_Player.update()		1001,	1011,	111,	1001,	101,	110,	101
2017-01-04 16:31:33 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 16:31:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:33 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:34 AI_Player.update()	update
2017-01-04 16:31:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:34 AI_Player.update()	update
2017-01-04 16:31:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:35 AI_Player.update()	Search took268ms
2017-01-04 16:31:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:35 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 16:31:35 AI_Player.update()		1010,	1100,	1100,	1101,	1011,	1011,	1110
2017-01-04 16:31:35 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-04 16:31:35 AI_Player.update()		11,	110,	11,	101,	1100,	1110,	101
2017-01-04 16:31:35 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1001,	1011
2017-01-04 16:31:35 AI_Player.update()		1001,	1011,	111,	1001,	101,	1100,	101
2017-01-04 16:31:35 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 16:31:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:35 AI_Player.update()	update
2017-01-04 16:31:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:36 AI_Player.update()	update
2017-01-04 16:31:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:36 AI_Player.update()	Search took27ms
2017-01-04 16:31:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:36 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 16:31:36 AI_Player.update()		1110,	1010,	1100,	1100,	1101,	1011,	1011
2017-01-04 16:31:36 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-04 16:31:36 AI_Player.update()		11,	110,	11,	101,	1100,	1110,	101
2017-01-04 16:31:36 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1001,	1011
2017-01-04 16:31:36 AI_Player.update()		1001,	1011,	111,	1001,	101,	1100,	101
2017-01-04 16:31:36 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 16:31:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:36 AI_Player.update()	update
2017-01-04 16:31:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:37 AI_Player.update()	update
2017-01-04 16:31:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:37 AI_Player.update()	Search took244ms
2017-01-04 16:31:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:37 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 16:31:37 AI_Player.update()		1110,	1010,	1100,	1100,	1101,	1011,	1011
2017-01-04 16:31:37 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-04 16:31:37 AI_Player.update()		11,	110,	11,	101,	1100,	1110,	101
2017-01-04 16:31:37 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1001,	1011
2017-01-04 16:31:37 AI_Player.update()		1001,	101,	111,	1001,	101,	1100,	101
2017-01-04 16:31:37 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 16:31:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:37 AI_Player.update()	update
2017-01-04 16:31:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:38 AI_Player.update()	update
2017-01-04 16:31:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:38 AI_Player.update()	Search took18ms
2017-01-04 16:31:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:38 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 16:31:38 AI_Player.update()		1110,	1010,	1100,	1100,	1101,	1011,	1011
2017-01-04 16:31:38 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-04 16:31:38 AI_Player.update()		11,	110,	11,	101,	1100,	1110,	101
2017-01-04 16:31:38 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1001,	1011
2017-01-04 16:31:38 AI_Player.update()		1001,	1011,	111,	1001,	101,	1100,	101
2017-01-04 16:31:38 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 16:31:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:38 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:39 AI_Player.update()	update
2017-01-04 16:31:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:39 AI_Player.update()	update
2017-01-04 16:31:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:39 AI_Player.update()	Search took236ms
2017-01-04 16:31:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:39 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 16:31:39 AI_Player.update()		1110,	1010,	1100,	1100,	1101,	1011,	1011
2017-01-04 16:31:39 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-04 16:31:39 AI_Player.update()		11,	110,	11,	101,	1100,	1110,	101
2017-01-04 16:31:39 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1001,	1011
2017-01-04 16:31:39 AI_Player.update()		1001,	101,	111,	1001,	101,	1100,	101
2017-01-04 16:31:39 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 16:31:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:40 AI_Player.update()	update
2017-01-04 16:31:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:40 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:40 AI_Player.update()	update
2017-01-04 16:31:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:40 AI_Player.update()	Search took25ms
2017-01-04 16:31:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:40 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-04 16:31:40 AI_Player.update()		1110,	1010,	1100,	1110,	1101,	1011,	1011
2017-01-04 16:31:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 16:31:40 AI_Player.update()		11,	110,	11,	1110,	1100,	1110,	101
2017-01-04 16:31:40 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 16:31:40 AI_Player.update()		1001,	101,	111,	101,	101,	1100,	101
2017-01-04 16:31:40 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	110,	1001
2017-01-04 16:31:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:40 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:41 AI_Player.update()	update
2017-01-04 16:31:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:41 AI_Player.update()	update
2017-01-04 16:31:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:41 AI_Player.update()	Search took39ms
2017-01-04 16:31:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:41 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 16:31:41 AI_Player.update()		1110,	1010,	1100,	1100,	1101,	1011,	1011
2017-01-04 16:31:41 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-04 16:31:41 AI_Player.update()		11,	110,	11,	101,	1100,	1110,	101
2017-01-04 16:31:41 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1001,	1011
2017-01-04 16:31:41 AI_Player.update()		1001,	101,	111,	1001,	101,	1100,	101
2017-01-04 16:31:41 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 16:31:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:42 AI_Player.update()	update
2017-01-04 16:31:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:42 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:42 AI_Player.update()	update
2017-01-04 16:31:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:42 AI_Player.update()	Search took26ms
2017-01-04 16:31:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:42 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 16:31:42 AI_Player.update()		1011,	1110,	1010,	1100,	1100,	1101,	1011
2017-01-04 16:31:42 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-04 16:31:42 AI_Player.update()		11,	110,	11,	101,	1100,	1110,	101
2017-01-04 16:31:42 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1001,	1011
2017-01-04 16:31:42 AI_Player.update()		1001,	101,	111,	1001,	101,	1100,	101
2017-01-04 16:31:42 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 16:31:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:42 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:31:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:43 AI_Player.update()	update
2017-01-04 16:31:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:43 AI_Player.update()	update
2017-01-04 16:31:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:44 AI_Player.update()	Search took218ms
2017-01-04 16:31:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:44 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 16:31:44 AI_Player.update()		1110,	1010,	1100,	1100,	1101,	1011,	1011
2017-01-04 16:31:44 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-04 16:31:44 AI_Player.update()		11,	110,	11,	101,	1100,	1110,	101
2017-01-04 16:31:44 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1001,	1011
2017-01-04 16:31:44 AI_Player.update()		1001,	101,	111,	1001,	101,	1100,	101
2017-01-04 16:31:44 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 16:31:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:44 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:44 AI_Player.update()	update
2017-01-04 16:31:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:44 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:45 AI_Player.update()	update
2017-01-04 16:31:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:45 AI_Player.update()	Search took77ms
2017-01-04 16:31:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:45 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 16:31:45 AI_Player.update()		1110,	1010,	1100,	1010,	1101,	1011,	1011
2017-01-04 16:31:45 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-04 16:31:45 AI_Player.update()		11,	110,	11,	1110,	1100,	1110,	101
2017-01-04 16:31:45 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-04 16:31:45 AI_Player.update()		1001,	101,	111,	1110,	101,	1100,	101
2017-01-04 16:31:45 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	110,	1001
2017-01-04 16:31:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:45 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:45 AI_Player.update()	update
2017-01-04 16:31:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:45 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:46 AI_Player.update()	update
2017-01-04 16:31:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:46 AI_Player.update()	Search took80ms
2017-01-04 16:31:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:46 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 16:31:46 AI_Player.update()		1110,	1010,	1100,	1010,	1101,	1011,	1011
2017-01-04 16:31:46 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-04 16:31:46 AI_Player.update()		101,	11,	110,	11,	1110,	1100,	1110
2017-01-04 16:31:46 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-04 16:31:46 AI_Player.update()		1001,	101,	111,	1110,	101,	1100,	101
2017-01-04 16:31:46 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	110,	1001
2017-01-04 16:31:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:46 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:46 AI_Player.update()	update
2017-01-04 16:31:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:46 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:47 AI_Player.update()	update
2017-01-04 16:31:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:47 AI_Player.update()	Search took106ms
2017-01-04 16:31:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:47 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 16:31:47 AI_Player.update()		1110,	1010,	1100,	1010,	1101,	1011,	1011
2017-01-04 16:31:47 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-04 16:31:47 AI_Player.update()		101,	11,	110,	11,	1110,	1100,	1110
2017-01-04 16:31:47 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-04 16:31:47 AI_Player.update()		101,	111,	1110,	101,	1100,	101,	1001
2017-01-04 16:31:47 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	110,	1001
2017-01-04 16:31:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:47 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:47 AI_Player.update()	update
2017-01-04 16:31:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:47 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:48 AI_Player.update()	update
2017-01-04 16:31:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:48 AI_Player.update()	Search took62ms
2017-01-04 16:31:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:48 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 16:31:48 AI_Player.update()		1110,	1010,	1100,	1010,	1101,	1011,	1011
2017-01-04 16:31:48 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-04 16:31:48 AI_Player.update()		101,	110,	110,	11,	1110,	1100,	1110
2017-01-04 16:31:48 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-04 16:31:48 AI_Player.update()		101,	1011,	1110,	101,	1100,	101,	1001
2017-01-04 16:31:48 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-04 16:31:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:48 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:48 AI_Player.update()	update
2017-01-04 16:31:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:48 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:49 AI_Player.update()	update
2017-01-04 16:31:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:49 AI_Player.update()	Search took279ms
2017-01-04 16:31:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:49 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-04 16:31:49 AI_Player.update()		1110,	1010,	1100,	1010,	1101,	1010,	1011
2017-01-04 16:31:49 AI_Player.update()		1110,	11,	1110,	1100,	111,	1011,	1011
2017-01-04 16:31:49 AI_Player.update()		101,	110,	110,	11,	1110,	1010,	1110
2017-01-04 16:31:49 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-04 16:31:49 AI_Player.update()		101,	1011,	1110,	101,	1100,	1001,	1001
2017-01-04 16:31:49 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-04 16:31:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:49 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:31:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:50 AI_Player.update()	update
2017-01-04 16:31:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	3 4
2017-01-04 16:31:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:50 AI_Player.update()	update
2017-01-04 16:31:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:51 AI_Player.update()	Search took333ms
2017-01-04 16:31:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:51 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-04 16:31:51 AI_Player.update()		1110,	1010,	1100,	1100,	1101,	1010,	1011
2017-01-04 16:31:51 AI_Player.update()		1110,	11,	1110,	11,	111,	1011,	1011
2017-01-04 16:31:51 AI_Player.update()		101,	110,	110,	101,	1110,	1010,	1110
2017-01-04 16:31:51 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-04 16:31:51 AI_Player.update()		101,	1011,	1110,	1001,	1100,	1001,	1001
2017-01-04 16:31:51 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-04 16:31:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	3 4
2017-01-04 16:31:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:51 AI_Player.update()	update
2017-01-04 16:31:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	4 4
2017-01-04 16:31:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:52 AI_Player.update()	update
2017-01-04 16:31:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:53 AI_Player.update()	Search took1444ms
2017-01-04 16:31:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:53 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-04 16:31:53 AI_Player.update()		1110,	1010,	1100,	11,	1101,	1010,	1011
2017-01-04 16:31:53 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 16:31:53 AI_Player.update()		101,	110,	110,	101,	1110,	1010,	1110
2017-01-04 16:31:53 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:31:53 AI_Player.update()		101,	1011,	1110,	101,	1100,	1001,	1001
2017-01-04 16:31:53 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-04 16:31:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:53 GameBoard.setupTreasurePanel()	4 4
2017-01-04 16:31:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:54 AI_Player.update()	update
2017-01-04 16:31:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	4 5
2017-01-04 16:31:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:54 AI_Player.update()	update
2017-01-04 16:31:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:55 AI_Player.update()	Search took1016ms
2017-01-04 16:31:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:55 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-04 16:31:55 AI_Player.update()		1110,	1010,	1100,	101,	1101,	1010,	1011
2017-01-04 16:31:55 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 16:31:55 AI_Player.update()		101,	110,	110,	1001,	1110,	1010,	1110
2017-01-04 16:31:55 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-04 16:31:55 AI_Player.update()		101,	1011,	1110,	1010,	1100,	1001,	1001
2017-01-04 16:31:55 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 16:31:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:55 GameBoard.setupTreasurePanel()	4 5
2017-01-04 16:31:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:56 AI_Player.update()	update
2017-01-04 16:31:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:56 AI_Player.update()	update
2017-01-04 16:31:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:31:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:31:57 AI_Player.update()	Search took1370ms
2017-01-04 16:31:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:57 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-04 16:31:57 AI_Player.update()		1110,	11,	1100,	101,	1101,	1010,	1011
2017-01-04 16:31:57 AI_Player.update()		1110,	110,	1110,	101,	111,	1011,	1011
2017-01-04 16:31:57 AI_Player.update()		101,	111,	110,	1001,	1110,	1010,	1110
2017-01-04 16:31:57 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1100,	1011
2017-01-04 16:31:57 AI_Player.update()		101,	1100,	1110,	1010,	1100,	1001,	1001
2017-01-04 16:31:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 16:31:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:57 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:31:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:58 AI_Player.update()	update
2017-01-04 16:31:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:31:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:31:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:31:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:31:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:31:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:31:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:58 AI_Player.update()	update
2017-01-04 16:31:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:31:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:31:59 AI_Player.update()	Search took232ms
2017-01-04 16:31:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:31:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:59 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-04 16:31:59 AI_Player.update()		1110,	1010,	1100,	101,	1101,	1010,	1011
2017-01-04 16:31:59 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 16:31:59 AI_Player.update()		101,	110,	110,	1001,	1110,	1010,	1110
2017-01-04 16:31:59 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-04 16:31:59 AI_Player.update()		101,	1011,	1110,	1010,	1100,	1001,	1001
2017-01-04 16:31:59 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 16:31:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:31:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:31:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:31:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:31:59 AI_Player.update()	update
2017-01-04 16:31:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:31:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:31:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:31:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:31:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:31:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:31:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:31:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:31:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:31:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:31:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:31:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:00 AI_Player.update()	update
2017-01-04 16:32:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:01 AI_Player.update()	Search took1426ms
2017-01-04 16:32:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:01 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 16:32:01 AI_Player.update()		1110,	1010,	1100,	101,	1101,	1011,	1011
2017-01-04 16:32:01 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 16:32:01 AI_Player.update()		101,	110,	110,	1001,	1110,	1100,	1110
2017-01-04 16:32:01 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-04 16:32:01 AI_Player.update()		101,	1011,	1110,	1010,	1100,	101,	1001
2017-01-04 16:32:01 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-04 16:32:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:01 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:32:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:02 AI_Player.update()	update
2017-01-04 16:32:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:02 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 16:32:02 AI_Player.update()	Player b has won!
2017-01-04 16:32:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:32:02 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 16:32:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:32:02 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 16:32:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:32:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:02 AI_Player.update()	update
2017-01-04 16:32:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:02 AI_Player.update()	Search took261ms
2017-01-04 16:32:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:02 AI_Player.update()		110,	101,	111,	1011,	111,	11,	11
2017-01-04 16:32:02 AI_Player.update()		11,	11,	111,	1010,	111,	101,	1010
2017-01-04 16:32:02 AI_Player.update()		1110,	1011,	1110,	1010,	111,	110,	1011
2017-01-04 16:32:02 AI_Player.update()		1011,	1010,	1001,	1010,	1011,	11,	1010
2017-01-04 16:32:02 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:32:02 AI_Player.update()		110,	1101,	1010,	101,	1010,	1010,	101
2017-01-04 16:32:02 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-04 16:32:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:32:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:03 AI_Player.update()	update
2017-01-04 16:32:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:03 AI_Player.update()	update
2017-01-04 16:32:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:04 AI_Player.update()	Search took186ms
2017-01-04 16:32:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:04 AI_Player.update()		110,	11,	111,	1011,	111,	11,	11
2017-01-04 16:32:04 AI_Player.update()		11,	1011,	111,	1010,	111,	101,	1010
2017-01-04 16:32:04 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 16:32:04 AI_Player.update()		1011,	1001,	1001,	1010,	1011,	11,	1010
2017-01-04 16:32:04 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:32:04 AI_Player.update()		110,	1010,	1010,	101,	1010,	1010,	101
2017-01-04 16:32:04 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-04 16:32:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:04 AI_Player.update()	update
2017-01-04 16:32:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:04 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:05 AI_Player.update()	update
2017-01-04 16:32:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:05 AI_Player.update()	Search took362ms
2017-01-04 16:32:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:05 AI_Player.update()		110,	1011,	111,	1011,	111,	11,	11
2017-01-04 16:32:05 AI_Player.update()		11,	1010,	111,	1010,	111,	101,	1010
2017-01-04 16:32:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 16:32:05 AI_Player.update()		1011,	1101,	1001,	1010,	1011,	11,	1010
2017-01-04 16:32:05 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:32:05 AI_Player.update()		110,	101,	1010,	101,	1010,	1010,	101
2017-01-04 16:32:05 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1100,	1001
2017-01-04 16:32:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:05 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:05 AI_Player.update()	update
2017-01-04 16:32:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:05 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:06 AI_Player.update()	update
2017-01-04 16:32:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:06 AI_Player.update()	Search took205ms
2017-01-04 16:32:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:06 AI_Player.update()		110,	1011,	111,	1011,	111,	11,	11
2017-01-04 16:32:06 AI_Player.update()		1010,	11,	1010,	111,	1010,	111,	101
2017-01-04 16:32:06 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 16:32:06 AI_Player.update()		1011,	1101,	1001,	1010,	1011,	11,	1010
2017-01-04 16:32:06 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:32:06 AI_Player.update()		110,	101,	1010,	101,	1010,	1010,	101
2017-01-04 16:32:06 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1100,	1001
2017-01-04 16:32:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:06 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:07 AI_Player.update()	update
2017-01-04 16:32:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:32:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:07 AI_Player.update()	update
2017-01-04 16:32:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:07 AI_Player.update()	Search took145ms
2017-01-04 16:32:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:07 AI_Player.update()		110,	1011,	111,	1011,	111,	1100,	11
2017-01-04 16:32:07 AI_Player.update()		1010,	11,	1010,	111,	1010,	11,	101
2017-01-04 16:32:07 AI_Player.update()		1110,	1001,	1110,	1010,	111,	111,	1011
2017-01-04 16:32:07 AI_Player.update()		1011,	1101,	1001,	1010,	1011,	110,	1010
2017-01-04 16:32:07 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-04 16:32:07 AI_Player.update()		110,	101,	1010,	101,	1010,	1010,	101
2017-01-04 16:32:07 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1010,	1001
2017-01-04 16:32:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:07 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:32:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:08 AI_Player.update()	update
2017-01-04 16:32:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:32:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:08 AI_Player.update()	update
2017-01-04 16:32:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:08 AI_Player.update()	Search took149ms
2017-01-04 16:32:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:08 AI_Player.update()		110,	1011,	111,	111,	111,	1100,	11
2017-01-04 16:32:08 AI_Player.update()		1010,	11,	1010,	1010,	1010,	11,	101
2017-01-04 16:32:08 AI_Player.update()		1110,	1001,	1110,	1010,	111,	111,	1011
2017-01-04 16:32:08 AI_Player.update()		1011,	1101,	1001,	1100,	1011,	110,	1010
2017-01-04 16:32:08 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-04 16:32:08 AI_Player.update()		110,	101,	1010,	1011,	1010,	1010,	101
2017-01-04 16:32:08 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1010,	1001
2017-01-04 16:32:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:08 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:32:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:09 AI_Player.update()	update
2017-01-04 16:32:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:09 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:32:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:10 AI_Player.update()	update
2017-01-04 16:32:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:10 AI_Player.update()	Search took740ms
2017-01-04 16:32:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:10 AI_Player.update()		110,	1011,	111,	111,	111,	11,	11
2017-01-04 16:32:10 AI_Player.update()		1010,	11,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:10 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 16:32:10 AI_Player.update()		1011,	1101,	1001,	1100,	1011,	11,	1010
2017-01-04 16:32:10 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:10 AI_Player.update()		110,	101,	1010,	1011,	1010,	1010,	101
2017-01-04 16:32:10 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1100,	1001
2017-01-04 16:32:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:10 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:32:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:11 AI_Player.update()	update
2017-01-04 16:32:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:11 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:32:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:11 AI_Player.update()	update
2017-01-04 16:32:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:12 AI_Player.update()	Search took327ms
2017-01-04 16:32:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:12 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-04 16:32:12 AI_Player.update()		1010,	1001,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:12 AI_Player.update()		1110,	1101,	1110,	1010,	111,	110,	1011
2017-01-04 16:32:12 AI_Player.update()		1011,	1010,	1001,	1100,	1011,	11,	1010
2017-01-04 16:32:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:12 AI_Player.update()		110,	11,	1010,	1011,	1010,	1010,	101
2017-01-04 16:32:12 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1100,	1001
2017-01-04 16:32:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:32:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:12 AI_Player.update()	update
2017-01-04 16:32:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:32:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:13 AI_Player.update()	update
2017-01-04 16:32:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:14 AI_Player.update()	Search took967ms
2017-01-04 16:32:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:14 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-04 16:32:14 AI_Player.update()		1010,	1001,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:14 AI_Player.update()		1110,	1101,	1110,	1100,	111,	110,	1011
2017-01-04 16:32:14 AI_Player.update()		1011,	1010,	1001,	101,	1011,	11,	1010
2017-01-04 16:32:14 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-04 16:32:14 AI_Player.update()		110,	11,	1010,	1011,	1010,	1010,	101
2017-01-04 16:32:14 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1100,	1001
2017-01-04 16:32:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 16:32:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:14 AI_Player.update()	update
2017-01-04 16:32:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 16:32:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:15 AI_Player.update()	update
2017-01-04 16:32:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:15 AI_Player.update()	Search took209ms
2017-01-04 16:32:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:15 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-04 16:32:15 AI_Player.update()		1010,	1001,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:15 AI_Player.update()		1110,	1101,	1110,	1010,	111,	110,	1011
2017-01-04 16:32:15 AI_Player.update()		1011,	1010,	1001,	1100,	1011,	11,	1010
2017-01-04 16:32:15 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:15 AI_Player.update()		110,	11,	1010,	1011,	1010,	1010,	101
2017-01-04 16:32:15 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1100,	1001
2017-01-04 16:32:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 16:32:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:15 AI_Player.update()	update
2017-01-04 16:32:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 16:32:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:16 AI_Player.update()	update
2017-01-04 16:32:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:16 AI_Player.update()	Search took136ms
2017-01-04 16:32:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:16 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-04 16:32:16 AI_Player.update()		1010,	1001,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:16 AI_Player.update()		1110,	1101,	1110,	1100,	111,	110,	1011
2017-01-04 16:32:16 AI_Player.update()		1011,	1010,	1001,	101,	1011,	11,	1010
2017-01-04 16:32:16 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-04 16:32:16 AI_Player.update()		110,	11,	1010,	1011,	1010,	1010,	101
2017-01-04 16:32:16 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1100,	1001
2017-01-04 16:32:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 16:32:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:16 AI_Player.update()	update
2017-01-04 16:32:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:32:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:17 AI_Player.update()	update
2017-01-04 16:32:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:17 AI_Player.update()	Search took367ms
2017-01-04 16:32:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:17 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-04 16:32:17 AI_Player.update()		1010,	1001,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:17 AI_Player.update()		1110,	1101,	1110,	1100,	111,	110,	1011
2017-01-04 16:32:17 AI_Player.update()		1010,	1011,	1010,	1001,	101,	1011,	11
2017-01-04 16:32:17 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-04 16:32:17 AI_Player.update()		110,	11,	1010,	1011,	1010,	1010,	101
2017-01-04 16:32:17 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1100,	1001
2017-01-04 16:32:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 16:32:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:18 AI_Player.update()	update
2017-01-04 16:32:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:32:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:18 AI_Player.update()	update
2017-01-04 16:32:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:18 AI_Player.update()	Search took168ms
2017-01-04 16:32:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:18 AI_Player.update()		110,	1001,	111,	1010,	111,	11,	11
2017-01-04 16:32:18 AI_Player.update()		1010,	1101,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:18 AI_Player.update()		1110,	1011,	1110,	1100,	111,	110,	1011
2017-01-04 16:32:18 AI_Player.update()		1010,	101,	1010,	1001,	101,	1011,	11
2017-01-04 16:32:18 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1010,	1011
2017-01-04 16:32:18 AI_Player.update()		110,	1011,	1010,	1011,	1010,	1010,	101
2017-01-04 16:32:18 AI_Player.update()		1100,	11,	1101,	111,	1101,	1100,	1001
2017-01-04 16:32:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:32:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:19 AI_Player.update()	update
2017-01-04 16:32:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:19 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:32:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:19 AI_Player.update()	update
2017-01-04 16:32:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:20 AI_Player.update()	Search took230ms
2017-01-04 16:32:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:20 AI_Player.update()		110,	1101,	111,	1010,	111,	11,	11
2017-01-04 16:32:20 AI_Player.update()		1010,	1011,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:20 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 16:32:20 AI_Player.update()		1010,	11,	1010,	1001,	101,	1011,	11
2017-01-04 16:32:20 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-04 16:32:20 AI_Player.update()		110,	11,	1010,	1011,	1010,	1010,	101
2017-01-04 16:32:20 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1100,	1001
2017-01-04 16:32:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:20 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:32:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:20 AI_Player.update()	update
2017-01-04 16:32:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:20 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:32:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:21 AI_Player.update()	update
2017-01-04 16:32:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:21 AI_Player.update()	Search took320ms
2017-01-04 16:32:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:21 AI_Player.update()		110,	1101,	111,	1010,	111,	11,	11
2017-01-04 16:32:21 AI_Player.update()		1010,	1011,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:21 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 16:32:21 AI_Player.update()		11,	1010,	11,	1010,	1001,	101,	1011
2017-01-04 16:32:21 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-04 16:32:21 AI_Player.update()		110,	11,	1010,	1011,	1010,	1010,	101
2017-01-04 16:32:21 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1100,	1001
2017-01-04 16:32:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:21 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:32:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:22 AI_Player.update()	update
2017-01-04 16:32:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:22 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:32:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:22 AI_Player.update()	update
2017-01-04 16:32:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:22 AI_Player.update()	Search took146ms
2017-01-04 16:32:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:22 AI_Player.update()		110,	1101,	111,	1010,	111,	11,	11
2017-01-04 16:32:22 AI_Player.update()		1010,	1011,	1010,	1100,	1010,	111,	101
2017-01-04 16:32:22 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 16:32:22 AI_Player.update()		11,	1010,	11,	1011,	1001,	101,	1011
2017-01-04 16:32:22 AI_Player.update()		1110,	1011,	1101,	1011,	1011,	1010,	1011
2017-01-04 16:32:22 AI_Player.update()		110,	11,	1010,	111,	1010,	1010,	101
2017-01-04 16:32:22 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-04 16:32:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:22 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:32:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:23 AI_Player.update()	update
2017-01-04 16:32:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:23 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:32:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:23 AI_Player.update()	update
2017-01-04 16:32:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:23 AI_Player.update()	Search took129ms
2017-01-04 16:32:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:23 AI_Player.update()		110,	1101,	111,	1100,	111,	11,	11
2017-01-04 16:32:23 AI_Player.update()		1010,	1011,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-04 16:32:23 AI_Player.update()		11,	1010,	11,	1011,	1001,	101,	1011
2017-01-04 16:32:23 AI_Player.update()		1110,	1011,	1101,	111,	1011,	1010,	1011
2017-01-04 16:32:23 AI_Player.update()		110,	11,	1010,	1010,	1010,	1010,	101
2017-01-04 16:32:23 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-04 16:32:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:23 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:32:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:24 AI_Player.update()	update
2017-01-04 16:32:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:32:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:24 AI_Player.update()	update
2017-01-04 16:32:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:24 AI_Player.update()	Search took142ms
2017-01-04 16:32:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:24 AI_Player.update()		110,	1101,	111,	1100,	111,	11,	11
2017-01-04 16:32:24 AI_Player.update()		1010,	1011,	1010,	1010,	1010,	111,	101
2017-01-04 16:32:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-04 16:32:24 AI_Player.update()		1010,	11,	1011,	1001,	101,	1011,	11
2017-01-04 16:32:24 AI_Player.update()		1110,	1011,	1101,	111,	1011,	1010,	1011
2017-01-04 16:32:24 AI_Player.update()		110,	11,	1010,	1010,	1010,	1010,	101
2017-01-04 16:32:24 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-04 16:32:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:24 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:32:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:25 AI_Player.update()	update
2017-01-04 16:32:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:32:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:25 AI_Player.update()	update
2017-01-04 16:32:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:26 AI_Player.update()	Search took635ms
2017-01-04 16:32:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:26 AI_Player.update()		110,	1101,	111,	1100,	111,	11,	11
2017-01-04 16:32:26 AI_Player.update()		101,	1010,	1011,	1010,	1010,	1010,	111
2017-01-04 16:32:26 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-04 16:32:26 AI_Player.update()		1010,	11,	1011,	1001,	101,	1011,	11
2017-01-04 16:32:26 AI_Player.update()		1110,	1011,	1101,	111,	1011,	1010,	1011
2017-01-04 16:32:26 AI_Player.update()		110,	11,	1010,	1010,	1010,	1010,	101
2017-01-04 16:32:26 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-04 16:32:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:26 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:32:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:27 AI_Player.update()	update
2017-01-04 16:32:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:27 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 16:32:27 AI_Player.update()	Player a has won!
2017-01-04 16:32:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:32:27 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 16:32:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:32:27 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 16:32:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:32:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:27 AI_Player.update()	update
2017-01-04 16:32:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:27 AI_Player.update()	Search took82ms
2017-01-04 16:32:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:27 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 16:32:27 AI_Player.update()		110,	101,	11,	111,	1101,	1010,	101
2017-01-04 16:32:27 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 16:32:27 AI_Player.update()		1010,	1011,	1110,	111,	1100,	101,	110
2017-01-04 16:32:27 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:27 AI_Player.update()		101,	101,	1100,	101,	1001,	1011,	101
2017-01-04 16:32:27 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 16:32:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:32:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:28 AI_Player.update()	update
2017-01-04 16:32:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:28 AI_Player.update()	update
2017-01-04 16:32:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:28 AI_Player.update()	Search took24ms
2017-01-04 16:32:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:28 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 16:32:28 AI_Player.update()		101,	110,	101,	11,	111,	1101,	1010
2017-01-04 16:32:28 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 16:32:28 AI_Player.update()		1010,	1011,	1110,	111,	1100,	101,	110
2017-01-04 16:32:28 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:28 AI_Player.update()		101,	101,	1100,	101,	1001,	1011,	101
2017-01-04 16:32:28 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 16:32:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:29 AI_Player.update()	update
2017-01-04 16:32:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:29 AI_Player.update()	update
2017-01-04 16:32:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:29 AI_Player.update()	Search took87ms
2017-01-04 16:32:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:29 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 16:32:29 AI_Player.update()		101,	110,	101,	11,	111,	1101,	1010
2017-01-04 16:32:29 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 16:32:29 AI_Player.update()		110,	1010,	1011,	1110,	111,	1100,	101
2017-01-04 16:32:29 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:29 AI_Player.update()		101,	101,	1100,	101,	1001,	1011,	101
2017-01-04 16:32:29 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 16:32:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:30 AI_Player.update()	update
2017-01-04 16:32:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:30 AI_Player.update()	update
2017-01-04 16:32:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:30 AI_Player.update()	Search took74ms
2017-01-04 16:32:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:30 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 16:32:30 AI_Player.update()		1010,	101,	110,	101,	11,	111,	1101
2017-01-04 16:32:30 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 16:32:30 AI_Player.update()		110,	1010,	1011,	1110,	111,	1100,	101
2017-01-04 16:32:30 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:30 AI_Player.update()		101,	101,	1100,	101,	1001,	1011,	101
2017-01-04 16:32:30 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 16:32:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:31 AI_Player.update()	update
2017-01-04 16:32:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:31 AI_Player.update()	update
2017-01-04 16:32:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:32 AI_Player.update()	Search took163ms
2017-01-04 16:32:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:32 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 16:32:32 AI_Player.update()		1010,	101,	110,	101,	11,	111,	1101
2017-01-04 16:32:32 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-04 16:32:32 AI_Player.update()		101,	110,	1010,	1011,	1110,	111,	1100
2017-01-04 16:32:32 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:32 AI_Player.update()		101,	101,	1100,	101,	1001,	1011,	101
2017-01-04 16:32:32 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 16:32:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:32:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:32 AI_Player.update()	update
2017-01-04 16:32:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:32:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:33 AI_Player.update()	update
2017-01-04 16:32:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:33 AI_Player.update()	Search took156ms
2017-01-04 16:32:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:33 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-04 16:32:33 AI_Player.update()		1010,	11,	110,	101,	11,	111,	1101
2017-01-04 16:32:33 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-04 16:32:33 AI_Player.update()		101,	1010,	1010,	1011,	1110,	111,	1100
2017-01-04 16:32:33 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:33 AI_Player.update()		101,	1010,	1100,	101,	1001,	1011,	101
2017-01-04 16:32:33 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1100,	1001
2017-01-04 16:32:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:33 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:32:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:33 AI_Player.update()	update
2017-01-04 16:32:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:33 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:32:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:34 AI_Player.update()	update
2017-01-04 16:32:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:34 AI_Player.update()	Search took183ms
2017-01-04 16:32:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:34 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-04 16:32:34 AI_Player.update()		1010,	11,	110,	1010,	11,	111,	1101
2017-01-04 16:32:34 AI_Player.update()		1110,	110,	1110,	1011,	111,	1011,	1011
2017-01-04 16:32:34 AI_Player.update()		101,	1010,	1010,	101,	1110,	111,	1100
2017-01-04 16:32:34 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:34 AI_Player.update()		101,	1010,	1100,	1001,	1001,	1011,	101
2017-01-04 16:32:34 AI_Player.update()		1100,	111,	1101,	11,	1101,	1100,	1001
2017-01-04 16:32:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:34 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:32:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:34 AI_Player.update()	update
2017-01-04 16:32:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:34 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:32:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:35 AI_Player.update()	update
2017-01-04 16:32:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:35 AI_Player.update()	Search took116ms
2017-01-04 16:32:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:35 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-04 16:32:35 AI_Player.update()		1010,	11,	110,	1010,	11,	111,	1101
2017-01-04 16:32:35 AI_Player.update()		1110,	110,	1110,	1011,	111,	1011,	1011
2017-01-04 16:32:35 AI_Player.update()		1100,	101,	1010,	1010,	101,	1110,	111
2017-01-04 16:32:35 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 16:32:35 AI_Player.update()		101,	1010,	1100,	1001,	1001,	1011,	101
2017-01-04 16:32:35 AI_Player.update()		1100,	111,	1101,	11,	1101,	1100,	1001
2017-01-04 16:32:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:35 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:32:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:36 AI_Player.update()	update
2017-01-04 16:32:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:32:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:36 AI_Player.update()	update
2017-01-04 16:32:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:36 AI_Player.update()	Search took259ms
2017-01-04 16:32:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:36 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 16:32:36 AI_Player.update()		1010,	11,	110,	1011,	11,	111,	1101
2017-01-04 16:32:36 AI_Player.update()		1110,	110,	1110,	1010,	111,	1011,	1011
2017-01-04 16:32:36 AI_Player.update()		1100,	101,	1010,	101,	101,	1110,	111
2017-01-04 16:32:36 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-04 16:32:36 AI_Player.update()		101,	1010,	1100,	11,	1001,	1011,	101
2017-01-04 16:32:36 AI_Player.update()		1100,	111,	1101,	101,	1101,	1100,	1001
2017-01-04 16:32:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:32:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:37 AI_Player.update()	update
2017-01-04 16:32:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:32:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:37 AI_Player.update()	update
2017-01-04 16:32:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:38 AI_Player.update()	Search took283ms
2017-01-04 16:32:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:38 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-04 16:32:38 AI_Player.update()		1010,	11,	110,	1011,	11,	1011,	1101
2017-01-04 16:32:38 AI_Player.update()		1110,	110,	1110,	1010,	111,	1110,	1011
2017-01-04 16:32:38 AI_Player.update()		1100,	101,	1010,	101,	101,	1010,	111
2017-01-04 16:32:38 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1011,	1011
2017-01-04 16:32:38 AI_Player.update()		101,	1010,	1100,	11,	1001,	1100,	101
2017-01-04 16:32:38 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-04 16:32:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:38 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:32:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:38 AI_Player.update()	update
2017-01-04 16:32:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:38 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:32:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:39 AI_Player.update()	update
2017-01-04 16:32:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:39 AI_Player.update()	Search took177ms
2017-01-04 16:32:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:39 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 16:32:39 AI_Player.update()		1010,	11,	110,	1011,	11,	1110,	1101
2017-01-04 16:32:39 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-04 16:32:39 AI_Player.update()		1100,	101,	1010,	101,	101,	1011,	111
2017-01-04 16:32:39 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-04 16:32:39 AI_Player.update()		101,	1010,	1100,	11,	1001,	1001,	101
2017-01-04 16:32:39 AI_Player.update()		1100,	111,	1101,	101,	1101,	111,	1001
2017-01-04 16:32:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:39 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:32:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:39 AI_Player.update()	update
2017-01-04 16:32:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:39 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:32:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:40 AI_Player.update()	update
2017-01-04 16:32:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:40 AI_Player.update()	Search took220ms
2017-01-04 16:32:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:40 AI_Player.update()		110,	101,	111,	1011,	111,	1011,	11
2017-01-04 16:32:40 AI_Player.update()		1010,	11,	110,	1010,	11,	1110,	1101
2017-01-04 16:32:40 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 16:32:40 AI_Player.update()		1100,	101,	1010,	1001,	101,	1011,	111
2017-01-04 16:32:40 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 16:32:40 AI_Player.update()		101,	1010,	1100,	101,	1001,	1001,	101
2017-01-04 16:32:40 AI_Player.update()		1100,	111,	1101,	1010,	1101,	111,	1001
2017-01-04 16:32:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:40 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:32:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:41 AI_Player.update()	update
2017-01-04 16:32:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:41 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:32:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:41 AI_Player.update()	update
2017-01-04 16:32:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:41 AI_Player.update()	Search took198ms
2017-01-04 16:32:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:41 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 16:32:41 AI_Player.update()		1010,	11,	110,	101,	11,	1110,	1101
2017-01-04 16:32:41 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 16:32:41 AI_Player.update()		1100,	101,	1010,	11,	101,	1011,	111
2017-01-04 16:32:41 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 16:32:41 AI_Player.update()		101,	1010,	1100,	1010,	1001,	1001,	101
2017-01-04 16:32:41 AI_Player.update()		1100,	111,	1101,	1011,	1101,	111,	1001
2017-01-04 16:32:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:41 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:32:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:42 AI_Player.update()	update
2017-01-04 16:32:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:42 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:32:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:42 AI_Player.update()	update
2017-01-04 16:32:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:42 AI_Player.update()	Search took131ms
2017-01-04 16:32:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:42 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 16:32:42 AI_Player.update()		11,	110,	101,	11,	1110,	1101,	1010
2017-01-04 16:32:42 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 16:32:42 AI_Player.update()		1100,	101,	1010,	11,	101,	1011,	111
2017-01-04 16:32:42 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 16:32:42 AI_Player.update()		101,	1010,	1100,	1010,	1001,	1001,	101
2017-01-04 16:32:42 AI_Player.update()		1100,	111,	1101,	1011,	1101,	111,	1001
2017-01-04 16:32:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:42 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:32:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:43 AI_Player.update()	update
2017-01-04 16:32:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	4 3
2017-01-04 16:32:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:43 AI_Player.update()	update
2017-01-04 16:32:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:44 AI_Player.update()	Search took327ms
2017-01-04 16:32:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:44 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 16:32:44 AI_Player.update()		110,	101,	11,	1110,	1101,	1010,	11
2017-01-04 16:32:44 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 16:32:44 AI_Player.update()		1100,	101,	1010,	11,	101,	1011,	111
2017-01-04 16:32:44 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 16:32:44 AI_Player.update()		101,	1010,	1100,	1010,	1001,	1001,	101
2017-01-04 16:32:44 AI_Player.update()		1100,	111,	1101,	1011,	1101,	111,	1001
2017-01-04 16:32:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	4 3
2017-01-04 16:32:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:44 AI_Player.update()	update
2017-01-04 16:32:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:32:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:45 AI_Player.update()	update
2017-01-04 16:32:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:45 AI_Player.update()	Search took51ms
2017-01-04 16:32:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:45 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 16:32:45 AI_Player.update()		110,	101,	11,	1110,	1101,	1010,	11
2017-01-04 16:32:45 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 16:32:45 AI_Player.update()		111,	1100,	101,	1010,	11,	101,	1011
2017-01-04 16:32:45 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 16:32:45 AI_Player.update()		101,	1010,	1100,	1010,	1001,	1001,	101
2017-01-04 16:32:45 AI_Player.update()		1100,	111,	1101,	1011,	1101,	111,	1001
2017-01-04 16:32:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:45 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:32:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:45 AI_Player.update()	update
2017-01-04 16:32:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:45 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:32:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:46 AI_Player.update()	update
2017-01-04 16:32:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:46 AI_Player.update()	Search took385ms
2017-01-04 16:32:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:46 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 16:32:46 AI_Player.update()		110,	110,	11,	1110,	1101,	1010,	11
2017-01-04 16:32:46 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-04 16:32:46 AI_Player.update()		111,	101,	101,	1010,	11,	101,	1011
2017-01-04 16:32:46 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 16:32:46 AI_Player.update()		101,	111,	1100,	1010,	1001,	1001,	101
2017-01-04 16:32:46 AI_Player.update()		1100,	101,	1101,	1011,	1101,	111,	1001
2017-01-04 16:32:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:46 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:32:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:47 AI_Player.update()	update
2017-01-04 16:32:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	6 3
2017-01-04 16:32:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:47 AI_Player.update()	update
2017-01-04 16:32:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:47 AI_Player.update()	Search took178ms
2017-01-04 16:32:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:47 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 16:32:47 AI_Player.update()		110,	110,	11,	1110,	1101,	1010,	11
2017-01-04 16:32:47 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-04 16:32:47 AI_Player.update()		101,	101,	1010,	11,	101,	1011,	111
2017-01-04 16:32:47 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 16:32:47 AI_Player.update()		101,	111,	1100,	1010,	1001,	1001,	101
2017-01-04 16:32:47 AI_Player.update()		1100,	101,	1101,	1011,	1101,	111,	1001
2017-01-04 16:32:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:47 GameBoard.setupTreasurePanel()	6 3
2017-01-04 16:32:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:48 AI_Player.update()	update
2017-01-04 16:32:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:32:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:48 AI_Player.update()	update
2017-01-04 16:32:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:49 AI_Player.update()	Search took543ms
2017-01-04 16:32:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:49 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 16:32:49 AI_Player.update()		110,	11,	1110,	1101,	1010,	11,	110
2017-01-04 16:32:49 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-04 16:32:49 AI_Player.update()		101,	101,	1010,	11,	101,	1011,	111
2017-01-04 16:32:49 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 16:32:49 AI_Player.update()		101,	111,	1100,	1010,	1001,	1001,	101
2017-01-04 16:32:49 AI_Player.update()		1100,	101,	1101,	1011,	1101,	111,	1001
2017-01-04 16:32:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:32:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:49 AI_Player.update()	update
2017-01-04 16:32:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:49 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 16:32:49 AI_Player.update()	Player a has won!
2017-01-04 16:32:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:32:49 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 16:32:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:32:49 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 16:32:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:32:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:50 AI_Player.update()	update
2017-01-04 16:32:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:50 AI_Player.update()	Search took31ms
2017-01-04 16:32:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:50 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 16:32:50 AI_Player.update()		11,	101,	1100,	1010,	101,	1011,	110
2017-01-04 16:32:50 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 16:32:50 AI_Player.update()		1001,	1001,	1001,	111,	101,	101,	1011
2017-01-04 16:32:50 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 16:32:50 AI_Player.update()		11,	11,	11,	1101,	101,	1010,	110
2017-01-04 16:32:50 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-04 16:32:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:32:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:50 AI_Player.update()	update
2017-01-04 16:32:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:50 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:32:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:51 AI_Player.update()	update
2017-01-04 16:32:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:51 AI_Player.update()	Search took119ms
2017-01-04 16:32:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:51 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 16:32:51 AI_Player.update()		110,	11,	101,	1100,	1010,	101,	1011
2017-01-04 16:32:51 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 16:32:51 AI_Player.update()		1001,	1001,	1001,	111,	101,	101,	1011
2017-01-04 16:32:51 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 16:32:51 AI_Player.update()		11,	11,	11,	1101,	101,	1010,	110
2017-01-04 16:32:51 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-04 16:32:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:32:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:52 AI_Player.update()	update
2017-01-04 16:32:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	1 2
2017-01-04 16:32:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:52 AI_Player.update()	update
2017-01-04 16:32:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:52 AI_Player.update()	Search took82ms
2017-01-04 16:32:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:52 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 16:32:52 AI_Player.update()		11,	101,	1100,	1010,	101,	1011,	110
2017-01-04 16:32:52 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 16:32:52 AI_Player.update()		1001,	1001,	1001,	111,	101,	101,	1011
2017-01-04 16:32:52 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 16:32:52 AI_Player.update()		11,	11,	11,	1101,	101,	1010,	110
2017-01-04 16:32:52 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-04 16:32:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:52 GameBoard.setupTreasurePanel()	1 2
2017-01-04 16:32:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:53 AI_Player.update()	update
2017-01-04 16:32:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:53 GameBoard.setupTreasurePanel()	1 2
2017-01-04 16:32:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:53 AI_Player.update()	update
2017-01-04 16:32:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:53 AI_Player.update()	Search took278ms
2017-01-04 16:32:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:53 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 16:32:53 AI_Player.update()		11,	101,	1100,	1010,	101,	1011,	110
2017-01-04 16:32:53 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 16:32:53 AI_Player.update()		1001,	1001,	1001,	111,	101,	101,	1011
2017-01-04 16:32:53 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 16:32:53 AI_Player.update()		110,	11,	11,	11,	1101,	101,	1010
2017-01-04 16:32:53 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-04 16:32:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:53 GameBoard.setupTreasurePanel()	1 2
2017-01-04 16:32:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:54 AI_Player.update()	update
2017-01-04 16:32:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	1 3
2017-01-04 16:32:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:54 AI_Player.update()	update
2017-01-04 16:32:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:55 AI_Player.update()	Search took71ms
2017-01-04 16:32:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:55 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:32:55 AI_Player.update()		11,	1001,	1100,	1010,	101,	1011,	110
2017-01-04 16:32:55 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 16:32:55 AI_Player.update()		1001,	1001,	1001,	111,	101,	101,	1011
2017-01-04 16:32:55 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 16:32:55 AI_Player.update()		110,	1100,	11,	11,	1101,	101,	1010
2017-01-04 16:32:55 AI_Player.update()		1100,	11,	1101,	1001,	1101,	111,	1001
2017-01-04 16:32:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	1 3
2017-01-04 16:32:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:55 AI_Player.update()	update
2017-01-04 16:32:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	2 3
2017-01-04 16:32:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:56 AI_Player.update()	update
2017-01-04 16:32:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:56 AI_Player.update()	Search took439ms
2017-01-04 16:32:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:56 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:32:56 AI_Player.update()		11,	1001,	1100,	1001,	101,	1011,	110
2017-01-04 16:32:56 AI_Player.update()		1110,	1001,	1110,	111,	111,	1101,	1011
2017-01-04 16:32:56 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:32:56 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 16:32:56 AI_Player.update()		110,	1100,	11,	1001,	1101,	101,	1010
2017-01-04 16:32:56 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-04 16:32:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:56 GameBoard.setupTreasurePanel()	2 3
2017-01-04 16:32:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:57 AI_Player.update()	update
2017-01-04 16:32:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	2 4
2017-01-04 16:32:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:57 AI_Player.update()	update
2017-01-04 16:32:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:32:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:32:57 AI_Player.update()	Search took198ms
2017-01-04 16:32:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:57 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:32:57 AI_Player.update()		110,	11,	1001,	1100,	1001,	101,	1011
2017-01-04 16:32:57 AI_Player.update()		1110,	1001,	1110,	111,	111,	1101,	1011
2017-01-04 16:32:57 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:32:57 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 16:32:57 AI_Player.update()		110,	1100,	11,	1001,	1101,	101,	1010
2017-01-04 16:32:57 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-04 16:32:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:57 GameBoard.setupTreasurePanel()	2 4
2017-01-04 16:32:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:58 AI_Player.update()	update
2017-01-04 16:32:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:32:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:32:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:32:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:32:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:32:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	3 4
2017-01-04 16:32:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:32:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:58 AI_Player.update()	update
2017-01-04 16:32:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:32:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:32:59 AI_Player.update()	Search took516ms
2017-01-04 16:32:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:32:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:59 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:32:59 AI_Player.update()		11,	1001,	1100,	1001,	101,	1011,	110
2017-01-04 16:32:59 AI_Player.update()		1110,	1001,	1110,	111,	111,	1101,	1011
2017-01-04 16:32:59 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:32:59 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 16:32:59 AI_Player.update()		110,	1100,	11,	1001,	1101,	101,	1010
2017-01-04 16:32:59 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-04 16:32:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:32:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:32:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	3 4
2017-01-04 16:32:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:32:59 AI_Player.update()	update
2017-01-04 16:32:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:32:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:32:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:32:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:32:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:32:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:32:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:32:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	3 5
2017-01-04 16:32:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:32:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:32:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:00 AI_Player.update()	update
2017-01-04 16:33:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:00 AI_Player.update()	Search took620ms
2017-01-04 16:33:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:00 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 16:33:00 AI_Player.update()		11,	101,	1100,	1001,	101,	1011,	110
2017-01-04 16:33:00 AI_Player.update()		1110,	1001,	1110,	111,	111,	1101,	1011
2017-01-04 16:33:00 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:33:00 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 16:33:00 AI_Player.update()		110,	11,	11,	1001,	1101,	101,	1010
2017-01-04 16:33:00 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-04 16:33:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:00 GameBoard.setupTreasurePanel()	3 5
2017-01-04 16:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:01 AI_Player.update()	update
2017-01-04 16:33:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	4 5
2017-01-04 16:33:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:33:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:01 AI_Player.update()	update
2017-01-04 16:33:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:02 AI_Player.update()	Search took668ms
2017-01-04 16:33:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:02 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:33:02 AI_Player.update()		11,	1001,	1100,	1001,	101,	1011,	110
2017-01-04 16:33:02 AI_Player.update()		1110,	1001,	1110,	111,	111,	1101,	1011
2017-01-04 16:33:02 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:33:02 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 16:33:02 AI_Player.update()		110,	1100,	11,	1001,	1101,	101,	1010
2017-01-04 16:33:02 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-04 16:33:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:02 GameBoard.setupTreasurePanel()	4 5
2017-01-04 16:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:03 AI_Player.update()	update
2017-01-04 16:33:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:03 GameBoard.setupTreasurePanel()	4 5
2017-01-04 16:33:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:03 AI_Player.update()	update
2017-01-04 16:33:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:04 AI_Player.update()	Search took654ms
2017-01-04 16:33:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:04 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:33:04 AI_Player.update()		1001,	1100,	1001,	101,	1011,	110,	11
2017-01-04 16:33:04 AI_Player.update()		1110,	1001,	1110,	111,	111,	1101,	1011
2017-01-04 16:33:04 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:33:04 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-04 16:33:04 AI_Player.update()		110,	1100,	11,	1001,	1101,	101,	1010
2017-01-04 16:33:04 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-04 16:33:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:04 GameBoard.setupTreasurePanel()	4 5
2017-01-04 16:33:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:04 AI_Player.update()	update
2017-01-04 16:33:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:04 GameBoard.setupTreasurePanel()	4 5
2017-01-04 16:33:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:05 AI_Player.update()	update
2017-01-04 16:33:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:05 AI_Player.update()	Search took637ms
2017-01-04 16:33:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:05 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 16:33:05 AI_Player.update()		1001,	101,	1001,	101,	1011,	110,	11
2017-01-04 16:33:05 AI_Player.update()		1110,	1100,	1110,	111,	111,	1101,	1011
2017-01-04 16:33:05 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:33:05 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-04 16:33:05 AI_Player.update()		110,	11,	11,	1001,	1101,	101,	1010
2017-01-04 16:33:05 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-04 16:33:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:05 GameBoard.setupTreasurePanel()	4 5
2017-01-04 16:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:06 AI_Player.update()	update
2017-01-04 16:33:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:06 GameBoard.setupTreasurePanel()	4 5
2017-01-04 16:33:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:06 AI_Player.update()	update
2017-01-04 16:33:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:07 AI_Player.update()	Search took579ms
2017-01-04 16:33:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:07 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 16:33:07 AI_Player.update()		1001,	101,	1001,	111,	1011,	110,	11
2017-01-04 16:33:07 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-04 16:33:07 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:33:07 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-04 16:33:07 AI_Player.update()		110,	11,	11,	101,	1101,	101,	1010
2017-01-04 16:33:07 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	111,	1001
2017-01-04 16:33:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	4 5
2017-01-04 16:33:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:07 AI_Player.update()	update
2017-01-04 16:33:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:33:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:33:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:08 AI_Player.update()	update
2017-01-04 16:33:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:08 AI_Player.update()	Search took372ms
2017-01-04 16:33:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:08 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 16:33:08 AI_Player.update()		11,	1001,	101,	1001,	111,	1011,	110
2017-01-04 16:33:08 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-04 16:33:08 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:33:08 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-04 16:33:08 AI_Player.update()		110,	11,	11,	101,	1101,	101,	1010
2017-01-04 16:33:08 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	111,	1001
2017-01-04 16:33:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:08 GameBoard.setupTreasurePanel()	5 5
2017-01-04 16:33:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:09 AI_Player.update()	update
2017-01-04 16:33:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:09 AI_Player.update()	update
2017-01-04 16:33:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:09 AI_Player.update()	Search took154ms
2017-01-04 16:33:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:09 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 16:33:09 AI_Player.update()		11,	1100,	101,	1001,	111,	1011,	110
2017-01-04 16:33:09 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 16:33:09 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:33:09 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 16:33:09 AI_Player.update()		110,	1100,	11,	101,	1101,	101,	1010
2017-01-04 16:33:09 AI_Player.update()		1100,	11,	1101,	1010,	1101,	111,	1001
2017-01-04 16:33:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:09 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:10 AI_Player.update()	update
2017-01-04 16:33:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:10 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:10 AI_Player.update()	update
2017-01-04 16:33:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:11 AI_Player.update()	Search took62ms
2017-01-04 16:33:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:11 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 16:33:11 AI_Player.update()		1100,	101,	1001,	111,	1011,	110,	11
2017-01-04 16:33:11 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 16:33:11 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:33:11 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 16:33:11 AI_Player.update()		110,	1100,	11,	101,	1101,	101,	1010
2017-01-04 16:33:11 AI_Player.update()		1100,	11,	1101,	1010,	1101,	111,	1001
2017-01-04 16:33:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:11 AI_Player.update()	update
2017-01-04 16:33:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:12 AI_Player.update()	update
2017-01-04 16:33:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:12 AI_Player.update()	Search took224ms
2017-01-04 16:33:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:12 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-04 16:33:12 AI_Player.update()		1100,	1001,	1001,	111,	1011,	110,	11
2017-01-04 16:33:12 AI_Player.update()		1110,	101,	1110,	11,	111,	1101,	1011
2017-01-04 16:33:12 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:33:12 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-04 16:33:12 AI_Player.update()		110,	11,	11,	101,	1101,	101,	1010
2017-01-04 16:33:12 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	111,	1001
2017-01-04 16:33:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:12 AI_Player.update()	update
2017-01-04 16:33:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:13 AI_Player.update()	update
2017-01-04 16:33:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:13 AI_Player.update()	Search took34ms
2017-01-04 16:33:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:13 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 16:33:13 AI_Player.update()		1100,	101,	1001,	111,	1011,	110,	11
2017-01-04 16:33:13 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 16:33:13 AI_Player.update()		1001,	1001,	1001,	11,	101,	101,	1011
2017-01-04 16:33:13 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1010,	1011
2017-01-04 16:33:13 AI_Player.update()		110,	1100,	11,	101,	1101,	101,	1010
2017-01-04 16:33:13 AI_Player.update()		1100,	11,	1101,	1010,	1101,	111,	1001
2017-01-04 16:33:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:13 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:13 AI_Player.update()	update
2017-01-04 16:33:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:13 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:14 AI_Player.update()	update
2017-01-04 16:33:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:14 AI_Player.update()	Search took229ms
2017-01-04 16:33:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:14 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-04 16:33:14 AI_Player.update()		1100,	101,	1001,	11,	1011,	110,	11
2017-01-04 16:33:14 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 16:33:14 AI_Player.update()		1001,	1001,	1001,	1001,	101,	101,	1011
2017-01-04 16:33:14 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-04 16:33:14 AI_Player.update()		110,	1100,	11,	1010,	1101,	101,	1010
2017-01-04 16:33:14 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-04 16:33:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:14 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:15 AI_Player.update()	update
2017-01-04 16:33:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:15 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:15 AI_Player.update()	update
2017-01-04 16:33:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:15 AI_Player.update()	Search took91ms
2017-01-04 16:33:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:15 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 16:33:15 AI_Player.update()		1100,	1001,	1001,	11,	1011,	110,	11
2017-01-04 16:33:15 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 16:33:15 AI_Player.update()		1001,	11,	1001,	1001,	101,	101,	1011
2017-01-04 16:33:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-04 16:33:15 AI_Player.update()		110,	11,	11,	1010,	1101,	101,	1010
2017-01-04 16:33:15 AI_Player.update()		1100,	1001,	1101,	101,	1101,	111,	1001
2017-01-04 16:33:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:15 GameBoard.setupTreasurePanel()	5 6
2017-01-04 16:33:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:16 AI_Player.update()	update
2017-01-04 16:33:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:16 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 16:33:16 AI_Player.update()	Player b has won!
2017-01-04 16:33:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:33:16 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 16:33:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:33:16 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 16:33:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:33:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:16 AI_Player.update()	update
2017-01-04 16:33:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:17 AI_Player.update()	Search took461ms
2017-01-04 16:33:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:17 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 16:33:17 AI_Player.update()		101,	11,	1100,	11,	1100,	1001,	11
2017-01-04 16:33:17 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-04 16:33:17 AI_Player.update()		1101,	111,	1010,	1100,	1010,	11,	110
2017-01-04 16:33:17 AI_Player.update()		1110,	1100,	1101,	11,	1011,	111,	1011
2017-01-04 16:33:17 AI_Player.update()		101,	101,	1010,	101,	111,	111,	101
2017-01-04 16:33:17 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 16:33:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:33:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:17 AI_Player.update()	update
2017-01-04 16:33:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:18 AI_Player.update()	update
2017-01-04 16:33:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:18 AI_Player.update()	Search took283ms
2017-01-04 16:33:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:18 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 16:33:18 AI_Player.update()		101,	11,	1100,	11,	1100,	1001,	11
2017-01-04 16:33:18 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-04 16:33:18 AI_Player.update()		110,	1101,	111,	1010,	1100,	1010,	11
2017-01-04 16:33:18 AI_Player.update()		1110,	1100,	1101,	11,	1011,	111,	1011
2017-01-04 16:33:18 AI_Player.update()		101,	101,	1010,	101,	111,	111,	101
2017-01-04 16:33:18 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 16:33:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:18 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:18 AI_Player.update()	update
2017-01-04 16:33:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:18 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:19 AI_Player.update()	update
2017-01-04 16:33:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:19 AI_Player.update()	Search took121ms
2017-01-04 16:33:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:19 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 16:33:19 AI_Player.update()		101,	11,	1100,	11,	1100,	1001,	11
2017-01-04 16:33:19 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-04 16:33:19 AI_Player.update()		1101,	111,	1010,	1100,	1010,	11,	110
2017-01-04 16:33:19 AI_Player.update()		1110,	1100,	1101,	11,	1011,	111,	1011
2017-01-04 16:33:19 AI_Player.update()		101,	101,	1010,	101,	111,	111,	101
2017-01-04 16:33:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 16:33:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:20 AI_Player.update()	update
2017-01-04 16:33:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:20 AI_Player.update()	update
2017-01-04 16:33:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:20 AI_Player.update()	Search took378ms
2017-01-04 16:33:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:20 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-04 16:33:20 AI_Player.update()		101,	11,	1100,	11,	1100,	101,	11
2017-01-04 16:33:20 AI_Player.update()		1110,	101,	1110,	1110,	111,	1001,	1011
2017-01-04 16:33:20 AI_Player.update()		1101,	111,	1010,	1100,	1010,	1010,	110
2017-01-04 16:33:20 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-04 16:33:20 AI_Player.update()		101,	101,	1010,	101,	111,	111,	101
2017-01-04 16:33:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-04 16:33:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:21 AI_Player.update()	update
2017-01-04 16:33:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:21 AI_Player.update()	update
2017-01-04 16:33:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:22 AI_Player.update()	Search took473ms
2017-01-04 16:33:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:22 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 16:33:22 AI_Player.update()		101,	11,	1100,	11,	1100,	1001,	11
2017-01-04 16:33:22 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-04 16:33:22 AI_Player.update()		1101,	111,	1010,	1100,	1010,	11,	110
2017-01-04 16:33:22 AI_Player.update()		1110,	1100,	1101,	11,	1011,	111,	1011
2017-01-04 16:33:22 AI_Player.update()		101,	101,	1010,	101,	111,	111,	101
2017-01-04 16:33:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 16:33:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:22 AI_Player.update()	update
2017-01-04 16:33:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:23 AI_Player.update()	update
2017-01-04 16:33:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:23 AI_Player.update()	Search took82ms
2017-01-04 16:33:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:23 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 16:33:23 AI_Player.update()		101,	11,	1100,	11,	1100,	1001,	11
2017-01-04 16:33:23 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-04 16:33:23 AI_Player.update()		111,	1010,	1100,	1010,	11,	110,	1101
2017-01-04 16:33:23 AI_Player.update()		1110,	1100,	1101,	11,	1011,	111,	1011
2017-01-04 16:33:23 AI_Player.update()		101,	101,	1010,	101,	111,	111,	101
2017-01-04 16:33:23 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 16:33:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:23 AI_Player.update()	update
2017-01-04 16:33:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:24 AI_Player.update()	update
2017-01-04 16:33:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:24 AI_Player.update()	Search took305ms
2017-01-04 16:33:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:24 AI_Player.update()		110,	111,	111,	11,	111,	101,	11
2017-01-04 16:33:24 AI_Player.update()		101,	11,	1100,	1110,	1100,	1001,	11
2017-01-04 16:33:24 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 16:33:24 AI_Player.update()		111,	1010,	1100,	11,	11,	110,	1101
2017-01-04 16:33:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	111,	1011
2017-01-04 16:33:24 AI_Player.update()		101,	101,	1010,	1100,	111,	111,	101
2017-01-04 16:33:24 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-04 16:33:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:24 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:25 AI_Player.update()	update
2017-01-04 16:33:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:33:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:25 AI_Player.update()	update
2017-01-04 16:33:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:25 AI_Player.update()	Search took80ms
2017-01-04 16:33:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:25 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 16:33:25 AI_Player.update()		101,	11,	1100,	1110,	1100,	101,	11
2017-01-04 16:33:25 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 16:33:25 AI_Player.update()		111,	1010,	1100,	11,	11,	1010,	1101
2017-01-04 16:33:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-04 16:33:25 AI_Player.update()		101,	101,	1010,	1100,	111,	111,	101
2017-01-04 16:33:25 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-04 16:33:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:25 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:33:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:26 AI_Player.update()	update
2017-01-04 16:33:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:26 AI_Player.update()	update
2017-01-04 16:33:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:27 AI_Player.update()	Search took303ms
2017-01-04 16:33:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:27 AI_Player.update()		110,	111,	111,	11,	111,	111,	11
2017-01-04 16:33:27 AI_Player.update()		101,	11,	1100,	1110,	1100,	1001,	11
2017-01-04 16:33:27 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 16:33:27 AI_Player.update()		111,	1010,	1100,	11,	11,	1001,	1101
2017-01-04 16:33:27 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-04 16:33:27 AI_Player.update()		101,	101,	1010,	1100,	111,	110,	101
2017-01-04 16:33:27 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-04 16:33:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:27 AI_Player.update()	update
2017-01-04 16:33:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:27 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:28 AI_Player.update()	update
2017-01-04 16:33:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:28 AI_Player.update()	Search took17ms
2017-01-04 16:33:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:28 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 16:33:28 AI_Player.update()		101,	11,	1100,	1110,	1100,	101,	11
2017-01-04 16:33:28 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 16:33:28 AI_Player.update()		111,	1010,	1100,	11,	11,	1010,	1101
2017-01-04 16:33:28 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-04 16:33:28 AI_Player.update()		101,	101,	1010,	1100,	111,	111,	101
2017-01-04 16:33:28 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-04 16:33:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:28 AI_Player.update()	update
2017-01-04 16:33:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:28 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:29 AI_Player.update()	update
2017-01-04 16:33:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:29 AI_Player.update()	Search took308ms
2017-01-04 16:33:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:29 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 16:33:29 AI_Player.update()		101,	11,	1100,	1110,	1100,	101,	11
2017-01-04 16:33:29 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 16:33:29 AI_Player.update()		111,	1010,	1100,	11,	11,	1010,	1101
2017-01-04 16:33:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-04 16:33:29 AI_Player.update()		101,	1010,	1100,	111,	111,	101,	101
2017-01-04 16:33:29 AI_Player.update()		1100,	1010,	1101,	101,	1101,	111,	1001
2017-01-04 16:33:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:30 AI_Player.update()	update
2017-01-04 16:33:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:30 AI_Player.update()	update
2017-01-04 16:33:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:30 AI_Player.update()	Search took62ms
2017-01-04 16:33:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:30 AI_Player.update()		110,	111,	111,	11,	111,	111,	11
2017-01-04 16:33:30 AI_Player.update()		101,	11,	1100,	1110,	1100,	1001,	11
2017-01-04 16:33:30 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 16:33:30 AI_Player.update()		111,	1010,	1100,	11,	11,	1001,	1101
2017-01-04 16:33:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-04 16:33:30 AI_Player.update()		101,	1010,	1100,	111,	111,	110,	101
2017-01-04 16:33:30 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 16:33:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:31 AI_Player.update()	update
2017-01-04 16:33:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:31 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:31 AI_Player.update()	update
2017-01-04 16:33:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:31 AI_Player.update()	Search took247ms
2017-01-04 16:33:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:31 AI_Player.update()		110,	111,	111,	1110,	111,	111,	11
2017-01-04 16:33:31 AI_Player.update()		101,	11,	1100,	1010,	1100,	1001,	11
2017-01-04 16:33:31 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 16:33:31 AI_Player.update()		111,	1010,	1100,	101,	11,	1001,	1101
2017-01-04 16:33:31 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1010,	1011
2017-01-04 16:33:31 AI_Player.update()		101,	1010,	1100,	101,	111,	110,	101
2017-01-04 16:33:31 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 16:33:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:31 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:32 AI_Player.update()	update
2017-01-04 16:33:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:33:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:32 AI_Player.update()	update
2017-01-04 16:33:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:32 AI_Player.update()	Search took63ms
2017-01-04 16:33:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:32 AI_Player.update()		110,	111,	111,	1110,	111,	111,	11
2017-01-04 16:33:32 AI_Player.update()		101,	11,	1100,	1010,	1100,	1001,	11
2017-01-04 16:33:32 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 16:33:32 AI_Player.update()		111,	1010,	1100,	101,	11,	1001,	1101
2017-01-04 16:33:32 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1010,	1011
2017-01-04 16:33:32 AI_Player.update()		101,	101,	1010,	1100,	101,	111,	110
2017-01-04 16:33:32 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 16:33:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:32 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:33:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:33 AI_Player.update()	update
2017-01-04 16:33:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:33 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:33:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:33 AI_Player.update()	update
2017-01-04 16:33:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:34 AI_Player.update()	Search took368ms
2017-01-04 16:33:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:34 AI_Player.update()		110,	111,	111,	1110,	111,	111,	11
2017-01-04 16:33:34 AI_Player.update()		101,	11,	1100,	1010,	1100,	1001,	11
2017-01-04 16:33:34 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 16:33:34 AI_Player.update()		111,	1010,	1100,	101,	11,	1001,	1101
2017-01-04 16:33:34 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1010,	1011
2017-01-04 16:33:34 AI_Player.update()		101,	1010,	1100,	101,	111,	110,	101
2017-01-04 16:33:34 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 16:33:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:34 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:33:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:34 AI_Player.update()	update
2017-01-04 16:33:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:34 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:33:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:35 AI_Player.update()	update
2017-01-04 16:33:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:35 AI_Player.update()	Search took32ms
2017-01-04 16:33:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:35 AI_Player.update()		110,	111,	111,	1110,	111,	111,	11
2017-01-04 16:33:35 AI_Player.update()		101,	11,	1100,	1010,	1100,	1001,	11
2017-01-04 16:33:35 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 16:33:35 AI_Player.update()		111,	1010,	1100,	101,	11,	1001,	1101
2017-01-04 16:33:35 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1010,	1011
2017-01-04 16:33:35 AI_Player.update()		101,	101,	1010,	1100,	101,	111,	110
2017-01-04 16:33:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 16:33:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:35 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:33:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:35 AI_Player.update()	update
2017-01-04 16:33:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:35 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:33:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:36 AI_Player.update()	update
2017-01-04 16:33:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:36 AI_Player.update()	Search took366ms
2017-01-04 16:33:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:36 AI_Player.update()		110,	111,	111,	1010,	111,	111,	11
2017-01-04 16:33:36 AI_Player.update()		101,	11,	1100,	11,	1100,	1001,	11
2017-01-04 16:33:36 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 16:33:36 AI_Player.update()		111,	1010,	1100,	111,	11,	1001,	1101
2017-01-04 16:33:36 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:33:36 AI_Player.update()		101,	101,	1010,	11,	101,	111,	110
2017-01-04 16:33:36 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 16:33:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:36 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:33:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:37 AI_Player.update()	update
2017-01-04 16:33:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:33:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:37 AI_Player.update()	update
2017-01-04 16:33:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:37 AI_Player.update()	Search took43ms
2017-01-04 16:33:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:37 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-04 16:33:37 AI_Player.update()		101,	111,	1100,	11,	1100,	1001,	11
2017-01-04 16:33:37 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 16:33:37 AI_Player.update()		111,	101,	1100,	111,	11,	1001,	1101
2017-01-04 16:33:37 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:33:37 AI_Player.update()		101,	1100,	1010,	11,	101,	111,	110
2017-01-04 16:33:37 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-04 16:33:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:37 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:33:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:38 AI_Player.update()	update
2017-01-04 16:33:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:33:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:38 AI_Player.update()	update
2017-01-04 16:33:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:39 AI_Player.update()	Search took330ms
2017-01-04 16:33:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:39 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-04 16:33:39 AI_Player.update()		111,	1100,	11,	1100,	1001,	11,	101
2017-01-04 16:33:39 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 16:33:39 AI_Player.update()		111,	101,	1100,	111,	11,	1001,	1101
2017-01-04 16:33:39 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:33:39 AI_Player.update()		101,	1100,	1010,	11,	101,	111,	110
2017-01-04 16:33:39 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-04 16:33:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:39 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:33:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:39 AI_Player.update()	update
2017-01-04 16:33:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:39 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:40 AI_Player.update()	update
2017-01-04 16:33:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:40 AI_Player.update()	Search took56ms
2017-01-04 16:33:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:40 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-04 16:33:40 AI_Player.update()		111,	1100,	11,	1100,	1001,	11,	101
2017-01-04 16:33:40 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 16:33:40 AI_Player.update()		1101,	111,	101,	1100,	111,	11,	1001
2017-01-04 16:33:40 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:33:40 AI_Player.update()		101,	1100,	1010,	11,	101,	111,	110
2017-01-04 16:33:40 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-04 16:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:40 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:40 AI_Player.update()	update
2017-01-04 16:33:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:40 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:33:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:41 AI_Player.update()	update
2017-01-04 16:33:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:41 AI_Player.update()	Search took142ms
2017-01-04 16:33:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:41 AI_Player.update()		110,	1100,	111,	1010,	111,	111,	11
2017-01-04 16:33:41 AI_Player.update()		111,	11,	11,	1100,	1001,	11,	101
2017-01-04 16:33:41 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-04 16:33:41 AI_Player.update()		1101,	1010,	101,	1100,	111,	11,	1001
2017-01-04 16:33:41 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:33:41 AI_Player.update()		101,	101,	1010,	11,	101,	111,	110
2017-01-04 16:33:41 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 16:33:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:33:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:41 AI_Player.update()	update
2017-01-04 16:33:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	6 3
2017-01-04 16:33:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:33:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:42 AI_Player.update()	update
2017-01-04 16:33:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:42 AI_Player.update()	Search took49ms
2017-01-04 16:33:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:42 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-04 16:33:42 AI_Player.update()		111,	1100,	11,	1100,	1001,	11,	101
2017-01-04 16:33:42 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 16:33:42 AI_Player.update()		1101,	111,	101,	1100,	111,	11,	1001
2017-01-04 16:33:42 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:33:42 AI_Player.update()		101,	1100,	1010,	11,	101,	111,	110
2017-01-04 16:33:42 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-04 16:33:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:42 GameBoard.setupTreasurePanel()	6 3
2017-01-04 16:33:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:42 AI_Player.update()	update
2017-01-04 16:33:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:42 GameBoard.setupTreasurePanel()	6 3
2017-01-04 16:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:43 AI_Player.update()	update
2017-01-04 16:33:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:43 AI_Player.update()	Search took48ms
2017-01-04 16:33:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:43 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-04 16:33:43 AI_Player.update()		111,	1010,	11,	1100,	1001,	11,	101
2017-01-04 16:33:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-04 16:33:43 AI_Player.update()		1101,	11,	101,	1100,	111,	11,	1001
2017-01-04 16:33:43 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1010,	1011
2017-01-04 16:33:43 AI_Player.update()		101,	1010,	1010,	11,	101,	111,	110
2017-01-04 16:33:43 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-04 16:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	6 3
2017-01-04 16:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:43 AI_Player.update()	update
2017-01-04 16:33:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:43 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 16:33:43 AI_Player.update()	Player a has won!
2017-01-04 16:33:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:33:43 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 16:33:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:33:43 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 16:33:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:33:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:44 AI_Player.update()	update
2017-01-04 16:33:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:45 AI_Player.update()	Search took728ms
2017-01-04 16:33:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:45 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:33:45 AI_Player.update()		1001,	101,	101,	1101,	1101,	101,	1010
2017-01-04 16:33:45 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-04 16:33:45 AI_Player.update()		101,	1100,	11,	110,	1001,	1011,	1100
2017-01-04 16:33:45 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-04 16:33:45 AI_Player.update()		1001,	101,	1010,	1010,	11,	11,	1100
2017-01-04 16:33:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 16:33:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:33:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:45 AI_Player.update()	update
2017-01-04 16:33:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:46 AI_Player.update()	update
2017-01-04 16:33:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:46 AI_Player.update()	Search took750ms
2017-01-04 16:33:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:46 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:33:46 AI_Player.update()		1001,	101,	101,	1101,	1101,	101,	1010
2017-01-04 16:33:46 AI_Player.update()		1110,	1100,	1110,	11,	111,	111,	1011
2017-01-04 16:33:46 AI_Player.update()		101,	110,	11,	110,	1001,	1011,	1100
2017-01-04 16:33:46 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 16:33:46 AI_Player.update()		1001,	101,	1010,	1010,	11,	11,	1100
2017-01-04 16:33:46 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 16:33:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:47 AI_Player.update()	update
2017-01-04 16:33:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:47 AI_Player.update()	update
2017-01-04 16:33:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:48 AI_Player.update()	Search took755ms
2017-01-04 16:33:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:48 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:33:48 AI_Player.update()		1001,	101,	101,	1101,	1101,	101,	1010
2017-01-04 16:33:48 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-04 16:33:48 AI_Player.update()		101,	1100,	11,	110,	1001,	1011,	1100
2017-01-04 16:33:48 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-04 16:33:48 AI_Player.update()		1001,	101,	1010,	1010,	11,	11,	1100
2017-01-04 16:33:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 16:33:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:49 AI_Player.update()	update
2017-01-04 16:33:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:49 AI_Player.update()	update
2017-01-04 16:33:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:50 AI_Player.update()	Search took625ms
2017-01-04 16:33:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:50 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:33:50 AI_Player.update()		1001,	101,	101,	1101,	1101,	101,	1010
2017-01-04 16:33:50 AI_Player.update()		1110,	1100,	1110,	11,	111,	111,	1011
2017-01-04 16:33:50 AI_Player.update()		101,	110,	11,	110,	1001,	1011,	1100
2017-01-04 16:33:50 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 16:33:50 AI_Player.update()		1001,	101,	1010,	1010,	11,	11,	1100
2017-01-04 16:33:50 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 16:33:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:50 AI_Player.update()	update
2017-01-04 16:33:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:51 AI_Player.update()	update
2017-01-04 16:33:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:51 AI_Player.update()	Search took563ms
2017-01-04 16:33:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:51 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:33:51 AI_Player.update()		1001,	101,	101,	1101,	1101,	101,	1010
2017-01-04 16:33:51 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-04 16:33:51 AI_Player.update()		101,	1100,	11,	110,	1001,	1011,	1100
2017-01-04 16:33:51 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-04 16:33:51 AI_Player.update()		1001,	101,	1010,	1010,	11,	11,	1100
2017-01-04 16:33:51 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 16:33:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:52 AI_Player.update()	update
2017-01-04 16:33:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:52 AI_Player.update()	update
2017-01-04 16:33:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:53 AI_Player.update()	Search took532ms
2017-01-04 16:33:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:53 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:33:53 AI_Player.update()		1001,	101,	101,	1101,	1101,	111,	1010
2017-01-04 16:33:53 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-04 16:33:53 AI_Player.update()		101,	1100,	11,	110,	1001,	1100,	1100
2017-01-04 16:33:53 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-04 16:33:53 AI_Player.update()		1001,	101,	1010,	1010,	11,	11,	1100
2017-01-04 16:33:53 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:33:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:53 AI_Player.update()	update
2017-01-04 16:33:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:54 AI_Player.update()	update
2017-01-04 16:33:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:54 AI_Player.update()	Search took167ms
2017-01-04 16:33:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:54 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:33:54 AI_Player.update()		1001,	101,	101,	1101,	1101,	111,	1010
2017-01-04 16:33:54 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-04 16:33:54 AI_Player.update()		101,	101,	11,	110,	1001,	1100,	1100
2017-01-04 16:33:54 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-04 16:33:54 AI_Player.update()		1001,	110,	1010,	1010,	11,	11,	1100
2017-01-04 16:33:54 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:33:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:54 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:55 AI_Player.update()	update
2017-01-04 16:33:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:55 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:55 AI_Player.update()	update
2017-01-04 16:33:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:56 AI_Player.update()	Search took603ms
2017-01-04 16:33:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:56 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:33:56 AI_Player.update()		1001,	101,	101,	1101,	1101,	111,	1010
2017-01-04 16:33:56 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-04 16:33:56 AI_Player.update()		101,	1100,	11,	110,	1001,	1100,	1100
2017-01-04 16:33:56 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-04 16:33:56 AI_Player.update()		1001,	101,	1010,	1010,	11,	11,	1100
2017-01-04 16:33:56 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:33:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:56 AI_Player.update()	update
2017-01-04 16:33:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:57 AI_Player.update()	update
2017-01-04 16:33:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:33:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:33:57 AI_Player.update()	Search took159ms
2017-01-04 16:33:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:57 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:33:57 AI_Player.update()		1001,	101,	101,	1101,	1101,	111,	1010
2017-01-04 16:33:57 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-04 16:33:57 AI_Player.update()		101,	1100,	11,	110,	1001,	1100,	1100
2017-01-04 16:33:57 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-04 16:33:57 AI_Player.update()		1100,	1001,	101,	1010,	1010,	11,	11
2017-01-04 16:33:57 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:33:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:33:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:57 AI_Player.update()	update
2017-01-04 16:33:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:33:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:33:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:33:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:33:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:33:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:33:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:58 AI_Player.update()	update
2017-01-04 16:33:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:33:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:33:58 AI_Player.update()	Search took603ms
2017-01-04 16:33:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:58 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:33:58 AI_Player.update()		1001,	101,	101,	1101,	1101,	111,	1010
2017-01-04 16:33:58 AI_Player.update()		1110,	1100,	1110,	11,	111,	1011,	1011
2017-01-04 16:33:58 AI_Player.update()		101,	110,	11,	110,	1001,	1100,	1100
2017-01-04 16:33:58 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-04 16:33:58 AI_Player.update()		1100,	101,	101,	1010,	1010,	11,	11
2017-01-04 16:33:58 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:33:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 16:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:59 AI_Player.update()	update
2017-01-04 16:33:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:33:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:33:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:33:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:33:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:33:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:33:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:33:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:33:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:33:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:33:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:33:59 AI_Player.update()	update
2017-01-04 16:33:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:00 AI_Player.update()	Search took190ms
2017-01-04 16:34:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:34:00 AI_Player.update()		1001,	101,	101,	101,	1101,	111,	1010
2017-01-04 16:34:00 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1011,	1011
2017-01-04 16:34:00 AI_Player.update()		101,	110,	11,	11,	1001,	1100,	1100
2017-01-04 16:34:00 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-04 16:34:00 AI_Player.update()		1100,	101,	101,	11,	1010,	11,	11
2017-01-04 16:34:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:34:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:00 AI_Player.update()	update
2017-01-04 16:34:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:34:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:34:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:34:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:01 AI_Player.update()	update
2017-01-04 16:34:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:01 AI_Player.update()	Search took49ms
2017-01-04 16:34:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:01 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:34:01 AI_Player.update()		1001,	101,	101,	1101,	1101,	111,	1010
2017-01-04 16:34:01 AI_Player.update()		1110,	1100,	1110,	11,	111,	1011,	1011
2017-01-04 16:34:01 AI_Player.update()		101,	110,	11,	110,	1001,	1100,	1100
2017-01-04 16:34:01 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-04 16:34:01 AI_Player.update()		1100,	101,	101,	1010,	1010,	11,	11
2017-01-04 16:34:01 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:01 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:01 AI_Player.update()	update
2017-01-04 16:34:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:01 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:02 AI_Player.update()	update
2017-01-04 16:34:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:02 AI_Player.update()	Search took210ms
2017-01-04 16:34:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:02 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:34:02 AI_Player.update()		1001,	101,	101,	101,	1101,	111,	1010
2017-01-04 16:34:02 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1011,	1011
2017-01-04 16:34:02 AI_Player.update()		101,	110,	11,	11,	1001,	1100,	1100
2017-01-04 16:34:02 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-04 16:34:02 AI_Player.update()		1100,	101,	101,	11,	1010,	11,	11
2017-01-04 16:34:02 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:02 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:02 AI_Player.update()	update
2017-01-04 16:34:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:02 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:03 AI_Player.update()	update
2017-01-04 16:34:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:03 AI_Player.update()	Search took57ms
2017-01-04 16:34:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:03 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:34:03 AI_Player.update()		1001,	101,	101,	1101,	1101,	111,	1010
2017-01-04 16:34:03 AI_Player.update()		1110,	1100,	1110,	11,	111,	1011,	1011
2017-01-04 16:34:03 AI_Player.update()		101,	110,	11,	110,	1001,	1100,	1100
2017-01-04 16:34:03 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-04 16:34:03 AI_Player.update()		1100,	101,	101,	1010,	1010,	11,	11
2017-01-04 16:34:03 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:03 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:04 AI_Player.update()	update
2017-01-04 16:34:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:04 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:04 AI_Player.update()	update
2017-01-04 16:34:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:04 AI_Player.update()	Search took184ms
2017-01-04 16:34:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:04 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:34:04 AI_Player.update()		1001,	101,	101,	101,	1101,	111,	1010
2017-01-04 16:34:04 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1011,	1011
2017-01-04 16:34:04 AI_Player.update()		101,	110,	11,	11,	1001,	1100,	1100
2017-01-04 16:34:04 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-04 16:34:04 AI_Player.update()		1100,	101,	101,	11,	1010,	11,	11
2017-01-04 16:34:04 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:04 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:05 AI_Player.update()	update
2017-01-04 16:34:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:05 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:05 AI_Player.update()	update
2017-01-04 16:34:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:05 AI_Player.update()	Search took57ms
2017-01-04 16:34:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:05 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:34:05 AI_Player.update()		1001,	101,	101,	1101,	1101,	111,	1010
2017-01-04 16:34:05 AI_Player.update()		1110,	1100,	1110,	11,	111,	1011,	1011
2017-01-04 16:34:05 AI_Player.update()		101,	110,	11,	110,	1001,	1100,	1100
2017-01-04 16:34:05 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-04 16:34:05 AI_Player.update()		1100,	101,	101,	1010,	1010,	11,	11
2017-01-04 16:34:05 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:05 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:06 AI_Player.update()	update
2017-01-04 16:34:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:06 AI_Player.update()	update
2017-01-04 16:34:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:06 AI_Player.update()	Search took180ms
2017-01-04 16:34:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:06 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:34:06 AI_Player.update()		1001,	101,	101,	101,	1101,	111,	1010
2017-01-04 16:34:06 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1011,	1011
2017-01-04 16:34:06 AI_Player.update()		101,	110,	11,	11,	1001,	1100,	1100
2017-01-04 16:34:06 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-04 16:34:06 AI_Player.update()		1100,	101,	101,	11,	1010,	11,	11
2017-01-04 16:34:06 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:06 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:07 AI_Player.update()	update
2017-01-04 16:34:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:07 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:07 AI_Player.update()	update
2017-01-04 16:34:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:08 AI_Player.update()	Search took59ms
2017-01-04 16:34:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:08 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:34:08 AI_Player.update()		1001,	101,	101,	101,	1101,	111,	1010
2017-01-04 16:34:08 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1011,	1011
2017-01-04 16:34:08 AI_Player.update()		101,	110,	11,	11,	1001,	1100,	1100
2017-01-04 16:34:08 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-04 16:34:08 AI_Player.update()		11,	1100,	101,	101,	11,	1010,	11
2017-01-04 16:34:08 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:08 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:08 AI_Player.update()	update
2017-01-04 16:34:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:08 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:09 AI_Player.update()	update
2017-01-04 16:34:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:09 AI_Player.update()	Search took45ms
2017-01-04 16:34:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:09 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:34:09 AI_Player.update()		1001,	101,	101,	101,	1101,	111,	1010
2017-01-04 16:34:09 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1011,	1011
2017-01-04 16:34:09 AI_Player.update()		101,	110,	11,	11,	1001,	1100,	1100
2017-01-04 16:34:09 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-04 16:34:09 AI_Player.update()		1100,	101,	101,	11,	1010,	11,	11
2017-01-04 16:34:09 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:09 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:09 AI_Player.update()	update
2017-01-04 16:34:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:09 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:10 AI_Player.update()	update
2017-01-04 16:34:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:10 AI_Player.update()	Search took68ms
2017-01-04 16:34:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:10 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:34:10 AI_Player.update()		1001,	1100,	101,	101,	1101,	111,	1010
2017-01-04 16:34:10 AI_Player.update()		1110,	110,	1110,	1101,	111,	1011,	1011
2017-01-04 16:34:10 AI_Player.update()		101,	1001,	11,	11,	1001,	1100,	1100
2017-01-04 16:34:10 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 16:34:10 AI_Player.update()		1100,	101,	101,	11,	1010,	11,	11
2017-01-04 16:34:10 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:10 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:10 AI_Player.update()	update
2017-01-04 16:34:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:10 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:11 AI_Player.update()	update
2017-01-04 16:34:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:11 AI_Player.update()	Search took213ms
2017-01-04 16:34:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:11 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 16:34:11 AI_Player.update()		1001,	1100,	101,	101,	1101,	111,	1010
2017-01-04 16:34:11 AI_Player.update()		1110,	110,	1110,	1101,	111,	1011,	1011
2017-01-04 16:34:11 AI_Player.update()		101,	1001,	11,	11,	1001,	1100,	1100
2017-01-04 16:34:11 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 16:34:11 AI_Player.update()		101,	101,	11,	1010,	11,	11,	1100
2017-01-04 16:34:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	4 2
2017-01-04 16:34:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:11 AI_Player.update()	update
2017-01-04 16:34:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:34:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:34:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:34:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:34:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:12 AI_Player.update()	update
2017-01-04 16:34:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:12 AI_Player.update()	Search took112ms
2017-01-04 16:34:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:12 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:34:12 AI_Player.update()		1001,	1100,	101,	1101,	1101,	111,	1010
2017-01-04 16:34:12 AI_Player.update()		1110,	110,	1110,	11,	111,	1011,	1011
2017-01-04 16:34:12 AI_Player.update()		101,	1001,	11,	110,	1001,	1100,	1100
2017-01-04 16:34:12 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 16:34:12 AI_Player.update()		101,	101,	11,	1010,	11,	11,	1100
2017-01-04 16:34:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 16:34:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:12 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:34:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:12 AI_Player.update()	update
2017-01-04 16:34:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:12 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:34:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:13 AI_Player.update()	update
2017-01-04 16:34:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:13 AI_Player.update()	Search took124ms
2017-01-04 16:34:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:13 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:34:13 AI_Player.update()		1001,	1100,	101,	1101,	1101,	101,	1010
2017-01-04 16:34:13 AI_Player.update()		1110,	110,	1110,	11,	111,	111,	1011
2017-01-04 16:34:13 AI_Player.update()		101,	1001,	11,	110,	1001,	1011,	1100
2017-01-04 16:34:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:34:13 AI_Player.update()		101,	101,	11,	1010,	11,	11,	1100
2017-01-04 16:34:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 16:34:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:13 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:34:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:14 AI_Player.update()	update
2017-01-04 16:34:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:14 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:34:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:14 AI_Player.update()	update
2017-01-04 16:34:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:14 AI_Player.update()	Search took105ms
2017-01-04 16:34:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:14 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-04 16:34:14 AI_Player.update()		1001,	1100,	101,	11,	1101,	101,	1010
2017-01-04 16:34:14 AI_Player.update()		1110,	110,	1110,	110,	111,	111,	1011
2017-01-04 16:34:14 AI_Player.update()		101,	1001,	11,	1010,	1001,	1011,	1100
2017-01-04 16:34:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:34:14 AI_Player.update()		101,	101,	11,	1010,	11,	11,	1100
2017-01-04 16:34:14 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-04 16:34:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:14 GameBoard.setupTreasurePanel()	5 2
2017-01-04 16:34:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:15 AI_Player.update()	update
2017-01-04 16:34:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:34:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:34:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:34:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:15 AI_Player.update()	update
2017-01-04 16:34:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:15 AI_Player.update()	Search took223ms
2017-01-04 16:34:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:15 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-04 16:34:15 AI_Player.update()		1001,	110,	101,	11,	1101,	101,	1010
2017-01-04 16:34:15 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 16:34:15 AI_Player.update()		101,	101,	11,	1010,	1001,	1011,	1100
2017-01-04 16:34:15 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:34:15 AI_Player.update()		101,	101,	11,	1010,	11,	11,	1100
2017-01-04 16:34:15 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-04 16:34:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:15 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:34:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:16 AI_Player.update()	update
2017-01-04 16:34:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:16 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:34:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:16 AI_Player.update()	update
2017-01-04 16:34:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:17 AI_Player.update()	Search took239ms
2017-01-04 16:34:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:17 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-04 16:34:17 AI_Player.update()		1001,	1001,	101,	11,	1101,	101,	1010
2017-01-04 16:34:17 AI_Player.update()		1110,	101,	1110,	110,	111,	111,	1011
2017-01-04 16:34:17 AI_Player.update()		101,	101,	11,	1010,	1001,	1011,	1100
2017-01-04 16:34:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:34:17 AI_Player.update()		101,	101,	11,	1010,	11,	11,	1100
2017-01-04 16:34:17 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-04 16:34:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:17 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:34:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:17 AI_Player.update()	update
2017-01-04 16:34:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:17 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:34:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:18 AI_Player.update()	update
2017-01-04 16:34:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:18 AI_Player.update()	Search took192ms
2017-01-04 16:34:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:18 AI_Player.update()		110,	1001,	111,	1101,	111,	101,	11
2017-01-04 16:34:18 AI_Player.update()		1001,	101,	101,	11,	1101,	101,	1010
2017-01-04 16:34:18 AI_Player.update()		1110,	101,	1110,	110,	111,	111,	1011
2017-01-04 16:34:18 AI_Player.update()		101,	101,	11,	1010,	1001,	1011,	1100
2017-01-04 16:34:18 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:34:18 AI_Player.update()		101,	1100,	11,	1010,	11,	11,	1100
2017-01-04 16:34:18 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-04 16:34:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:18 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:34:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:18 AI_Player.update()	update
2017-01-04 16:34:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:18 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:34:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:19 AI_Player.update()	update
2017-01-04 16:34:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:19 AI_Player.update()	Search took161ms
2017-01-04 16:34:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:19 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-04 16:34:19 AI_Player.update()		1001,	1001,	101,	11,	1101,	101,	1010
2017-01-04 16:34:19 AI_Player.update()		1110,	101,	1110,	110,	111,	111,	1011
2017-01-04 16:34:19 AI_Player.update()		101,	101,	11,	1010,	1001,	1011,	1100
2017-01-04 16:34:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:34:19 AI_Player.update()		101,	101,	11,	1010,	11,	11,	1100
2017-01-04 16:34:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-04 16:34:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:19 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:34:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:20 AI_Player.update()	update
2017-01-04 16:34:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:34:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:20 AI_Player.update()	update
2017-01-04 16:34:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:20 AI_Player.update()	Search took180ms
2017-01-04 16:34:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:20 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-04 16:34:20 AI_Player.update()		1001,	1001,	101,	11,	1101,	101,	1010
2017-01-04 16:34:20 AI_Player.update()		1110,	101,	1110,	110,	111,	111,	1011
2017-01-04 16:34:20 AI_Player.update()		1100,	101,	101,	11,	1010,	1001,	1011
2017-01-04 16:34:20 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:34:20 AI_Player.update()		101,	101,	11,	1010,	11,	11,	1100
2017-01-04 16:34:20 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-04 16:34:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 16:34:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:21 AI_Player.update()	update
2017-01-04 16:34:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	6 3
2017-01-04 16:34:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:34:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:34:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:34:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:21 AI_Player.update()	update
2017-01-04 16:34:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:22 AI_Player.update()	Search took347ms
2017-01-04 16:34:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:22 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-04 16:34:22 AI_Player.update()		1001,	1001,	101,	11,	1101,	101,	1010
2017-01-04 16:34:22 AI_Player.update()		1110,	101,	1110,	110,	111,	111,	1011
2017-01-04 16:34:22 AI_Player.update()		1100,	101,	101,	11,	1010,	1001,	1011
2017-01-04 16:34:22 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:34:22 AI_Player.update()		1100,	101,	101,	11,	1010,	11,	11
2017-01-04 16:34:22 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-04 16:34:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	6 3
2017-01-04 16:34:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:22 AI_Player.update()	update
2017-01-04 16:34:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:34:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:34:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:34:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:34:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:23 AI_Player.update()	update
2017-01-04 16:34:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:24 AI_Player.update()	Search took905ms
2017-01-04 16:34:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:24 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-04 16:34:24 AI_Player.update()		1001,	110,	101,	11,	1101,	101,	1010
2017-01-04 16:34:24 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 16:34:24 AI_Player.update()		1100,	101,	101,	11,	1010,	1001,	1011
2017-01-04 16:34:24 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-04 16:34:24 AI_Player.update()		1100,	101,	101,	11,	1010,	11,	11
2017-01-04 16:34:24 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-04 16:34:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:24 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:34:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:24 AI_Player.update()	update
2017-01-04 16:34:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:24 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:34:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:25 AI_Player.update()	update
2017-01-04 16:34:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:25 AI_Player.update()	Search took687ms
2017-01-04 16:34:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:25 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 16:34:25 AI_Player.update()		1001,	110,	101,	1101,	1101,	101,	1010
2017-01-04 16:34:25 AI_Player.update()		1110,	1001,	1110,	11,	111,	111,	1011
2017-01-04 16:34:25 AI_Player.update()		1100,	101,	101,	110,	1010,	1001,	1011
2017-01-04 16:34:25 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 16:34:25 AI_Player.update()		1100,	101,	101,	1010,	1010,	11,	11
2017-01-04 16:34:25 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-04 16:34:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:25 GameBoard.setupTreasurePanel()	6 4
2017-01-04 16:34:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:26 AI_Player.update()	update
2017-01-04 16:34:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:34:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:34:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:34:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:26 AI_Player.update()	update
2017-01-04 16:34:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:26 AI_Player.update()	Search took218ms
2017-01-04 16:34:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:26 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:34:26 AI_Player.update()		1001,	1100,	101,	1101,	1101,	101,	1010
2017-01-04 16:34:26 AI_Player.update()		1110,	110,	1110,	11,	111,	111,	1011
2017-01-04 16:34:26 AI_Player.update()		1100,	1001,	101,	110,	1010,	1001,	1011
2017-01-04 16:34:26 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 16:34:26 AI_Player.update()		1100,	101,	101,	1010,	1010,	11,	11
2017-01-04 16:34:26 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-04 16:34:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:34:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:27 AI_Player.update()	update
2017-01-04 16:34:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:34:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:27 AI_Player.update()	update
2017-01-04 16:34:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:34:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:34:28 AI_Player.update()	Search took939ms
2017-01-04 16:34:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:28 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:34:28 AI_Player.update()		1010,	1001,	1100,	101,	1101,	1101,	101
2017-01-04 16:34:28 AI_Player.update()		1110,	110,	1110,	11,	111,	111,	1011
2017-01-04 16:34:28 AI_Player.update()		1100,	1001,	101,	110,	1010,	1001,	1011
2017-01-04 16:34:28 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 16:34:28 AI_Player.update()		1100,	101,	101,	1010,	1010,	11,	11
2017-01-04 16:34:28 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-04 16:34:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:28 GameBoard.setupTreasurePanel()	6 5
2017-01-04 16:34:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:29 AI_Player.update()	update
2017-01-04 16:34:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:34:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:34:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:34:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:34:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:34:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:34:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:34:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 16:34:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:29 AI_Player.update()	update
2017-01-04 16:34:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:34:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:34:30 AI_Player.update()	Search took200ms
2017-01-04 16:34:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:34:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:30 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 16:34:30 AI_Player.update()		1010,	101,	1100,	101,	1101,	1101,	101
2017-01-04 16:34:30 AI_Player.update()		1110,	1001,	1110,	11,	111,	111,	1011
2017-01-04 16:34:30 AI_Player.update()		1100,	110,	101,	110,	1010,	1001,	1011
2017-01-04 16:34:30 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 16:34:30 AI_Player.update()		1100,	101,	101,	1010,	1010,	11,	11
2017-01-04 16:34:30 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-04 16:34:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:34:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:34:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:34:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:34:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:34:30 GameBoard.setupTreasurePanel()	6 6
2017-01-04 16:34:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:34:30 AI_Player.update()	update
2017-01-04 16:34:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:34:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:34:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:34:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:34:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:34:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:34:30 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 16:34:30 AI_Player.update()	Player a has won!
2017-01-04 16:45:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:45:45 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 16:45:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 16:45:45 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 16:45:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:45:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:45:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:45:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:45:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:45:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:45 AI_Player.update()	update
2017-01-04 16:45:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:45:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:45:45 AI_Player.update()	Search took49ms
2017-01-04 16:45:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:45:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:45 AI_Player.update()		110,	1011,	111,	110,	111,	1100,	11
2017-01-04 16:45:45 AI_Player.update()		101,	110,	1011,	1010,	101,	1100,	1100
2017-01-04 16:45:45 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 16:45:45 AI_Player.update()		101,	1001,	1100,	1010,	110,	1001,	101
2017-01-04 16:45:45 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 16:45:45 AI_Player.update()		110,	101,	1100,	111,	11,	101,	1100
2017-01-04 16:45:45 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-04 16:45:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:45:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:45:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:45:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:46 AI_Player.update()	update
2017-01-04 16:45:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:45:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:45:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:45:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:45:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:45:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:45:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:46 AI_Player.update()	update
2017-01-04 16:45:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:45:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:45:46 AI_Player.update()	Search took47ms
2017-01-04 16:45:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:45:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:46 AI_Player.update()		110,	1011,	111,	110,	111,	110,	11
2017-01-04 16:45:46 AI_Player.update()		101,	110,	1011,	1010,	101,	1100,	1100
2017-01-04 16:45:46 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 16:45:46 AI_Player.update()		101,	1001,	1100,	1010,	110,	110,	101
2017-01-04 16:45:46 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-04 16:45:46 AI_Player.update()		110,	101,	1100,	111,	11,	101,	1100
2017-01-04 16:45:46 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 16:45:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:45:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:45:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:45:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:47 AI_Player.update()	update
2017-01-04 16:45:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:45:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:45:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:45:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:45:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:45:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:47 AI_Player.update()	update
2017-01-04 16:45:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:45:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:45:47 AI_Player.update()	Search took45ms
2017-01-04 16:45:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:45:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:47 AI_Player.update()		110,	1011,	111,	110,	111,	110,	11
2017-01-04 16:45:47 AI_Player.update()		101,	110,	1011,	1010,	101,	1100,	1100
2017-01-04 16:45:47 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 16:45:47 AI_Player.update()		1001,	1100,	1010,	110,	110,	101,	101
2017-01-04 16:45:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-04 16:45:47 AI_Player.update()		110,	101,	1100,	111,	11,	101,	1100
2017-01-04 16:45:47 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 16:45:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:45:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:45:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:45:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:48 AI_Player.update()	update
2017-01-04 16:45:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:45:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:45:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:45:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:45:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:45:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:45:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:48 AI_Player.update()	update
2017-01-04 16:45:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:45:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:45:48 AI_Player.update()	Search took65ms
2017-01-04 16:45:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:45:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:48 AI_Player.update()		110,	1011,	111,	110,	111,	101,	11
2017-01-04 16:45:48 AI_Player.update()		101,	110,	1011,	1010,	101,	110,	1100
2017-01-04 16:45:48 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-04 16:45:48 AI_Player.update()		1001,	1100,	1010,	110,	110,	1100,	101
2017-01-04 16:45:48 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 16:45:48 AI_Player.update()		110,	101,	1100,	111,	11,	1001,	1100
2017-01-04 16:45:48 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 16:45:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:45:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:45:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:48 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:45:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:49 AI_Player.update()	update
2017-01-04 16:45:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:45:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:45:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:45:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:45:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:45:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:49 AI_Player.update()	update
2017-01-04 16:45:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:45:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:45:49 AI_Player.update()	Search took80ms
2017-01-04 16:45:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:45:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:49 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 16:45:49 AI_Player.update()		101,	1011,	1011,	1010,	101,	110,	1100
2017-01-04 16:45:49 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-04 16:45:49 AI_Player.update()		1001,	1010,	1010,	110,	110,	1100,	101
2017-01-04 16:45:49 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 16:45:49 AI_Player.update()		110,	1010,	1100,	111,	11,	1001,	1100
2017-01-04 16:45:49 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 16:45:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:45:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:45:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:49 GameBoard.setupTreasurePanel()	1 1
2017-01-04 16:45:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:50 AI_Player.update()	update
2017-01-04 16:45:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:45:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:45:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:45:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:45:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:45:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:45:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:45:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:45:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:50 AI_Player.update()	update
2017-01-04 16:45:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:45:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:45:50 AI_Player.update()	Search took154ms
2017-01-04 16:45:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:45:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:50 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 16:45:50 AI_Player.update()		101,	1011,	1011,	1010,	101,	110,	1100
2017-01-04 16:45:50 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-04 16:45:50 AI_Player.update()		101,	1001,	1010,	1010,	110,	110,	1100
2017-01-04 16:45:50 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 16:45:50 AI_Player.update()		110,	1010,	1100,	111,	11,	1001,	1100
2017-01-04 16:45:50 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 16:45:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:45:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:45:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 16:45:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:51 AI_Player.update()	update
2017-01-04 16:45:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:45:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:45:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:45:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:45:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:45:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:45:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:45:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:45:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:51 AI_Player.update()	update
2017-01-04 16:45:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:45:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:45:52 AI_Player.update()	Search took228ms
2017-01-04 16:45:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:45:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:52 AI_Player.update()		110,	1011,	111,	110,	111,	101,	11
2017-01-04 16:45:52 AI_Player.update()		101,	110,	1011,	1010,	101,	110,	1100
2017-01-04 16:45:52 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-04 16:45:52 AI_Player.update()		101,	1100,	1010,	1010,	110,	110,	1100
2017-01-04 16:45:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 16:45:52 AI_Player.update()		110,	101,	1100,	111,	11,	1001,	1100
2017-01-04 16:45:52 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 16:45:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:45:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:45:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	2 2
2017-01-04 16:45:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:52 AI_Player.update()	update
2017-01-04 16:45:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 16:45:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 16:45:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 16:45:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 16:45:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:45:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:45:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 16:45:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 16:45:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 16:45:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:53 AI_Player.update()	update
2017-01-04 16:45:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 16:45:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 16:45:53 AI_Player.update()	Search took246ms
2017-01-04 16:45:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:45:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:53 AI_Player.update()		110,	1011,	111,	110,	111,	110,	11
2017-01-04 16:45:53 AI_Player.update()		101,	110,	1011,	1010,	101,	1100,	1100
2017-01-04 16:45:53 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 16:45:53 AI_Player.update()		101,	1100,	1010,	1010,	110,	101,	1100
2017-01-04 16:45:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-04 16:45:53 AI_Player.update()		110,	101,	1100,	111,	11,	101,	1100
2017-01-04 16:45:53 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 16:45:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:45:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:45:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:45:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:53 AI_Player.update()	update
2017-01-04 16:45:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 16:45:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 16:45:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 16:45:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 16:45:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 16:45:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 16:45:54 AI_Player.update()	update
2017-01-04 16:45:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 16:45:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 16:45:54 AI_Player.update()	Search took226ms
2017-01-04 16:45:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 16:45:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:54 AI_Player.update()		110,	1011,	111,	1010,	111,	110,	11
2017-01-04 16:45:54 AI_Player.update()		101,	110,	1011,	1010,	101,	1100,	1100
2017-01-04 16:45:54 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 16:45:54 AI_Player.update()		101,	1100,	1010,	1100,	110,	101,	1100
2017-01-04 16:45:54 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-04 16:45:54 AI_Player.update()		110,	101,	1100,	1100,	11,	101,	1100
2017-01-04 16:45:54 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 16:45:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 16:45:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 16:45:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 16:45:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 16:45:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 16:45:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 16:45:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 16:45:54 GameBoard.setupTreasurePanel()	3 2
