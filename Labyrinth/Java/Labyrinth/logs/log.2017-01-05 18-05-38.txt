2017-01-05 18:05:38 GameBoard.<init>()	Hello World!
2017-01-05 18:05:38 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 18:05:38 QueryProlog.initialise()	setup(h1/h2). suceeded
2017-01-05 18:05:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:38 GameBoard.setupBoardFromString()	Board created
2017-01-05 18:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:38 GameBoard.initialise()	[ring, helmet, map, sword, gold]
2017-01-05 18:05:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:38 GameBoard.initialise()	[candle, fairy, crown, keys, gem]
2017-01-05 18:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:38 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 18:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	null
2017-01-05 18:05:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:38 AI_Player.update()	update
2017-01-05 18:05:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:38 AI_Player.update()	Search took2ms
2017-01-05 18:05:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:38 AI_Player.update()		110,	1101,	111,	1001,	111,	110,	11
2017-01-05 18:05:38 AI_Player.update()		101,	111,	1100,	111,	110,	101,	101
2017-01-05 18:05:38 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-05 18:05:38 AI_Player.update()		11,	101,	1010,	101,	111,	1010,	101
2017-01-05 18:05:38 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-05 18:05:38 AI_Player.update()		1010,	101,	1110,	11,	1001,	1011,	1100
2017-01-05 18:05:38 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1101,	1001
2017-01-05 18:05:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 18:05:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:38 AI_Player.update()	update
2017-01-05 18:05:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 18:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:38 AI_Player.update()	update
2017-01-05 18:05:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:39 AI_Player.update()	Search took66ms
2017-01-05 18:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:39 AI_Player.update()		110,	1101,	111,	1001,	111,	1101,	11
2017-01-05 18:05:39 AI_Player.update()		101,	111,	1100,	111,	110,	110,	101
2017-01-05 18:05:39 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-05 18:05:39 AI_Player.update()		11,	101,	1010,	101,	111,	101,	101
2017-01-05 18:05:39 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 18:05:39 AI_Player.update()		1010,	101,	1110,	11,	1001,	110,	1100
2017-01-05 18:05:39 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1011,	1001
2017-01-05 18:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 18:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:39 AI_Player.update()	update
2017-01-05 18:05:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 18:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:39 AI_Player.update()	update
2017-01-05 18:05:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:39 AI_Player.update()	Search took9ms
2017-01-05 18:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:39 AI_Player.update()		110,	1101,	111,	1101,	111,	1101,	11
2017-01-05 18:05:39 AI_Player.update()		101,	111,	1100,	1001,	110,	110,	101
2017-01-05 18:05:39 AI_Player.update()		1110,	1011,	1110,	111,	111,	101,	1011
2017-01-05 18:05:39 AI_Player.update()		11,	101,	1010,	1001,	111,	101,	101
2017-01-05 18:05:39 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 18:05:39 AI_Player.update()		1010,	101,	1110,	1010,	1001,	110,	1100
2017-01-05 18:05:39 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1011,	1001
2017-01-05 18:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	1 1
2017-01-05 18:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:39 AI_Player.update()	update
2017-01-05 18:05:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	2 1
2017-01-05 18:05:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:39 AI_Player.update()	update
2017-01-05 18:05:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:39 AI_Player.update()	Search took161ms
2017-01-05 18:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:39 AI_Player.update()		110,	1101,	111,	1101,	111,	110,	11
2017-01-05 18:05:39 AI_Player.update()		101,	111,	1100,	1001,	110,	101,	101
2017-01-05 18:05:39 AI_Player.update()		1110,	1011,	1110,	111,	111,	101,	1011
2017-01-05 18:05:39 AI_Player.update()		11,	101,	1010,	1001,	111,	1010,	101
2017-01-05 18:05:39 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 18:05:39 AI_Player.update()		1010,	101,	1110,	1010,	1001,	1011,	1100
2017-01-05 18:05:39 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1101,	1001
2017-01-05 18:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	2 1
2017-01-05 18:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:39 AI_Player.update()	update
2017-01-05 18:05:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:39 AI_Player.update()	update
2017-01-05 18:05:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:39 AI_Player.update()	Search took5ms
2017-01-05 18:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:39 AI_Player.update()		110,	1101,	111,	1101,	111,	110,	11
2017-01-05 18:05:39 AI_Player.update()		101,	101,	111,	1100,	1001,	110,	101
2017-01-05 18:05:39 AI_Player.update()		1110,	1011,	1110,	111,	111,	101,	1011
2017-01-05 18:05:39 AI_Player.update()		11,	101,	1010,	1001,	111,	1010,	101
2017-01-05 18:05:39 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 18:05:39 AI_Player.update()		1010,	101,	1110,	1010,	1001,	1011,	1100
2017-01-05 18:05:39 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1101,	1001
2017-01-05 18:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:39 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:40 AI_Player.update()	update
2017-01-05 18:05:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:40 AI_Player.update()	update
2017-01-05 18:05:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:40 AI_Player.update()	Search took373ms
2017-01-05 18:05:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:40 AI_Player.update()		110,	1101,	111,	1101,	111,	110,	11
2017-01-05 18:05:40 AI_Player.update()		101,	101,	111,	1100,	1001,	101,	101
2017-01-05 18:05:40 AI_Player.update()		1110,	1011,	1110,	111,	111,	1010,	1011
2017-01-05 18:05:40 AI_Player.update()		11,	101,	1010,	1001,	111,	110,	101
2017-01-05 18:05:40 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-05 18:05:40 AI_Player.update()		1010,	101,	1110,	1010,	1001,	1101,	1100
2017-01-05 18:05:40 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 18:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:40 AI_Player.update()	update
2017-01-05 18:05:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:40 AI_Player.update()	update
2017-01-05 18:05:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:40 AI_Player.update()	Search took5ms
2017-01-05 18:05:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:40 AI_Player.update()		110,	101,	111,	1101,	111,	110,	11
2017-01-05 18:05:40 AI_Player.update()		101,	1011,	111,	1100,	1001,	101,	101
2017-01-05 18:05:40 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-05 18:05:40 AI_Player.update()		11,	11,	1010,	1001,	111,	110,	101
2017-01-05 18:05:40 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-05 18:05:40 AI_Player.update()		1010,	1100,	1110,	1010,	1001,	1101,	1100
2017-01-05 18:05:40 AI_Player.update()		1100,	1101,	1101,	11,	1101,	110,	1001
2017-01-05 18:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:40 AI_Player.update()	update
2017-01-05 18:05:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:40 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:40 AI_Player.update()	update
2017-01-05 18:05:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:41 AI_Player.update()	Search took282ms
2017-01-05 18:05:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:41 AI_Player.update()		110,	101,	111,	1101,	111,	110,	11
2017-01-05 18:05:41 AI_Player.update()		1011,	111,	1100,	1001,	101,	101,	101
2017-01-05 18:05:41 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-05 18:05:41 AI_Player.update()		11,	11,	1010,	1001,	111,	110,	101
2017-01-05 18:05:41 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-05 18:05:41 AI_Player.update()		1010,	1100,	1110,	1010,	1001,	1101,	1100
2017-01-05 18:05:41 AI_Player.update()		1100,	1101,	1101,	11,	1101,	110,	1001
2017-01-05 18:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:41 AI_Player.update()	update
2017-01-05 18:05:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:41 AI_Player.update()	update
2017-01-05 18:05:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:41 AI_Player.update()	Search took8ms
2017-01-05 18:05:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:41 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-05 18:05:41 AI_Player.update()		1011,	111,	1100,	111,	101,	101,	101
2017-01-05 18:05:41 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 18:05:41 AI_Player.update()		11,	11,	1010,	101,	111,	110,	101
2017-01-05 18:05:41 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-05 18:05:41 AI_Player.update()		1010,	1100,	1110,	11,	1001,	1101,	1100
2017-01-05 18:05:41 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	110,	1001
2017-01-05 18:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:41 AI_Player.update()	update
2017-01-05 18:05:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:41 AI_Player.update()	update
2017-01-05 18:05:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:41 AI_Player.update()	Search took207ms
2017-01-05 18:05:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:41 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-05 18:05:41 AI_Player.update()		1011,	111,	1100,	111,	101,	110,	101
2017-01-05 18:05:41 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 18:05:41 AI_Player.update()		11,	11,	1010,	101,	111,	1010,	101
2017-01-05 18:05:41 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-05 18:05:41 AI_Player.update()		1010,	1100,	1110,	11,	1001,	1011,	1100
2017-01-05 18:05:41 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1101,	1001
2017-01-05 18:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:41 GameBoard.setupTreasurePanel()	2 2
2017-01-05 18:05:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:41 AI_Player.update()	update
2017-01-05 18:05:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	2 3
2017-01-05 18:05:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:42 AI_Player.update()	update
2017-01-05 18:05:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:42 AI_Player.update()	Search took3ms
2017-01-05 18:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:42 AI_Player.update()		110,	111,	111,	1001,	111,	110,	11
2017-01-05 18:05:42 AI_Player.update()		1011,	101,	1100,	111,	101,	110,	101
2017-01-05 18:05:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 18:05:42 AI_Player.update()		11,	101,	1010,	101,	111,	1010,	101
2017-01-05 18:05:42 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 18:05:42 AI_Player.update()		1010,	1101,	1110,	11,	1001,	1011,	1100
2017-01-05 18:05:42 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1101,	1001
2017-01-05 18:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	2 3
2017-01-05 18:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:42 AI_Player.update()	update
2017-01-05 18:05:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	2 3
2017-01-05 18:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:42 AI_Player.update()	update
2017-01-05 18:05:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:42 AI_Player.update()	Search took619ms
2017-01-05 18:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:42 AI_Player.update()		110,	111,	111,	1001,	111,	110,	11
2017-01-05 18:05:42 AI_Player.update()		101,	1011,	101,	1100,	111,	101,	110
2017-01-05 18:05:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-05 18:05:42 AI_Player.update()		11,	101,	1010,	101,	111,	1010,	101
2017-01-05 18:05:42 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 18:05:42 AI_Player.update()		1010,	1101,	1110,	11,	1001,	1011,	1100
2017-01-05 18:05:42 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1101,	1001
2017-01-05 18:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:42 GameBoard.setupTreasurePanel()	2 3
2017-01-05 18:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:43 AI_Player.update()	update
2017-01-05 18:05:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	2 4
2017-01-05 18:05:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:43 AI_Player.update()	update
2017-01-05 18:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:43 AI_Player.update()	Search took4ms
2017-01-05 18:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:43 AI_Player.update()		110,	1011,	111,	1001,	111,	110,	11
2017-01-05 18:05:43 AI_Player.update()		101,	11,	101,	1100,	111,	101,	110
2017-01-05 18:05:43 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 18:05:43 AI_Player.update()		11,	1100,	1010,	101,	111,	1010,	101
2017-01-05 18:05:43 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	110,	1011
2017-01-05 18:05:43 AI_Player.update()		1010,	101,	1110,	11,	1001,	1011,	1100
2017-01-05 18:05:43 AI_Player.update()		1100,	111,	1101,	1101,	1101,	1101,	1001
2017-01-05 18:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	2 4
2017-01-05 18:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:43 AI_Player.update()	update
2017-01-05 18:05:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:43 GameBoard.setupTreasurePanel()	2 4
2017-01-05 18:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:43 AI_Player.update()	update
2017-01-05 18:05:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:44 AI_Player.update()	Search took657ms
2017-01-05 18:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:44 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-05 18:05:44 AI_Player.update()		101,	11,	101,	1100,	111,	101,	110
2017-01-05 18:05:44 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 18:05:44 AI_Player.update()		11,	1100,	1010,	101,	111,	110,	101
2017-01-05 18:05:44 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1011,	1011
2017-01-05 18:05:44 AI_Player.update()		1010,	101,	1110,	11,	1001,	1101,	1100
2017-01-05 18:05:44 AI_Player.update()		1100,	111,	1101,	1101,	1101,	110,	1001
2017-01-05 18:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	2 4
2017-01-05 18:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:44 AI_Player.update()	update
2017-01-05 18:05:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	2 5
2017-01-05 18:05:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:44 AI_Player.update()	update
2017-01-05 18:05:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:44 AI_Player.update()	Search took3ms
2017-01-05 18:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:44 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 18:05:44 AI_Player.update()		101,	101,	101,	1100,	111,	101,	110
2017-01-05 18:05:44 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-05 18:05:44 AI_Player.update()		11,	1101,	1010,	101,	111,	110,	101
2017-01-05 18:05:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1011,	1011
2017-01-05 18:05:44 AI_Player.update()		1010,	111,	1110,	11,	1001,	1101,	1100
2017-01-05 18:05:44 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	110,	1001
2017-01-05 18:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	2 5
2017-01-05 18:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:44 AI_Player.update()	update
2017-01-05 18:05:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	2 5
2017-01-05 18:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:44 AI_Player.update()	update
2017-01-05 18:05:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:44 AI_Player.update()	Search took335ms
2017-01-05 18:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:44 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 18:05:44 AI_Player.update()		101,	1100,	101,	1100,	111,	101,	110
2017-01-05 18:05:44 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1010,	1011
2017-01-05 18:05:44 AI_Player.update()		11,	101,	1010,	101,	111,	110,	101
2017-01-05 18:05:44 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1011,	1011
2017-01-05 18:05:44 AI_Player.update()		1010,	1011,	1110,	11,	1001,	1101,	1100
2017-01-05 18:05:44 AI_Player.update()		1100,	11,	1101,	1101,	1101,	110,	1001
2017-01-05 18:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	2 5
2017-01-05 18:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:44 AI_Player.update()	update
2017-01-05 18:05:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	2 6
2017-01-05 18:05:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 18:05:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()	update
2017-01-05 18:05:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:45 AI_Player.update()	Search took7ms
2017-01-05 18:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-05 18:05:45 AI_Player.update()		101,	1101,	101,	1100,	111,	101,	110
2017-01-05 18:05:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 18:05:45 AI_Player.update()		11,	111,	1010,	101,	111,	110,	101
2017-01-05 18:05:45 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-05 18:05:45 AI_Player.update()		1010,	11,	1110,	11,	1001,	1101,	1100
2017-01-05 18:05:45 AI_Player.update()		1100,	101,	1101,	1101,	1101,	110,	1001
2017-01-05 18:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:45 GameBoard.setupTreasurePanel()	2 6
2017-01-05 18:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()	update
2017-01-05 18:05:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:45 GameBoard.setupTreasurePanel()	2 6
2017-01-05 18:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()	update
2017-01-05 18:05:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:45 AI_Player.update()	Search took180ms
2017-01-05 18:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-05 18:05:45 AI_Player.update()		110,	101,	1101,	101,	1100,	111,	101
2017-01-05 18:05:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 18:05:45 AI_Player.update()		11,	111,	1010,	101,	111,	110,	101
2017-01-05 18:05:45 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1011,	1011
2017-01-05 18:05:45 AI_Player.update()		1010,	11,	1110,	11,	1001,	1101,	1100
2017-01-05 18:05:45 AI_Player.update()		1100,	101,	1101,	1101,	1101,	110,	1001
2017-01-05 18:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:45 GameBoard.setupTreasurePanel()	2 6
2017-01-05 18:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()	update
2017-01-05 18:05:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:45 GameBoard.setupTreasurePanel()	2 6
2017-01-05 18:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()	update
2017-01-05 18:05:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:45 AI_Player.update()	Search took5ms
2017-01-05 18:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 18:05:45 AI_Player.update()		110,	101,	1101,	101,	1100,	111,	101
2017-01-05 18:05:45 AI_Player.update()		1110,	111,	1110,	1001,	111,	1010,	1011
2017-01-05 18:05:45 AI_Player.update()		11,	1011,	1010,	101,	111,	110,	101
2017-01-05 18:05:45 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1011,	1011
2017-01-05 18:05:45 AI_Player.update()		1010,	101,	1110,	11,	1001,	1101,	1100
2017-01-05 18:05:45 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	110,	1001
2017-01-05 18:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:45 GameBoard.setupTreasurePanel()	2 6
2017-01-05 18:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()	update
2017-01-05 18:05:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:45 GameBoard.setupTreasurePanel()	2 6
2017-01-05 18:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()	update
2017-01-05 18:05:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:45 AI_Player.update()	Search took152ms
2017-01-05 18:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:45 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 18:05:45 AI_Player.update()		110,	101,	1101,	1001,	1100,	111,	101
2017-01-05 18:05:45 AI_Player.update()		1110,	111,	1110,	101,	111,	1010,	1011
2017-01-05 18:05:45 AI_Player.update()		11,	1011,	1010,	1010,	111,	110,	101
2017-01-05 18:05:45 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 18:05:45 AI_Player.update()		1010,	101,	1110,	1101,	1001,	1101,	1100
2017-01-05 18:05:45 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-05 18:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:45 GameBoard.setupTreasurePanel()	2 6
2017-01-05 18:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:46 AI_Player.update()	update
2017-01-05 18:05:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:46 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 18:05:46 AI_Player.update()	Player b has won!
2017-01-05 18:05:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 18:05:47 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 18:05:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 18:05:47 QueryProlog.reset()	setup(h1/h2). suceeded
2017-01-05 18:05:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 18:05:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:47 AI_Player.update()	update
2017-01-05 18:05:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:47 AI_Player.update()	Search took3ms
2017-01-05 18:05:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:47 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 18:05:47 AI_Player.update()		1110,	1100,	110,	1001,	111,	1100,	101
2017-01-05 18:05:47 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 18:05:47 AI_Player.update()		11,	101,	101,	101,	101,	1010,	1010
2017-01-05 18:05:47 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1001,	1011
2017-01-05 18:05:47 AI_Player.update()		1100,	1001,	1110,	101,	1001,	1010,	1010
2017-01-05 18:05:47 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-05 18:05:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 18:05:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:47 AI_Player.update()	update
2017-01-05 18:05:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 18:05:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:47 AI_Player.update()	update
2017-01-05 18:05:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:47 AI_Player.update()	Search took53ms
2017-01-05 18:05:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:47 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 18:05:47 AI_Player.update()		1100,	110,	1001,	111,	1100,	101,	1110
2017-01-05 18:05:47 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 18:05:47 AI_Player.update()		11,	101,	101,	101,	101,	1010,	1010
2017-01-05 18:05:47 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1001,	1011
2017-01-05 18:05:47 AI_Player.update()		1100,	1001,	1110,	101,	1001,	1010,	1010
2017-01-05 18:05:47 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-05 18:05:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	1 1
2017-01-05 18:05:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:47 AI_Player.update()	update
2017-01-05 18:05:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	1 2
2017-01-05 18:05:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding book
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:47 AI_Player.update()	update
2017-01-05 18:05:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:47 AI_Player.update()	Search took1ms
2017-01-05 18:05:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:47 AI_Player.update()		110,	1001,	111,	111,	111,	1100,	11
2017-01-05 18:05:47 AI_Player.update()		1100,	110,	1001,	110,	1100,	101,	1110
2017-01-05 18:05:47 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 18:05:47 AI_Player.update()		11,	101,	101,	101,	101,	1010,	1010
2017-01-05 18:05:47 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1001,	1011
2017-01-05 18:05:47 AI_Player.update()		1100,	1001,	1110,	1010,	1001,	1010,	1010
2017-01-05 18:05:47 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-05 18:05:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:47 GameBoard.setupTreasurePanel()	1 2
2017-01-05 18:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:48 AI_Player.update()	update
2017-01-05 18:05:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:48 GameBoard.setupTreasurePanel()	1 2
2017-01-05 18:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:48 AI_Player.update()	update
2017-01-05 18:05:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:48 AI_Player.update()	Search took264ms
2017-01-05 18:05:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:48 AI_Player.update()		110,	1001,	111,	111,	111,	1100,	11
2017-01-05 18:05:48 AI_Player.update()		1110,	1100,	110,	1001,	110,	1100,	101
2017-01-05 18:05:48 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 18:05:48 AI_Player.update()		11,	101,	101,	101,	101,	1010,	1010
2017-01-05 18:05:48 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1001,	1011
2017-01-05 18:05:48 AI_Player.update()		1100,	1001,	1110,	1010,	1001,	1010,	1010
2017-01-05 18:05:48 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-05 18:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:48 GameBoard.setupTreasurePanel()	1 2
2017-01-05 18:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:48 AI_Player.update()	update
2017-01-05 18:05:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:48 GameBoard.setupTreasurePanel()	1 2
2017-01-05 18:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:48 AI_Player.update()	update
2017-01-05 18:05:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:48 AI_Player.update()	Search took1ms
2017-01-05 18:05:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:48 AI_Player.update()		110,	1100,	111,	111,	111,	1100,	11
2017-01-05 18:05:48 AI_Player.update()		1110,	1001,	110,	1001,	110,	1100,	101
2017-01-05 18:05:48 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 18:05:48 AI_Player.update()		11,	1110,	101,	101,	101,	1010,	1010
2017-01-05 18:05:48 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 18:05:48 AI_Player.update()		1100,	1011,	1110,	1010,	1001,	1010,	1010
2017-01-05 18:05:48 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 18:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:48 GameBoard.setupTreasurePanel()	1 2
2017-01-05 18:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:48 AI_Player.update()	update
2017-01-05 18:05:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 18:05:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 18:05:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-05 18:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 18:05:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:48 GameBoard.setupTreasurePanel()	1 2
2017-01-05 18:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:48 AI_Player.update()	update
2017-01-05 18:05:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 18:05:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-05 18:05:49 AI_Player.update()	Search took215ms
2017-01-05 18:05:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:49 AI_Player.update()		110,	1100,	111,	111,	111,	1100,	11
2017-01-05 18:05:49 AI_Player.update()		1110,	1001,	110,	1001,	110,	1100,	101
2017-01-05 18:05:49 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 18:05:49 AI_Player.update()		1110,	101,	101,	101,	1010,	1010,	11
2017-01-05 18:05:49 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 18:05:49 AI_Player.update()		1100,	1011,	1110,	1010,	1001,	1010,	1010
2017-01-05 18:05:49 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 18:05:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	1 2
2017-01-05 18:05:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:49 AI_Player.update()	update
2017-01-05 18:05:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 18:05:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 18:05:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-05 18:05:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 18:05:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	1 3
2017-01-05 18:05:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 18:05:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 18:05:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 18:05:49 AI_Player.update()	update
2017-01-05 18:05:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 18:05:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-05 18:05:49 AI_Player.update()	Search took5ms
2017-01-05 18:05:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 18:05:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:49 AI_Player.update()		110,	1001,	111,	111,	111,	1100,	11
2017-01-05 18:05:49 AI_Player.update()		1110,	101,	110,	1001,	110,	1100,	101
2017-01-05 18:05:49 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 18:05:49 AI_Player.update()		1110,	1001,	101,	101,	1010,	1010,	11
2017-01-05 18:05:49 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1001,	1011
2017-01-05 18:05:49 AI_Player.update()		1100,	1001,	1110,	1010,	1001,	1010,	1010
2017-01-05 18:05:49 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-05 18:05:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 18:05:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 18:05:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 18:05:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 18:05:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 18:05:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 18:05:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 18:05:49 GameBoard.setupTreasurePanel()	1 3
