2017-01-09 07:26:45 GameBoard.<init>()	Hello World!
2017-01-09 07:26:45 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-09 07:26:45 QueryProlog.initialise()	setup(h2/h3). suceeded
2017-01-09 07:26:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:45 GameBoard.setupBoardFromString()	Board created
2017-01-09 07:26:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:45 GameBoard.initialise()	[chest, sword, candle, keys, helmet]
2017-01-09 07:26:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:45 GameBoard.initialise()	[map, crown, fairy, gem, gold]
2017-01-09 07:26:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:45 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-09 07:26:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	null
2017-01-09 07:26:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:26:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:45 AI_Player.update()	update
2017-01-09 07:26:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:45 AI_Player.update()	Search took91ms
2017-01-09 07:26:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:45 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-09 07:26:45 AI_Player.update()		110,	1001,	1011,	1010,	11,	1100,	1010
2017-01-09 07:26:45 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-09 07:26:45 AI_Player.update()		1100,	1101,	1001,	110,	101,	101,	1001
2017-01-09 07:26:45 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-09 07:26:45 AI_Player.update()		1010,	101,	101,	110,	11,	1010,	110
2017-01-09 07:26:45 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1101,	1001
2017-01-09 07:26:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:26:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:45 AI_Player.update()	update
2017-01-09 07:26:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:45 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:45 AI_Player.update()	update
2017-01-09 07:26:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:46 AI_Player.update()	Search took211ms
2017-01-09 07:26:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:46 AI_Player.update()		110,	1001,	111,	1100,	111,	110,	11
2017-01-09 07:26:46 AI_Player.update()		110,	1100,	1011,	1010,	11,	1100,	1010
2017-01-09 07:26:46 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1100,	1011
2017-01-09 07:26:46 AI_Player.update()		1100,	110,	1001,	110,	101,	101,	1001
2017-01-09 07:26:46 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-09 07:26:46 AI_Player.update()		1010,	1100,	101,	110,	11,	1010,	110
2017-01-09 07:26:46 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1101,	1001
2017-01-09 07:26:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:46 AI_Player.update()	update
2017-01-09 07:26:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:46 AI_Player.update()	update
2017-01-09 07:26:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:46 AI_Player.update()	Search took204ms
2017-01-09 07:26:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:46 AI_Player.update()		110,	1001,	111,	1100,	111,	110,	11
2017-01-09 07:26:46 AI_Player.update()		1100,	1011,	1010,	11,	1100,	1010,	110
2017-01-09 07:26:46 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1100,	1011
2017-01-09 07:26:46 AI_Player.update()		1100,	110,	1001,	110,	101,	101,	1001
2017-01-09 07:26:46 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-09 07:26:46 AI_Player.update()		1010,	1100,	101,	110,	11,	1010,	110
2017-01-09 07:26:46 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1101,	1001
2017-01-09 07:26:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:46 AI_Player.update()	update
2017-01-09 07:26:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:26:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:46 AI_Player.update()	update
2017-01-09 07:26:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:46 AI_Player.update()	Search took231ms
2017-01-09 07:26:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:46 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-09 07:26:46 AI_Player.update()		1100,	1011,	1010,	1100,	1100,	1010,	110
2017-01-09 07:26:46 AI_Player.update()		1110,	1101,	1110,	110,	111,	1100,	1011
2017-01-09 07:26:46 AI_Player.update()		1100,	110,	1001,	101,	101,	101,	1001
2017-01-09 07:26:46 AI_Player.update()		1110,	101,	1101,	110,	1011,	1101,	1011
2017-01-09 07:26:46 AI_Player.update()		1010,	1100,	101,	1101,	11,	1010,	110
2017-01-09 07:26:46 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1101,	1001
2017-01-09 07:26:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:47 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:47 AI_Player.update()	update
2017-01-09 07:26:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:47 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:47 AI_Player.update()	update
2017-01-09 07:26:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:47 AI_Player.update()	Search took360ms
2017-01-09 07:26:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:47 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-09 07:26:47 AI_Player.update()		1100,	1011,	1010,	1100,	1100,	1100,	110
2017-01-09 07:26:47 AI_Player.update()		1110,	1101,	1110,	110,	111,	101,	1011
2017-01-09 07:26:47 AI_Player.update()		1100,	110,	1001,	101,	101,	1101,	1001
2017-01-09 07:26:47 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-09 07:26:47 AI_Player.update()		1010,	1100,	101,	1101,	11,	1101,	110
2017-01-09 07:26:47 AI_Player.update()		1100,	11,	1101,	1100,	1101,	110,	1001
2017-01-09 07:26:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:47 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:47 AI_Player.update()	update
2017-01-09 07:26:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:47 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:47 AI_Player.update()	update
2017-01-09 07:26:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:48 AI_Player.update()	Search took302ms
2017-01-09 07:26:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:48 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-09 07:26:48 AI_Player.update()		110,	1100,	1011,	1010,	1100,	1100,	1100
2017-01-09 07:26:48 AI_Player.update()		1110,	1101,	1110,	110,	111,	101,	1011
2017-01-09 07:26:48 AI_Player.update()		1100,	110,	1001,	101,	101,	1101,	1001
2017-01-09 07:26:48 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-09 07:26:48 AI_Player.update()		1010,	1100,	101,	1101,	11,	1101,	110
2017-01-09 07:26:48 AI_Player.update()		1100,	11,	1101,	1100,	1101,	110,	1001
2017-01-09 07:26:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:48 AI_Player.update()	update
2017-01-09 07:26:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	2 2
2017-01-09 07:26:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:26:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:48 AI_Player.update()	update
2017-01-09 07:26:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:48 AI_Player.update()	Search took227ms
2017-01-09 07:26:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:48 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-09 07:26:48 AI_Player.update()		110,	1100,	1011,	110,	1100,	1100,	1100
2017-01-09 07:26:48 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-09 07:26:48 AI_Player.update()		1100,	110,	1001,	110,	101,	1101,	1001
2017-01-09 07:26:48 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-09 07:26:48 AI_Player.update()		1010,	1100,	101,	1100,	11,	1101,	110
2017-01-09 07:26:48 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-09 07:26:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	2 2
2017-01-09 07:26:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:48 AI_Player.update()	update
2017-01-09 07:26:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:26:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:26:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:48 AI_Player.update()	update
2017-01-09 07:26:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:48 AI_Player.update()	Search took237ms
2017-01-09 07:26:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:48 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-09 07:26:48 AI_Player.update()		110,	1101,	1011,	110,	1100,	1100,	1100
2017-01-09 07:26:48 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-09 07:26:48 AI_Player.update()		1100,	101,	1001,	110,	101,	1101,	1001
2017-01-09 07:26:48 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-09 07:26:48 AI_Player.update()		1010,	11,	101,	1100,	11,	1101,	110
2017-01-09 07:26:48 AI_Player.update()		1100,	1001,	1101,	11,	1101,	110,	1001
2017-01-09 07:26:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:48 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:26:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:49 AI_Player.update()	update
2017-01-09 07:26:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:49 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:26:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:49 AI_Player.update()	update
2017-01-09 07:26:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:49 AI_Player.update()	Search took484ms
2017-01-09 07:26:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:49 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-09 07:26:49 AI_Player.update()		110,	1101,	1011,	110,	1100,	1100,	1100
2017-01-09 07:26:49 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-09 07:26:49 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:49 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-09 07:26:49 AI_Player.update()		1010,	11,	101,	1100,	11,	1101,	110
2017-01-09 07:26:49 AI_Player.update()		1100,	1001,	1101,	11,	1101,	110,	1001
2017-01-09 07:26:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:49 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:26:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:49 AI_Player.update()	update
2017-01-09 07:26:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:49 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:26:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:49 AI_Player.update()	update
2017-01-09 07:26:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:50 AI_Player.update()	Search took406ms
2017-01-09 07:26:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:50 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-09 07:26:50 AI_Player.update()		110,	1101,	1011,	110,	1100,	1100,	1100
2017-01-09 07:26:50 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-09 07:26:50 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:50 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-09 07:26:50 AI_Player.update()		110,	1010,	11,	101,	1100,	11,	1101
2017-01-09 07:26:50 AI_Player.update()		1100,	1001,	1101,	11,	1101,	110,	1001
2017-01-09 07:26:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:50 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:26:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:50 AI_Player.update()	update
2017-01-09 07:26:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:50 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:26:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:50 AI_Player.update()	update
2017-01-09 07:26:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:51 AI_Player.update()	Search took515ms
2017-01-09 07:26:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:51 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-09 07:26:51 AI_Player.update()		110,	1101,	1011,	110,	1100,	1010,	1100
2017-01-09 07:26:51 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-09 07:26:51 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:51 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	101,	1011
2017-01-09 07:26:51 AI_Player.update()		110,	1010,	11,	101,	1100,	1010,	1101
2017-01-09 07:26:51 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-09 07:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:51 AI_Player.update()	update
2017-01-09 07:26:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	4 2
2017-01-09 07:26:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:51 AI_Player.update()	update
2017-01-09 07:26:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:51 AI_Player.update()	Search took118ms
2017-01-09 07:26:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:51 AI_Player.update()		110,	1101,	111,	1010,	111,	110,	11
2017-01-09 07:26:51 AI_Player.update()		110,	110,	1011,	110,	1100,	1010,	1100
2017-01-09 07:26:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-09 07:26:51 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:51 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-09 07:26:51 AI_Player.update()		110,	1001,	11,	101,	1100,	1010,	1101
2017-01-09 07:26:51 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-09 07:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	4 2
2017-01-09 07:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:51 AI_Player.update()	update
2017-01-09 07:26:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:51 AI_Player.update()	update
2017-01-09 07:26:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:51 AI_Player.update()	Search took75ms
2017-01-09 07:26:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:51 AI_Player.update()		110,	1101,	111,	1010,	111,	110,	11
2017-01-09 07:26:51 AI_Player.update()		110,	110,	1011,	110,	1100,	1010,	1100
2017-01-09 07:26:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-09 07:26:51 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:51 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-09 07:26:51 AI_Player.update()		1101,	110,	1001,	11,	101,	1100,	1010
2017-01-09 07:26:51 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-09 07:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:51 AI_Player.update()	update
2017-01-09 07:26:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:51 AI_Player.update()	update
2017-01-09 07:26:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:51 AI_Player.update()	Search took25ms
2017-01-09 07:26:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:51 AI_Player.update()		110,	1101,	111,	1010,	111,	11,	11
2017-01-09 07:26:51 AI_Player.update()		110,	110,	1011,	110,	1100,	110,	1100
2017-01-09 07:26:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-09 07:26:51 AI_Player.update()		1001,	1100,	101,	1001,	110,	1100,	1101
2017-01-09 07:26:51 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-09 07:26:51 AI_Player.update()		1101,	110,	1001,	11,	101,	101,	1010
2017-01-09 07:26:51 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-09 07:26:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:51 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()	update
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:52 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()	update
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:52 AI_Player.update()	Search took73ms
2017-01-09 07:26:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()		110,	1101,	111,	1010,	111,	110,	11
2017-01-09 07:26:52 AI_Player.update()		110,	110,	1011,	110,	1100,	1010,	1100
2017-01-09 07:26:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-09 07:26:52 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:52 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-09 07:26:52 AI_Player.update()		1101,	110,	1001,	11,	101,	1100,	1010
2017-01-09 07:26:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-09 07:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:52 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()	update
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:52 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()	update
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:52 AI_Player.update()	Search took38ms
2017-01-09 07:26:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()		110,	1101,	111,	11,	111,	110,	11
2017-01-09 07:26:52 AI_Player.update()		110,	110,	1011,	1010,	1100,	1010,	1100
2017-01-09 07:26:52 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-09 07:26:52 AI_Player.update()		1001,	1100,	101,	101,	110,	101,	1101
2017-01-09 07:26:52 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-09 07:26:52 AI_Player.update()		1101,	110,	1001,	1101,	101,	1100,	1010
2017-01-09 07:26:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-09 07:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:52 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()	update
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:52 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()	update
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:52 AI_Player.update()	Search took69ms
2017-01-09 07:26:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()		110,	1101,	111,	1010,	111,	110,	11
2017-01-09 07:26:52 AI_Player.update()		110,	110,	1011,	110,	1100,	1010,	1100
2017-01-09 07:26:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-09 07:26:52 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:52 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-09 07:26:52 AI_Player.update()		1101,	110,	1001,	11,	101,	1100,	1010
2017-01-09 07:26:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-09 07:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:52 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()	update
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:52 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()	update
2017-01-09 07:26:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:52 AI_Player.update()	Search took31ms
2017-01-09 07:26:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:52 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-09 07:26:52 AI_Player.update()		110,	110,	1011,	110,	1100,	1100,	1100
2017-01-09 07:26:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-09 07:26:52 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:52 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-09 07:26:52 AI_Player.update()		1101,	110,	1001,	11,	101,	11,	1010
2017-01-09 07:26:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-09 07:26:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:52 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:53 AI_Player.update()	update
2017-01-09 07:26:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:53 AI_Player.update()	update
2017-01-09 07:26:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:53 AI_Player.update()	Search took394ms
2017-01-09 07:26:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:53 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-09 07:26:53 AI_Player.update()		110,	110,	1011,	110,	1100,	1100,	1100
2017-01-09 07:26:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-09 07:26:53 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:53 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-09 07:26:53 AI_Player.update()		110,	1001,	11,	101,	11,	1010,	1101
2017-01-09 07:26:53 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-09 07:26:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:26:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:53 AI_Player.update()	update
2017-01-09 07:26:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	5 3
2017-01-09 07:26:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:26:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:53 AI_Player.update()	update
2017-01-09 07:26:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:53 AI_Player.update()	Search took63ms
2017-01-09 07:26:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:53 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-09 07:26:53 AI_Player.update()		110,	110,	1011,	110,	1100,	1100,	1100
2017-01-09 07:26:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-09 07:26:53 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:53 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-09 07:26:53 AI_Player.update()		1001,	11,	101,	11,	1010,	1101,	110
2017-01-09 07:26:53 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-09 07:26:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	5 3
2017-01-09 07:26:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:53 AI_Player.update()	update
2017-01-09 07:26:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:53 GameBoard.setupTreasurePanel()	5 3
2017-01-09 07:26:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:54 AI_Player.update()	update
2017-01-09 07:26:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:54 AI_Player.update()	Search took430ms
2017-01-09 07:26:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:54 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-09 07:26:54 AI_Player.update()		110,	1101,	1011,	110,	1100,	1100,	1100
2017-01-09 07:26:54 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-09 07:26:54 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:54 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-09 07:26:54 AI_Player.update()		1001,	1010,	101,	11,	1010,	1101,	110
2017-01-09 07:26:54 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-09 07:26:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	5 3
2017-01-09 07:26:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:54 AI_Player.update()	update
2017-01-09 07:26:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	6 3
2017-01-09 07:26:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:26:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:54 AI_Player.update()	update
2017-01-09 07:26:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:54 AI_Player.update()	Search took30ms
2017-01-09 07:26:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:54 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-09 07:26:54 AI_Player.update()		110,	1101,	1011,	110,	1100,	1100,	1100
2017-01-09 07:26:54 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-09 07:26:54 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:54 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-09 07:26:54 AI_Player.update()		1010,	101,	11,	1010,	1101,	110,	1001
2017-01-09 07:26:54 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-09 07:26:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	6 3
2017-01-09 07:26:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:54 AI_Player.update()	update
2017-01-09 07:26:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:54 GameBoard.setupTreasurePanel()	6 3
2017-01-09 07:26:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:54 AI_Player.update()	update
2017-01-09 07:26:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:55 AI_Player.update()	Search took522ms
2017-01-09 07:26:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:55 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-09 07:26:55 AI_Player.update()		110,	110,	1011,	110,	1100,	1100,	1100
2017-01-09 07:26:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-09 07:26:55 AI_Player.update()		1001,	1100,	101,	1001,	110,	101,	1101
2017-01-09 07:26:55 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-09 07:26:55 AI_Player.update()		1010,	11,	11,	1010,	1101,	110,	1001
2017-01-09 07:26:55 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-09 07:26:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:55 GameBoard.setupTreasurePanel()	6 3
2017-01-09 07:26:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:55 AI_Player.update()	update
2017-01-09 07:26:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:55 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-09 07:26:55 AI_Player.update()	Player a has won!
2017-01-09 07:26:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 07:26:57 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-09 07:26:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 07:26:57 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-09 07:26:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	adding book
2017-01-09 07:26:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:57 AI_Player.update()	update
2017-01-09 07:26:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:57 AI_Player.update()	Search took26ms
2017-01-09 07:26:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:57 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-09 07:26:57 AI_Player.update()		1010,	11,	1110,	11,	1101,	1001,	101
2017-01-09 07:26:57 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-09 07:26:57 AI_Player.update()		11,	101,	1100,	1010,	1010,	110,	1011
2017-01-09 07:26:57 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-09 07:26:57 AI_Player.update()		111,	110,	101,	1100,	1101,	1001,	1011
2017-01-09 07:26:57 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-09 07:26:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:57 AI_Player.update()	update
2017-01-09 07:26:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:57 AI_Player.update()	update
2017-01-09 07:26:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:57 AI_Player.update()	Search took39ms
2017-01-09 07:26:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:57 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-09 07:26:57 AI_Player.update()		1010,	11,	1110,	11,	1101,	1001,	101
2017-01-09 07:26:57 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-09 07:26:57 AI_Player.update()		11,	101,	1100,	1010,	1010,	110,	1011
2017-01-09 07:26:57 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-09 07:26:57 AI_Player.update()		1011,	111,	110,	101,	1100,	1101,	1001
2017-01-09 07:26:57 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-09 07:26:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:57 AI_Player.update()	update
2017-01-09 07:26:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:57 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:57 AI_Player.update()	update
2017-01-09 07:26:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:58 AI_Player.update()	Search took166ms
2017-01-09 07:26:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:58 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-09 07:26:58 AI_Player.update()		1010,	11,	1110,	11,	1101,	1001,	101
2017-01-09 07:26:58 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-09 07:26:58 AI_Player.update()		1011,	11,	101,	1100,	1010,	1010,	110
2017-01-09 07:26:58 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-09 07:26:58 AI_Player.update()		1011,	111,	110,	101,	1100,	1101,	1001
2017-01-09 07:26:58 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-09 07:26:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:26:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:58 AI_Player.update()	update
2017-01-09 07:26:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:26:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	adding book
2017-01-09 07:26:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:58 AI_Player.update()	update
2017-01-09 07:26:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:58 AI_Player.update()	Search took44ms
2017-01-09 07:26:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:58 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-09 07:26:58 AI_Player.update()		101,	1010,	11,	1110,	11,	1101,	1001
2017-01-09 07:26:58 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-09 07:26:58 AI_Player.update()		1011,	11,	101,	1100,	1010,	1010,	110
2017-01-09 07:26:58 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-09 07:26:58 AI_Player.update()		1011,	111,	110,	101,	1100,	1101,	1001
2017-01-09 07:26:58 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-09 07:26:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:58 AI_Player.update()	update
2017-01-09 07:26:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:58 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:58 AI_Player.update()	update
2017-01-09 07:26:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:26:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:26:59 AI_Player.update()	Search took914ms
2017-01-09 07:26:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:59 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-09 07:26:59 AI_Player.update()		101,	1010,	11,	1110,	11,	1001,	1001
2017-01-09 07:26:59 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-09 07:26:59 AI_Player.update()		1011,	11,	101,	1100,	1010,	1100,	110
2017-01-09 07:26:59 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-09 07:26:59 AI_Player.update()		1011,	111,	110,	101,	1100,	1001,	1001
2017-01-09 07:26:59 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-09 07:26:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:59 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:59 AI_Player.update()	update
2017-01-09 07:26:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:26:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:26:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:26:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:26:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:26:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:59 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:59 AI_Player.update()	update
2017-01-09 07:26:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:26:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:26:59 AI_Player.update()	Search took18ms
2017-01-09 07:26:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:26:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:59 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-09 07:26:59 AI_Player.update()		101,	1010,	11,	1010,	11,	1001,	1001
2017-01-09 07:26:59 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-09 07:26:59 AI_Player.update()		1011,	11,	101,	1010,	1010,	1100,	110
2017-01-09 07:26:59 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1101,	1011
2017-01-09 07:26:59 AI_Player.update()		1011,	111,	110,	101,	1100,	1001,	1001
2017-01-09 07:26:59 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-09 07:26:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:26:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:26:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:59 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:59 AI_Player.update()	update
2017-01-09 07:26:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:26:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:26:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:26:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:26:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:26:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:26:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:26:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:26:59 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:26:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:26:59 AI_Player.update()	update
2017-01-09 07:26:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:00 AI_Player.update()	Search took262ms
2017-01-09 07:27:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:00 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-09 07:27:00 AI_Player.update()		101,	1010,	11,	1110,	11,	1001,	1001
2017-01-09 07:27:00 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-09 07:27:00 AI_Player.update()		1011,	11,	101,	1100,	1010,	1100,	110
2017-01-09 07:27:00 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-09 07:27:00 AI_Player.update()		1011,	111,	110,	101,	1100,	1001,	1001
2017-01-09 07:27:00 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-09 07:27:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:00 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:00 AI_Player.update()	update
2017-01-09 07:27:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:00 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:00 AI_Player.update()	update
2017-01-09 07:27:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:00 AI_Player.update()	Search took18ms
2017-01-09 07:27:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:00 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-09 07:27:00 AI_Player.update()		101,	1010,	11,	1010,	11,	1001,	1001
2017-01-09 07:27:00 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-09 07:27:00 AI_Player.update()		1011,	11,	101,	1010,	1010,	1100,	110
2017-01-09 07:27:00 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1101,	1011
2017-01-09 07:27:00 AI_Player.update()		1011,	111,	110,	101,	1100,	1001,	1001
2017-01-09 07:27:00 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-09 07:27:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:00 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:00 AI_Player.update()	update
2017-01-09 07:27:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:00 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:00 AI_Player.update()	update
2017-01-09 07:27:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:01 AI_Player.update()	Search took440ms
2017-01-09 07:27:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-09 07:27:01 AI_Player.update()		101,	1010,	11,	1110,	11,	1001,	1001
2017-01-09 07:27:01 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-09 07:27:01 AI_Player.update()		1011,	11,	101,	1100,	1010,	1100,	110
2017-01-09 07:27:01 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-09 07:27:01 AI_Player.update()		1011,	111,	110,	101,	1100,	1001,	1001
2017-01-09 07:27:01 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-09 07:27:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:01 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()	update
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:01 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()	update
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:01 AI_Player.update()	Search took35ms
2017-01-09 07:27:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-09 07:27:01 AI_Player.update()		101,	1010,	11,	1110,	11,	1010,	1001
2017-01-09 07:27:01 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-09 07:27:01 AI_Player.update()		1011,	11,	101,	1100,	1010,	1101,	110
2017-01-09 07:27:01 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-09 07:27:01 AI_Player.update()		1011,	111,	110,	101,	1100,	1010,	1001
2017-01-09 07:27:01 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1101,	1001
2017-01-09 07:27:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:01 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()	update
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:01 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()	update
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:01 AI_Player.update()	Search took115ms
2017-01-09 07:27:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-09 07:27:01 AI_Player.update()		101,	1010,	11,	1110,	11,	1001,	1001
2017-01-09 07:27:01 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-09 07:27:01 AI_Player.update()		1011,	11,	101,	1100,	1010,	1100,	110
2017-01-09 07:27:01 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-09 07:27:01 AI_Player.update()		1011,	111,	110,	101,	1100,	1001,	1001
2017-01-09 07:27:01 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-09 07:27:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:01 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()	update
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:01 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()	update
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:01 AI_Player.update()	Search took67ms
2017-01-09 07:27:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-09 07:27:01 AI_Player.update()		101,	1010,	11,	1110,	11,	1010,	1001
2017-01-09 07:27:01 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-09 07:27:01 AI_Player.update()		1011,	11,	101,	1100,	1010,	1101,	110
2017-01-09 07:27:01 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-09 07:27:01 AI_Player.update()		1011,	111,	110,	101,	1100,	1010,	1001
2017-01-09 07:27:01 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1101,	1001
2017-01-09 07:27:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:01 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:01 AI_Player.update()	update
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:01 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:02 AI_Player.update()	update
2017-01-09 07:27:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:02 AI_Player.update()	Search took577ms
2017-01-09 07:27:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:02 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-09 07:27:02 AI_Player.update()		101,	1010,	11,	1010,	11,	1010,	1001
2017-01-09 07:27:02 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-09 07:27:02 AI_Player.update()		1011,	11,	101,	101,	1010,	1101,	110
2017-01-09 07:27:02 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-09 07:27:02 AI_Player.update()		1011,	111,	110,	1010,	1100,	1010,	1001
2017-01-09 07:27:02 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1101,	1001
2017-01-09 07:27:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:02 AI_Player.update()	update
2017-01-09 07:27:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	3 1
2017-01-09 07:27:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:02 GameBoard.setupTreasurePanel()	adding book
2017-01-09 07:27:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:02 AI_Player.update()	update
2017-01-09 07:27:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:03 AI_Player.update()	Search took252ms
2017-01-09 07:27:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:03 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-09 07:27:03 AI_Player.update()		101,	1010,	11,	1010,	11,	1010,	1001
2017-01-09 07:27:03 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-09 07:27:03 AI_Player.update()		1011,	11,	101,	101,	1010,	1101,	110
2017-01-09 07:27:03 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-09 07:27:03 AI_Player.update()		111,	110,	1010,	1100,	1010,	1001,	1011
2017-01-09 07:27:03 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1101,	1001
2017-01-09 07:27:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	3 1
2017-01-09 07:27:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:03 AI_Player.update()	update
2017-01-09 07:27:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	3 1
2017-01-09 07:27:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:03 AI_Player.update()	update
2017-01-09 07:27:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:03 AI_Player.update()	Search took415ms
2017-01-09 07:27:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:03 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-09 07:27:03 AI_Player.update()		101,	1010,	11,	1010,	11,	1010,	1001
2017-01-09 07:27:03 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-09 07:27:03 AI_Player.update()		1011,	11,	101,	101,	1010,	1101,	110
2017-01-09 07:27:03 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-09 07:27:03 AI_Player.update()		110,	1010,	1100,	1010,	1001,	1011,	111
2017-01-09 07:27:03 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1101,	1001
2017-01-09 07:27:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	3 1
2017-01-09 07:27:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:03 AI_Player.update()	update
2017-01-09 07:27:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	4 1
2017-01-09 07:27:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:03 GameBoard.setupTreasurePanel()	adding book
2017-01-09 07:27:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:03 AI_Player.update()	update
2017-01-09 07:27:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:04 AI_Player.update()	Search took456ms
2017-01-09 07:27:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:04 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-09 07:27:04 AI_Player.update()		1010,	11,	1010,	11,	1010,	1001,	101
2017-01-09 07:27:04 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-09 07:27:04 AI_Player.update()		1011,	11,	101,	101,	1010,	1101,	110
2017-01-09 07:27:04 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-09 07:27:04 AI_Player.update()		110,	1010,	1100,	1010,	1001,	1011,	111
2017-01-09 07:27:04 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1101,	1001
2017-01-09 07:27:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	4 1
2017-01-09 07:27:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:04 AI_Player.update()	update
2017-01-09 07:27:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	4 2
2017-01-09 07:27:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:04 GameBoard.setupTreasurePanel()	adding book
2017-01-09 07:27:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:04 AI_Player.update()	update
2017-01-09 07:27:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:05 AI_Player.update()	Search took682ms
2017-01-09 07:27:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:05 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-09 07:27:05 AI_Player.update()		1010,	11,	1010,	11,	1010,	1001,	101
2017-01-09 07:27:05 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-09 07:27:05 AI_Player.update()		1011,	11,	101,	101,	1010,	1101,	110
2017-01-09 07:27:05 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-09 07:27:05 AI_Player.update()		111,	110,	1010,	1100,	1010,	1001,	1011
2017-01-09 07:27:05 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1101,	1001
2017-01-09 07:27:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	4 2
2017-01-09 07:27:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:05 AI_Player.update()	update
2017-01-09 07:27:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	5 2
2017-01-09 07:27:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding book
2017-01-09 07:27:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:05 AI_Player.update()	update
2017-01-09 07:27:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:05 AI_Player.update()	Search took124ms
2017-01-09 07:27:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:05 AI_Player.update()		110,	11,	111,	1110,	111,	1001,	11
2017-01-09 07:27:05 AI_Player.update()		1010,	101,	1010,	11,	1010,	1001,	101
2017-01-09 07:27:05 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-09 07:27:05 AI_Player.update()		1011,	111,	101,	101,	1010,	1101,	110
2017-01-09 07:27:05 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-09 07:27:05 AI_Player.update()		111,	1101,	1010,	1100,	1010,	1001,	1011
2017-01-09 07:27:05 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-09 07:27:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	5 2
2017-01-09 07:27:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:05 AI_Player.update()	update
2017-01-09 07:27:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	5 3
2017-01-09 07:27:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:05 GameBoard.setupTreasurePanel()	adding book
2017-01-09 07:27:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:05 AI_Player.update()	update
2017-01-09 07:27:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:06 AI_Player.update()	Search took629ms
2017-01-09 07:27:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:06 AI_Player.update()		110,	11,	111,	1110,	111,	1001,	11
2017-01-09 07:27:06 AI_Player.update()		101,	1010,	11,	1010,	1001,	101,	1010
2017-01-09 07:27:06 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-09 07:27:06 AI_Player.update()		1011,	111,	101,	101,	1010,	1101,	110
2017-01-09 07:27:06 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-09 07:27:06 AI_Player.update()		111,	1101,	1010,	1100,	1010,	1001,	1011
2017-01-09 07:27:06 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-09 07:27:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	5 3
2017-01-09 07:27:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:06 AI_Player.update()	update
2017-01-09 07:27:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	6 3
2017-01-09 07:27:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	adding book
2017-01-09 07:27:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:06 AI_Player.update()	update
2017-01-09 07:27:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:06 AI_Player.update()	Search took107ms
2017-01-09 07:27:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:06 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-09 07:27:06 AI_Player.update()		101,	1010,	11,	1100,	1001,	101,	1010
2017-01-09 07:27:06 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-09 07:27:06 AI_Player.update()		1011,	111,	101,	101,	1010,	1101,	110
2017-01-09 07:27:06 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-09 07:27:06 AI_Player.update()		111,	1101,	1010,	1010,	1010,	1001,	1011
2017-01-09 07:27:06 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1101,	1001
2017-01-09 07:27:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	6 3
2017-01-09 07:27:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:06 AI_Player.update()	update
2017-01-09 07:27:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:06 GameBoard.setupTreasurePanel()	6 3
2017-01-09 07:27:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:07 AI_Player.update()	update
2017-01-09 07:27:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:07 AI_Player.update()	Search took495ms
2017-01-09 07:27:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:07 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-09 07:27:07 AI_Player.update()		101,	1010,	11,	1100,	1001,	1100,	1010
2017-01-09 07:27:07 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-09 07:27:07 AI_Player.update()		1011,	111,	101,	101,	1010,	1001,	110
2017-01-09 07:27:07 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-09 07:27:07 AI_Player.update()		111,	1101,	1010,	1010,	1010,	1101,	1011
2017-01-09 07:27:07 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-09 07:27:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:07 GameBoard.setupTreasurePanel()	6 3
2017-01-09 07:27:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:07 AI_Player.update()	update
2017-01-09 07:27:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:07 GameBoard.setupTreasurePanel()	6 3
2017-01-09 07:27:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:07 AI_Player.update()	update
2017-01-09 07:27:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:07 AI_Player.update()	Search took229ms
2017-01-09 07:27:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:07 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-09 07:27:07 AI_Player.update()		101,	1010,	11,	1100,	1001,	1100,	1010
2017-01-09 07:27:07 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-09 07:27:07 AI_Player.update()		110,	1011,	111,	101,	101,	1010,	1001
2017-01-09 07:27:07 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-09 07:27:07 AI_Player.update()		111,	1101,	1010,	1010,	1010,	1101,	1011
2017-01-09 07:27:07 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-09 07:27:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:07 GameBoard.setupTreasurePanel()	6 3
2017-01-09 07:27:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:08 AI_Player.update()	update
2017-01-09 07:27:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	6 4
2017-01-09 07:27:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	adding book
2017-01-09 07:27:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:08 AI_Player.update()	update
2017-01-09 07:27:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:08 AI_Player.update()	Search took411ms
2017-01-09 07:27:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:08 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-09 07:27:08 AI_Player.update()		1010,	101,	1010,	11,	1100,	1001,	1100
2017-01-09 07:27:08 AI_Player.update()		1110,	11,	1110,	101,	111,	1101,	1011
2017-01-09 07:27:08 AI_Player.update()		110,	1011,	111,	101,	101,	1010,	1001
2017-01-09 07:27:08 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-09 07:27:08 AI_Player.update()		111,	1101,	1010,	1010,	1010,	1101,	1011
2017-01-09 07:27:08 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-09 07:27:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:08 GameBoard.setupTreasurePanel()	6 4
2017-01-09 07:27:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:08 AI_Player.update()	update
2017-01-09 07:27:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:08 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-09 07:27:08 AI_Player.update()	Player a has won!
2017-01-09 07:27:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 07:27:10 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-09 07:27:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 07:27:10 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-09 07:27:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:27:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:27:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:10 AI_Player.update()	update
2017-01-09 07:27:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:11 AI_Player.update()	Search took835ms
2017-01-09 07:27:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:11 AI_Player.update()		110,	1011,	111,	110,	111,	1100,	11
2017-01-09 07:27:11 AI_Player.update()		1010,	1011,	1011,	101,	101,	11,	1100
2017-01-09 07:27:11 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-09 07:27:11 AI_Player.update()		1011,	1100,	1101,	1001,	1010,	101,	110
2017-01-09 07:27:11 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:11 AI_Player.update()		110,	110,	110,	101,	1001,	101,	1010
2017-01-09 07:27:11 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:27:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:11 AI_Player.update()	update
2017-01-09 07:27:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:27:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:11 AI_Player.update()	update
2017-01-09 07:27:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:11 AI_Player.update()	Search took53ms
2017-01-09 07:27:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:11 AI_Player.update()		110,	1011,	111,	110,	111,	1100,	11
2017-01-09 07:27:11 AI_Player.update()		1011,	1011,	101,	101,	11,	1100,	1010
2017-01-09 07:27:11 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-09 07:27:11 AI_Player.update()		1011,	1100,	1101,	1001,	1010,	101,	110
2017-01-09 07:27:11 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:11 AI_Player.update()		110,	110,	110,	101,	1001,	101,	1010
2017-01-09 07:27:11 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:11 AI_Player.update()	update
2017-01-09 07:27:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:11 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:11 AI_Player.update()	update
2017-01-09 07:27:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:12 AI_Player.update()	Search took1002ms
2017-01-09 07:27:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:12 AI_Player.update()		110,	1011,	111,	110,	111,	1100,	11
2017-01-09 07:27:12 AI_Player.update()		1011,	11,	101,	101,	11,	1100,	1010
2017-01-09 07:27:12 AI_Player.update()		1110,	1100,	1110,	110,	111,	11,	1011
2017-01-09 07:27:12 AI_Player.update()		1011,	110,	1101,	1001,	1010,	101,	110
2017-01-09 07:27:12 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:12 AI_Player.update()		110,	101,	110,	101,	1001,	101,	1010
2017-01-09 07:27:12 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:12 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:12 AI_Player.update()	update
2017-01-09 07:27:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:12 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:12 AI_Player.update()	update
2017-01-09 07:27:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:13 AI_Player.update()	Search took216ms
2017-01-09 07:27:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:13 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-09 07:27:13 AI_Player.update()		1011,	1100,	101,	101,	11,	1100,	1010
2017-01-09 07:27:13 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-09 07:27:13 AI_Player.update()		1011,	110,	1101,	1001,	1010,	101,	110
2017-01-09 07:27:13 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:13 AI_Player.update()		110,	1011,	110,	101,	1001,	101,	1010
2017-01-09 07:27:13 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:13 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:13 AI_Player.update()	update
2017-01-09 07:27:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:13 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:13 AI_Player.update()	update
2017-01-09 07:27:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:13 AI_Player.update()	Search took649ms
2017-01-09 07:27:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:13 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-09 07:27:13 AI_Player.update()		1011,	1100,	101,	110,	11,	1100,	1010
2017-01-09 07:27:13 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-09 07:27:13 AI_Player.update()		1011,	110,	1101,	110,	1010,	101,	110
2017-01-09 07:27:13 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:13 AI_Player.update()		110,	1011,	110,	1001,	1001,	101,	1010
2017-01-09 07:27:13 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:13 GameBoard.setupTreasurePanel()	2 1
2017-01-09 07:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:14 AI_Player.update()	update
2017-01-09 07:27:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	3 1
2017-01-09 07:27:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:14 AI_Player.update()	update
2017-01-09 07:27:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:14 AI_Player.update()	Search took175ms
2017-01-09 07:27:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:14 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-09 07:27:14 AI_Player.update()		1010,	1011,	1100,	101,	110,	11,	1100
2017-01-09 07:27:14 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-09 07:27:14 AI_Player.update()		1011,	110,	1101,	110,	1010,	101,	110
2017-01-09 07:27:14 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:14 AI_Player.update()		110,	1011,	110,	1001,	1001,	101,	1010
2017-01-09 07:27:14 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	3 1
2017-01-09 07:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:14 AI_Player.update()	update
2017-01-09 07:27:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:27:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:14 AI_Player.update()	update
2017-01-09 07:27:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:14 AI_Player.update()	Search took142ms
2017-01-09 07:27:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:14 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-09 07:27:14 AI_Player.update()		1010,	110,	1100,	101,	110,	11,	1100
2017-01-09 07:27:14 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-09 07:27:14 AI_Player.update()		1011,	101,	1101,	110,	1010,	101,	110
2017-01-09 07:27:14 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:14 AI_Player.update()		110,	1011,	110,	1001,	1001,	101,	1010
2017-01-09 07:27:14 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:14 AI_Player.update()	update
2017-01-09 07:27:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:14 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:27:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:14 AI_Player.update()	update
2017-01-09 07:27:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:15 AI_Player.update()	Search took174ms
2017-01-09 07:27:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:15 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-09 07:27:15 AI_Player.update()		1010,	1011,	1100,	101,	110,	11,	1100
2017-01-09 07:27:15 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-09 07:27:15 AI_Player.update()		1011,	110,	1101,	110,	1010,	101,	110
2017-01-09 07:27:15 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:15 AI_Player.update()		110,	1011,	110,	1001,	1001,	101,	1010
2017-01-09 07:27:15 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:27:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:15 AI_Player.update()	update
2017-01-09 07:27:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:27:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:15 AI_Player.update()	update
2017-01-09 07:27:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:15 AI_Player.update()	Search took178ms
2017-01-09 07:27:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:15 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-09 07:27:15 AI_Player.update()		1010,	1011,	1100,	101,	110,	11,	1100
2017-01-09 07:27:15 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-09 07:27:15 AI_Player.update()		1011,	110,	1101,	1001,	1010,	101,	110
2017-01-09 07:27:15 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:15 AI_Player.update()		110,	1011,	110,	101,	1001,	101,	1010
2017-01-09 07:27:15 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	3 2
2017-01-09 07:27:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:15 AI_Player.update()	update
2017-01-09 07:27:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	4 2
2017-01-09 07:27:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:27:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:15 AI_Player.update()	update
2017-01-09 07:27:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:16 AI_Player.update()	Search took557ms
2017-01-09 07:27:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:16 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-09 07:27:16 AI_Player.update()		1010,	1011,	1100,	101,	110,	11,	1100
2017-01-09 07:27:16 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-09 07:27:16 AI_Player.update()		1011,	110,	1101,	1001,	1010,	110,	110
2017-01-09 07:27:16 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-09 07:27:16 AI_Player.update()		110,	1011,	110,	101,	1001,	101,	1010
2017-01-09 07:27:16 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-09 07:27:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	4 2
2017-01-09 07:27:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:16 AI_Player.update()	update
2017-01-09 07:27:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:27:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:27:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:16 AI_Player.update()	update
2017-01-09 07:27:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:16 AI_Player.update()	Search took260ms
2017-01-09 07:27:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:16 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-09 07:27:16 AI_Player.update()		1010,	1011,	1100,	101,	110,	11,	1100
2017-01-09 07:27:16 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-09 07:27:16 AI_Player.update()		1011,	110,	1101,	1001,	1010,	101,	110
2017-01-09 07:27:16 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:16 AI_Player.update()		110,	1011,	110,	101,	1001,	101,	1010
2017-01-09 07:27:16 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	4 3
2017-01-09 07:27:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:16 AI_Player.update()	update
2017-01-09 07:27:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	5 3
2017-01-09 07:27:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:27:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:16 AI_Player.update()	update
2017-01-09 07:27:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:17 AI_Player.update()	Search took762ms
2017-01-09 07:27:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:17 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-09 07:27:17 AI_Player.update()		1010,	1011,	1100,	110,	110,	11,	1100
2017-01-09 07:27:17 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-09 07:27:17 AI_Player.update()		1011,	110,	1101,	1001,	1010,	101,	110
2017-01-09 07:27:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-09 07:27:17 AI_Player.update()		110,	1011,	110,	101,	1001,	101,	1010
2017-01-09 07:27:17 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	5 3
2017-01-09 07:27:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:17 AI_Player.update()	update
2017-01-09 07:27:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	5 4
2017-01-09 07:27:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:27:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:17 AI_Player.update()	update
2017-01-09 07:27:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:18 AI_Player.update()	Search took352ms
2017-01-09 07:27:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:18 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-09 07:27:18 AI_Player.update()		1010,	1011,	1100,	101,	110,	11,	1100
2017-01-09 07:27:18 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-09 07:27:18 AI_Player.update()		1011,	110,	1101,	1001,	1010,	101,	110
2017-01-09 07:27:18 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-09 07:27:18 AI_Player.update()		110,	1011,	110,	101,	1001,	101,	1010
2017-01-09 07:27:18 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-09 07:27:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	5 4
2017-01-09 07:27:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:18 AI_Player.update()	update
2017-01-09 07:27:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	6 4
2017-01-09 07:27:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:27:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:18 AI_Player.update()	update
2017-01-09 07:27:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 07:27:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 07:27:18 AI_Player.update()	Search took401ms
2017-01-09 07:27:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:18 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-09 07:27:18 AI_Player.update()		1010,	1011,	1100,	101,	110,	11,	1100
2017-01-09 07:27:18 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-09 07:27:18 AI_Player.update()		1011,	110,	1101,	1001,	1010,	110,	110
2017-01-09 07:27:18 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-09 07:27:18 AI_Player.update()		110,	1011,	110,	101,	1001,	101,	1010
2017-01-09 07:27:18 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-09 07:27:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	6 4
2017-01-09 07:27:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:18 AI_Player.update()	update
2017-01-09 07:27:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 07:27:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 07:27:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 07:27:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 07:27:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	6 5
2017-01-09 07:27:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:27:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding map
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:27:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:19 AI_Player.update()	update
2017-01-09 07:27:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:27:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:27:19 AI_Player.update()	Search took583ms
2017-01-09 07:27:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:19 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-09 07:27:19 AI_Player.update()		1010,	1011,	1100,	110,	110,	11,	1100
2017-01-09 07:27:19 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-09 07:27:19 AI_Player.update()		1011,	110,	1101,	1001,	1010,	110,	110
2017-01-09 07:27:19 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-09 07:27:19 AI_Player.update()		110,	1011,	110,	101,	1001,	101,	1010
2017-01-09 07:27:19 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-09 07:27:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:27:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:27:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:27:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:27:19 GameBoard.setupTreasurePanel()	6 5
2017-01-09 07:27:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:27:19 AI_Player.update()	update
2017-01-09 07:27:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:27:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:27:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:27:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:27:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:27:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:27:19 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-09 07:27:19 AI_Player.update()	Player a has won!
2017-01-09 07:30:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 07:30:04 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-09 07:30:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 07:30:04 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-09 07:30:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:30:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:30:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:30:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:30:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:30:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:30:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 07:30:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 07:30:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:30:04 AI_Player.update()	update
2017-01-09 07:30:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 07:30:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 07:30:04 AI_Player.update()	Search took149ms
2017-01-09 07:30:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 07:30:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:30:04 AI_Player.update()		110,	101,	111,	11,	111,	1101,	11
2017-01-09 07:30:04 AI_Player.update()		11,	1001,	1010,	1101,	1001,	1001,	1100
2017-01-09 07:30:04 AI_Player.update()		1110,	1100,	1110,	110,	111,	1110,	1011
2017-01-09 07:30:04 AI_Player.update()		11,	1110,	1001,	1100,	1011,	11,	101
2017-01-09 07:30:04 AI_Player.update()		1110,	1001,	1101,	110,	1011,	110,	1011
2017-01-09 07:30:04 AI_Player.update()		101,	1100,	11,	1101,	1100,	1011,	1001
2017-01-09 07:30:04 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-09 07:30:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 07:30:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 07:30:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:30:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:30:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:30:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:30:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:30:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:30:04 AI_Player.update()	update
2017-01-09 07:30:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 07:30:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 07:30:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 07:30:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 07:30:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 07:30:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 07:30:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 07:30:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 07:30:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 07:30:04 GameBoard.setupTreasurePanel()	1 1
2017-01-09 07:30:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 07:30:04 AI_Player.update()	update
2017-01-09 07:30:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
