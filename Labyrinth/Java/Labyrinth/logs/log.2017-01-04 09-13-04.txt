2017-01-04 09:13:04 GameBoard.<init>()	Hello World!
2017-01-04 09:13:04 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-04 09:13:04 QueryProlog.initialise()	setup(h2/h2). suceeded
2017-01-04 09:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:05 GameBoard.setupBoardFromString()	Board created
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:13:05 GameBoard.initialise()	[helmet, fairy, gem, map, candle]
2017-01-04 09:13:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:13:05 GameBoard.initialise()	[gold, crown, chest, keys, book]
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:05 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	null
2017-01-04 09:13:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:13:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:05 AI_Player.update()	update
2017-01-04 09:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:05 AI_Player.update()	Search took81ms
2017-01-04 09:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:05 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:05 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:05 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:05 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:05 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:05 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:05 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:13:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:05 AI_Player.update()	update
2017-01-04 09:13:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:05 AI_Player.update()	update
2017-01-04 09:13:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:05 AI_Player.update()	Search took132ms
2017-01-04 09:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:05 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:05 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:05 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:05 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:05 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:05 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:05 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:05 AI_Player.update()	update
2017-01-04 09:13:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:05 AI_Player.update()	update
2017-01-04 09:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:05 AI_Player.update()	Search took30ms
2017-01-04 09:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:05 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:05 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:05 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:05 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:05 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:05 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:05 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:05 AI_Player.update()	update
2017-01-04 09:13:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:06 AI_Player.update()	update
2017-01-04 09:13:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:06 AI_Player.update()	Search took124ms
2017-01-04 09:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:06 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:06 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:06 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:06 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:06 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:06 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:06 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:06 AI_Player.update()	update
2017-01-04 09:13:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:06 AI_Player.update()	update
2017-01-04 09:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:06 AI_Player.update()	Search took85ms
2017-01-04 09:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:06 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:06 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:06 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:06 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:06 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:06 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:06 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:06 AI_Player.update()	update
2017-01-04 09:13:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:06 AI_Player.update()	update
2017-01-04 09:13:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:06 AI_Player.update()	Search took88ms
2017-01-04 09:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:06 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:06 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:06 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:06 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:06 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:06 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:06 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:06 AI_Player.update()	update
2017-01-04 09:13:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()	update
2017-01-04 09:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:07 AI_Player.update()	Search took25ms
2017-01-04 09:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:07 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:07 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:07 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:07 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:07 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:07 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()	update
2017-01-04 09:13:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()	update
2017-01-04 09:13:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:07 AI_Player.update()	Search took114ms
2017-01-04 09:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:07 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:07 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:07 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:07 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:07 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:07 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()	update
2017-01-04 09:13:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()	update
2017-01-04 09:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:07 AI_Player.update()	Search took85ms
2017-01-04 09:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:07 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:07 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:07 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:07 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:07 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:07 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()	update
2017-01-04 09:13:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()	update
2017-01-04 09:13:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:07 AI_Player.update()	Search took98ms
2017-01-04 09:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:07 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:07 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:07 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:07 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:07 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:07 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:07 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:08 AI_Player.update()	update
2017-01-04 09:13:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:08 AI_Player.update()	update
2017-01-04 09:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:08 AI_Player.update()	Search took80ms
2017-01-04 09:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:08 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:08 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:08 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:08 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:08 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:08 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:08 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:08 AI_Player.update()	update
2017-01-04 09:13:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:08 AI_Player.update()	update
2017-01-04 09:13:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:08 AI_Player.update()	Search took124ms
2017-01-04 09:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:08 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:08 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:08 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:08 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:08 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:08 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:08 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:08 AI_Player.update()	update
2017-01-04 09:13:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:08 AI_Player.update()	update
2017-01-04 09:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:08 AI_Player.update()	Search took92ms
2017-01-04 09:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:08 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:08 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:08 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:08 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:08 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:08 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:08 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()	update
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()	update
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:09 AI_Player.update()	Search took101ms
2017-01-04 09:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:09 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:09 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:09 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:09 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:09 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()	update
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()	update
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:09 AI_Player.update()	Search took41ms
2017-01-04 09:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:09 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:09 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:09 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:09 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:09 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:09 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()	update
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()	update
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:09 AI_Player.update()	Search took91ms
2017-01-04 09:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:09 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:09 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:09 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:09 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:09 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:09 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()	update
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:09 AI_Player.update()	update
2017-01-04 09:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:10 AI_Player.update()	Search took95ms
2017-01-04 09:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:10 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:10 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:10 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:10 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:10 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:10 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:10 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:10 AI_Player.update()	update
2017-01-04 09:13:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:10 AI_Player.update()	update
2017-01-04 09:13:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:10 AI_Player.update()	Search took101ms
2017-01-04 09:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:10 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:10 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:10 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:10 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:10 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:10 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:10 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:10 AI_Player.update()	update
2017-01-04 09:13:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:10 AI_Player.update()	update
2017-01-04 09:13:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:10 AI_Player.update()	Search took28ms
2017-01-04 09:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:10 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:10 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:10 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:10 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:10 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:10 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:10 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:10 AI_Player.update()	update
2017-01-04 09:13:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:10 AI_Player.update()	update
2017-01-04 09:13:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:10 AI_Player.update()	Search took100ms
2017-01-04 09:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:10 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:10 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:10 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:10 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:10 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:10 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:10 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:11 AI_Player.update()	update
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:11 AI_Player.update()	update
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:11 AI_Player.update()	Search took103ms
2017-01-04 09:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:11 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:11 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:11 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:11 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:11 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:11 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:11 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:11 AI_Player.update()	update
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:11 AI_Player.update()	update
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:11 AI_Player.update()	Search took106ms
2017-01-04 09:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:11 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:11 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:11 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:11 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:11 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:11 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:11 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:11 AI_Player.update()	update
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:11 AI_Player.update()	update
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:11 AI_Player.update()	Search took49ms
2017-01-04 09:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:11 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:11 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:11 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:11 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:11 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:11 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:11 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:11 AI_Player.update()	update
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()	update
2017-01-04 09:13:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:12 AI_Player.update()	Search took113ms
2017-01-04 09:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:12 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:12 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:12 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:12 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:12 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:12 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()	update
2017-01-04 09:13:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()	update
2017-01-04 09:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:12 AI_Player.update()	Search took94ms
2017-01-04 09:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:12 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:12 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:12 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:12 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:12 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:12 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()	update
2017-01-04 09:13:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()	update
2017-01-04 09:13:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:12 AI_Player.update()	Search took77ms
2017-01-04 09:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:12 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:12 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:12 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:12 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:12 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:12 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()	update
2017-01-04 09:13:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()	update
2017-01-04 09:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:12 AI_Player.update()	Search took33ms
2017-01-04 09:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:12 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:12 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:12 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:12 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:12 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:12 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:12 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:13 AI_Player.update()	update
2017-01-04 09:13:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:13 AI_Player.update()	update
2017-01-04 09:13:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:13 AI_Player.update()	Search took100ms
2017-01-04 09:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:13 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:13 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:13 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:13 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:13 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:13 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:13 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:13 AI_Player.update()	update
2017-01-04 09:13:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:13 AI_Player.update()	update
2017-01-04 09:13:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:13 AI_Player.update()	Search took97ms
2017-01-04 09:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:13 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:13 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:13 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:13 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:13 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:13 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:13 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:13 AI_Player.update()	update
2017-01-04 09:13:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:13 AI_Player.update()	update
2017-01-04 09:13:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:13 AI_Player.update()	Search took101ms
2017-01-04 09:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:13 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:13 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:13 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:13 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:13 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:13 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:13 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()	update
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()	update
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:14 AI_Player.update()	Search took32ms
2017-01-04 09:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:14 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:14 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:14 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:14 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:14 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:14 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()	update
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()	update
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:14 AI_Player.update()	Search took118ms
2017-01-04 09:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:14 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:14 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:14 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:14 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:14 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:14 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()	update
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()	update
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:14 AI_Player.update()	Search took92ms
2017-01-04 09:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:14 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:14 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:14 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:14 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:14 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:14 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()	update
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:14 AI_Player.update()	update
2017-01-04 09:13:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:15 AI_Player.update()	Search took77ms
2017-01-04 09:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:15 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:15 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:15 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:15 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:15 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:15 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:15 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:15 AI_Player.update()	update
2017-01-04 09:13:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:15 AI_Player.update()	update
2017-01-04 09:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:15 AI_Player.update()	Search took24ms
2017-01-04 09:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:15 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:15 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:15 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:15 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:15 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:15 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:15 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:15 AI_Player.update()	update
2017-01-04 09:13:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:15 AI_Player.update()	update
2017-01-04 09:13:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:15 AI_Player.update()	Search took108ms
2017-01-04 09:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:15 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:15 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:15 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:15 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:15 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:15 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:15 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:15 AI_Player.update()	update
2017-01-04 09:13:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:15 AI_Player.update()	update
2017-01-04 09:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:15 AI_Player.update()	Search took109ms
2017-01-04 09:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:15 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:15 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:15 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:15 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:15 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:15 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:15 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()	update
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()	update
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:16 AI_Player.update()	Search took74ms
2017-01-04 09:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:16 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:16 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:16 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:16 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:16 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:16 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()	update
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()	update
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:16 AI_Player.update()	Search took25ms
2017-01-04 09:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:16 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:16 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:16 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:16 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:16 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:16 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()	update
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()	update
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:16 AI_Player.update()	Search took102ms
2017-01-04 09:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:16 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:16 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:16 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:16 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:16 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:16 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()	update
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:16 AI_Player.update()	update
2017-01-04 09:13:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:17 AI_Player.update()	Search took87ms
2017-01-04 09:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:17 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:17 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:17 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:17 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:17 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:17 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:17 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:17 AI_Player.update()	update
2017-01-04 09:13:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:17 AI_Player.update()	update
2017-01-04 09:13:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:17 AI_Player.update()	Search took79ms
2017-01-04 09:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:17 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:17 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:17 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:17 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:17 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:17 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:17 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:17 AI_Player.update()	update
2017-01-04 09:13:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:17 AI_Player.update()	update
2017-01-04 09:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:17 AI_Player.update()	Search took36ms
2017-01-04 09:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:17 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:17 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:17 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:17 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:17 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:17 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:17 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:17 AI_Player.update()	update
2017-01-04 09:13:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:17 AI_Player.update()	update
2017-01-04 09:13:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:17 AI_Player.update()	Search took120ms
2017-01-04 09:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:17 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:17 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:17 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:17 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:17 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:17 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:17 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()	update
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()	update
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:18 AI_Player.update()	Search took88ms
2017-01-04 09:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:18 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:18 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:18 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:18 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:18 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:18 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()	update
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()	update
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:18 AI_Player.update()	Search took75ms
2017-01-04 09:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:18 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:18 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:18 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:18 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:18 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:18 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()	update
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()	update
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:18 AI_Player.update()	Search took24ms
2017-01-04 09:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:18 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:18 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:18 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:18 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:18 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:18 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()	update
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:18 AI_Player.update()	update
2017-01-04 09:13:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:19 AI_Player.update()	Search took93ms
2017-01-04 09:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:19 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:19 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:19 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:19 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:19 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:19 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()	update
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()	update
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:19 AI_Player.update()	Search took87ms
2017-01-04 09:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:19 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:19 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:19 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:19 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:19 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:19 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()	update
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()	update
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:19 AI_Player.update()	Search took100ms
2017-01-04 09:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:19 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:19 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:19 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:19 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:19 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:19 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()	update
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()	update
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:19 AI_Player.update()	Search took26ms
2017-01-04 09:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:19 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:19 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:19 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:19 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:19 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:19 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:19 AI_Player.update()	update
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()	update
2017-01-04 09:13:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:20 AI_Player.update()	Search took93ms
2017-01-04 09:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:20 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:20 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:20 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:20 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:20 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:20 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()	update
2017-01-04 09:13:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()	update
2017-01-04 09:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:20 AI_Player.update()	Search took91ms
2017-01-04 09:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:20 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:20 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:20 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:20 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:20 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:20 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()	update
2017-01-04 09:13:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()	update
2017-01-04 09:13:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:20 AI_Player.update()	Search took73ms
2017-01-04 09:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:20 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:20 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:20 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:20 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:20 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:20 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()	update
2017-01-04 09:13:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()	update
2017-01-04 09:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:20 AI_Player.update()	Search took24ms
2017-01-04 09:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:20 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:20 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:20 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:20 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:20 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:20 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:20 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:21 AI_Player.update()	update
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:21 AI_Player.update()	update
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:21 AI_Player.update()	Search took102ms
2017-01-04 09:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:21 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:21 AI_Player.update()		1010,	110,	110,	1110,	1001,	1100,	1001
2017-01-04 09:13:21 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:21 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:21 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:21 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:21 AI_Player.update()	update
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:21 AI_Player.update()	update
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:13:21 AI_Player.update()	Search took100ms
2017-01-04 09:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:21 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 09:13:21 AI_Player.update()		1001,	1010,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:21 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-04 09:13:21 AI_Player.update()		1010,	101,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:21 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:21 AI_Player.update()		110,	101,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:21 AI_Player.update()	update
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:13:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:21 AI_Player.update()	update
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:13:21 AI_Player.update()	Search took76ms
2017-01-04 09:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:21 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-04 09:13:21 AI_Player.update()		1001,	101,	110,	110,	1110,	1001,	1100
2017-01-04 09:13:21 AI_Player.update()		1110,	1010,	1110,	111,	111,	110,	1011
2017-01-04 09:13:21 AI_Player.update()		1010,	1001,	1001,	1100,	101,	1010,	110
2017-01-04 09:13:21 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 09:13:21 AI_Player.update()		110,	11,	1010,	110,	1010,	101,	1010
2017-01-04 09:13:21 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-04 09:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:13:21 AI_Player.update()	update
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:13:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:13:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:13:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:13:21 GameBoard.setupTreasurePanel()	1 1
