2017-01-05 12:16:03 GameBoard.<init>()	Hello World!
2017-01-05 12:16:03 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 12:16:03 QueryProlog.initialise()	setup(h2/h3). suceeded
2017-01-05 12:16:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:03 GameBoard.setupBoardFromString()	Board created
2017-01-05 12:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:03 GameBoard.initialise()	[crown, ring, keys, sword, map]
2017-01-05 12:16:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:03 GameBoard.initialise()	[helmet, gem, fairy, candle, chest]
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:03 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	null
2017-01-05 12:16:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:03 AI_Player.update()	update
2017-01-05 12:16:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 12:16:03 AI_Player.update()	Search took33ms
2017-01-05 12:16:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:03 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-05 12:16:03 AI_Player.update()		111,	11,	101,	101,	1010,	110,	110
2017-01-05 12:16:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-05 12:16:03 AI_Player.update()		1011,	1001,	110,	1100,	1010,	111,	1010
2017-01-05 12:16:03 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:03 AI_Player.update()		101,	111,	111,	101,	11,	1100,	1010
2017-01-05 12:16:03 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 12:16:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:03 AI_Player.update()	update
2017-01-05 12:16:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 12:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:03 AI_Player.update()	update
2017-01-05 12:16:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 12:16:03 AI_Player.update()	Search took16ms
2017-01-05 12:16:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:03 AI_Player.update()		110,	1100,	111,	111,	111,	1001,	11
2017-01-05 12:16:03 AI_Player.update()		111,	11,	101,	101,	1010,	1010,	110
2017-01-05 12:16:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 12:16:03 AI_Player.update()		1011,	1001,	110,	1100,	1010,	11,	1010
2017-01-05 12:16:03 AI_Player.update()		1110,	101,	1101,	1010,	1011,	111,	1011
2017-01-05 12:16:03 AI_Player.update()		101,	111,	111,	101,	11,	11,	1010
2017-01-05 12:16:03 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 12:16:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:03 AI_Player.update()	update
2017-01-05 12:16:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 12:16:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:03 AI_Player.update()	update
2017-01-05 12:16:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 12:16:04 AI_Player.update()	Search took90ms
2017-01-05 12:16:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:04 AI_Player.update()		110,	11,	111,	111,	111,	1001,	11
2017-01-05 12:16:04 AI_Player.update()		111,	1001,	101,	101,	1010,	1010,	110
2017-01-05 12:16:04 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 12:16:04 AI_Player.update()		1011,	101,	110,	1100,	1010,	11,	1010
2017-01-05 12:16:04 AI_Player.update()		1110,	111,	1101,	1010,	1011,	111,	1011
2017-01-05 12:16:04 AI_Player.update()		101,	1100,	111,	101,	11,	11,	1010
2017-01-05 12:16:04 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 12:16:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:04 AI_Player.update()	update
2017-01-05 12:16:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 12:16:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 12:16:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:04 AI_Player.update()	update
2017-01-05 12:16:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 12:16:04 AI_Player.update()	Search took58ms
2017-01-05 12:16:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:04 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-05 12:16:04 AI_Player.update()		111,	1001,	101,	101,	1010,	1001,	110
2017-01-05 12:16:04 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 12:16:04 AI_Player.update()		1011,	101,	110,	1100,	1010,	110,	1010
2017-01-05 12:16:04 AI_Player.update()		1110,	111,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:04 AI_Player.update()		101,	1100,	111,	101,	11,	111,	1010
2017-01-05 12:16:04 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-05 12:16:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 12:16:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:04 AI_Player.update()	update
2017-01-05 12:16:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 12:16:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 12:16:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:04 AI_Player.update()	update
2017-01-05 12:16:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 12:16:05 AI_Player.update()	Search took541ms
2017-01-05 12:16:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:05 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-05 12:16:05 AI_Player.update()		110,	111,	1001,	101,	101,	1010,	1001
2017-01-05 12:16:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 12:16:05 AI_Player.update()		1011,	101,	110,	1100,	1010,	110,	1010
2017-01-05 12:16:05 AI_Player.update()		1110,	111,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:05 AI_Player.update()		101,	1100,	111,	101,	11,	111,	1010
2017-01-05 12:16:05 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-05 12:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 12:16:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:05 AI_Player.update()	update
2017-01-05 12:16:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 12:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 12:16:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:05 AI_Player.update()	update
2017-01-05 12:16:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 12:16:05 AI_Player.update()	Search took183ms
2017-01-05 12:16:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:05 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-05 12:16:05 AI_Player.update()		110,	111,	1001,	101,	101,	1100,	1001
2017-01-05 12:16:05 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 12:16:05 AI_Player.update()		1011,	101,	110,	1100,	1010,	1010,	1010
2017-01-05 12:16:05 AI_Player.update()		1110,	111,	1101,	1010,	1011,	110,	1011
2017-01-05 12:16:05 AI_Player.update()		101,	1100,	111,	101,	11,	11,	1010
2017-01-05 12:16:05 AI_Player.update()		1100,	1100,	1101,	11,	1101,	111,	1001
2017-01-05 12:16:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 12:16:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:05 AI_Player.update()	update
2017-01-05 12:16:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 12:16:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 12:16:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:05 AI_Player.update()	update
2017-01-05 12:16:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 12:16:06 AI_Player.update()	Search took811ms
2017-01-05 12:16:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:06 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-05 12:16:06 AI_Player.update()		1001,	110,	111,	1001,	101,	101,	1100
2017-01-05 12:16:06 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 12:16:06 AI_Player.update()		1011,	101,	110,	1100,	1010,	1010,	1010
2017-01-05 12:16:06 AI_Player.update()		1110,	111,	1101,	1010,	1011,	110,	1011
2017-01-05 12:16:06 AI_Player.update()		101,	1100,	111,	101,	11,	11,	1010
2017-01-05 12:16:06 AI_Player.update()		1100,	1100,	1101,	11,	1101,	111,	1001
2017-01-05 12:16:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	3 1
2017-01-05 12:16:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:06 AI_Player.update()	update
2017-01-05 12:16:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 12:16:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	4 1
2017-01-05 12:16:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:06 AI_Player.update()	update
2017-01-05 12:16:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 12:16:07 AI_Player.update()	Search took734ms
2017-01-05 12:16:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:07 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 12:16:07 AI_Player.update()		1001,	110,	111,	1010,	101,	101,	1100
2017-01-05 12:16:07 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-05 12:16:07 AI_Player.update()		1011,	101,	110,	1010,	1010,	1010,	1010
2017-01-05 12:16:07 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 12:16:07 AI_Player.update()		101,	1100,	111,	11,	11,	11,	1010
2017-01-05 12:16:07 AI_Player.update()		1100,	1100,	1101,	111,	1101,	111,	1001
2017-01-05 12:16:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	4 1
2017-01-05 12:16:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:07 AI_Player.update()	update
2017-01-05 12:16:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 12:16:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	4 2
2017-01-05 12:16:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:07 AI_Player.update()	update
2017-01-05 12:16:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 12:16:08 AI_Player.update()	Search took1012ms
2017-01-05 12:16:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:08 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 12:16:08 AI_Player.update()		110,	111,	1010,	101,	101,	1100,	1001
2017-01-05 12:16:08 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-05 12:16:08 AI_Player.update()		1011,	101,	110,	1010,	1010,	1010,	1010
2017-01-05 12:16:08 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 12:16:08 AI_Player.update()		101,	1100,	111,	11,	11,	11,	1010
2017-01-05 12:16:08 AI_Player.update()		1100,	1100,	1101,	111,	1101,	111,	1001
2017-01-05 12:16:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	4 2
2017-01-05 12:16:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:08 AI_Player.update()	update
2017-01-05 12:16:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 12:16:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	5 2
2017-01-05 12:16:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:08 AI_Player.update()	update
2017-01-05 12:16:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 12:16:09 AI_Player.update()	Search took882ms
2017-01-05 12:16:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:09 AI_Player.update()		110,	111,	111,	1001,	111,	11,	11
2017-01-05 12:16:09 AI_Player.update()		110,	1001,	1010,	101,	101,	1100,	1001
2017-01-05 12:16:09 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 12:16:09 AI_Player.update()		1011,	111,	110,	1010,	1010,	1010,	1010
2017-01-05 12:16:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 12:16:09 AI_Player.update()		101,	1100,	111,	11,	11,	11,	1010
2017-01-05 12:16:09 AI_Player.update()		1100,	11,	1101,	111,	1101,	111,	1001
2017-01-05 12:16:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	5 2
2017-01-05 12:16:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:09 AI_Player.update()	update
2017-01-05 12:16:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 12:16:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	5 3
2017-01-05 12:16:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:10 AI_Player.update()	update
2017-01-05 12:16:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 12:16:10 AI_Player.update()	Search took357ms
2017-01-05 12:16:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:10 AI_Player.update()		110,	111,	111,	1001,	111,	11,	11
2017-01-05 12:16:10 AI_Player.update()		110,	1001,	1010,	101,	101,	1100,	1001
2017-01-05 12:16:10 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 12:16:10 AI_Player.update()		111,	110,	1010,	1010,	1010,	1010,	1011
2017-01-05 12:16:10 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 12:16:10 AI_Player.update()		101,	1100,	111,	11,	11,	11,	1010
2017-01-05 12:16:10 AI_Player.update()		1100,	11,	1101,	111,	1101,	111,	1001
2017-01-05 12:16:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	5 3
2017-01-05 12:16:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:10 AI_Player.update()	update
2017-01-05 12:16:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 12:16:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	6 3
2017-01-05 12:16:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 12:16:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 12:16:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:10 AI_Player.update()	update
2017-01-05 12:16:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 12:16:11 AI_Player.update()	Search took553ms
2017-01-05 12:16:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:11 AI_Player.update()		110,	111,	111,	1001,	111,	11,	11
2017-01-05 12:16:11 AI_Player.update()		1001,	1010,	101,	101,	1100,	1001,	110
2017-01-05 12:16:11 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 12:16:11 AI_Player.update()		111,	110,	1010,	1010,	1010,	1010,	1011
2017-01-05 12:16:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 12:16:11 AI_Player.update()		101,	1100,	111,	11,	11,	11,	1010
2017-01-05 12:16:11 AI_Player.update()		1100,	11,	1101,	111,	1101,	111,	1001
2017-01-05 12:16:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:11 GameBoard.setupTreasurePanel()	6 3
2017-01-05 12:16:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:11 AI_Player.update()	update
2017-01-05 12:16:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 12:16:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:11 GameBoard.setupTreasurePanel()	6 3
2017-01-05 12:16:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:11 AI_Player.update()	update
2017-01-05 12:16:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 12:16:11 AI_Player.update()	Search took108ms
2017-01-05 12:16:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:11 AI_Player.update()		110,	111,	111,	1001,	111,	11,	11
2017-01-05 12:16:11 AI_Player.update()		110,	1001,	1010,	101,	101,	1100,	1001
2017-01-05 12:16:11 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 12:16:11 AI_Player.update()		111,	110,	1010,	1010,	1010,	1010,	1011
2017-01-05 12:16:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 12:16:11 AI_Player.update()		101,	1100,	111,	11,	11,	11,	1010
2017-01-05 12:16:11 AI_Player.update()		1100,	11,	1101,	111,	1101,	111,	1001
2017-01-05 12:16:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:11 GameBoard.setupTreasurePanel()	6 3
2017-01-05 12:16:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:11 AI_Player.update()	update
2017-01-05 12:16:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 12:16:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:11 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 12:16:11 AI_Player.update()	Player a has won!
2017-01-05 12:16:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 12:16:13 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 12:16:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 12:16:13 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-05 12:16:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 12:16:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 12:16:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:13 AI_Player.update()	update
2017-01-05 12:16:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 12:16:13 AI_Player.update()	Search took48ms
2017-01-05 12:16:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:13 AI_Player.update()		110,	1100,	111,	11,	111,	111,	11
2017-01-05 12:16:13 AI_Player.update()		1010,	1110,	1001,	1001,	1010,	11,	101
2017-01-05 12:16:13 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 12:16:13 AI_Player.update()		11,	11,	1001,	1010,	1110,	1010,	1100
2017-01-05 12:16:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:13 AI_Player.update()		1010,	1100,	1101,	11,	1010,	1011,	1010
2017-01-05 12:16:13 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1110,	1001
2017-01-05 12:16:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:13 AI_Player.update()	update
2017-01-05 12:16:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 12:16:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:14 AI_Player.update()	update
2017-01-05 12:16:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 12:16:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 12:16:14 AI_Player.update()	Search took78ms
2017-01-05 12:16:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:14 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-05 12:16:14 AI_Player.update()		1010,	1110,	1001,	11,	1010,	11,	101
2017-01-05 12:16:14 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 12:16:14 AI_Player.update()		11,	11,	1001,	101,	1110,	1010,	1100
2017-01-05 12:16:14 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:14 AI_Player.update()		1010,	1100,	1101,	1010,	1010,	1011,	1010
2017-01-05 12:16:14 AI_Player.update()		1100,	110,	1101,	11,	1101,	1110,	1001
2017-01-05 12:16:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:14 AI_Player.update()	update
2017-01-05 12:16:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 12:16:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 12:16:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 12:16:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 12:16:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:14 AI_Player.update()	update
2017-01-05 12:16:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 12:16:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-05 12:16:14 AI_Player.update()	Search took270ms
2017-01-05 12:16:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 12:16:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:14 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-05 12:16:14 AI_Player.update()		1010,	1100,	1001,	11,	1010,	11,	101
2017-01-05 12:16:14 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-05 12:16:14 AI_Player.update()		11,	1001,	1001,	101,	1110,	1010,	1100
2017-01-05 12:16:14 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-05 12:16:14 AI_Player.update()		1010,	1010,	1101,	1010,	1010,	1011,	1010
2017-01-05 12:16:14 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1110,	1001
2017-01-05 12:16:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 12:16:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 12:16:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:14 AI_Player.update()	update
2017-01-05 12:16:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 12:16:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 12:16:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-05 12:16:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 12:16:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 12:16:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 12:16:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 12:16:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 12:16:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 12:16:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 12:16:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 12:16:14 AI_Player.update()	update
2017-01-05 12:16:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
