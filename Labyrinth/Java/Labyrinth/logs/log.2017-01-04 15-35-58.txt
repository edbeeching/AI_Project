2017-01-04 15:35:58 GameBoard.<init>()	Hello World!
2017-01-04 15:35:58 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-04 15:35:58 QueryProlog.initialise()	setup(h2/h3). suceeded
2017-01-04 15:35:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:35:58 GameBoard.setupBoardFromString()	Board created
2017-01-04 15:35:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:35:58 GameBoard.initialise()	[fairy, keys, candle, book, crown]
2017-01-04 15:35:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:35:58 GameBoard.initialise()	[chest, gold, ring, map, sword]
2017-01-04 15:35:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:58 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-04 15:35:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	null
2017-01-04 15:35:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:35:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:35:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:35:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:58 AI_Player.update()	update
2017-01-04 15:35:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:35:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:35:58 AI_Player.update()	Search took53ms
2017-01-04 15:35:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:35:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:58 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-04 15:35:58 AI_Player.update()		1010,	1010,	1100,	1100,	101,	11,	110
2017-01-04 15:35:58 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 15:35:58 AI_Player.update()		1010,	1110,	1010,	101,	110,	1001,	11
2017-01-04 15:35:58 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1011,	1011
2017-01-04 15:35:58 AI_Player.update()		101,	1010,	1010,	11,	11,	1010,	1110
2017-01-04 15:35:58 AI_Player.update()		1100,	110,	1101,	1001,	1101,	110,	1001
2017-01-04 15:35:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:35:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:35:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:35:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:35:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:35:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:35:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:35:59 AI_Player.update()	Search took19ms
2017-01-04 15:35:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-04 15:35:59 AI_Player.update()		1010,	1010,	1100,	1100,	101,	1001,	110
2017-01-04 15:35:59 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:35:59 AI_Player.update()		1010,	1110,	1010,	101,	110,	1010,	11
2017-01-04 15:35:59 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 15:35:59 AI_Player.update()		101,	1010,	1010,	11,	11,	1011,	1110
2017-01-04 15:35:59 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:35:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:35:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:35:59 AI_Player.update()	Search took175ms
2017-01-04 15:35:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-04 15:35:59 AI_Player.update()		1010,	1100,	1100,	101,	1001,	110,	1010
2017-01-04 15:35:59 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:35:59 AI_Player.update()		1010,	1110,	1010,	101,	110,	1010,	11
2017-01-04 15:35:59 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 15:35:59 AI_Player.update()		101,	1010,	1010,	11,	11,	1011,	1110
2017-01-04 15:35:59 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:35:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:35:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:35:59 AI_Player.update()	Search took24ms
2017-01-04 15:35:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-04 15:35:59 AI_Player.update()		1010,	1010,	1100,	1100,	101,	1001,	110
2017-01-04 15:35:59 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:35:59 AI_Player.update()		1010,	1110,	1010,	101,	110,	1010,	11
2017-01-04 15:35:59 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 15:35:59 AI_Player.update()		101,	1010,	1010,	11,	11,	1011,	1110
2017-01-04 15:35:59 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:35:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:35:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:35:59 AI_Player.update()	Search took176ms
2017-01-04 15:35:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-04 15:35:59 AI_Player.update()		1010,	1010,	1100,	1100,	101,	1001,	110
2017-01-04 15:35:59 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:35:59 AI_Player.update()		11,	1010,	1110,	1010,	101,	110,	1010
2017-01-04 15:35:59 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 15:35:59 AI_Player.update()		101,	1010,	1010,	11,	11,	1011,	1110
2017-01-04 15:35:59 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:35:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:35:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:35:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:35:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:35:59 AI_Player.update()	Search took67ms
2017-01-04 15:35:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-04 15:35:59 AI_Player.update()		1010,	1010,	1100,	1100,	101,	1001,	110
2017-01-04 15:35:59 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:35:59 AI_Player.update()		1010,	1110,	1010,	101,	110,	1010,	11
2017-01-04 15:35:59 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-04 15:35:59 AI_Player.update()		101,	1010,	1010,	11,	11,	1011,	1110
2017-01-04 15:35:59 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:35:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:35:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:35:59 AI_Player.update()	Search took113ms
2017-01-04 15:35:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-04 15:35:59 AI_Player.update()		1010,	1010,	1100,	11,	101,	1001,	110
2017-01-04 15:35:59 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-04 15:35:59 AI_Player.update()		1010,	1110,	1010,	1010,	110,	1010,	11
2017-01-04 15:35:59 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 15:35:59 AI_Player.update()		101,	1010,	1010,	1001,	11,	1011,	1110
2017-01-04 15:35:59 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:35:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:35:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:35:59 AI_Player.update()	Search took81ms
2017-01-04 15:35:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-04 15:35:59 AI_Player.update()		1010,	1010,	1100,	101,	101,	1001,	110
2017-01-04 15:35:59 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-04 15:35:59 AI_Player.update()		1010,	1110,	1010,	11,	110,	1010,	11
2017-01-04 15:35:59 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1001,	1011
2017-01-04 15:35:59 AI_Player.update()		101,	1010,	1010,	1010,	11,	1011,	1110
2017-01-04 15:35:59 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 15:35:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:35:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:35:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:35:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:35:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:35:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:35:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:35:59 AI_Player.update()	update
2017-01-04 15:35:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:00 AI_Player.update()	Search took168ms
2017-01-04 15:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-04 15:36:00 AI_Player.update()		1010,	1010,	1100,	11,	101,	1001,	110
2017-01-04 15:36:00 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-04 15:36:00 AI_Player.update()		1010,	1110,	1010,	1010,	110,	1010,	11
2017-01-04 15:36:00 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-04 15:36:00 AI_Player.update()		101,	1010,	1010,	1001,	11,	1011,	1110
2017-01-04 15:36:00 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:00 AI_Player.update()	Search took33ms
2017-01-04 15:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-04 15:36:00 AI_Player.update()		1010,	101,	1100,	11,	101,	1001,	110
2017-01-04 15:36:00 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-04 15:36:00 AI_Player.update()		1010,	1001,	1010,	1010,	110,	1010,	11
2017-01-04 15:36:00 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 15:36:00 AI_Player.update()		101,	110,	1010,	1001,	11,	1011,	1110
2017-01-04 15:36:00 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:00 AI_Player.update()	Search took185ms
2017-01-04 15:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-04 15:36:00 AI_Player.update()		1010,	101,	1100,	11,	101,	1001,	110
2017-01-04 15:36:00 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-04 15:36:00 AI_Player.update()		11,	1010,	1001,	1010,	1010,	110,	1010
2017-01-04 15:36:00 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 15:36:00 AI_Player.update()		101,	110,	1010,	1001,	11,	1011,	1110
2017-01-04 15:36:00 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 1
2017-01-04 15:36:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:00 AI_Player.update()	Search took51ms
2017-01-04 15:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-04 15:36:00 AI_Player.update()		1010,	101,	1100,	11,	101,	1001,	110
2017-01-04 15:36:00 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-04 15:36:00 AI_Player.update()		11,	1010,	1001,	1010,	1010,	110,	1010
2017-01-04 15:36:00 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 15:36:00 AI_Player.update()		110,	1010,	1001,	11,	1011,	1110,	101
2017-01-04 15:36:00 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 1
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:00 AI_Player.update()	Search took106ms
2017-01-04 15:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-04 15:36:00 AI_Player.update()		1010,	101,	1100,	11,	101,	1001,	110
2017-01-04 15:36:00 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-04 15:36:00 AI_Player.update()		11,	1010,	1001,	1010,	1010,	110,	1010
2017-01-04 15:36:00 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 15:36:00 AI_Player.update()		101,	110,	1010,	1001,	11,	1011,	1110
2017-01-04 15:36:00 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:00 AI_Player.update()	Search took160ms
2017-01-04 15:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 15:36:00 AI_Player.update()		1010,	101,	1100,	11,	101,	110,	110
2017-01-04 15:36:00 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 15:36:00 AI_Player.update()		11,	1010,	1001,	1010,	1010,	11,	1010
2017-01-04 15:36:00 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:00 AI_Player.update()		101,	110,	1010,	1001,	11,	1001,	1110
2017-01-04 15:36:00 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1011,	1001
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:00 AI_Player.update()	Search took176ms
2017-01-04 15:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 15:36:00 AI_Player.update()		1010,	1110,	1100,	11,	101,	110,	110
2017-01-04 15:36:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 15:36:00 AI_Player.update()		11,	1010,	1001,	1010,	1010,	11,	1010
2017-01-04 15:36:00 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:00 AI_Player.update()		101,	11,	1010,	1001,	11,	1001,	1110
2017-01-04 15:36:00 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1011,	1001
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:00 AI_Player.update()	Search took156ms
2017-01-04 15:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 15:36:00 AI_Player.update()		1010,	1110,	1100,	11,	101,	1010,	110
2017-01-04 15:36:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 15:36:00 AI_Player.update()		11,	1010,	1001,	1010,	1010,	1001,	1010
2017-01-04 15:36:00 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-04 15:36:00 AI_Player.update()		101,	11,	1010,	1001,	11,	110,	1110
2017-01-04 15:36:00 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 15:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	4 3
2017-01-04 15:36:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:00 AI_Player.update()	update
2017-01-04 15:36:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:01 AI_Player.update()	Search took164ms
2017-01-04 15:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 15:36:01 AI_Player.update()		1010,	1110,	1100,	11,	101,	1010,	110
2017-01-04 15:36:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 15:36:01 AI_Player.update()		11,	1010,	1001,	1010,	1010,	1001,	1010
2017-01-04 15:36:01 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-04 15:36:01 AI_Player.update()		1110,	101,	11,	1010,	1001,	11,	110
2017-01-04 15:36:01 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	4 3
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:01 AI_Player.update()	Search took106ms
2017-01-04 15:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 15:36:01 AI_Player.update()		1110,	1100,	11,	101,	1010,	110,	1010
2017-01-04 15:36:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 15:36:01 AI_Player.update()		11,	1010,	1001,	1010,	1010,	1001,	1010
2017-01-04 15:36:01 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-04 15:36:01 AI_Player.update()		1110,	101,	11,	1010,	1001,	11,	110
2017-01-04 15:36:01 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:01 AI_Player.update()	Search took179ms
2017-01-04 15:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()		110,	1100,	111,	1100,	111,	1011,	11
2017-01-04 15:36:01 AI_Player.update()		1110,	1010,	11,	101,	1010,	110,	1010
2017-01-04 15:36:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 15:36:01 AI_Player.update()		11,	110,	1001,	1010,	1010,	1001,	1010
2017-01-04 15:36:01 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 15:36:01 AI_Player.update()		1110,	1010,	11,	1010,	1001,	11,	110
2017-01-04 15:36:01 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:01 AI_Player.update()	Search took111ms
2017-01-04 15:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()		110,	1100,	111,	1100,	111,	1011,	11
2017-01-04 15:36:01 AI_Player.update()		1010,	11,	101,	1010,	110,	1010,	1110
2017-01-04 15:36:01 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 15:36:01 AI_Player.update()		11,	110,	1001,	1010,	1010,	1001,	1010
2017-01-04 15:36:01 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 15:36:01 AI_Player.update()		1110,	1010,	11,	1010,	1001,	11,	110
2017-01-04 15:36:01 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	5 4
2017-01-04 15:36:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:01 AI_Player.update()	Search took256ms
2017-01-04 15:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-04 15:36:01 AI_Player.update()		1010,	11,	101,	101,	110,	1010,	1110
2017-01-04 15:36:01 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-04 15:36:01 AI_Player.update()		11,	110,	1001,	11,	1010,	1001,	1010
2017-01-04 15:36:01 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 15:36:01 AI_Player.update()		1110,	1010,	11,	1010,	1001,	11,	110
2017-01-04 15:36:01 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	5 4
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	6 4
2017-01-04 15:36:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:01 AI_Player.update()	Search took35ms
2017-01-04 15:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 15:36:01 AI_Player.update()		1010,	1100,	101,	101,	110,	1010,	1110
2017-01-04 15:36:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 15:36:01 AI_Player.update()		11,	1010,	1001,	11,	1010,	1001,	1010
2017-01-04 15:36:01 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 15:36:01 AI_Player.update()		1110,	101,	11,	1010,	1001,	11,	110
2017-01-04 15:36:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 15:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	6 4
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:01 GameBoard.setupTreasurePanel()	6 4
2017-01-04 15:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:01 AI_Player.update()	update
2017-01-04 15:36:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took144ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 15:36:02 AI_Player.update()		1010,	1100,	101,	1010,	110,	1010,	1110
2017-01-04 15:36:02 AI_Player.update()		1110,	11,	1110,	11,	111,	110,	1011
2017-01-04 15:36:02 AI_Player.update()		11,	1010,	1001,	1010,	1010,	1001,	1010
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 15:36:02 AI_Player.update()		1110,	101,	11,	1100,	1001,	11,	110
2017-01-04 15:36:02 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	6 4
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	6 4
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took193ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-04 15:36:02 AI_Player.update()		1010,	1100,	101,	1010,	110,	1010,	1110
2017-01-04 15:36:02 AI_Player.update()		1110,	11,	1110,	11,	111,	110,	1011
2017-01-04 15:36:02 AI_Player.update()		11,	1010,	1001,	1010,	1010,	1001,	1010
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-04 15:36:02 AI_Player.update()		101,	11,	1100,	1001,	11,	110,	1110
2017-01-04 15:36:02 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	6 4
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	6 5
2017-01-04 15:36:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took109ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-04 15:36:02 AI_Player.update()		1010,	1100,	101,	1010,	110,	1011,	1110
2017-01-04 15:36:02 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-04 15:36:02 AI_Player.update()		11,	1010,	1001,	1010,	1010,	110,	1010
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-04 15:36:02 AI_Player.update()		101,	11,	1100,	1001,	11,	11,	1110
2017-01-04 15:36:02 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	6 5
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 15:36:02 AI_Player.update()	Player a has won!
2017-01-04 15:36:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 15:36:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 15:36:02 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took19ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	11,	111,	11,	111,	111,	11
2017-01-04 15:36:02 AI_Player.update()		110,	110,	1010,	111,	11,	101,	1100
2017-01-04 15:36:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:02 AI_Player.update()		1010,	1100,	110,	1001,	111,	110,	1101
2017-01-04 15:36:02 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1010,	1001,	1010,	110,	1100
2017-01-04 15:36:02 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took66ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	11,	111,	111,	111,	111,	11
2017-01-04 15:36:02 AI_Player.update()		110,	110,	1010,	1001,	11,	101,	1100
2017-01-04 15:36:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:02 AI_Player.update()		1010,	1100,	110,	1010,	111,	110,	1101
2017-01-04 15:36:02 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1010,	1010,	1010,	110,	1100
2017-01-04 15:36:02 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took152ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	11,	111,	1001,	111,	111,	11
2017-01-04 15:36:02 AI_Player.update()		110,	110,	1010,	1001,	11,	101,	1100
2017-01-04 15:36:02 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-04 15:36:02 AI_Player.update()		1010,	1100,	110,	1001,	111,	110,	1101
2017-01-04 15:36:02 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1010,	11,	1010,	110,	1100
2017-01-04 15:36:02 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took39ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	11,	111,	111,	111,	111,	11
2017-01-04 15:36:02 AI_Player.update()		110,	110,	1010,	1001,	11,	101,	1100
2017-01-04 15:36:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:02 AI_Player.update()		1010,	1100,	110,	1010,	111,	110,	1101
2017-01-04 15:36:02 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1010,	1010,	1010,	110,	1100
2017-01-04 15:36:02 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took121ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	11,	111,	1001,	111,	111,	11
2017-01-04 15:36:02 AI_Player.update()		110,	110,	1010,	1001,	11,	101,	1100
2017-01-04 15:36:02 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-04 15:36:02 AI_Player.update()		1010,	1100,	110,	1001,	111,	110,	1101
2017-01-04 15:36:02 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1010,	11,	1010,	110,	1100
2017-01-04 15:36:02 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took59ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	11,	111,	1001,	111,	111,	11
2017-01-04 15:36:02 AI_Player.update()		1100,	110,	110,	1010,	1001,	11,	101
2017-01-04 15:36:02 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-04 15:36:02 AI_Player.update()		1010,	1100,	110,	1001,	111,	110,	1101
2017-01-04 15:36:02 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1010,	11,	1010,	110,	1100
2017-01-04 15:36:02 AI_Player.update()		1100,	1010,	1101,	111,	1101,	101,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took36ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	1010,	111,	1001,	111,	111,	11
2017-01-04 15:36:02 AI_Player.update()		1100,	11,	110,	1010,	1001,	11,	101
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-04 15:36:02 AI_Player.update()		1010,	1001,	110,	1001,	111,	110,	1101
2017-01-04 15:36:02 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-04 15:36:02 AI_Player.update()		1110,	101,	1010,	11,	1010,	110,	1100
2017-01-04 15:36:02 AI_Player.update()		1100,	110,	1101,	111,	1101,	101,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:02 AI_Player.update()	Search took76ms
2017-01-04 15:36:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()		110,	1010,	111,	1001,	111,	111,	11
2017-01-04 15:36:02 AI_Player.update()		11,	110,	1010,	1001,	11,	101,	1100
2017-01-04 15:36:02 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-04 15:36:02 AI_Player.update()		1010,	1001,	110,	1001,	111,	110,	1101
2017-01-04 15:36:02 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	11,	1011
2017-01-04 15:36:02 AI_Player.update()		1110,	101,	1010,	11,	1010,	110,	1100
2017-01-04 15:36:02 AI_Player.update()		1100,	110,	1101,	111,	1101,	101,	1001
2017-01-04 15:36:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	1 2
2017-01-04 15:36:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:02 AI_Player.update()	update
2017-01-04 15:36:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:03 AI_Player.update()	Search took92ms
2017-01-04 15:36:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()		110,	1010,	111,	111,	111,	111,	11
2017-01-04 15:36:03 AI_Player.update()		11,	110,	1010,	1001,	11,	101,	1100
2017-01-04 15:36:03 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:03 AI_Player.update()		1010,	1001,	110,	1010,	111,	110,	1101
2017-01-04 15:36:03 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	11,	1011
2017-01-04 15:36:03 AI_Player.update()		1110,	101,	1010,	1010,	1010,	110,	1100
2017-01-04 15:36:03 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 15:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	1 2
2017-01-04 15:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()	update
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	2 2
2017-01-04 15:36:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()	update
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:03 AI_Player.update()	Search took119ms
2017-01-04 15:36:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 15:36:03 AI_Player.update()		11,	110,	1010,	1001,	11,	101,	1100
2017-01-04 15:36:03 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:03 AI_Player.update()		1010,	1100,	110,	1010,	111,	110,	1101
2017-01-04 15:36:03 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-04 15:36:03 AI_Player.update()		1110,	110,	1010,	1010,	1010,	110,	1100
2017-01-04 15:36:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 15:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	2 2
2017-01-04 15:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()	update
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	2 3
2017-01-04 15:36:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()	update
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:03 AI_Player.update()	Search took302ms
2017-01-04 15:36:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 15:36:03 AI_Player.update()		11,	1001,	1010,	1001,	11,	101,	1100
2017-01-04 15:36:03 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:03 AI_Player.update()		1010,	101,	110,	1010,	111,	110,	1101
2017-01-04 15:36:03 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-04 15:36:03 AI_Player.update()		1110,	1010,	1010,	1010,	1010,	110,	1100
2017-01-04 15:36:03 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 15:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	2 3
2017-01-04 15:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()	update
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	2 3
2017-01-04 15:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()	update
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:03 AI_Player.update()	Search took145ms
2017-01-04 15:36:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 15:36:03 AI_Player.update()		11,	1001,	1010,	1001,	11,	101,	1100
2017-01-04 15:36:03 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:03 AI_Player.update()		101,	110,	1010,	111,	110,	1101,	1010
2017-01-04 15:36:03 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-04 15:36:03 AI_Player.update()		1110,	1010,	1010,	1010,	1010,	110,	1100
2017-01-04 15:36:03 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 15:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	2 3
2017-01-04 15:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()	update
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	2 4
2017-01-04 15:36:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:03 AI_Player.update()	update
2017-01-04 15:36:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:04 AI_Player.update()	Search took376ms
2017-01-04 15:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 15:36:04 AI_Player.update()		1001,	1010,	1001,	11,	101,	1100,	11
2017-01-04 15:36:04 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:04 AI_Player.update()		101,	110,	1010,	111,	110,	1101,	1010
2017-01-04 15:36:04 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-04 15:36:04 AI_Player.update()		1110,	1010,	1010,	1010,	1010,	110,	1100
2017-01-04 15:36:04 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 15:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	2 4
2017-01-04 15:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()	update
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	3 4
2017-01-04 15:36:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()	update
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:04 AI_Player.update()	Search took313ms
2017-01-04 15:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 15:36:04 AI_Player.update()		1010,	1001,	11,	101,	1100,	11,	1001
2017-01-04 15:36:04 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:04 AI_Player.update()		101,	110,	1010,	111,	110,	1101,	1010
2017-01-04 15:36:04 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-04 15:36:04 AI_Player.update()		1110,	1010,	1010,	1010,	1010,	110,	1100
2017-01-04 15:36:04 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 15:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	3 4
2017-01-04 15:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()	update
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	3 5
2017-01-04 15:36:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()	update
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:04 AI_Player.update()	Search took204ms
2017-01-04 15:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 15:36:04 AI_Player.update()		1010,	1001,	11,	101,	1100,	11,	1001
2017-01-04 15:36:04 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:04 AI_Player.update()		101,	110,	1010,	111,	110,	1101,	1010
2017-01-04 15:36:04 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-04 15:36:04 AI_Player.update()		1010,	1010,	1010,	1010,	110,	1100,	1110
2017-01-04 15:36:04 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 15:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	3 5
2017-01-04 15:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()	update
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()	update
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:04 AI_Player.update()	Search took341ms
2017-01-04 15:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-04 15:36:04 AI_Player.update()		1010,	110,	11,	101,	1100,	11,	1001
2017-01-04 15:36:04 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-04 15:36:04 AI_Player.update()		101,	1100,	1010,	111,	110,	1101,	1010
2017-01-04 15:36:04 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-04 15:36:04 AI_Player.update()		1010,	110,	1010,	1010,	110,	1100,	1110
2017-01-04 15:36:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 15:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()	update
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:04 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:04 AI_Player.update()	update
2017-01-04 15:36:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:05 AI_Player.update()	Search took332ms
2017-01-04 15:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()		110,	110,	111,	111,	111,	11,	11
2017-01-04 15:36:05 AI_Player.update()		1010,	110,	11,	101,	1100,	1001,	1001
2017-01-04 15:36:05 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 15:36:05 AI_Player.update()		101,	1100,	1010,	111,	110,	11,	1010
2017-01-04 15:36:05 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1100,	1011
2017-01-04 15:36:05 AI_Player.update()		1010,	110,	1010,	1010,	110,	101,	1110
2017-01-04 15:36:05 AI_Player.update()		1100,	1010,	1101,	11,	1101,	111,	1001
2017-01-04 15:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()	update
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 15:36:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()	update
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:05 AI_Player.update()	Search took83ms
2017-01-04 15:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()		110,	110,	111,	111,	111,	11,	11
2017-01-04 15:36:05 AI_Player.update()		1001,	1010,	110,	11,	101,	1100,	1001
2017-01-04 15:36:05 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 15:36:05 AI_Player.update()		101,	1100,	1010,	111,	110,	11,	1010
2017-01-04 15:36:05 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1100,	1011
2017-01-04 15:36:05 AI_Player.update()		1010,	110,	1010,	1010,	110,	101,	1110
2017-01-04 15:36:05 AI_Player.update()		1100,	1010,	1101,	11,	1101,	111,	1001
2017-01-04 15:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 15:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()	update
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 15:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()	update
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:05 AI_Player.update()	Search took506ms
2017-01-04 15:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()		110,	1010,	111,	111,	111,	11,	11
2017-01-04 15:36:05 AI_Player.update()		1001,	1001,	110,	11,	101,	1100,	1001
2017-01-04 15:36:05 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1101,	1011
2017-01-04 15:36:05 AI_Player.update()		101,	110,	1010,	111,	110,	11,	1010
2017-01-04 15:36:05 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1100,	1011
2017-01-04 15:36:05 AI_Player.update()		1010,	1010,	1010,	1010,	110,	101,	1110
2017-01-04 15:36:05 AI_Player.update()		1100,	110,	1101,	11,	1101,	111,	1001
2017-01-04 15:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 15:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()	update
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	6 5
2017-01-04 15:36:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()	update
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:05 AI_Player.update()	Search took24ms
2017-01-04 15:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()		110,	110,	111,	111,	111,	11,	11
2017-01-04 15:36:05 AI_Player.update()		1001,	1010,	110,	11,	101,	1100,	1001
2017-01-04 15:36:05 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-04 15:36:05 AI_Player.update()		101,	1100,	1010,	111,	110,	11,	1010
2017-01-04 15:36:05 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1100,	1011
2017-01-04 15:36:05 AI_Player.update()		1010,	110,	1010,	1010,	110,	101,	1110
2017-01-04 15:36:05 AI_Player.update()		1100,	1010,	1101,	11,	1101,	111,	1001
2017-01-04 15:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	6 5
2017-01-04 15:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()	update
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:05 GameBoard.setupTreasurePanel()	6 5
2017-01-04 15:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:05 AI_Player.update()	update
2017-01-04 15:36:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:06 AI_Player.update()	Search took573ms
2017-01-04 15:36:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:06 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 15:36:06 AI_Player.update()		1001,	1010,	110,	1001,	101,	1100,	1001
2017-01-04 15:36:06 AI_Player.update()		1110,	1001,	1110,	111,	111,	1101,	1011
2017-01-04 15:36:06 AI_Player.update()		101,	1100,	1010,	1001,	110,	11,	1010
2017-01-04 15:36:06 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-04 15:36:06 AI_Player.update()		1010,	110,	1010,	11,	110,	101,	1110
2017-01-04 15:36:06 AI_Player.update()		1100,	1010,	1101,	111,	1101,	111,	1001
2017-01-04 15:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	6 5
2017-01-04 15:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:06 AI_Player.update()	update
2017-01-04 15:36:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	6 5
2017-01-04 15:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:06 AI_Player.update()	update
2017-01-04 15:36:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:06 AI_Player.update()	Search took33ms
2017-01-04 15:36:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:06 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 15:36:06 AI_Player.update()		1010,	110,	1001,	101,	1100,	1001,	1001
2017-01-04 15:36:06 AI_Player.update()		1110,	1001,	1110,	111,	111,	1101,	1011
2017-01-04 15:36:06 AI_Player.update()		101,	1100,	1010,	1001,	110,	11,	1010
2017-01-04 15:36:06 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-04 15:36:06 AI_Player.update()		1010,	110,	1010,	11,	110,	101,	1110
2017-01-04 15:36:06 AI_Player.update()		1100,	1010,	1101,	111,	1101,	111,	1001
2017-01-04 15:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	6 5
2017-01-04 15:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:06 AI_Player.update()	update
2017-01-04 15:36:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	6 6
2017-01-04 15:36:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:06 AI_Player.update()	update
2017-01-04 15:36:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:06 AI_Player.update()	Search took335ms
2017-01-04 15:36:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:06 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 15:36:06 AI_Player.update()		1010,	1001,	1001,	101,	1100,	1001,	1001
2017-01-04 15:36:06 AI_Player.update()		1110,	1100,	1110,	111,	111,	1101,	1011
2017-01-04 15:36:06 AI_Player.update()		101,	110,	1010,	1001,	110,	11,	1010
2017-01-04 15:36:06 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-04 15:36:06 AI_Player.update()		1010,	1010,	1010,	11,	110,	101,	1110
2017-01-04 15:36:06 AI_Player.update()		1100,	110,	1101,	111,	1101,	111,	1001
2017-01-04 15:36:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	6 6
2017-01-04 15:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:06 AI_Player.update()	update
2017-01-04 15:36:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:06 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 15:36:06 AI_Player.update()	Player a has won!
2017-01-04 15:36:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 15:36:06 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 15:36:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 15:36:06 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 15:36:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:06 AI_Player.update()	update
2017-01-04 15:36:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:07 AI_Player.update()	Search took921ms
2017-01-04 15:36:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:07 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-04 15:36:07 AI_Player.update()		1110,	1001,	1010,	101,	1100,	1011,	11
2017-01-04 15:36:07 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1001,	1011
2017-01-04 15:36:07 AI_Player.update()		1010,	101,	1010,	101,	110,	101,	1010
2017-01-04 15:36:07 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-04 15:36:07 AI_Player.update()		1101,	1010,	1001,	111,	111,	110,	101
2017-01-04 15:36:07 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-04 15:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:07 AI_Player.update()	update
2017-01-04 15:36:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:07 AI_Player.update()	update
2017-01-04 15:36:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:07 AI_Player.update()	Search took55ms
2017-01-04 15:36:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:07 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-04 15:36:07 AI_Player.update()		1001,	1010,	101,	1100,	1011,	11,	1110
2017-01-04 15:36:07 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1001,	1011
2017-01-04 15:36:07 AI_Player.update()		1010,	101,	1010,	101,	110,	101,	1010
2017-01-04 15:36:07 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-04 15:36:07 AI_Player.update()		1101,	1010,	1001,	111,	111,	110,	101
2017-01-04 15:36:07 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-04 15:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:07 AI_Player.update()	update
2017-01-04 15:36:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:07 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:07 AI_Player.update()	update
2017-01-04 15:36:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:08 AI_Player.update()	Search took180ms
2017-01-04 15:36:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:08 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-04 15:36:08 AI_Player.update()		1001,	1010,	101,	1011,	1011,	11,	1110
2017-01-04 15:36:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-04 15:36:08 AI_Player.update()		1010,	101,	1010,	11,	110,	101,	1010
2017-01-04 15:36:08 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-04 15:36:08 AI_Player.update()		1101,	1010,	1001,	1011,	111,	110,	101
2017-01-04 15:36:08 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-04 15:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:08 AI_Player.update()	update
2017-01-04 15:36:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:08 AI_Player.update()	update
2017-01-04 15:36:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:08 AI_Player.update()	Search took217ms
2017-01-04 15:36:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:08 AI_Player.update()		110,	111,	111,	1100,	111,	11,	11
2017-01-04 15:36:08 AI_Player.update()		1001,	1010,	101,	1011,	1011,	1001,	1110
2017-01-04 15:36:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-04 15:36:08 AI_Player.update()		1010,	101,	1010,	11,	110,	101,	1010
2017-01-04 15:36:08 AI_Player.update()		1110,	101,	1101,	111,	1011,	110,	1011
2017-01-04 15:36:08 AI_Player.update()		1101,	1010,	1001,	1011,	111,	110,	101
2017-01-04 15:36:08 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 15:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:08 AI_Player.update()	update
2017-01-04 15:36:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:08 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:08 AI_Player.update()	update
2017-01-04 15:36:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:09 AI_Player.update()	Search took730ms
2017-01-04 15:36:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:09 AI_Player.update()		110,	111,	111,	1100,	111,	1001,	11
2017-01-04 15:36:09 AI_Player.update()		1001,	1010,	101,	1011,	1011,	101,	1110
2017-01-04 15:36:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-04 15:36:09 AI_Player.update()		1010,	101,	1010,	11,	110,	110,	1010
2017-01-04 15:36:09 AI_Player.update()		1110,	101,	1101,	111,	1011,	110,	1011
2017-01-04 15:36:09 AI_Player.update()		1101,	1010,	1001,	1011,	111,	1010,	101
2017-01-04 15:36:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-04 15:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:09 AI_Player.update()	update
2017-01-04 15:36:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:36:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:09 AI_Player.update()	update
2017-01-04 15:36:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:09 AI_Player.update()	Search took744ms
2017-01-04 15:36:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:09 AI_Player.update()		110,	111,	111,	110,	111,	1001,	11
2017-01-04 15:36:09 AI_Player.update()		1001,	1010,	101,	1100,	1011,	101,	1110
2017-01-04 15:36:09 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:09 AI_Player.update()		1010,	101,	1010,	101,	110,	110,	1010
2017-01-04 15:36:09 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:09 AI_Player.update()		1101,	1010,	1001,	111,	111,	1010,	101
2017-01-04 15:36:09 AI_Player.update()		1100,	101,	1101,	1011,	1101,	11,	1001
2017-01-04 15:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:09 AI_Player.update()	update
2017-01-04 15:36:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:09 AI_Player.update()	update
2017-01-04 15:36:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:10 AI_Player.update()	Search took384ms
2017-01-04 15:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()		110,	111,	111,	110,	111,	1001,	11
2017-01-04 15:36:10 AI_Player.update()		1001,	1010,	101,	1100,	1011,	101,	1110
2017-01-04 15:36:10 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:10 AI_Player.update()		101,	1010,	101,	110,	110,	1010,	1010
2017-01-04 15:36:10 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:10 AI_Player.update()		1101,	1010,	1001,	111,	111,	1010,	101
2017-01-04 15:36:10 AI_Player.update()		1100,	101,	1101,	1011,	1101,	11,	1001
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:10 AI_Player.update()	Search took150ms
2017-01-04 15:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-04 15:36:10 AI_Player.update()		1001,	1010,	101,	1100,	1011,	1001,	1110
2017-01-04 15:36:10 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:10 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1010
2017-01-04 15:36:10 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 15:36:10 AI_Player.update()		1101,	1010,	1001,	111,	111,	110,	101
2017-01-04 15:36:10 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	4 3
2017-01-04 15:36:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:10 AI_Player.update()	Search took138ms
2017-01-04 15:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()		110,	111,	111,	1100,	111,	11,	11
2017-01-04 15:36:10 AI_Player.update()		1001,	1010,	101,	1011,	1011,	1001,	1110
2017-01-04 15:36:10 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-04 15:36:10 AI_Player.update()		101,	1010,	101,	11,	110,	101,	1010
2017-01-04 15:36:10 AI_Player.update()		1110,	101,	1101,	111,	1011,	1010,	1011
2017-01-04 15:36:10 AI_Player.update()		1101,	1010,	1001,	1011,	111,	110,	101
2017-01-04 15:36:10 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	4 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:10 AI_Player.update()	Search took102ms
2017-01-04 15:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-04 15:36:10 AI_Player.update()		1001,	1010,	101,	1100,	1011,	1001,	1110
2017-01-04 15:36:10 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:10 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1010
2017-01-04 15:36:10 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 15:36:10 AI_Player.update()		1101,	1010,	1001,	111,	111,	110,	101
2017-01-04 15:36:10 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:10 AI_Player.update()	Search took81ms
2017-01-04 15:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-04 15:36:10 AI_Player.update()		1001,	1100,	101,	1100,	1011,	1001,	1110
2017-01-04 15:36:10 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:10 AI_Player.update()		101,	101,	101,	110,	110,	101,	1010
2017-01-04 15:36:10 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 15:36:10 AI_Player.update()		1101,	101,	1001,	111,	111,	110,	101
2017-01-04 15:36:10 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1010,	1001
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:10 AI_Player.update()	Search took78ms
2017-01-04 15:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-04 15:36:10 AI_Player.update()		1001,	1010,	101,	1100,	1011,	1001,	1110
2017-01-04 15:36:10 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:10 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1010
2017-01-04 15:36:10 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 15:36:10 AI_Player.update()		1101,	1010,	1001,	111,	111,	110,	101
2017-01-04 15:36:10 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:10 AI_Player.update()	Search took86ms
2017-01-04 15:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-04 15:36:10 AI_Player.update()		1001,	1100,	101,	1100,	1011,	1001,	1110
2017-01-04 15:36:10 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:10 AI_Player.update()		101,	101,	101,	110,	110,	101,	1010
2017-01-04 15:36:10 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 15:36:10 AI_Player.update()		1101,	101,	1001,	111,	111,	110,	101
2017-01-04 15:36:10 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1010,	1001
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:10 AI_Player.update()	Search took70ms
2017-01-04 15:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()		110,	1100,	111,	110,	111,	11,	11
2017-01-04 15:36:10 AI_Player.update()		1001,	1010,	101,	1100,	1011,	1001,	1110
2017-01-04 15:36:10 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:10 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1010
2017-01-04 15:36:10 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 15:36:10 AI_Player.update()		1101,	111,	1001,	111,	111,	110,	101
2017-01-04 15:36:10 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-04 15:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:10 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:10 AI_Player.update()	update
2017-01-04 15:36:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:11 AI_Player.update()	Search took96ms
2017-01-04 15:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()		110,	1100,	111,	110,	111,	1001,	11
2017-01-04 15:36:11 AI_Player.update()		1001,	1010,	101,	1100,	1011,	101,	1110
2017-01-04 15:36:11 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:11 AI_Player.update()		101,	1010,	101,	110,	110,	1010,	1010
2017-01-04 15:36:11 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:11 AI_Player.update()		1101,	111,	1001,	111,	111,	1010,	101
2017-01-04 15:36:11 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:11 AI_Player.update()	Search took185ms
2017-01-04 15:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 15:36:11 AI_Player.update()		1001,	101,	101,	1100,	1011,	101,	1110
2017-01-04 15:36:11 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:11 AI_Player.update()		101,	101,	101,	110,	110,	1010,	1010
2017-01-04 15:36:11 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:11 AI_Player.update()		1101,	1010,	1001,	111,	111,	1010,	101
2017-01-04 15:36:11 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	11,	1001
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:11 AI_Player.update()	Search took223ms
2017-01-04 15:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-04 15:36:11 AI_Player.update()		1001,	1010,	101,	1100,	1011,	101,	1110
2017-01-04 15:36:11 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:11 AI_Player.update()		101,	111,	101,	110,	110,	1010,	1010
2017-01-04 15:36:11 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:11 AI_Player.update()		1101,	1100,	1001,	111,	111,	1010,	101
2017-01-04 15:36:11 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:11 AI_Player.update()	Search took105ms
2017-01-04 15:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 15:36:11 AI_Player.update()		1001,	101,	101,	1100,	1011,	101,	1110
2017-01-04 15:36:11 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:11 AI_Player.update()		101,	101,	101,	110,	110,	1010,	1010
2017-01-04 15:36:11 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:11 AI_Player.update()		1101,	1010,	1001,	111,	111,	1010,	101
2017-01-04 15:36:11 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	11,	1001
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:11 AI_Player.update()	Search took213ms
2017-01-04 15:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-04 15:36:11 AI_Player.update()		1001,	1010,	101,	1100,	1011,	101,	1110
2017-01-04 15:36:11 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:11 AI_Player.update()		101,	111,	101,	110,	110,	1010,	1010
2017-01-04 15:36:11 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:11 AI_Player.update()		1101,	1100,	1001,	111,	111,	1010,	101
2017-01-04 15:36:11 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:11 AI_Player.update()	Search took77ms
2017-01-04 15:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-04 15:36:11 AI_Player.update()		1010,	101,	1100,	1011,	101,	1110,	1001
2017-01-04 15:36:11 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:11 AI_Player.update()		101,	111,	101,	110,	110,	1010,	1010
2017-01-04 15:36:11 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:11 AI_Player.update()		1101,	1100,	1001,	111,	111,	1010,	101
2017-01-04 15:36:11 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:11 AI_Player.update()	Search took80ms
2017-01-04 15:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-04 15:36:11 AI_Player.update()		1010,	101,	1100,	1011,	101,	1110,	1001
2017-01-04 15:36:11 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 15:36:11 AI_Player.update()		101,	101,	101,	110,	110,	1010,	1010
2017-01-04 15:36:11 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-04 15:36:11 AI_Player.update()		1101,	1010,	1001,	111,	111,	1010,	101
2017-01-04 15:36:11 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	11,	1001
2017-01-04 15:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:11 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:11 AI_Player.update()	update
2017-01-04 15:36:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:12 AI_Player.update()	Search took284ms
2017-01-04 15:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()		110,	1010,	111,	1011,	111,	1001,	11
2017-01-04 15:36:12 AI_Player.update()		1010,	101,	1100,	1011,	101,	1110,	1001
2017-01-04 15:36:12 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 15:36:12 AI_Player.update()		101,	101,	101,	11,	110,	1010,	1010
2017-01-04 15:36:12 AI_Player.update()		1110,	111,	1101,	111,	1011,	110,	1011
2017-01-04 15:36:12 AI_Player.update()		1101,	1010,	1001,	1011,	111,	1010,	101
2017-01-04 15:36:12 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:12 AI_Player.update()	Search took60ms
2017-01-04 15:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()		110,	1010,	111,	1011,	111,	1001,	11
2017-01-04 15:36:12 AI_Player.update()		1001,	1010,	101,	1100,	1011,	101,	1110
2017-01-04 15:36:12 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 15:36:12 AI_Player.update()		101,	101,	101,	11,	110,	1010,	1010
2017-01-04 15:36:12 AI_Player.update()		1110,	111,	1101,	111,	1011,	110,	1011
2017-01-04 15:36:12 AI_Player.update()		1101,	1010,	1001,	1011,	111,	1010,	101
2017-01-04 15:36:12 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	6 3
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 15:36:12 AI_Player.update()	Player a has won!
2017-01-04 15:36:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 15:36:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 15:36:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 15:36:12 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 15:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:12 AI_Player.update()	Search took26ms
2017-01-04 15:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()		110,	111,	111,	110,	111,	111,	11
2017-01-04 15:36:12 AI_Player.update()		101,	101,	110,	101,	11,	11,	101
2017-01-04 15:36:12 AI_Player.update()		1110,	111,	1110,	1100,	111,	11,	1011
2017-01-04 15:36:12 AI_Player.update()		11,	1100,	101,	11,	1101,	101,	111
2017-01-04 15:36:12 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:12 AI_Player.update()		11,	110,	1010,	110,	1010,	1001,	110
2017-01-04 15:36:12 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:12 AI_Player.update()	Search took47ms
2017-01-04 15:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()		110,	111,	111,	101,	111,	111,	11
2017-01-04 15:36:12 AI_Player.update()		101,	101,	110,	1100,	11,	11,	101
2017-01-04 15:36:12 AI_Player.update()		1110,	111,	1110,	11,	111,	11,	1011
2017-01-04 15:36:12 AI_Player.update()		11,	1100,	101,	1110,	1101,	101,	111
2017-01-04 15:36:12 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:12 AI_Player.update()		11,	110,	1010,	101,	1010,	1001,	110
2017-01-04 15:36:12 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:12 AI_Player.update()	Search took107ms
2017-01-04 15:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 15:36:12 AI_Player.update()		101,	111,	110,	1100,	11,	11,	101
2017-01-04 15:36:12 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-04 15:36:12 AI_Player.update()		11,	1010,	101,	1110,	1101,	101,	111
2017-01-04 15:36:12 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:12 AI_Player.update()		11,	1100,	1010,	101,	1010,	1001,	110
2017-01-04 15:36:12 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:12 AI_Player.update()	Search took129ms
2017-01-04 15:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 15:36:12 AI_Player.update()		101,	111,	110,	1100,	11,	11,	101
2017-01-04 15:36:12 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-04 15:36:12 AI_Player.update()		11,	1010,	101,	1110,	1101,	101,	111
2017-01-04 15:36:12 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:12 AI_Player.update()		1100,	1010,	101,	1010,	1001,	110,	11
2017-01-04 15:36:12 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 15:36:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:12 AI_Player.update()	Search took100ms
2017-01-04 15:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()		110,	111,	111,	101,	111,	111,	11
2017-01-04 15:36:12 AI_Player.update()		101,	101,	110,	1100,	11,	11,	101
2017-01-04 15:36:12 AI_Player.update()		1110,	111,	1110,	11,	111,	11,	1011
2017-01-04 15:36:12 AI_Player.update()		11,	1100,	101,	1110,	1101,	101,	111
2017-01-04 15:36:12 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:12 AI_Player.update()		1100,	110,	101,	1010,	1001,	110,	11
2017-01-04 15:36:12 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:12 AI_Player.update()	Search took23ms
2017-01-04 15:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()		110,	111,	111,	1100,	111,	111,	11
2017-01-04 15:36:12 AI_Player.update()		101,	101,	110,	11,	11,	11,	101
2017-01-04 15:36:12 AI_Player.update()		1110,	111,	1110,	1110,	111,	11,	1011
2017-01-04 15:36:12 AI_Player.update()		11,	1100,	101,	110,	1101,	101,	111
2017-01-04 15:36:12 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 15:36:12 AI_Player.update()		1100,	110,	101,	110,	1001,	110,	11
2017-01-04 15:36:12 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 3
2017-01-04 15:36:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:12 AI_Player.update()	Search took34ms
2017-01-04 15:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 15:36:12 AI_Player.update()		101,	111,	110,	11,	11,	11,	101
2017-01-04 15:36:12 AI_Player.update()		1110,	101,	1110,	1110,	111,	11,	1011
2017-01-04 15:36:12 AI_Player.update()		11,	111,	101,	110,	1101,	101,	111
2017-01-04 15:36:12 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1101,	1011
2017-01-04 15:36:12 AI_Player.update()		1100,	1010,	101,	110,	1001,	110,	11
2017-01-04 15:36:12 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	2 3
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	3 3
2017-01-04 15:36:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:12 AI_Player.update()	update
2017-01-04 15:36:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:13 AI_Player.update()	Search took145ms
2017-01-04 15:36:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 15:36:13 AI_Player.update()		101,	111,	110,	11,	11,	11,	101
2017-01-04 15:36:13 AI_Player.update()		1110,	101,	1110,	1110,	111,	11,	1011
2017-01-04 15:36:13 AI_Player.update()		11,	111,	101,	110,	1101,	101,	111
2017-01-04 15:36:13 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1101,	1011
2017-01-04 15:36:13 AI_Player.update()		1010,	101,	110,	1001,	110,	11,	1100
2017-01-04 15:36:13 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	3 3
2017-01-04 15:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()	update
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	3 3
2017-01-04 15:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()	update
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:13 AI_Player.update()	Search took57ms
2017-01-04 15:36:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()		110,	1010,	111,	1100,	111,	111,	11
2017-01-04 15:36:13 AI_Player.update()		111,	110,	11,	11,	11,	101,	101
2017-01-04 15:36:13 AI_Player.update()		1110,	101,	1110,	1110,	111,	11,	1011
2017-01-04 15:36:13 AI_Player.update()		11,	111,	101,	110,	1101,	101,	111
2017-01-04 15:36:13 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1101,	1011
2017-01-04 15:36:13 AI_Player.update()		1010,	101,	110,	1001,	110,	11,	1100
2017-01-04 15:36:13 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	3 3
2017-01-04 15:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()	update
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	3 3
2017-01-04 15:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()	update
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:13 AI_Player.update()	Search took598ms
2017-01-04 15:36:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()		110,	1010,	111,	101,	111,	111,	11
2017-01-04 15:36:13 AI_Player.update()		111,	110,	11,	1100,	11,	101,	101
2017-01-04 15:36:13 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:36:13 AI_Player.update()		11,	111,	101,	1110,	1101,	101,	111
2017-01-04 15:36:13 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:13 AI_Player.update()		1010,	101,	110,	1010,	110,	11,	1100
2017-01-04 15:36:13 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	3 3
2017-01-04 15:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()	update
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	3 4
2017-01-04 15:36:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()	update
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:13 AI_Player.update()	Search took92ms
2017-01-04 15:36:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()		110,	1010,	111,	101,	111,	111,	11
2017-01-04 15:36:13 AI_Player.update()		110,	11,	1100,	11,	101,	101,	111
2017-01-04 15:36:13 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:36:13 AI_Player.update()		11,	111,	101,	1110,	1101,	101,	111
2017-01-04 15:36:13 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:13 AI_Player.update()		1010,	101,	110,	1010,	110,	11,	1100
2017-01-04 15:36:13 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	3 4
2017-01-04 15:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()	update
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()	update
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:13 AI_Player.update()	Search took164ms
2017-01-04 15:36:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()		110,	110,	111,	101,	111,	111,	11
2017-01-04 15:36:13 AI_Player.update()		110,	1010,	1100,	11,	101,	101,	111
2017-01-04 15:36:13 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-04 15:36:13 AI_Player.update()		11,	101,	101,	1110,	1101,	101,	111
2017-01-04 15:36:13 AI_Player.update()		1110,	111,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:13 AI_Player.update()		1010,	1100,	110,	1010,	110,	11,	1100
2017-01-04 15:36:13 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:36:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()	update
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:13 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:13 AI_Player.update()	update
2017-01-04 15:36:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:14 AI_Player.update()	Search took157ms
2017-01-04 15:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 15:36:14 AI_Player.update()		110,	1010,	1100,	101,	101,	101,	111
2017-01-04 15:36:14 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-04 15:36:14 AI_Player.update()		11,	101,	101,	11,	1101,	101,	111
2017-01-04 15:36:14 AI_Player.update()		1110,	111,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:14 AI_Player.update()		1010,	1100,	110,	110,	110,	11,	1100
2017-01-04 15:36:14 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:14 AI_Player.update()	Search took210ms
2017-01-04 15:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-04 15:36:14 AI_Player.update()		110,	110,	1100,	101,	101,	101,	111
2017-01-04 15:36:14 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-04 15:36:14 AI_Player.update()		11,	11,	101,	11,	1101,	101,	111
2017-01-04 15:36:14 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:14 AI_Player.update()		1010,	111,	110,	110,	110,	11,	1100
2017-01-04 15:36:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:14 AI_Player.update()	Search took167ms
2017-01-04 15:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-04 15:36:14 AI_Player.update()		110,	110,	1100,	101,	101,	101,	111
2017-01-04 15:36:14 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-04 15:36:14 AI_Player.update()		111,	11,	11,	101,	11,	1101,	101
2017-01-04 15:36:14 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:14 AI_Player.update()		1010,	111,	110,	110,	110,	11,	1100
2017-01-04 15:36:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:14 AI_Player.update()	Search took157ms
2017-01-04 15:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-04 15:36:14 AI_Player.update()		110,	101,	1100,	101,	101,	101,	111
2017-01-04 15:36:14 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-04 15:36:14 AI_Player.update()		111,	1010,	11,	101,	11,	1101,	101
2017-01-04 15:36:14 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:14 AI_Player.update()		1010,	101,	110,	110,	110,	11,	1100
2017-01-04 15:36:14 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:14 AI_Player.update()	Search took81ms
2017-01-04 15:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-04 15:36:14 AI_Player.update()		110,	101,	1100,	101,	101,	101,	111
2017-01-04 15:36:14 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-04 15:36:14 AI_Player.update()		101,	111,	1010,	11,	101,	11,	1101
2017-01-04 15:36:14 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:14 AI_Player.update()		1010,	101,	110,	110,	110,	11,	1100
2017-01-04 15:36:14 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:14 AI_Player.update()	Search took57ms
2017-01-04 15:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-04 15:36:14 AI_Player.update()		110,	101,	1100,	101,	101,	101,	111
2017-01-04 15:36:14 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-04 15:36:14 AI_Player.update()		111,	1010,	11,	101,	11,	1101,	101
2017-01-04 15:36:14 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:14 AI_Player.update()		1010,	101,	110,	110,	110,	11,	1100
2017-01-04 15:36:14 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:14 AI_Player.update()	Search took54ms
2017-01-04 15:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-04 15:36:14 AI_Player.update()		110,	101,	1100,	101,	101,	101,	111
2017-01-04 15:36:14 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-04 15:36:14 AI_Player.update()		101,	111,	1010,	11,	101,	11,	1101
2017-01-04 15:36:14 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:14 AI_Player.update()		1010,	101,	110,	110,	110,	11,	1100
2017-01-04 15:36:14 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:14 AI_Player.update()	Search took64ms
2017-01-04 15:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-04 15:36:14 AI_Player.update()		110,	101,	1100,	101,	101,	101,	111
2017-01-04 15:36:14 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-04 15:36:14 AI_Player.update()		111,	1010,	11,	101,	11,	1101,	101
2017-01-04 15:36:14 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:14 AI_Player.update()		1010,	101,	110,	110,	110,	11,	1100
2017-01-04 15:36:14 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:14 AI_Player.update()	update
2017-01-04 15:36:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:15 AI_Player.update()	Search took140ms
2017-01-04 15:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()		110,	111,	111,	1001,	111,	111,	11
2017-01-04 15:36:15 AI_Player.update()		110,	1100,	1100,	101,	101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:36:15 AI_Player.update()		111,	110,	11,	101,	11,	1101,	101
2017-01-04 15:36:15 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:15 AI_Player.update()		1010,	11,	110,	110,	110,	11,	1100
2017-01-04 15:36:15 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:15 AI_Player.update()	Search took147ms
2017-01-04 15:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()		110,	111,	111,	1001,	111,	111,	11
2017-01-04 15:36:15 AI_Player.update()		110,	1100,	1100,	101,	101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:36:15 AI_Player.update()		110,	11,	101,	11,	1101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:15 AI_Player.update()		1010,	11,	110,	110,	110,	11,	1100
2017-01-04 15:36:15 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 4
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:15 AI_Player.update()	Search took80ms
2017-01-04 15:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()		110,	111,	111,	1001,	111,	111,	11
2017-01-04 15:36:15 AI_Player.update()		110,	1100,	1100,	101,	101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:36:15 AI_Player.update()		111,	110,	11,	101,	11,	1101,	101
2017-01-04 15:36:15 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:15 AI_Player.update()		1010,	11,	110,	110,	110,	11,	1100
2017-01-04 15:36:15 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:15 AI_Player.update()	Search took64ms
2017-01-04 15:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()		110,	111,	111,	1001,	111,	111,	11
2017-01-04 15:36:15 AI_Player.update()		110,	1100,	1100,	101,	101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-04 15:36:15 AI_Player.update()		110,	11,	101,	11,	1101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:15 AI_Player.update()		1010,	11,	110,	110,	110,	11,	1100
2017-01-04 15:36:15 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:15 AI_Player.update()	Search took78ms
2017-01-04 15:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-04 15:36:15 AI_Player.update()		110,	101,	1100,	101,	101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-04 15:36:15 AI_Player.update()		110,	1010,	101,	11,	1101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1101,	1011
2017-01-04 15:36:15 AI_Player.update()		1010,	101,	110,	110,	110,	11,	1100
2017-01-04 15:36:15 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1010,	1001
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:15 AI_Player.update()	Search took185ms
2017-01-04 15:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-04 15:36:15 AI_Player.update()		110,	101,	1100,	11,	101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-04 15:36:15 AI_Player.update()		110,	1010,	101,	1110,	1101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	11,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:15 AI_Player.update()		1010,	101,	110,	1010,	110,	11,	1100
2017-01-04 15:36:15 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 5
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 6
2017-01-04 15:36:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:15 AI_Player.update()	Search took148ms
2017-01-04 15:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-04 15:36:15 AI_Player.update()		110,	101,	1100,	11,	101,	101,	111
2017-01-04 15:36:15 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-04 15:36:15 AI_Player.update()		111,	110,	1010,	101,	1110,	1101,	101
2017-01-04 15:36:15 AI_Player.update()		1110,	11,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:15 AI_Player.update()		1010,	101,	110,	1010,	110,	11,	1100
2017-01-04 15:36:15 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	4 6
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	5 6
2017-01-04 15:36:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:15 AI_Player.update()	update
2017-01-04 15:36:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:16 AI_Player.update()	Search took186ms
2017-01-04 15:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()		110,	1100,	111,	101,	111,	111,	11
2017-01-04 15:36:16 AI_Player.update()		101,	1100,	11,	101,	101,	111,	110
2017-01-04 15:36:16 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-04 15:36:16 AI_Player.update()		111,	110,	1010,	101,	1110,	1101,	101
2017-01-04 15:36:16 AI_Player.update()		1110,	11,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	101,	110,	1010,	110,	11,	1100
2017-01-04 15:36:16 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	5 6
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	5 6
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:16 AI_Player.update()	Search took197ms
2017-01-04 15:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()		110,	111,	111,	101,	111,	111,	11
2017-01-04 15:36:16 AI_Player.update()		101,	1100,	11,	101,	101,	111,	110
2017-01-04 15:36:16 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-04 15:36:16 AI_Player.update()		111,	11,	1010,	101,	1110,	1101,	101
2017-01-04 15:36:16 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	11,	110,	1010,	110,	11,	1100
2017-01-04 15:36:16 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	5 6
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	6 6
2017-01-04 15:36:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:16 AI_Player.update()	Search took32ms
2017-01-04 15:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()		110,	111,	111,	101,	111,	111,	11
2017-01-04 15:36:16 AI_Player.update()		1100,	11,	101,	101,	111,	110,	101
2017-01-04 15:36:16 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-04 15:36:16 AI_Player.update()		111,	11,	1010,	101,	1110,	1101,	101
2017-01-04 15:36:16 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	11,	110,	1010,	110,	11,	1100
2017-01-04 15:36:16 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	6 6
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 15:36:16 AI_Player.update()	Player b has won!
2017-01-04 15:36:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 15:36:16 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 15:36:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 15:36:16 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 15:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:16 AI_Player.update()	Search took127ms
2017-01-04 15:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 15:36:16 AI_Player.update()		1100,	101,	1001,	1001,	1010,	1110,	1001
2017-01-04 15:36:16 AI_Player.update()		1110,	1101,	1110,	1100,	111,	110,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	101,	101,	101,	101,	1010,	110
2017-01-04 15:36:16 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	101,	1011,	11,	1010,	1010,	101
2017-01-04 15:36:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:16 AI_Player.update()	Search took127ms
2017-01-04 15:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 15:36:16 AI_Player.update()		1001,	1100,	101,	1001,	1001,	1010,	1110
2017-01-04 15:36:16 AI_Player.update()		1110,	1101,	1110,	1100,	111,	110,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	101,	101,	101,	101,	1010,	110
2017-01-04 15:36:16 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	101,	1011,	11,	1010,	1010,	101
2017-01-04 15:36:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:16 AI_Player.update()	Search took105ms
2017-01-04 15:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 15:36:16 AI_Player.update()		1100,	101,	1001,	1001,	1010,	1110,	1001
2017-01-04 15:36:16 AI_Player.update()		1110,	1101,	1110,	1100,	111,	110,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	101,	101,	101,	101,	1010,	110
2017-01-04 15:36:16 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	101,	1011,	11,	1010,	1010,	101
2017-01-04 15:36:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:16 AI_Player.update()	Search took127ms
2017-01-04 15:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 15:36:16 AI_Player.update()		1001,	1100,	101,	1001,	1001,	1010,	1110
2017-01-04 15:36:16 AI_Player.update()		1110,	1101,	1110,	1100,	111,	110,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	101,	101,	101,	101,	1010,	110
2017-01-04 15:36:16 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	101,	1011,	11,	1010,	1010,	101
2017-01-04 15:36:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:16 AI_Player.update()	Search took115ms
2017-01-04 15:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 15:36:16 AI_Player.update()		1001,	1101,	101,	1001,	1001,	1010,	1110
2017-01-04 15:36:16 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	1001,	101,	101,	101,	1010,	110
2017-01-04 15:36:16 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 15:36:16 AI_Player.update()		1010,	1100,	1011,	11,	1010,	1010,	101
2017-01-04 15:36:16 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-04 15:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	2 1
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:36:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:16 AI_Player.update()	update
2017-01-04 15:36:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:17 AI_Player.update()	Search took274ms
2017-01-04 15:36:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:17 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 15:36:17 AI_Player.update()		1110,	1001,	1101,	101,	1001,	1001,	1010
2017-01-04 15:36:17 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 15:36:17 AI_Player.update()		1010,	1001,	101,	101,	101,	1010,	110
2017-01-04 15:36:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 15:36:17 AI_Player.update()		1010,	1100,	1011,	11,	1010,	1010,	101
2017-01-04 15:36:17 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-04 15:36:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	3 1
2017-01-04 15:36:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:17 AI_Player.update()	update
2017-01-04 15:36:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:17 AI_Player.update()	update
2017-01-04 15:36:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:17 AI_Player.update()	Search took505ms
2017-01-04 15:36:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:17 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 15:36:17 AI_Player.update()		1001,	1101,	101,	1001,	1001,	1010,	1110
2017-01-04 15:36:17 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 15:36:17 AI_Player.update()		1010,	1001,	101,	101,	101,	1010,	110
2017-01-04 15:36:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 15:36:17 AI_Player.update()		1010,	1100,	1011,	11,	1010,	1010,	101
2017-01-04 15:36:17 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-04 15:36:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:17 AI_Player.update()	update
2017-01-04 15:36:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:17 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:17 AI_Player.update()	update
2017-01-04 15:36:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:18 AI_Player.update()	Search took320ms
2017-01-04 15:36:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 15:36:18 AI_Player.update()		1001,	1101,	101,	1001,	1001,	1010,	1110
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 15:36:18 AI_Player.update()		1010,	1001,	101,	101,	101,	1010,	110
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 15:36:18 AI_Player.update()		101,	1010,	1100,	1011,	11,	1010,	1010
2017-01-04 15:36:18 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:18 AI_Player.update()	Search took227ms
2017-01-04 15:36:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-04 15:36:18 AI_Player.update()		1001,	1101,	101,	1001,	1001,	101,	1110
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-04 15:36:18 AI_Player.update()		1010,	1001,	101,	101,	101,	110,	110
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 15:36:18 AI_Player.update()		101,	1010,	1100,	1011,	11,	1010,	1010
2017-01-04 15:36:18 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:18 AI_Player.update()	Search took260ms
2017-01-04 15:36:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 15:36:18 AI_Player.update()		1001,	1101,	101,	1001,	1001,	1100,	1110
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 15:36:18 AI_Player.update()		1010,	1001,	101,	101,	101,	1010,	110
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 15:36:18 AI_Player.update()		101,	1010,	1100,	1011,	11,	1010,	1010
2017-01-04 15:36:18 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:18 AI_Player.update()	Search took168ms
2017-01-04 15:36:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 15:36:18 AI_Player.update()		1001,	1101,	101,	1010,	1001,	1100,	1110
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 15:36:18 AI_Player.update()		1010,	1001,	101,	1100,	101,	1010,	110
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 15:36:18 AI_Player.update()		101,	1010,	1100,	101,	11,	1010,	1010
2017-01-04 15:36:18 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1010,	1001
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	3 2
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:18 AI_Player.update()	Search took187ms
2017-01-04 15:36:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 15:36:18 AI_Player.update()		1001,	1101,	101,	1010,	1001,	1100,	1110
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 15:36:18 AI_Player.update()		1001,	101,	1100,	101,	1010,	110,	1010
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 15:36:18 AI_Player.update()		101,	1010,	1100,	101,	11,	1010,	1010
2017-01-04 15:36:18 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1010,	1001
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	4 2
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 15:36:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:18 AI_Player.update()	Search took105ms
2017-01-04 15:36:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-04 15:36:18 AI_Player.update()		1101,	101,	1010,	1001,	1100,	1110,	1001
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 15:36:18 AI_Player.update()		1001,	101,	1100,	101,	1010,	110,	1010
2017-01-04 15:36:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 15:36:18 AI_Player.update()		101,	1010,	1100,	101,	11,	1010,	1010
2017-01-04 15:36:18 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1010,	1001
2017-01-04 15:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 15:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:18 AI_Player.update()	update
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:18 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:19 AI_Player.update()	update
2017-01-04 15:36:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:19 AI_Player.update()	Search took439ms
2017-01-04 15:36:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:19 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-04 15:36:19 AI_Player.update()		1101,	101,	1010,	1001,	1100,	1110,	1001
2017-01-04 15:36:19 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 15:36:19 AI_Player.update()		1001,	101,	1100,	101,	1010,	110,	1010
2017-01-04 15:36:19 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 15:36:19 AI_Player.update()		101,	1010,	1100,	1011,	11,	1010,	1010
2017-01-04 15:36:19 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	5 3
2017-01-04 15:36:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:19 AI_Player.update()	update
2017-01-04 15:36:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	5 4
2017-01-04 15:36:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:19 AI_Player.update()	update
2017-01-04 15:36:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:20 AI_Player.update()	Search took754ms
2017-01-04 15:36:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:20 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-04 15:36:20 AI_Player.update()		1101,	101,	1010,	1001,	1100,	1110,	1001
2017-01-04 15:36:20 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 15:36:20 AI_Player.update()		1010,	1001,	101,	1100,	101,	1010,	110
2017-01-04 15:36:20 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 15:36:20 AI_Player.update()		101,	1010,	1100,	1011,	11,	1010,	1010
2017-01-04 15:36:20 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	5 4
2017-01-04 15:36:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:20 AI_Player.update()	update
2017-01-04 15:36:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 15:36:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:20 AI_Player.update()	update
2017-01-04 15:36:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 15:36:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 15:36:20 AI_Player.update()	Search took276ms
2017-01-04 15:36:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:20 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-04 15:36:20 AI_Player.update()		1101,	101,	1010,	1001,	1100,	1110,	1001
2017-01-04 15:36:20 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 15:36:20 AI_Player.update()		1001,	101,	1100,	101,	1010,	110,	1010
2017-01-04 15:36:20 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 15:36:20 AI_Player.update()		101,	1010,	1100,	1011,	11,	1010,	1010
2017-01-04 15:36:20 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 15:36:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:20 AI_Player.update()	update
2017-01-04 15:36:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 15:36:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 15:36:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 15:36:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 15:36:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	6 5
2017-01-04 15:36:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:20 AI_Player.update()	update
2017-01-04 15:36:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 15:36:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 15:36:21 AI_Player.update()	Search took754ms
2017-01-04 15:36:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:21 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 15:36:21 AI_Player.update()		1101,	101,	1010,	1001,	1100,	1110,	1001
2017-01-04 15:36:21 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 15:36:21 AI_Player.update()		1001,	101,	1100,	101,	1010,	110,	1010
2017-01-04 15:36:21 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 15:36:21 AI_Player.update()		101,	1001,	1100,	1011,	11,	1010,	1010
2017-01-04 15:36:21 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 15:36:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 15:36:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 15:36:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	6 5
2017-01-04 15:36:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:21 AI_Player.update()	update
2017-01-04 15:36:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 15:36:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 15:36:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 15:36:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 15:36:21 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 15:36:21 AI_Player.update()	Player a has won!
2017-01-04 15:36:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 15:36:21 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 15:36:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 15:36:21 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 15:36:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 15:36:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 15:36:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 15:36:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 15:36:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 15:36:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 15:36:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 15:36:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 15:36:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 15:36:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 15:36:21 AI_Player.update()	update
2017-01-04 15:36:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
