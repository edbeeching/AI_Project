2017-01-04 09:14:24 GameBoard.<init>()	Hello World!
2017-01-04 09:14:24 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-04 09:14:24 QueryProlog.initialise()	setup(h2/h2). suceeded
2017-01-04 09:14:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:24 GameBoard.setupBoardFromString()	Board created
2017-01-04 09:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:14:24 GameBoard.initialise()	[chest, candle, sword, crown, gem]
2017-01-04 09:14:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:14:24 GameBoard.initialise()	[fairy, gold, ring, keys, helmet]
2017-01-04 09:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:24 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-04 09:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	null
2017-01-04 09:14:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:14:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:24 AI_Player.update()	update
2017-01-04 09:14:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:24 AI_Player.update()	Search took266ms
2017-01-04 09:14:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:24 AI_Player.update()		110,	101,	111,	111,	111,	110,	11
2017-01-04 09:14:24 AI_Player.update()		1010,	11,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:24 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:24 AI_Player.update()		101,	11,	1010,	101,	110,	101,	1010
2017-01-04 09:14:24 AI_Player.update()		1110,	110,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:24 AI_Player.update()		110,	101,	11,	101,	1010,	1100,	1010
2017-01-04 09:14:24 AI_Player.update()		1100,	110,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:14:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:14:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:14:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:25 AI_Player.update()	update
2017-01-04 09:14:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:25 AI_Player.update()	update
2017-01-04 09:14:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:25 AI_Player.update()	Search took755ms
2017-01-04 09:14:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:25 AI_Player.update()		110,	101,	111,	111,	111,	110,	11
2017-01-04 09:14:25 AI_Player.update()		1010,	11,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:25 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:25 AI_Player.update()		1010,	101,	11,	1010,	101,	110,	101
2017-01-04 09:14:25 AI_Player.update()		1110,	110,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:25 AI_Player.update()		110,	101,	11,	101,	1010,	1100,	1010
2017-01-04 09:14:25 AI_Player.update()		1100,	110,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:14:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:26 AI_Player.update()	update
2017-01-04 09:14:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:14:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:14:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:14:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:26 AI_Player.update()	update
2017-01-04 09:14:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:26 AI_Player.update()	Search took175ms
2017-01-04 09:14:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:26 AI_Player.update()		110,	101,	111,	111,	111,	110,	11
2017-01-04 09:14:26 AI_Player.update()		1010,	11,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:26 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:26 AI_Player.update()		101,	11,	1010,	101,	110,	101,	1010
2017-01-04 09:14:26 AI_Player.update()		1110,	110,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:26 AI_Player.update()		110,	101,	11,	101,	1010,	1100,	1010
2017-01-04 09:14:26 AI_Player.update()		1100,	110,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:14:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:26 AI_Player.update()	update
2017-01-04 09:14:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:14:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:26 AI_Player.update()	update
2017-01-04 09:14:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:26 AI_Player.update()	Search took163ms
2017-01-04 09:14:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:26 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:14:26 AI_Player.update()		1010,	1010,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:26 AI_Player.update()		101,	110,	1010,	101,	110,	101,	1010
2017-01-04 09:14:26 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:26 AI_Player.update()		110,	110,	11,	101,	1010,	1100,	1010
2017-01-04 09:14:26 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	1 2
2017-01-04 09:14:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:26 AI_Player.update()	update
2017-01-04 09:14:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	1 3
2017-01-04 09:14:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:14:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:14:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:14:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:26 AI_Player.update()	update
2017-01-04 09:14:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:27 AI_Player.update()	Search took186ms
2017-01-04 09:14:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:27 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:14:27 AI_Player.update()		1010,	1010,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:27 AI_Player.update()		110,	1010,	101,	110,	101,	1010,	101
2017-01-04 09:14:27 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:27 AI_Player.update()		110,	110,	11,	101,	1010,	1100,	1010
2017-01-04 09:14:27 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	1 3
2017-01-04 09:14:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:27 AI_Player.update()	update
2017-01-04 09:14:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	1 3
2017-01-04 09:14:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:27 AI_Player.update()	update
2017-01-04 09:14:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:27 AI_Player.update()	Search took403ms
2017-01-04 09:14:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:27 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:14:27 AI_Player.update()		1010,	1010,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:27 AI_Player.update()		110,	1010,	101,	110,	101,	1010,	101
2017-01-04 09:14:27 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:27 AI_Player.update()		110,	11,	101,	1010,	1100,	1010,	110
2017-01-04 09:14:27 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	1 3
2017-01-04 09:14:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:27 AI_Player.update()	update
2017-01-04 09:14:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	1 4
2017-01-04 09:14:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:14:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:14:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:28 AI_Player.update()	update
2017-01-04 09:14:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:28 AI_Player.update()	Search took170ms
2017-01-04 09:14:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:28 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:14:28 AI_Player.update()		1010,	1010,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:28 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:28 AI_Player.update()		110,	1010,	101,	110,	101,	1010,	101
2017-01-04 09:14:28 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:28 AI_Player.update()		110,	110,	11,	101,	1010,	1100,	1010
2017-01-04 09:14:28 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	1 4
2017-01-04 09:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:28 AI_Player.update()	update
2017-01-04 09:14:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	1 4
2017-01-04 09:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:28 AI_Player.update()	update
2017-01-04 09:14:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:28 AI_Player.update()	Search took346ms
2017-01-04 09:14:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:28 AI_Player.update()		110,	1010,	111,	111,	111,	110,	11
2017-01-04 09:14:28 AI_Player.update()		1010,	11,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:28 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:28 AI_Player.update()		110,	101,	101,	110,	101,	1010,	101
2017-01-04 09:14:28 AI_Player.update()		1110,	110,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:28 AI_Player.update()		110,	101,	11,	101,	1010,	1100,	1010
2017-01-04 09:14:28 AI_Player.update()		1100,	11,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	1 4
2017-01-04 09:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:28 AI_Player.update()	update
2017-01-04 09:14:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	1 5
2017-01-04 09:14:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:14:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:14:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:28 AI_Player.update()	update
2017-01-04 09:14:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:29 AI_Player.update()	Search took84ms
2017-01-04 09:14:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:29 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:14:29 AI_Player.update()		1010,	1010,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:29 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:29 AI_Player.update()		110,	110,	101,	110,	101,	1010,	101
2017-01-04 09:14:29 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:29 AI_Player.update()		110,	11,	11,	101,	1010,	1100,	1010
2017-01-04 09:14:29 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	1 5
2017-01-04 09:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:29 AI_Player.update()	update
2017-01-04 09:14:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	1 5
2017-01-04 09:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:29 AI_Player.update()	update
2017-01-04 09:14:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:29 AI_Player.update()	Search took287ms
2017-01-04 09:14:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:29 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:14:29 AI_Player.update()		1010,	1010,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:29 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:29 AI_Player.update()		110,	110,	101,	110,	101,	1010,	101
2017-01-04 09:14:29 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:29 AI_Player.update()		11,	11,	101,	1010,	1100,	1010,	110
2017-01-04 09:14:29 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	1 5
2017-01-04 09:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:29 AI_Player.update()	update
2017-01-04 09:14:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	1 6
2017-01-04 09:14:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:14:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:29 AI_Player.update()	update
2017-01-04 09:14:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:29 AI_Player.update()	Search took81ms
2017-01-04 09:14:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:29 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:14:29 AI_Player.update()		1010,	1010,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:29 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:29 AI_Player.update()		110,	101,	110,	101,	1010,	101,	110
2017-01-04 09:14:29 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:29 AI_Player.update()		11,	11,	101,	1010,	1100,	1010,	110
2017-01-04 09:14:29 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	1 6
2017-01-04 09:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:29 AI_Player.update()	update
2017-01-04 09:14:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:29 GameBoard.setupTreasurePanel()	1 6
2017-01-04 09:14:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:30 AI_Player.update()	update
2017-01-04 09:14:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:30 AI_Player.update()	Search took546ms
2017-01-04 09:14:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:30 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-04 09:14:30 AI_Player.update()		1010,	1010,	1011,	1010,	101,	11,	1010
2017-01-04 09:14:30 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 09:14:30 AI_Player.update()		101,	110,	101,	1010,	101,	110,	110
2017-01-04 09:14:30 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-04 09:14:30 AI_Player.update()		11,	11,	101,	1010,	1100,	1010,	110
2017-01-04 09:14:30 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-04 09:14:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:30 GameBoard.setupTreasurePanel()	1 6
2017-01-04 09:14:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:30 AI_Player.update()	update
2017-01-04 09:14:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:30 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 09:14:30 AI_Player.update()	Player b has won!
2017-01-04 09:14:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:14:33 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 09:14:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 09:14:33 QueryProlog.reset()	setup(h2/h2). suceeded
2017-01-04 09:14:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:14:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:14:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:14:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:33 AI_Player.update()	update
2017-01-04 09:14:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:33 AI_Player.update()	Search took234ms
2017-01-04 09:14:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:33 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 09:14:33 AI_Player.update()		1010,	101,	1010,	1100,	1100,	110,	1101
2017-01-04 09:14:33 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 09:14:33 AI_Player.update()		1010,	101,	1001,	101,	1100,	101,	101
2017-01-04 09:14:33 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1100,	1011
2017-01-04 09:14:33 AI_Player.update()		110,	110,	1001,	1001,	101,	110,	101
2017-01-04 09:14:33 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-04 09:14:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:14:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:34 AI_Player.update()	update
2017-01-04 09:14:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 09:14:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:14:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:34 AI_Player.update()	update
2017-01-04 09:14:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:34 AI_Player.update()	Search took164ms
2017-01-04 09:14:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:34 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:34 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:34 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:34 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:34 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:34 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:34 AI_Player.update()	update
2017-01-04 09:14:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:34 AI_Player.update()	update
2017-01-04 09:14:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:34 AI_Player.update()	Search took225ms
2017-01-04 09:14:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:34 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:34 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:34 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:34 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:34 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:34 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:34 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:34 AI_Player.update()	update
2017-01-04 09:14:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:34 AI_Player.update()	update
2017-01-04 09:14:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:35 AI_Player.update()	Search took132ms
2017-01-04 09:14:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:35 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:35 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:35 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:35 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:35 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:35 AI_Player.update()	update
2017-01-04 09:14:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:35 AI_Player.update()	update
2017-01-04 09:14:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:35 AI_Player.update()	Search took282ms
2017-01-04 09:14:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:35 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:35 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:35 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:35 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:35 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:35 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:35 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:35 AI_Player.update()	update
2017-01-04 09:14:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:35 AI_Player.update()	update
2017-01-04 09:14:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:35 AI_Player.update()	Search took99ms
2017-01-04 09:14:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:35 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:35 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:35 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:35 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:35 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:35 AI_Player.update()	update
2017-01-04 09:14:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:36 AI_Player.update()	update
2017-01-04 09:14:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:36 AI_Player.update()	Search took219ms
2017-01-04 09:14:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:36 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:36 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:36 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:36 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:36 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:36 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:36 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:36 AI_Player.update()	update
2017-01-04 09:14:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:36 AI_Player.update()	update
2017-01-04 09:14:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:36 AI_Player.update()	Search took101ms
2017-01-04 09:14:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:36 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:36 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:36 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:36 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:36 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:36 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:36 AI_Player.update()	update
2017-01-04 09:14:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:36 AI_Player.update()	update
2017-01-04 09:14:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:37 AI_Player.update()	Search took271ms
2017-01-04 09:14:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:37 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:37 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:37 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:37 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:37 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:37 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:37 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:37 AI_Player.update()	update
2017-01-04 09:14:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:37 AI_Player.update()	update
2017-01-04 09:14:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:37 AI_Player.update()	Search took124ms
2017-01-04 09:14:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:37 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:37 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:37 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:37 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:37 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:37 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:37 AI_Player.update()	update
2017-01-04 09:14:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:37 AI_Player.update()	update
2017-01-04 09:14:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:37 AI_Player.update()	Search took224ms
2017-01-04 09:14:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:37 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:37 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:37 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:37 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:37 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:37 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:37 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:37 AI_Player.update()	update
2017-01-04 09:14:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:38 AI_Player.update()	update
2017-01-04 09:14:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:38 AI_Player.update()	Search took113ms
2017-01-04 09:14:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:38 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:38 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:38 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:38 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:38 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:38 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:38 AI_Player.update()	update
2017-01-04 09:14:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:38 AI_Player.update()	update
2017-01-04 09:14:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:38 AI_Player.update()	Search took257ms
2017-01-04 09:14:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:38 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:38 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:38 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:38 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:38 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:38 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:38 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:38 AI_Player.update()	update
2017-01-04 09:14:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:38 AI_Player.update()	update
2017-01-04 09:14:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:38 AI_Player.update()	Search took128ms
2017-01-04 09:14:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:38 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:38 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:38 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:38 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:38 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:38 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:39 AI_Player.update()	update
2017-01-04 09:14:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:39 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:39 AI_Player.update()	update
2017-01-04 09:14:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:39 AI_Player.update()	Search took234ms
2017-01-04 09:14:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:39 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:39 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:39 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:39 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:39 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:39 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:39 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:39 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:39 AI_Player.update()	update
2017-01-04 09:14:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:39 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:39 AI_Player.update()	update
2017-01-04 09:14:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:39 AI_Player.update()	Search took110ms
2017-01-04 09:14:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:39 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:39 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:39 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:39 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:39 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:39 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:39 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:39 AI_Player.update()	update
2017-01-04 09:14:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:39 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:39 AI_Player.update()	update
2017-01-04 09:14:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:40 AI_Player.update()	Search took251ms
2017-01-04 09:14:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:40 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:40 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:40 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:40 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:40 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:40 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:40 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:40 AI_Player.update()	update
2017-01-04 09:14:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:40 AI_Player.update()	update
2017-01-04 09:14:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:40 AI_Player.update()	Search took101ms
2017-01-04 09:14:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:40 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:40 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:40 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:40 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:40 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:40 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:40 AI_Player.update()	update
2017-01-04 09:14:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:40 AI_Player.update()	update
2017-01-04 09:14:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:40 AI_Player.update()	Search took223ms
2017-01-04 09:14:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:40 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:40 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:40 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:40 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:40 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:40 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:40 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:41 AI_Player.update()	update
2017-01-04 09:14:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:41 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:41 AI_Player.update()	update
2017-01-04 09:14:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:41 AI_Player.update()	Search took134ms
2017-01-04 09:14:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:41 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:41 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:41 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:41 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:41 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:41 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:41 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:41 AI_Player.update()	update
2017-01-04 09:14:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:41 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:41 AI_Player.update()	update
2017-01-04 09:14:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:41 AI_Player.update()	Search took279ms
2017-01-04 09:14:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:41 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:41 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:41 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:41 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:41 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:41 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:41 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:41 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:41 AI_Player.update()	update
2017-01-04 09:14:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:41 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:41 AI_Player.update()	update
2017-01-04 09:14:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:42 AI_Player.update()	Search took115ms
2017-01-04 09:14:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:42 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:42 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:42 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:42 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:42 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:42 AI_Player.update()	update
2017-01-04 09:14:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:42 AI_Player.update()	update
2017-01-04 09:14:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:42 AI_Player.update()	Search took223ms
2017-01-04 09:14:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:42 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:42 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:42 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:42 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:42 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:42 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:42 AI_Player.update()	update
2017-01-04 09:14:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:42 AI_Player.update()	update
2017-01-04 09:14:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:42 AI_Player.update()	Search took131ms
2017-01-04 09:14:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:42 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:42 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:42 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:42 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:42 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:42 AI_Player.update()	update
2017-01-04 09:14:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:42 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:43 AI_Player.update()	update
2017-01-04 09:14:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:43 AI_Player.update()	Search took249ms
2017-01-04 09:14:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:43 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:43 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:43 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:43 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:43 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:43 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:43 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:43 AI_Player.update()	update
2017-01-04 09:14:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:43 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:43 AI_Player.update()	update
2017-01-04 09:14:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:43 AI_Player.update()	Search took106ms
2017-01-04 09:14:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:43 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:43 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:43 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:43 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:43 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:43 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:43 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:43 AI_Player.update()	update
2017-01-04 09:14:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:43 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:43 AI_Player.update()	update
2017-01-04 09:14:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:44 AI_Player.update()	Search took231ms
2017-01-04 09:14:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:44 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:44 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:44 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:44 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:44 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:44 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:44 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:44 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:44 AI_Player.update()	update
2017-01-04 09:14:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:44 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:44 AI_Player.update()	update
2017-01-04 09:14:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:44 AI_Player.update()	Search took105ms
2017-01-04 09:14:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:44 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:44 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:44 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:44 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:44 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:44 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:44 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:44 AI_Player.update()	update
2017-01-04 09:14:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:44 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:44 AI_Player.update()	update
2017-01-04 09:14:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:44 AI_Player.update()	Search took275ms
2017-01-04 09:14:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:44 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:44 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:44 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:44 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:44 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:44 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:44 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:44 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:44 AI_Player.update()	update
2017-01-04 09:14:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:44 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:45 AI_Player.update()	update
2017-01-04 09:14:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:45 AI_Player.update()	Search took126ms
2017-01-04 09:14:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:45 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:45 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:45 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:45 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:45 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:45 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:45 AI_Player.update()	update
2017-01-04 09:14:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:45 AI_Player.update()	update
2017-01-04 09:14:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:45 AI_Player.update()	Search took232ms
2017-01-04 09:14:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:45 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:45 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:45 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:45 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:45 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:45 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:45 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:45 AI_Player.update()	update
2017-01-04 09:14:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:45 AI_Player.update()	update
2017-01-04 09:14:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:45 AI_Player.update()	Search took122ms
2017-01-04 09:14:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:45 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:45 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:45 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:45 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:45 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:45 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:46 AI_Player.update()	update
2017-01-04 09:14:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:46 AI_Player.update()	update
2017-01-04 09:14:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:46 AI_Player.update()	Search took256ms
2017-01-04 09:14:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:46 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:46 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:46 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:46 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:46 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:46 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:46 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:46 AI_Player.update()	update
2017-01-04 09:14:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:46 AI_Player.update()	update
2017-01-04 09:14:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:46 AI_Player.update()	Search took113ms
2017-01-04 09:14:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:46 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:46 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:46 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:46 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:46 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:46 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:46 AI_Player.update()	update
2017-01-04 09:14:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:46 AI_Player.update()	update
2017-01-04 09:14:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:47 AI_Player.update()	Search took221ms
2017-01-04 09:14:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:47 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:47 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:47 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:47 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:47 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:47 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:47 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:47 AI_Player.update()	update
2017-01-04 09:14:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:47 AI_Player.update()	update
2017-01-04 09:14:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:47 AI_Player.update()	Search took102ms
2017-01-04 09:14:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:47 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:47 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:47 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:47 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:47 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:47 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:47 AI_Player.update()	update
2017-01-04 09:14:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:47 AI_Player.update()	update
2017-01-04 09:14:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:47 AI_Player.update()	Search took247ms
2017-01-04 09:14:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:47 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:47 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:47 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:47 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:47 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:47 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:47 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:48 AI_Player.update()	update
2017-01-04 09:14:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:48 AI_Player.update()	update
2017-01-04 09:14:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:48 AI_Player.update()	Search took109ms
2017-01-04 09:14:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:48 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:48 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:48 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:48 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:48 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:48 AI_Player.update()	update
2017-01-04 09:14:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:48 AI_Player.update()	update
2017-01-04 09:14:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:48 AI_Player.update()	Search took224ms
2017-01-04 09:14:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:48 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:48 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:48 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:48 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:48 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:48 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:48 AI_Player.update()	update
2017-01-04 09:14:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:48 AI_Player.update()	update
2017-01-04 09:14:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:48 AI_Player.update()	Search took112ms
2017-01-04 09:14:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:48 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:48 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:48 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:48 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:48 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:48 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:49 AI_Player.update()	update
2017-01-04 09:14:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:49 AI_Player.update()	update
2017-01-04 09:14:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:49 AI_Player.update()	Search took262ms
2017-01-04 09:14:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:49 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:49 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:49 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:49 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:49 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:49 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:49 AI_Player.update()	update
2017-01-04 09:14:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:49 AI_Player.update()	update
2017-01-04 09:14:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:49 AI_Player.update()	Search took101ms
2017-01-04 09:14:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:49 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:49 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:49 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:49 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:49 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:49 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:49 AI_Player.update()	update
2017-01-04 09:14:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:49 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:49 AI_Player.update()	update
2017-01-04 09:14:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:50 AI_Player.update()	Search took224ms
2017-01-04 09:14:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:50 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:50 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:50 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:50 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:50 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:50 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:50 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:50 AI_Player.update()	update
2017-01-04 09:14:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:50 AI_Player.update()	update
2017-01-04 09:14:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:50 AI_Player.update()	Search took103ms
2017-01-04 09:14:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:50 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:50 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:50 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:50 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:50 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:50 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:50 AI_Player.update()	update
2017-01-04 09:14:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:50 AI_Player.update()	update
2017-01-04 09:14:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:50 AI_Player.update()	Search took249ms
2017-01-04 09:14:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:50 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:50 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:50 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:50 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:50 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:50 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:50 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:50 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:51 AI_Player.update()	update
2017-01-04 09:14:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:51 AI_Player.update()	update
2017-01-04 09:14:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:51 AI_Player.update()	Search took103ms
2017-01-04 09:14:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:51 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:51 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:51 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:51 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:51 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:51 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:51 AI_Player.update()	update
2017-01-04 09:14:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:51 AI_Player.update()	update
2017-01-04 09:14:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:51 AI_Player.update()	Search took251ms
2017-01-04 09:14:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:51 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:51 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:51 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:51 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:51 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:51 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:51 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:51 AI_Player.update()	update
2017-01-04 09:14:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:51 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:51 AI_Player.update()	update
2017-01-04 09:14:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:52 AI_Player.update()	Search took104ms
2017-01-04 09:14:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:52 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:52 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:52 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:52 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:52 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:52 AI_Player.update()	update
2017-01-04 09:14:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:52 AI_Player.update()	update
2017-01-04 09:14:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:52 AI_Player.update()	Search took246ms
2017-01-04 09:14:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:52 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:52 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:52 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:52 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:52 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:52 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:52 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:52 AI_Player.update()	update
2017-01-04 09:14:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:52 AI_Player.update()	update
2017-01-04 09:14:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:52 AI_Player.update()	Search took114ms
2017-01-04 09:14:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:52 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:52 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:52 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:52 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:52 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:52 AI_Player.update()	update
2017-01-04 09:14:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:53 AI_Player.update()	update
2017-01-04 09:14:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:53 AI_Player.update()	Search took221ms
2017-01-04 09:14:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:53 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:53 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:53 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:53 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:53 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:53 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:53 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:53 AI_Player.update()	update
2017-01-04 09:14:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:53 AI_Player.update()	update
2017-01-04 09:14:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:53 AI_Player.update()	Search took104ms
2017-01-04 09:14:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:53 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:53 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:53 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:53 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:53 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:53 AI_Player.update()	update
2017-01-04 09:14:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:53 AI_Player.update()	update
2017-01-04 09:14:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:54 AI_Player.update()	Search took248ms
2017-01-04 09:14:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:54 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:54 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:54 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:54 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:54 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:54 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:54 AI_Player.update()	update
2017-01-04 09:14:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:54 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:54 AI_Player.update()	update
2017-01-04 09:14:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:54 AI_Player.update()	Search took128ms
2017-01-04 09:14:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:54 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:54 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:54 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:54 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:54 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:54 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:54 AI_Player.update()	update
2017-01-04 09:14:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:54 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:54 AI_Player.update()	update
2017-01-04 09:14:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:54 AI_Player.update()	Search took217ms
2017-01-04 09:14:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:54 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:54 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:54 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:54 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:54 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:54 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:54 AI_Player.update()	update
2017-01-04 09:14:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:54 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:54 AI_Player.update()	update
2017-01-04 09:14:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:55 AI_Player.update()	Search took132ms
2017-01-04 09:14:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:55 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:55 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:55 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:55 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:55 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:55 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:55 AI_Player.update()	update
2017-01-04 09:14:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:55 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:55 AI_Player.update()	update
2017-01-04 09:14:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:55 AI_Player.update()	Search took248ms
2017-01-04 09:14:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:55 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:55 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:55 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:55 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:55 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:55 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:55 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:55 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:55 AI_Player.update()	update
2017-01-04 09:14:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:55 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:55 AI_Player.update()	update
2017-01-04 09:14:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:55 AI_Player.update()	Search took101ms
2017-01-04 09:14:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:55 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:55 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:55 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:55 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:55 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:55 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:55 AI_Player.update()	update
2017-01-04 09:14:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:55 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:56 AI_Player.update()	update
2017-01-04 09:14:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:56 AI_Player.update()	Search took218ms
2017-01-04 09:14:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:56 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:56 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:56 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:56 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:56 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:56 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:56 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:56 AI_Player.update()	update
2017-01-04 09:14:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:56 AI_Player.update()	update
2017-01-04 09:14:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:56 AI_Player.update()	Search took128ms
2017-01-04 09:14:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:56 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:56 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:56 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:56 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:56 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:56 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:56 AI_Player.update()	update
2017-01-04 09:14:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:56 AI_Player.update()	update
2017-01-04 09:14:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:57 AI_Player.update()	Search took256ms
2017-01-04 09:14:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:57 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:57 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:57 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:57 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:57 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:57 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:57 AI_Player.update()	update
2017-01-04 09:14:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:57 AI_Player.update()	update
2017-01-04 09:14:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:57 AI_Player.update()	Search took101ms
2017-01-04 09:14:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:57 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:57 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:57 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:57 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:57 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:57 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:57 AI_Player.update()	update
2017-01-04 09:14:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:57 AI_Player.update()	update
2017-01-04 09:14:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:57 AI_Player.update()	Search took247ms
2017-01-04 09:14:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:57 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:57 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:57 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:57 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:57 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:57 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:57 AI_Player.update()	update
2017-01-04 09:14:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:58 AI_Player.update()	update
2017-01-04 09:14:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:58 AI_Player.update()	Search took104ms
2017-01-04 09:14:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:58 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:58 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:58 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:58 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:58 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:58 AI_Player.update()	update
2017-01-04 09:14:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:58 AI_Player.update()	update
2017-01-04 09:14:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:58 AI_Player.update()	Search took247ms
2017-01-04 09:14:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:58 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:58 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:58 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:58 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:58 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:58 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:58 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:58 AI_Player.update()	update
2017-01-04 09:14:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:58 AI_Player.update()	update
2017-01-04 09:14:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:58 AI_Player.update()	Search took130ms
2017-01-04 09:14:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:58 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:58 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:58 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:58 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:58 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:59 AI_Player.update()	update
2017-01-04 09:14:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:59 AI_Player.update()	update
2017-01-04 09:14:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:14:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:14:59 AI_Player.update()	Search took251ms
2017-01-04 09:14:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:59 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:14:59 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:14:59 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:14:59 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:14:59 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:14:59 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:14:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:14:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:59 AI_Player.update()	update
2017-01-04 09:14:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:14:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:14:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:14:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:14:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:14:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:59 AI_Player.update()	update
2017-01-04 09:14:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:14:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:14:59 AI_Player.update()	Search took107ms
2017-01-04 09:14:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:14:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:59 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:14:59 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:14:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:14:59 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:14:59 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:14:59 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:14:59 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:14:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:14:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:14:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:59 AI_Player.update()	update
2017-01-04 09:14:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:14:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:14:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:14:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:14:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:14:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:14:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:14:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:14:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:14:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:14:59 AI_Player.update()	update
2017-01-04 09:14:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:00 AI_Player.update()	Search took261ms
2017-01-04 09:15:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:15:00 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:15:00 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:15:00 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:15:00 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:15:00 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:15:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:15:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:00 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:00 AI_Player.update()	update
2017-01-04 09:15:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:00 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:00 AI_Player.update()	update
2017-01-04 09:15:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:15:00 AI_Player.update()	Search took131ms
2017-01-04 09:15:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:00 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:15:00 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:15:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:00 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:15:00 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:15:00 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:15:00 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:15:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:00 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:00 AI_Player.update()	update
2017-01-04 09:15:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:15:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:00 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:00 AI_Player.update()	update
2017-01-04 09:15:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:00 AI_Player.update()	Search took254ms
2017-01-04 09:15:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:15:00 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:15:00 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:15:00 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:15:00 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:15:00 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:15:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:15:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:00 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:01 AI_Player.update()	update
2017-01-04 09:15:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:01 AI_Player.update()	update
2017-01-04 09:15:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:15:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:15:01 AI_Player.update()	Search took105ms
2017-01-04 09:15:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:01 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 09:15:01 AI_Player.update()		1010,	101,	1010,	1010,	1100,	110,	1101
2017-01-04 09:15:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-04 09:15:01 AI_Player.update()		1010,	101,	1001,	1100,	1100,	101,	101
2017-01-04 09:15:01 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-04 09:15:01 AI_Player.update()		110,	110,	1001,	101,	101,	110,	101
2017-01-04 09:15:01 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 09:15:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:01 AI_Player.update()	update
2017-01-04 09:15:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:15:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:15:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:15:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:15:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:01 AI_Player.update()	update
2017-01-04 09:15:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:15:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:15:01 AI_Player.update()	Search took252ms
2017-01-04 09:15:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:15:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:01 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 09:15:01 AI_Player.update()		1010,	101,	1010,	101,	1100,	110,	1101
2017-01-04 09:15:01 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-04 09:15:01 AI_Player.update()		1010,	101,	1001,	1001,	1100,	101,	101
2017-01-04 09:15:01 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 09:15:01 AI_Player.update()		110,	110,	1001,	11,	101,	110,	101
2017-01-04 09:15:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-04 09:15:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:15:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:15:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:01 AI_Player.update()	update
2017-01-04 09:15:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:15:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:15:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:15:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:15:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:15:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:15:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:15:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:15:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:15:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:15:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:15:01 AI_Player.update()	update
2017-01-04 09:15:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
